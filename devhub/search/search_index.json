{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Home</p>"},{"location":"#welcome-to-the-eudi-wallet-dev-hub","title":"Welcome to the EUDI Wallet Dev Hub!","text":"<p>This is the developer's hub for the European Digital Identity Wallet, a key reference point for everyone looking to build and test EUDI Wallet solutions for Wallet Providers, Issuers, or Relying Parties. </p> <p>Everything you need to start your development project is gathered here. You will find technical guidelines and tools as well as directions for how to get started defining, designing and building an EUDI Wallet project.</p>"},{"location":"#resources","title":"Resources","text":"<p>Gain a deeper understanding of the foundational standards and frameworks for the EUDI Wallet. Explore the Architecture and Reference Framework alongside the open-source Reference Implementation, ensuring your solutions are interoperable, secure, and compliant with European standards.</p> <p>Learn more about the specifications</p>"},{"location":"#reference-implementation","title":"Reference Implementation","text":"<p>Begin your EUDI Wallet journey with structured and practical guidance. This section offers step-by-step instructions tailored to Wallet Providers, Issuers, and Relying Parties, enabling you to evaluate and effectively utilize the EUDI Wallet Reference Implementation in your project.</p> <p>Explore the Reference Implementation</p>"},{"location":"#build","title":"Build","text":"<p>Access comprehensive resources to guide your development efforts. This section provides detailed instructions, open-source libraries, and tools to support the creation of Wallet, Issuer, or Verifier solutions that meet the highest standards of security and interoperability.</p> <p>Develop your solutions with confidence</p>"},{"location":"#test","title":"Test","text":"<p>Validate your EUDI Wallet implementation with the EUDI Wallet Test Suite. This advanced toolkit includes pre-built testing tools designed to ensure your solution meets all specified functional requirements, guaranteeing quality and compliance.</p> <p>Ensure the reliability of your implementation</p>"},{"location":"About/","title":"About","text":"<p>Home / About</p>"},{"location":"About/#about","title":"About","text":""},{"location":"Build%20Issuer_Old/","title":"Build Issuer Old","text":"<p>Home / Build Issuer_Old</p>"},{"location":"Build%20Issuer_Old/#build-an-issuer","title":"Build an Issuer","text":"<p>If you are responsible for providing the PID or Qualified or Non-Qualified Electronic Attestations to the EUDI Wallet, you will need to develop an Issuer. The reference implementation offers a comprehensive set of tools, software libraries and testing services to support you with building your own Issuer. Let\u2019s get started!</p>"},{"location":"Build%20Issuer_Old/#try-the-reference-implementation-issuer","title":"Try the Reference Implementation Issuer","text":"<p>The reference implementation includes a test Issuer that you can use to familiarise yourself with the functionalities of the Issuer. The test Issuer is available online or you can install it locally. </p> <p>Learn more about the test Issuer</p>"},{"location":"Build%20Issuer_Old/#use-the-libraries-to-build-your-own-issuer","title":"Use the libraries to build your own Issuer","text":"<p>Start developing your Issuer using the libraries included in the reference implementation. Learn more</p>"},{"location":"Build%20Issuer_Old/#test-your-issuer","title":"Test your Issuer","text":"<p>The Test Suite offers comprehensive tools to test your own Issuer implementation. With the Test Suite you can</p> <ul> <li>Issue credentials to the EUDI Wallet Reference Implementation</li> <li>Verify the credentials issued by your solution with an online Verifier</li> </ul>"},{"location":"Build%20Verifier_Old/","title":"Build Verifier Old","text":"<p>Home / Build Verifier_Old</p>"},{"location":"Build%20Verifier_Old/#build-a-verifier","title":"Build a Verifier","text":"<p>If you want to build trusted applications that can request attributes and attestations from EUDI Wallets, you need a Verifier. The reference implementation offers a comprehensive set of tools, libraries and test services to support you with building your own Verifier for your online or face-to-face service. </p> <p>Let\u2019s get started!</p>"},{"location":"Build%20Verifier_Old/#try-the-reference-implementation-verifier","title":"Try the Reference Implementation Verifier","text":""},{"location":"Build%20Verifier_Old/#remote-verifier","title":"Remote Verifier","text":"<p>The reference implementation includes a test online Verifier that you can use to familiarise yourself with the functionalities. Learn more</p>"},{"location":"Build%20Verifier_Old/#proximity-verifier","title":"Proximity Verifier","text":"<p>The reference implementation of a Verifier application can be used in proximity use cases. Learn more</p>"},{"location":"Build%20Verifier_Old/#use-the-libraries-to-build-your-own-verifier","title":"Use the libraries to build your own Verifier","text":"<p>Start developing your Verifier using the libraries provided in the reference implementation. Learn more</p>"},{"location":"Build%20Verifier_Old/#test-your-verifier","title":"Test your Verifier","text":"<p>The Test Suite offers comprehensive tools to test your own Verifier implementation.</p> <ul> <li>Test your Verifier with the EUDI Wallet Reference Implementation</li> </ul>"},{"location":"Build%20Wallet_Old/","title":"Build Wallet Old","text":"<p>Home / Build Wallet_Old</p>"},{"location":"Build%20Wallet_Old/#build-a-wallet","title":"Build a Wallet","text":"<p>EUDI Wallet Providers are Member States or organizations that are mandated or recognized by them to make the EUDI Wallet available to end users. The terms and conditions of the mandate or recognition are for each Member State to determine. The EUDI Wallet Providers are responsible for providing the EUDI Wallet, which gives users full control over their Person Identification Data (PID) and Electronic Attestations of Attributes (QEAA, PuB-EAA or EAA). EUDI Wallet Providers are responsible for ensuring compliance with the requirements for EUDI Wallets.</p> <p>The reference implementation provides tools, libraries, and test services to support and help you with building your own Wallet. Let\u2019s get started!</p>"},{"location":"Build%20Wallet_Old/#try-the-reference-implementation-wallet-application","title":"Try the Reference Implementation Wallet Application","text":"<p>A reference application for the Wallet is available for both Android and iOS. This allows you to familiarise yourself with the application and test the Wallet functionalities before starting the development of your own Wallet. Set up the application by following the installation steps.</p>"},{"location":"Build%20Wallet_Old/#use-the-libraries-to-build-your-own-wallet","title":"Use the libraries to build your own Wallet","text":"<p>Leverage the reference implementation libraries tailored to your platform: </p> <ul> <li> <p>for Android developers: Android Wallet Provider</p> </li> <li> <p>for iOS developers: iOS Wallet Provider</p> </li> </ul>"},{"location":"Build%20Wallet_Old/#test-your-wallet","title":"Test your Wallet","text":"<p>The Test Suite offers comprehensive tools to test your own Wallet implementation. It includes both an Issuer and a Verifier, so you don\u2019t need to build them yourself. With the Test Suite you can</p> <ul> <li>Issue credentials to your Wallet</li> <li>Test your Wallet in an online service</li> <li>Test your Wallet with the Verifier application</li> </ul>"},{"location":"Getting%20Started/","title":"Getting Started","text":"<p>Home / Getting Started</p>"},{"location":"Getting%20Started/#getting-started","title":"Getting Started","text":"<p>Welcome to the EUDI Wallet Hub!</p> <p>Developers Hub is designed to help you build and test your project, offering clear instructions and support at every step. Our goal is to empower you with the knowledge and tools necessary to harness the potential of EUDI Wallet and leverage its capabilities for your specific use case.</p> <p>Get ready to embark on an exciting journey with EUDI Wallet and unlock the possibilities of digital identification within the European ecosystem! \ud83d\ude80</p>"},{"location":"Getting%20Started/#reference-implementation","title":"Reference Implementation","text":"<p>The EUDI Wallet Reference Implementation consists of open-source code libraries and a reference application that are publicly available and ready to be used by Member States and stakeholders to build their own applications.</p> <p>Its goal is to showcase a robust and interoperable platform for digital identification, authentication and electronic signatures based on common standards across the European Union.</p> <p>Reference Implementation can be used by wallet providers, issuers and verifiers as a basis for the own solution. It also includes a comprehensive test suite, which contains tools to support testing and ensure that your implementation meets the functional requirements.</p> <p>Leverage the EUDI Wallet Reference Implementation to build and test your solution:</p> <ul> <li>Discover EUDI Wallet Resources</li> <li>Build your Solution</li> <li>Test your Solution</li> </ul>"},{"location":"Issuer%20FAQ/","title":"Issuer FAQ","text":"<p>Home / Issuer FAQ</p>"},{"location":"Issuer%20FAQ/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"Issuer%20FAQ/#a-how-to-make-your-local-eudiw-issuer-available-on-the-internet","title":"A. How to make your local EUDIW Issuer available on the Internet?","text":"<p>Please see detailed instructions in install.md.</p>"},{"location":"Issuer%20FAQ/#b-how-to-add-a-new-credential-to-the-issuer","title":"B. How to add a new credential to the issuer ?","text":"<p>Please see detailed instructions in api_docs/add_credential.md.</p>"},{"location":"Issuer%20FAQ/#c-can-i-use-my-iaca-certificate-with-the-eudiw-issuer","title":"C. Can I use my IACA certificate with the EUDIW Issuer?","text":"<p>Yes. You must copy your IACA trusted certificate(s) (in PEM format) to the <code>trusted_CAs_path</code> folder. If you don't have an IACA certificate, we provide an example test IACA certificate for the country Utopia (UT).</p> <p>See more information in api_docs/configuration.md.</p>"},{"location":"Issuer%20FAQ/#d-can-i-use-my-document-signer-private-key-and-certificate-with-the-eudiw-issuer","title":"D. Can I use my Document Signer private key and certificate with the EUDIW Issuer?","text":"<p>Yes. Please follow the instructions in api_docs/configuration.md. If you don't have Document Signer private key and certificate, we provide  test private DS keys and certificates, for country Utopia (UT).</p>"},{"location":"Issuer%20FAQ/#e-how-can-i-create-a-credential-offer-to-issue-a-credential","title":"E. How can I create a credential offer to issue a credential?","text":"<p>Please see detailed instructions in api_docs/credential_offer.md.</p>"},{"location":"Issuer%20FAQ/#f-can-i-test-the-pre-authorized-flow","title":"F. Can I test the pre-authorized flow?","text":"<p>Yes. Please see how in api_docs/pre-authorized.md.</p>"},{"location":"Issuer%20FAQ/#h-can-i-run-the-issuer-in-a-docker-container","title":"H. Can I run the issuer in a Docker container?","text":"<p>Yes. Please see how in Install Docker.</p>"},{"location":"License%20Lib/","title":"License Lib","text":"<p>Home / License Lib</p>"},{"location":"License%20Lib/#license","title":"License","text":"<p>Apache License Version 2.0, January 2004 http://www.apache.org/licenses/</p> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li>Definitions.</li> </ol> <p>\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by    Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is    granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are    controlled by, or are under common control with that entity. For the purposes of this definition, \"    control\" means (i) the power, direct or indirect, to cause the direction or management of such    entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the    outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this    License.</p> <p>\"Source\" form shall mean the preferred form for making modifications, including but not limited to    software source code, documentation source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical transformation or translation of a    Source form, including but not limited to compiled object code, generated documentation, and    conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the    License, as indicated by a copyright notice that is included in or attached to the work (an example    is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or    derived from) the Work and for which the editorial revisions, annotations, elaborations, or other    modifications represent, as a whole, an original work of authorship. For the purposes of this    License, Derivative Works shall not include works that remain separable from, or merely link (or    bind by name) to the interfaces of, the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including the original version of the Work and any    modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted    to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity    authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"    submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or    its representatives, including but not limited to communication on electronic mailing lists, source    code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor    for the purpose of discussing and improving the Work, but excluding communication that is    conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a    Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a    Contribution has been received by Licensor and subsequently incorporated within the Work.</p> <ol> <li> <p>Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor    hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable    copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform,    sublicense, and distribute the Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of this License, each Contributor    hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,    irrevocable (except as stated in this section) patent license to make, have made, use, offer to    sell, sell, import, and otherwise transfer the Work, where such license applies only to those    patent claims licensable by such Contributor that are necessarily infringed by their    Contribution(s) alone or by combination of their Contribution(s) with the Work to which such    Contribution(s) was submitted. If You institute patent litigation against any entity (including a    cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated    within the Work constitutes direct or contributory patent infringement, then any patent licenses    granted to You under this License for that Work shall terminate as of the date such litigation is    filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof    in any medium, with or without modifications, and in Source or Object form, provided that You    meet the following conditions:</p> </li> </ol> <p>You must give any other recipients of the Work or Derivative Works a copy of this License; and    You must cause any modified files to carry prominent notices stating that You changed the files; and    You must retain, in the Source form of any Derivative Works that You distribute, all copyright,    patent, trademark, and attribution notices from the Source form of the Work, excluding those notices    that do not pertain to any part of the Derivative Works; and    If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works    that You distribute must include a readable copy of the attribution notices contained within such    NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at    least one of the following places: within a NOTICE text file distributed as part of the Derivative    Works; within the Source form or documentation, if provided along with the Derivative Works; or,    within a display generated by the Derivative Works, if and wherever such third-party notices    normally appear. The contents of the NOTICE file are for informational purposes only and do not    modify the License. You may add Your own attribution notices within Derivative Works that You    distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such    additional attribution notices cannot be construed as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and may provide additional or    different license terms and conditions for use, reproduction, or distribution of Your modifications,    or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of    the Work otherwise complies with the conditions stated in this License.</p> <ol> <li> <p>Submission of Contributions. Unless You explicitly state otherwise, any Contribution    intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms    and conditions of this License, without any additional terms or conditions. Notwithstanding the    above, nothing herein shall supersede or modify the terms of any separate license agreement you    may have executed with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade names, trademarks, service    marks, or product names of the Licensor, except as required for reasonable and customary use in    describing the origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor    provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation,    any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A    PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or    redistributing the Work and assume any risks associated with Your exercise of permissions under    this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory, whether in tort (including    negligence), contract, or otherwise, unless required by applicable law (such as deliberate and    grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for    damages, including any direct, indirect, special, incidental, or consequential damages of any    character arising as a result of this License or out of the use or inability to use the Work (    including but not limited to damages for loss of goodwill, work stoppage, computer failure or    malfunction, or any and all other commercial damages or losses), even if such Contributor has    been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works    thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty,    indemnity, or other liability obligations and/or rights consistent with this License. However, in    accepting such obligations, You may act only on Your own behalf and on Your sole responsibility,    not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each    Contributor harmless for any liability incurred by, or claims asserted against, such Contributor    by reason of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"License%20UI/","title":"License UI","text":"<p>Home / License UI</p>"},{"location":"License%20UI/#wallet-application-license","title":"Wallet Application License","text":"<p>EUROPEAN UNION PUBLIC LICENCE v. 1.2  EUPL \u00a9 the European Union 2007, 2016 </p> <p>This European Union Public Licence (the \u2018EUPL\u2019) applies to the Work (as defined below) which is provided under the  terms of this Licence. Any use of the Work, other than as authorised under this Licence is prohibited (to the extent such  use is covered by a right of the copyright holder of the Work).  The Work is provided under the terms of this Licence when the Licensor (as defined below) has placed the following  notice immediately following the copyright notice for the Work:                            Licensed under the EUPL  or has expressed by any other means his willingness to license under the EUPL. </p> <p>1.Definitions  In this Licence, the following terms have the following meaning:  \u2014 \u2018The Licence\u2019:this Licence.  \u2014 \u2018The Original Work\u2019:the work or software distributed or communicated by the Licensor under this Licence, available  as Source Code and also as Executable Code as the case may be.  \u2014 \u2018Derivative Works\u2019:the works or software that could be created by the Licensee, based upon the Original Work or  modifications thereof. This Licence does not define the extent of modification or dependence on the Original Work  required in order to classify a work as a Derivative Work; this extent is determined by copyright law applicable in  the country mentioned in Article 15.  \u2014 \u2018The Work\u2019:the Original Work or its Derivative Works.  \u2014 \u2018The Source Code\u2019:the human-readable form of the Work which is the most convenient for people to study and  modify.  \u2014 \u2018The Executable Code\u2019:any code which has generally been compiled and which is meant to be interpreted by  a computer as a program.  \u2014 \u2018The Licensor\u2019:the natural or legal person that distributes or communicates the Work under the Licence.  \u2014 \u2018Contributor(s)\u2019:any natural or legal person who modifies the Work under the Licence, or otherwise contributes to  the creation of a Derivative Work.  \u2014 \u2018The Licensee\u2019 or \u2018You\u2019:any natural or legal person who makes any usage of the Work under the terms of the  Licence.  \u2014 \u2018Distribution\u2019 or \u2018Communication\u2019:any act of selling, giving, lending, renting, distributing, communicating,  transmitting, or otherwise making available, online or offline, copies of the Work or providing access to its essential  functionalities at the disposal of any other natural or legal person. </p> <p>2.Scope of the rights granted by the Licence  The Licensor hereby grants You a worldwide, royalty-free, non-exclusive, sublicensable licence to do the following, for  the duration of copyright vested in the Original Work:  \u2014 use the Work in any circumstance and for all usage,  \u2014 reproduce the Work,  \u2014 modify the Work, and make Derivative Works based upon the Work,  \u2014 communicate to the public, including the right to make available or display the Work or copies thereof to the public  and perform publicly, as the case may be, the Work,  \u2014 distribute the Work or copies thereof,  \u2014 lend and rent the Work or copies thereof,  \u2014 sublicense rights in the Work or copies thereof.  Those rights can be exercised on any media, supports and formats, whether now known or later invented, as far as the  applicable law permits so.  In the countries where moral rights apply, the Licensor waives his right to exercise his moral right to the extent allowed  by law in order to make effective the licence of the economic rights here above listed.  The Licensor grants to the Licensee royalty-free, non-exclusive usage rights to any patents held by the Licensor, to the  extent necessary to make use of the rights granted on the Work under this Licence. </p> <p>3.Communication of the Source Code  The Licensor may provide the Work either in its Source Code form, or as Executable Code. If the Work is provided as  Executable Code, the Licensor provides in addition a machine-readable copy of the Source Code of the Work along with  each copy of the Work that the Licensor distributes or indicates, in a notice following the copyright notice attached to  the Work, a repository where the Source Code is easily and freely accessible for as long as the Licensor continues to  distribute or communicate the Work. </p> <p>4.Limitations on copyright  Nothing in this Licence is intended to deprive the Licensee of the benefits from any exception or limitation to the  exclusive rights of the rights owners in the Work, of the exhaustion of those rights or of other applicable limitations  thereto. </p> <p>5.Obligations of the Licensee  The grant of the rights mentioned above is subject to some restrictions and obligations imposed on the Licensee. Those  obligations are the following: </p> <p>Attribution right: The Licensee shall keep intact all copyright, patent or trademarks notices and all notices that refer to  the Licence and to the disclaimer of warranties. The Licensee must include a copy of such notices and a copy of the  Licence with every copy of the Work he/she distributes or communicates. The Licensee must cause any Derivative Work  to carry prominent notices stating that the Work has been modified and the date of modification. </p> <p>Copyleft clause: If the Licensee distributes or communicates copies of the Original Works or Derivative Works, this  Distribution or Communication will be done under the terms of this Licence or of a later version of this Licence unless  the Original Work is expressly distributed only under this version of the Licence \u2014 for example by communicating  \u2018EUPL v. 1.2 only\u2019. The Licensee (becoming Licensor) cannot offer or impose any additional terms or conditions on the  Work or Derivative Work that alter or restrict the terms of the Licence. </p> <p>Compatibility clause: If the Licensee Distributes or Communicates Derivative Works or copies thereof based upon both  the Work and another work licensed under a Compatible Licence, this Distribution or Communication can be done  under the terms of this Compatible Licence. For the sake of this clause, \u2018Compatible Licence\u2019 refers to the licences listed  in the appendix attached to this Licence. Should the Licensee's obligations under the Compatible Licence conflict with  his/her obligations under this Licence, the obligations of the Compatible Licence shall prevail. </p> <p>Provision of Source Code: When distributing or communicating copies of the Work, the Licensee will provide  a machine-readable copy of the Source Code or indicate a repository where this Source will be easily and freely available  for as long as the Licensee continues to distribute or communicate the Work.  Legal Protection: This Licence does not grant permission to use the trade names, trademarks, service marks, or names  of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and  reproducing the content of the copyright notice. </p> <p>6.Chain of Authorship  The original Licensor warrants that the copyright in the Original Work granted hereunder is owned by him/her or  licensed to him/her and that he/she has the power and authority to grant the Licence.  Each Contributor warrants that the copyright in the modifications he/she brings to the Work are owned by him/her or  licensed to him/her and that he/she has the power and authority to grant the Licence.  Each time You accept the Licence, the original Licensor and subsequent Contributors grant You a licence to their contributions  to the Work, under the terms of this Licence. </p> <p>7.Disclaimer of Warranty  The Work is a work in progress, which is continuously improved by numerous Contributors. It is not a finished work  and may therefore contain defects or \u2018bugs\u2019 inherent to this type of development.  For the above reason, the Work is provided under the Licence on an \u2018as is\u2019 basis and without warranties of any kind  concerning the Work, including without limitation merchantability, fitness for a particular purpose, absence of defects or  errors, accuracy, non-infringement of intellectual property rights other than copyright as stated in Article 6 of this  Licence.  This disclaimer of warranty is an essential part of the Licence and a condition for the grant of any rights to the Work. </p> <p>8.Disclaimer of Liability  Except in the cases of wilful misconduct or damages directly caused to natural persons, the Licensor will in no event be  liable for any direct or indirect, material or moral, damages of any kind, arising out of the Licence or of the use of the  Work, including without limitation, damages for loss of goodwill, work stoppage, computer failure or malfunction, loss  of data or any commercial damage, even if the Licensor has been advised of the possibility of such damage. However,  the Licensor will be liable under statutory product liability laws as far such laws apply to the Work. </p> <p>9.Additional agreements  While distributing the Work, You may choose to conclude an additional agreement, defining obligations or services  consistent with this Licence. However, if accepting obligations, You may act only on your own behalf and on your sole  responsibility, not on behalf of the original Licensor or any other Contributor, and only if You agree to indemnify,  defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against such Contributor by  the fact You have accepted any warranty or additional liability. </p> <p>10.Acceptance of the Licence  The provisions of this Licence can be accepted by clicking on an icon \u2018I agree\u2019 placed under the bottom of a window  displaying the text of this Licence or by affirming consent in any other similar way, in accordance with the rules of  applicable law. Clicking on that icon indicates your clear and irrevocable acceptance of this Licence and all of its terms  and conditions.  Similarly, you irrevocably accept this Licence and all of its terms and conditions by exercising any rights granted to You  by Article 2 of this Licence, such as the use of the Work, the creation by You of a Derivative Work or the Distribution  or Communication by You of the Work or copies thereof. </p> <p>11.Information to the public  In case of any Distribution or Communication of the Work by means of electronic communication by You (for example,  by offering to download the Work from a remote location) the distribution channel or media (for example, a website)  must at least provide to the public the information requested by the applicable law regarding the Licensor, the Licence  and the way it may be accessible, concluded, stored and reproduced by the Licensee. </p> <p>12.Termination of the Licence  The Licence and the rights granted hereunder will terminate automatically upon any breach by the Licensee of the terms  of the Licence.  Such a termination will not terminate the licences of any person who has received the Work from the Licensee under  the Licence, provided such persons remain in full compliance with the Licence. </p> <p>13.Miscellaneous  Without prejudice of Article 9 above, the Licence represents the complete agreement between the Parties as to the  Work.  If any provision of the Licence is invalid or unenforceable under applicable law, this will not affect the validity or  enforceability of the Licence as a whole. Such provision will be construed or reformed so as necessary to make it valid  and enforceable.  The European Commission may publish other linguistic versions or new versions of this Licence or updated versions of  the Appendix, so far this is required and reasonable, without reducing the scope of the rights granted by the Licence.  New versions of the Licence will be published with a unique version number.  All linguistic versions of this Licence, approved by the European Commission, have identical value. Parties can take  advantage of the linguistic version of their choice. </p> <p>14.Jurisdiction  Without prejudice to specific agreement between parties,  \u2014 any litigation resulting from the interpretation of this License, arising between the European Union institutions,  bodies, offices or agencies, as a Licensor, and any Licensee, will be subject to the jurisdiction of the Court of Justice  of the European Union, as laid down in article 272 of the Treaty on the Functioning of the European Union,  \u2014 any litigation arising between other parties and resulting from the interpretation of this License, will be subject to  the exclusive jurisdiction of the competent court where the Licensor resides or conducts its primary business. </p> <p>15.Applicable Law  Without prejudice to specific agreement between parties,  \u2014 this Licence shall be governed by the law of the European Union Member State where the Licensor has his seat,  resides or has his registered office,  \u2014 this licence shall be governed by Belgian law if the Licensor has no seat, residence or registered office inside  a European Union Member State. </p> <pre><code>                                                     Appendix\n</code></pre> <p>\u2018Compatible Licences\u2019 according to Article 5 EUPL are:  \u2014 GNU General Public License (GPL) v. 2, v. 3  \u2014 GNU Affero General Public License (AGPL) v. 3  \u2014 Open Software License (OSL) v. 2.1, v. 3.0  \u2014 Eclipse Public License (EPL) v. 1.0  \u2014 CeCILL v. 2.0, v. 2.1  \u2014 Mozilla Public Licence (MPL) v. 2  \u2014 GNU Lesser General Public Licence (LGPL) v. 2.1, v. 3  \u2014 Creative Commons Attribution-ShareAlike v. 3.0 Unported (CC BY-SA 3.0) for works other than software  \u2014 European Union Public Licence (EUPL) v. 1.1, v. 1.2  \u2014 Qu\u00e9bec Free and Open-Source Licence \u2014 Reciprocity (LiLiQ-R) or Strong Reciprocity (LiLiQ-R+).</p> <p>The European Commission may update this Appendix to later versions of the above licences without producing  a new version of the EUPL, as long as they provide the rights granted in Article 2 of this Licence and protect the  covered Source Code from exclusive appropriation.  All other changes or additions to this Appendix require the production of a new EUPL version. </p>"},{"location":"issuer-tmp/","title":"Issuer tmp","text":"<p>Home / issuer-tmp</p>"},{"location":"issuer-tmp/#eudiw-issuer","title":"EUDIW Issuer","text":"<p>Important! Before you proceed, please read the EUDI Wallet Reference Implementation project description</p>"},{"location":"issuer-tmp/#overview","title":"Overview","text":"<p>The EUDIW Issuer is an implementation of  the PID and (Q)EAA Provider service, supporting the OpenId4VCI (draft 13) protocol.</p> <p>The service provides, by default, support for <code>mso_mdoc</code> and <code>SD-JWT-VC</code>formats, for the following credentials:</p> Credential/Attestation Format PID mso_mdoc PID SD-JWT-VC mDL mso_mdoc mDL SD-JWT-VC (Q)EAA age-over-18 pseudonym mso_mdoc (Q)EAA loyalty card mso_mdoc <p>For authenticating the user, it requires the use of eIDAS node, OAUTH2 server or a simple form (for testing purposes).</p>"},{"location":"issuer-tmp/#openid4vci-coverage","title":"OpenId4VCI coverage","text":"<p>This version of the EUDIW Issuer supports the OpenId for Verifiable Credential Issuance (draft 13) protocol with the following coverage:</p> Feature Coverage Authorization Code flow \u2705 Support for PAR, PKCE, credential configuration id, scope Pre-authorized code flow \u2705 Dynamic Credential Request \u2705 mso_mdoc format \u2705 SD-JWT-VC format \u2705 W3C VC DM \u274c Token Endpoint \u2705 Credential Offer \u2705 <code>authorization_code</code> , \u2705 <code>pre-authorized_code</code> Credential Endpoint \u2705 Including proofs and repeatable invocations Credential Issuer MetaData \u2705 Batch Endpoint \u2705 Deferred Endpoint \u2705 Proof \u2705 JWT, \u2705 CWT Notification Endpoint \u2705 <p>You can use the EUDIW Issuer at https://issuer.eudiw.dev/, or install it locally.</p>"},{"location":"issuer-tmp/#disclaimer","title":"Disclaimer","text":"<p>The released software is a initial development release version:</p> <ul> <li>The initial development release is an early endeavor reflecting the efforts of a short timeboxed     period, and by no means can be considered as the final product.</li> <li>The initial development release may be changed substantially over time, might introduce new     features but also may change or remove existing ones, potentially breaking compatibility with your     existing code.</li> <li>The initial development release is limited in functional scope.</li> <li>The initial development release may contain errors or design flaws and other problems that could     cause system or other failures and data loss.</li> <li>The initial development release has reduced security, privacy, availability, and reliability     standards relative to future releases. This could make the software slower, less reliable, or more     vulnerable to attacks than mature software.</li> <li>The initial development release is not yet comprehensively documented.</li> <li>Users of the software must perform sufficient engineering and additional testing in order to     properly evaluate their application and determine whether any of the open-sourced components is     suitable for use in that application.</li> <li>We strongly recommend not putting this version of the software into production use.</li> <li>Only the latest version of the software will be supported</li> </ul>"},{"location":"issuer-tmp/#1-installation","title":"1. Installation","text":"<p>Pre-requisites:</p> <ul> <li>Python v. 3.9 or 3.10</li> <li>Flask v. 2.3 or higher</li> </ul> <p>Click here for detailed installation instructions.</p>"},{"location":"issuer-tmp/#2-run","title":"2. Run","text":"<p>Click here for detailed instructions.</p>"},{"location":"issuer-tmp/#3-frequently-asked-questions","title":"3. Frequently Asked Questions","text":""},{"location":"issuer-tmp/#a-how-to-make-your-local-eudiw-issuer-available-on-the-internet","title":"A. How to make your local EUDIW Issuer available on the Internet?","text":"<p>Please see detailed instructions in install.md.</p>"},{"location":"issuer-tmp/#b-how-to-add-a-new-credential-to-the-issuer","title":"B. How to add a new credential to the issuer ?","text":"<p>Please see detailed instructions in api_docs/add_credential.md.</p>"},{"location":"issuer-tmp/#c-can-i-use-my-iaca-certificate-with-the-eudiw-issuer","title":"C. Can I use my IACA certificate with the EUDIW Issuer?","text":"<p>Yes. You must copy your IACA trusted certificate(s) (in PEM format) to the <code>trusted_CAs_path</code> folder. If you don't have an IACA certificate, we provide an example test IACA certificate for the country Utopia (UT).</p> <p>See more information in api_docs/configuration.md.</p>"},{"location":"issuer-tmp/#d-can-i-use-my-document-signer-private-key-and-certificate-with-the-eudiw-issuer","title":"D. Can I use my Document Signer private key and certificate with the EUDIW Issuer?","text":"<p>Yes. Please follow the instructions in api_docs/configuration.md. If you don't have Document Signer private key and certificate, we provide  test private DS keys and certificates, for country Utopia (UT).</p>"},{"location":"issuer-tmp/#e-how-can-i-create-a-credential-offer-to-issue-a-credential","title":"E. How can I create a credential offer to issue a credential?","text":"<p>Please see detailed instructions in api_docs/credential_offer.md.</p>"},{"location":"issuer-tmp/#f-can-i-test-the-pre-authorized-flow","title":"F. Can I test the pre-authorized flow?","text":"<p>Yes. Please see how in api_docs/pre-authorized.md.</p>"},{"location":"issuer-tmp/#h-can-i-run-the-issuer-in-a-docker-container","title":"H. Can I run the issuer in a Docker container?","text":"<p>Yes. Please see how in Install Docker.</p>"},{"location":"issuer-tmp/#how-to-contribute","title":"How to contribute","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, follow the guidelines found in CONTRIBUTING.md.</p>"},{"location":"issuer-tmp/#license","title":"License","text":""},{"location":"issuer-tmp/#license-details","title":"License details","text":"<p>Copyright \u00a9 2023 European Commission</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <pre><code>http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"use-cases/","title":"Use cases","text":"<p>Home / use-cases</p>"},{"location":"use-cases/#use-cases","title":"Use cases","text":"<p>EUDI Wallets will simplify the lives of citizens and businesses in many ways; making data more secure and private. It will also improve security and flexibility for governments and businesses when carrying out transactions online. Read more about the use cases</p>"},{"location":"use-cases/#travel-scenario","title":"Travel Scenario","text":"<p>The Reference Implementation includes the travel use case implementation to showcase the utilization of the EUDI Wallet in a \u2018Travel\u2019 business scenario, where the EUDI Wallet is used for several purposes, such as presenting attestations (remotely and in proximity) as well as digitally signing documents.</p> <p>User journey</p> <ol> <li>Jane is preparing for her next trip with the help of her EUDI Wallet. Jane starts by securing her essential travel documents. She issues her Digital Identity, Mobile Driving License, and Photo-ID directly into her EUDI Wallet. Each document is safely stored, ready to be accessed whenever she needs them.</li> <li>Booking: With her documents in place, Jane navigates to the travel booking portal. Here, she effortlessly presents her Digital ID and other necessary documents requested by the booking portal from her EUDI Wallet to book her car rental and hotel.</li> <li>Renting a car: When it comes to renting a car, Jane is redirected to a remote signing portal to conclude the rental process. Using her EUDI Wallet, she digitally signs the car rental contract, finalizing her arrangements with security and ease.</li> <li>Hotel check-in: Upon arrival at her hotel, Jane approaches the check-in counter. She presents her Digital ID and Photo-ID from her EUDI Wallet to the hotel\u2019s proximity reader. The process is quick and secure, allowing her to start relaxing in her room in no time.</li> </ol> <p>Test online or run locally </p> <p>Access the booking service used in the scenario: https://dev.booking.demo.eudiw.dev. You can use the Reference Implementation Wallet for the scenario.</p> <p>You can also run the booking service locally.</p>"},{"location":"Android/","title":"Index","text":"<p>Home / Android</p>"},{"location":"Android/#index-of-android","title":"Index of Android","text":"<ul> <li>Build the App</li> <li>HowTo Install</li> <li>HowTo Issue (Credential Offer)</li> <li>HowTo Issue (Scoped)</li> <li>HowTo Present (Proximity)</li> <li>HowTo Present (Same Device)</li> <li>Running with Local Services</li> <li>Running with Remote Services</li> <li>Self-signed Certificates</li> </ul>"},{"location":"Build/","title":"Index","text":"<p>Home / Build</p>"},{"location":"Build/#index-of-build","title":"Index of Build","text":"<ul> <li>Build your Issuer</li> <li>Build your Verifier</li> <li>Build your Wallet</li> <li>Introduction</li> </ul>"},{"location":"Build/Introduction/","title":"Introduction","text":"<p>Home / Build / Introduction</p>"},{"location":"Build/Introduction/#build-introduction","title":"Build Introduction","text":"<p>In this section, you'll find comprehensive guidance on how to leverage the EUDI Wallet Reference Implementation to build your own EUDI Wallet, Issuer, or Verifier. The reference implementation provides open-source code libraries, tools, and sample applications to help you get started quickly and efficiently.</p> <p>Whether you are a Wallet Provider, a PID or (Q)EAA Provider, or a Relying Party, the guide provides clear, step-by-step instructions and examples to help you get started. It also assists you in evaluating how you can leverage the EUDIW reference implementation in your development project and how to make the most of it.</p> <p>Let\u2019s get started with building your secure and interoperable EUDI solutions!</p> Role Description Get Started Wallet Provider A Wallet Provider is responsible for developing, maintaining, and operating a secure and interoperable wallet application. EUDI Wallet Providers are Member States or organisations either mandated or recognized by Member States making the EUDI Wallet available for end users. The Wallet Provider ensures compliance with EU regulations while delivering an intuitive, user-friendly, and accessible solution for all users, including those with disabilities or varying levels of digital literacy. Build your Wallet Issuer An issuer is a PID Provider or a Qualified or Non-Qualified Electronic Attestation of Attributes Provider. They are responsible for issuing the PID or the Electronic Attestion to the Wallet and providing information that can be used to enquire about the validity status of the PID or Attestation. Build your Issuer Verifier A relying party requires a verifier to accept and verifie Attestations presented by wallet user. Verifiers can be used in both online and proximity use cases. Build your Verifier"},{"location":"Build/Introduction/#test-your-solution","title":"Test your solution","text":"<p>Managed to build your solution. Time to test your solution:</p> <ul> <li>Test your Solution</li> </ul>"},{"location":"Build/Build%20your%20Issuer/","title":"Index","text":"<p>Home / Build / Build your Issuer</p>"},{"location":"Build/Build%20your%20Issuer/#index-of-buildbuild-your-issuer","title":"Index of Build/Build your Issuer","text":"<ul> <li>Build your Issuer</li> <li>Issuer FAQ</li> <li>Issuer Introduction</li> </ul>"},{"location":"Build/Build%20your%20Issuer/Introduction/","title":"Introduction","text":"<p>Home / Build / Build your Issuer / Introduction</p>"},{"location":"Build/Build%20your%20Issuer/Introduction/#eudiw-issuer","title":"EUDIW Issuer","text":""},{"location":"Build/Build%20your%20Issuer/Introduction/#overview","title":"Overview","text":"<p>The EUDIW Issuer is an implementation of  the PID and (Q)EAA Provider service, supporting the OpenId4VCI (draft 13) protocol.</p> <p>The service provides, by default, support for <code>mso_mdoc</code> and <code>SD-JWT-VC</code>formats, for the following credentials:</p> Credential/Attestation Format PID mso_mdoc PID(sample) SD-JWT-VC mDL mso_mdoc mDL SD-JWT-VC <p>For authenticating the user, it requires the use of eIDAS node, OAUTH2 server or a simple form (for testing purposes).</p>"},{"location":"Build/Build%20your%20Issuer/Introduction/#openid4vci-coverage","title":"OpenId4VCI coverage","text":"<p>This version of the EUDIW Issuer supports the OpenId for Verifiable Credential Issuance (draft 13) protocol with the following coverage:</p> Feature Coverage Authorization Code flow \u2705 Support for PAR, PKCE, credential configuration id, scope Pre-authorized code flow \u2705 Dynamic Credential Request \u2705 mso_mdoc format \u2705 SD-JWT-VC format \u2705 W3C VC DM \u274c Token Endpoint \u2705 Credential Offer \u2705 <code>authorization_code</code> , \u2705 <code>pre-authorized_code</code> Credential Endpoint \u2705 Including proofs and repeatable invocations Credential Issuer MetaData \u2705 Batch Endpoint \u2705 Deferred Endpoint \u2705 Proof \u2705 JWT, \u2705 CWT Notification Endpoint \u2705 <p>You can use the EUDIW Issuer at https://issuer.eudiw.dev/, or install it locally.</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/","title":"Steps to Build","text":"<p>Home / Build / Build your Issuer / Steps to Build</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#build-the-issuer","title":"Build the Issuer","text":"<p>This section includes a thorough description of the steps to build your own Issuer.</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#1-python","title":"1. Python","text":"<p>The EUDIW Issuer was tested with</p> <ul> <li>Python version 3.9.2</li> </ul> <p>and should only be used with Python 3.9 or 3.10.</p> <p>If you don't have it installed, please download it from here and follow the Python Developer's Guide.</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#2-flask","title":"2. Flask","text":"<p>The EUDIW Issuer was tested with</p> <ul> <li>Flask v. 2.3</li> </ul> <p>and should only be used with Flask v. 2.3 or higher.</p> <p>To install Flask, please follow the Installation Guide.</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#3-how-to-run-the-eudiw-issuer","title":"3. How to run the EUDIW Issuer?","text":"<p>To run the EUDIW Issuer, please follow these simple steps (some of which may have already been completed when installing Flask) for Linux/macOS or Windows.</p> <ol> <li> <p>Clone the EUDIW Issuer repository:</p> <pre><code>git clone git@github.com:eu-digital-identity-wallet/eudi-srv-web-issuing-eudiw-py.git\n</code></pre> </li> <li> <p>Create a <code>.venv</code> folder within the cloned repository:</p> <pre><code>cd eudi-srv-web-issuing-eudiw-py\npython3 -m venv .venv\n</code></pre> </li> <li> <p>Activate the environment:</p> <p>Linux/macOS</p> <pre><code>. .venv/bin/activate\n</code></pre> <p>Windows</p> <pre><code>. .venv\\Scripts\\Activate\n</code></pre> </li> <li> <p>Install or upgrade pip</p> <pre><code>python -m pip install --upgrade pip\n</code></pre> </li> <li> <p>Install Flask, gunicorn and other dependencies in virtual environment</p> <pre><code>pip install -r app/requirements.txt\n</code></pre> </li> <li> <p>Setup secrets</p> </li> <li> <p>Copy <code>app/app_config/__config_secrets.py</code> to <code>app/app_config/config_secrets.py</code> and modify secrets.</p> </li> <li> <p>Service Configuration</p> </li> <li> <p>Configure the service according to documentation</p> </li> <li> <p>Run the EUDIW Issuer </p> <p>On the root directory of the clone repository, insert one of the following command lines to run the EUDIW Issuer.</p> <ul> <li>Linux/macOS/Windows (on http://127.0.0.1:5000 or http://localhost:5000)</li> </ul> <pre><code>flask --app app run\n</code></pre> <ul> <li>Linux/macOS/Windows (on http://127.0.0.1:5000 or http://localhost:5000 with flag debug)</li> </ul> <pre><code>flask --app app run --debug\n</code></pre> </li> </ol>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#4-running-your-local-eudiw-issuer-over-https","title":"4. Running your local EUDIW Issuer over HTTPS","text":"<ol> <li>Generate a self signed certificate and a private key</li> <li> <p>Linux/macOS</p> <p>Example:      <code>openssl req -x509 -out localhost.crt -keyout localhost.key -newkey rsa:2048 -nodes -sha256 -subj '/CN=localhost' -extensions EXT -config &lt;( \\    printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=IP.1:127.0.0.1\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")</code></p> <ul> <li> <p>Windows</p> <p>Create the file localhost.conf using the following as an example: <pre><code>[req]\ndefault_bits  = 2048\ndistinguished_name = req_distinguished_name\nreq_extensions = req_ext\nx509_extensions = v3_req\nprompt = no\n[req_distinguished_name]\ncountryName = XX\nstateOrProvinceName = N/A\nlocalityName = N/A\norganizationName = Self-signed certificate\ncommonName = 120.0.0.1: Self-signed certificate\n[req_ext]\nsubjectAltName = @alt_names\n[v3_req]\nsubjectAltName = @alt_names\n[alt_names]\nIP.1 = 127.0.0.1\n</code></pre></p> <p>Use the configuration file above to generate the certificate and key <pre><code>openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout key.pem -out cert.pem -config localhost.conf \n</code></pre></p> </li> </ul> </li> <li> <p>Add certificate to environment variables</p> </li> <li> <p>Linux/macOS        <pre><code> export REQUESTS_CA_BUNDLE=\"/path/to/certificate\"\n</code></pre></p> </li> <li> <p>Windows         <pre><code>set REQUESTS_CA_BUNDLE=\"\\path\\to\\certificate\"\n</code></pre></p> </li> <li> <p>Run the EUDIW Issuer with certificate and key     <pre><code>flask --app app run --cert=cert.pem --key=key.pem\n</code></pre></p> </li> </ol>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#5-make-your-local-eudiw-issuer-available-on-the-internet-optional","title":"5. Make your local EUDIW Issuer available on the Internet (optional)","text":"<p>If you want to make your local EUDIW Issuer available on the Internet, we recommend to use NGINX reverse proxy and certbot (to generate an HTTPS certificate).</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#51-install-and-configure-nginx","title":"5.1 Install and configure NGINX","text":"<ol> <li> <p>Follow the installation guide</p> </li> <li> <p>Configure your local EUDIW Issuer. For example, use the following Nginx configuration file (for a Linux installation):</p> <pre><code>server {\n    server_name FQDN; # Change to the FQDN you want to use\n\n    listen 80;\n    access_log /var/log/nginx/issuer.eudiw.access.log;\n    error_log /var/log/nginx/issuer.eudiw.error.log;\n    root /var/www/html;\n\n# Recommended\n    proxy_busy_buffers_size   512k;\n    proxy_buffers   4 512k;\n    proxy_buffer_size   256k;\n\n# Provider backend\n    location / {\n        # The proxy_pass directive assumes that your local EUDIW Issuer is running at http://127.0.0.1:5000/. \n        # If not, please adjust it accordingly.\n        proxy_pass                              http://127.0.0.1:5000/;\n        proxy_set_header Host                   $http_host;\n        proxy_set_header X-Real-IP              $remote_addr;\n        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto      $scheme;\n    }\n}\n</code></pre> </li> <li> <p>Restart the Nginx server</p> </li> </ol>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#52-install-and-run-certbot-to-gef-a-free-https-certificate","title":"5.2 Install and run certbot to gef a free HTTPS certificate","text":"<ol> <li> <p>Follow the installation guide</p> </li> <li> <p>Run <code>certbot</code> to get a free HTTPS certificate. The <code>certbot</code> will also configure the EUDIW Issuer Nginx configuration file with the HTTPS certificate.</p> </li> <li> <p>Restart the Nginx server and goto <code>https:\\\\FQDN\\</code> (FQDN configured in the Nginx configuration file)</p> </li> </ol>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#6-docker","title":"6. Docker","text":"<p>To run the EUDIW issuer in Docker please follow these steps:</p> <ol> <li> <p>Install Docker following the official instructions for your operating system</p> </li> <li> <p>Download the Dockerfile</p> </li> <li> <p>Build the Docker: <code>sudo docker build -t eudiw-issuer .</code></p> </li> <li> <p>Create 2 directories to be mounted:</p> </li> <li> <p>First directory named <code>config_secrets</code></p> <p>This directory will have the cert.pem and key.pem generated in Section 4</p> <p>As well as the config_secrets.py based on this example</p> </li> <li> <p>Second directory named <code>pid-issuer</code>, inside will be a directory <code>cert</code> and <code>privKey</code></p> <p>The <code>cert</code> directory has the certificates of the trusted CAs in PEM format as well as the Document/Credential signer (DS) certificates in DER format</p> <p>The <code>privKey</code> directory has the Document/Credential signer (DS) private keys</p> <p>Example:</p> <pre><code>docker-issuer\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 config_secrets\n\u2502   \u251c\u2500\u2500 config_secrets.py\n\u2502   \u251c\u2500\u2500 cert.pem\n\u2502   \u2514\u2500\u2500 key.pem\n\u2514\u2500\u2500 pid-issuer\n    \u251c\u2500\u2500 cert\n    \u2502   \u251c\u2500\u2500 PID-DS-0001_UT_cert.der\n    \u2502   \u2514\u2500\u2500 PIDIssuerCAUT01.pem\n    \u2514\u2500\u2500 privKey\n        \u2514\u2500\u2500 PID-DS-0001_UT.pem\n</code></pre> </li> <li> <p>Run Docker</p> <p>If running a basic configuration without EIDAS node or Dynamic presentation, their respective variables can be removed from the run command below.</p> <pre><code>sudo docker run -d \\\n--name eudiw-issuer \\\n-e SERVICE_URL=\"https://your.service.url/\" \\\n-e EIDAS_NODE_URL=\"https://your.eidas.node.url/\" \\\n-e DYNAMIC_PRESENTATION_URL=\"https://your.dynamic.presentation.url/\" \\\n-v ./config_secrets:/root/secrets \\\n-v ./pid-issuer:/etc/eudiw/pid-issuer \\\n-p 5000:5000 \\\neudiw-issuer\n</code></pre> </li> <li> <p>Docker logs</p> <p>Issuer logs in real time: <code>sudo docker logs -f eudiw-issuer</code> All logs: <code>sudo docker logs eudiw-issuer</code></p> </li> <li> <p>Stopping Docker Issuer    <code>sudo docker stop eudiw-issuer</code></p> </li> </ol>"},{"location":"Build/Build%20your%20Verifier/","title":"Index","text":"<p>Home / Build / Build your Verifier</p>"},{"location":"Build/Build%20your%20Verifier/#index-of-buildbuild-your-verifier","title":"Index of Build/Build your Verifier","text":"<ul> <li>Build your Verifier</li> <li>Running Tests</li> </ul>"},{"location":"Build/Build%20your%20Verifier/Introduction/","title":"Introduction","text":"<p>Home / Build / Build your Verifier / Introduction</p>"},{"location":"Build/Build%20your%20Verifier/Introduction/#build-your-verifier","title":"Build your Verifier","text":""},{"location":"Build/Build%20your%20Verifier/Introduction/#overview","title":"Overview","text":"<p>This is a WEB UI that provides functionality to interact with the Verifier/RP trusted end-point implemented here. Another way to think of this application is that it represents an arbitrary application that wants to delegate to the trusted end-point the burden of interacting with a wallet using OpenId4VP. The project was generated with Angular CLI version 19.1.4.</p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/","title":"Running Tests","text":"<p>Home / Build / Build your Verifier / Steps to Build</p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#steps-to-build-the-online-verifier","title":"Steps to Build the Online Verifier","text":""},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#development-server","title":"Development server","text":"<p>Run <code>ng serve</code> for a dev server. Navigate to <code>http://localhost:4200/</code>. The application will automatically reload if you change any of the source files.</p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#code-scaffolding","title":"Code scaffolding","text":"<p>Run <code>ng generate component component-name</code> to generate a new component. You can also use <code>ng generate directive|pipe|service|class|guard|interface|enum|module</code>.</p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#build","title":"Build","text":"<p>Run <code>ng build</code> to build the project. The build artifacts will be stored in the <code>dist/</code> directory.</p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#how-to-run-for-development","title":"How to run for development","text":"<p>You need npm (node version 18.15.0) and Angular CLI installed on your machine.</p> <p>In order to run Verifier UI run the following commands:</p> <p><pre><code>npm install\nng serve --proxy-config src/proxy.conf.json\n</code></pre> The above command utilizes proxy.conf.json that proxies the calls to the expected verifier backend service. Update this file if you want your Verifier UI to point to a locally running verifier backend service.</p> <p>You can access the application at http://localhost:4200 </p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#running-tests","title":"Running tests","text":"<p>Run <code>ng test</code> to execute the unit tests via Karma.</p> <p>Run <code>ng e2e</code> to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.</p> <p>To get more help on the Angular CLI use <code>ng help</code> or go check out the Angular CLI Overview and Command Reference page.</p>"},{"location":"Build/Build%20your%20Wallet/","title":"Index","text":"<p>Home / Build / Build your Wallet</p>"},{"location":"Build/Build%20your%20Wallet/#index-of-buildbuild-your-wallet","title":"Index of Build/Build your Wallet","text":"<ul> <li>Android</li> <li>Build your Wallet</li> <li>iOS</li> </ul>"},{"location":"Build/Build%20your%20Wallet/Introduction/","title":"Introduction","text":"<p>Home / Build / Build your Wallet / Introduction</p>"},{"location":"Build/Build%20your%20Wallet/Introduction/#build-your-wallet","title":"Build your Wallet","text":"<p>In this section, you'll find all the resources you need to build your own EUDI Wallet application using the tools and libraries provided by the EUDI Wallet Reference Implementation. These open-source libraries and utilities are designed to help you create a secure, user-friendly, and interoperable digital wallet solution.</p> <p>Let's start with your implementation!</p> Operating System Description Get Started Android Reference Implementation Wallet Application Android Wallet Android Reference Implementation Core Android Core iOS Reference Implementation Wallet Application iOS Wallet iOS Reference Implementation Core iOS Core"},{"location":"Build/Build%20your%20Wallet/Android/","title":"Index","text":"<p>Home / Build / Build your Wallet / Android</p>"},{"location":"Build/Build%20your%20Wallet/Android/#index-of-buildbuild-your-walletandroid","title":"Index of Build/Build your Wallet/Android","text":"<ul> <li>Library Level</li> <li>Wallet Application Level</li> </ul>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/","title":"Index","text":"<p>Home / Build / Build your Wallet / Android / Library Level</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/#index-of-buildbuild-your-walletandroidlibrary-level","title":"Index of Build/Build your Wallet/Android/Library Level","text":"<ul> <li>Build the Core</li> <li>Introduction</li> <li>Manage Documents</li> </ul>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/","title":"Build the Core","text":"<p>Home / Build / Build your Wallet / Android / Library Level / Build the Core</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/#build-the-core","title":"Build the Core","text":""},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/#requirements","title":"Requirements","text":"<ul> <li>Android 8 (API level 26) or higher</li> </ul>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/#dependencies","title":"Dependencies","text":"<p>To use snapshot versions add the following to your project's settings.gradle file:</p> <pre><code>dependencyResolutionManagement {\n    repositories {\n        // ...\n        maven {\n            url = uri(\"https://s01.oss.sonatype.org/content/repositories/snapshots/\")\n            mavenContent { snapshotsOnly() }\n        }\n        // ...\n    }\n}\n</code></pre> <p>To include the library in your project, add the following dependencies to your app's build.gradle file.</p> <pre><code>dependencies {\n    implementation \"eu.europa.ec.eudi:eudi-lib-android-wallet-core:0.14.0\"\n    // required when using the built-in AndroidKeystoreSecureArea implementation provided by the library\n    // for user authentication with biometrics\n    implementation \"androidx.biometric:biometric-ktx:1.2.0-alpha05\"\n}\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/#how-to-use","title":"How to Use","text":""},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/#initialize-the-library","title":"Initialize the library","text":"<p>To instantiate a <code>EudiWallet</code> use the <code>EudiWallet.Builder</code> class or the <code>EudiWallet.invoke</code> method, from the EudiWallet companion object.</p> <p>The minimum requirements to initialize the library is to provide a <code>EudiWalletConfit</code> object that will be used to configure the library's built-in components.</p> <p>The built-in components are:</p> <ul> <li><code>AndroidKeystoreSecureArea</code> for storing and managing the documents' keys</li> <li><code>AndroidStorageEngine</code> for storing the documents' data</li> <li><code>ReaderTrustStore</code> implementation for validating the reader's certificates</li> <li><code>PresentationManager</code> implementation for managing both proximity and remote presentation of   documents</li> <li><code>Logger</code> implementation for logging</li> </ul> <p>The following example demonstrates how to initialize the library for using the built-in components:</p> <pre><code>// configuring the wallet\nval config = EudiWalletConfig()\n    // configure the document storage\n    // the noBackupFilesDir is used to store the documents by default\n    .configureDocumentManager(context.noBackupFilesDir)\n    // configure the built-in logger\n    .configureLogging(\n        // set log level to info\n        level = Logger.LEVEL_INFO\n    )\n    // configure the built-in key creation settings\n    .configureDocumentKeyCreation(\n        // set userAuthenticationRequired to true to require user authentication\n        userAuthenticationRequired = true,\n        // set userAuthenticationTimeout to 30 seconds\n        userAuthenticationTimeout = 30_000L,\n        // set useStrongBoxForKeys to true to use the the device's StrongBox if available\n        // to store the keys\n        useStrongBoxForKeys = true\n    )\n    .configureReaderTrustStore(\n        // set the reader trusted certificates for the reader trust store\n        listOf(readerCertificate)\n    )\n    // mandatory configuration for OpenId4Vci if you want to issue documents\n    .configureOpenId4Vci {\n        withIssuerUrl(\"https://issuer.com\")\n        withClientId(\"client-id\")\n        withAuthFlowRedirectionURI(\"eudi-openid4ci://authorize\")\n    }\n    // configuration for proximity presentation\n    // the values below are the default values\n    .configureProximityPresentation(\n        // ble mode: peripheral and/or central\n        enableBlePeripheralMode = true,\n        enableBleCentralMode = false,\n        clearBleCache = true,\n        // registered application service for handling NFC device engagement\n        nfcEngagementServiceClass = MyNfcEngagementService::class.java\n    )\n    // mandatory configuration for OpenId4Vp if you want to enable\n    // remote presentation of documents with OpenId4Vp\n    .configureOpenId4Vp {\n        withEncryptionAlgorithms(\n            EncryptionAlgorithm.ECDH_ES\n        )\n        withEncryptionMethods(\n            EncryptionMethod.A128CBC_HS256,\n            EncryptionMethod.A256GCM\n        )\n        withClientIdSchemes(\n            ClientIdScheme.X509SanDns\n        )\n        withSchemes(\n            \"openid4vp\",\n            \"eudi-openid4vp\",\n            \"mdoc-openid4vp\"\n        )\n        withFormats(\n            Format.MsoMdoc, \n            Format.SdJwtVc.ES256\n        )\n    }\n\nval wallet = EudiWallet(context, config)\n</code></pre> <p><code>EuidWallet.Builder</code> allows to configure the library with custom implementations of the built-in components.</p> <p>The following example demonstrates how to initialize the library with custom implementations for StorageEngine, SecureArea, ReaderTrustStore, and Logger:</p> <pre><code>val wallet = EudiWallet(context, config) {\n    // custom StorageEngine to store documents' data\n    withStorageEngine(myStorageEngine)\n    // a list of SecureArea implementations to be used\n    withSecureAreas(listOf(deviceSecureArea, cloudSecureArea))\n    // ReaderTrustStore to be used for reader authentication\n    withReaderTrustStore(myReaderTrustStore)\n    // custom logger to be used\n    withLogger(myLogger)\n}\n</code></pre> <p>See the CustomizeSecureArea.md for more information on how to use the wallet-core library with custom SecureArea implementations.</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Introduction/","title":"Introduction","text":"<p>Home / Build / Build your Wallet / Android / Library Level / Introduction</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Introduction/#eudi-wallet-core-library-for-android","title":"EUDI Wallet Core library for Android","text":""},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Introduction/#overview","title":"Overview","text":"<p>This repository contains the EUDI Wallet Core library for Android. The library is a part of the EUDI Wallet Reference Implementation project.</p> <p>This library acts as a coordinator by orchestrating the various components that are required to implement the EUDI Wallet functionality. On top of that, it provides a simplified API that can be used by the application to implement the EUDI Wallet functionality.</p> <p>The library provides the following functionality:</p> <ul> <li>Document management<ul> <li> Documents' Key creation and management with Android Keystore by default</li> <li> Support for custom SecureArea implementations</li> <li> Support for multiple SecureArea implementations</li> </ul> </li> <li>Document issuance<ul> <li> Support for OpenId4VCI Draft 14 document issuance<ul> <li> Authorization Code Flow</li> <li> Pre-authorization Code Flow</li> <li> Support for mso_mdoc format</li> </ul> </li> <li> Support for sd-jwt-vc format<ul> <li> Support credential offer</li> <li> Support for DPoP JWT in authorization</li> </ul> </li> <li> Support for JWT proof types</li> <li> Support for deferred issuing</li> </ul> </li> <li>Proximity document presentation<ul> <li> Support for ISO-18013-5 device retrieval<ul> <li> QR device engagement</li> <li> NFC device engagement</li> <li> BLE data transfer</li> <li> NFC data transfer</li> <li> Wifi-Aware data transfer</li> </ul> </li> </ul> </li> <li>Remote document presentation<ul> <li> OpenId4VP document transfer<ul> <li> For pre-registered verifiers</li> <li> Dynamic registration of verifiers</li> </ul> </li> </ul> </li> </ul> <p>The library is written in Kotlin and is compatible with Java. It is distributed as a Maven package and can be included in any Android project that uses Android 8 (API level 26) or higher.</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Manage%20Documents/","title":"Manage Documents","text":"<p>Home / Build / Build your Wallet / Android / Library Level / Manage Documents</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Manage%20Documents/#manage-documents","title":"Manage documents","text":"<p>The library provides a set of methods to work with documents.</p> <pre><code>val documents = wallet.getDocuments()\n</code></pre> <p>You can also retrieve documents based on a predicate. The following snippet shows how to retrieve documents of mso_mdoc format of a specific docType:</p> <pre><code>val documents = wallet.getDocuments { document -&gt;\n    (document.format as MsoMdocFormat).docType == \"eu.europa.ec.eudi.pid.1\"\n}\n</code></pre> <p>The following snippet shows how to retrieve a document by its id:</p> <pre><code>val documentId = \"some_document_id\"\nval document: Document? = wallet.getDocumentById(documentId)\n</code></pre> <p>To delete a document, use the following code snippet:</p> <pre><code>try {\n    val documentId = \"some_document_id\"\n    val deleteResult = wallet.deleteDocumentById(documentId)\n    deleteResult.getOrThrow()\n} catch (e: Throwable) {\n    // Handle the exception\n}\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Manage%20Documents/#creating-and-storing-a-new-document","title":"Creating and storing a new document","text":"<p>Adding a new document to the wallet is a two-step process. First, a new document must be created using the <code>createDocument</code> method. The method returns an <code>UnsignedDocument</code> object that contains the keys that will be used for signing the proof of possession for the issuer. Creating a new document requires the document format and the create key settings. The create key settings can be used to specify the way the keys are created.</p> <p>When using the built-in <code>AndroidKeystoreSecureArea</code> implementation of the library, the <code>wallet.getDefaultCreateDocumentSettings()</code> extension can be used to create an instance of the appropriate <code>CreateDocumentSettings</code> class.</p> <p>After the document is created, the user must retrieve the document's data from the issuer and store it in the wallet using the storeIssuedDocument method.</p> <p>The following snippet demonstrates how to create a new document for the mso_mdoc format, using library's default implementation of CreateDocumentSettings.</p> <pre><code>try {\n    // create a new document\n    // Construct the CreateDocumentSettings object\n    val createSettings = wallet.getDefaultCreateDocumentSettings()\n\n    val createDocumentResult = wallet.createDocument(\n        format = MsoMdocFormat(docType = \"eu.europa.ec.eudi.pid.1\"),\n        createSettings = createSettings\n    )\n    val unsignedDocument = createDocumentResult.getOrThrow()\n    val publicKeyBytes = unsignedDocument.publicKeyCoseBytes\n\n    // prepare keyUnlockData to unlock the key\n    // here we use the default key unlock data for the document\n    // provided by the library\n    val keyUnlockData = unsignedDocument.DefaultKeyUnlockData\n    // proof of key possession\n    // Sign the documents public key with the private key\n    // before sending it to the issuer\n    val signatureResult =\n        unsignedDocument.sign(publicKeyBytes, keyUnlockData = keyUnlockData)\n    val signature = signatureResult.getOrThrow().toCoseEncoded()\n\n    // send the public key and the signature to the issuer\n    // and get the document data\n    val documentData = sendToIssuer(\n        publicKeyCoseBytes = publicKeyBytes,\n        signatureCoseBytes = signature\n    )\n\n    // store the issued document with the document data received from the issuer\n    val storeResult =\n        wallet.storeIssuedDocument(unsignedDocument, documentData)\n\n    // get the issued document\n    val issuedDocument = storeResult.getOrThrow()\n} catch (e: Throwable) {\n    // Handle the exception\n}\n\n// ...\n\nfun sendToIssuer(publicKeyCoseBytes: ByteArray, signatureCoseBytes: ByteArray): ByteArray {\n    TODO(\"Send publicKey and proof of possession signature to issuer and retrieve document's data\")\n}\n</code></pre> <p>Important!: In the case of <code>DocumentFormat.MsoMdoc</code>, <code>DocumentManager.storeIssuedDocument()</code> method expects document's data to be in CBOR bytes and have the IssuerSigned structure according to ISO 23220-4.</p> <p>Currently, the library does not support IssuerSigned structure without the <code>nameSpaces</code> field.</p> <p>The following CDDL schema describes the structure of the IssuerSigned structure:</p> <pre><code>IssuerSigned = {\n ?\"nameSpaces\" : IssuerNameSpaces, ; Returned data elements\n \"issuerAuth\" : IssuerAuth ; Contains the mobile security object (MSO) for issuer data authentication\n}\nIssuerNameSpaces = { ; Returned data elements for each namespace\n + NameSpace =&gt; [ + IssuerSignedItemBytes ]\n}\nIssuerSignedItemBytes = #6.24(bstr .cbor IssuerSignedItem)\nIssuerSignedItem = {\n \"digestID\" : uint, ; Digest ID for issuer data authentication\n \"random\" : bstr, ; Random value for issuer data authentication\n \"elementIdentifier\" : DataElementIdentifier, ; Data element identifier\n \"elementValue\" : DataElementValue ; Data element value\n}\nIssuerAuth = COSE_Sign1 ; The payload is MobileSecurityObjectBytes\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Manage%20Documents/#working-with-sample-documents","title":"Working with sample documents","text":"<p>The wallet-core library provides a method to load sample documents easily. This feature is useful for demonstration or testing purposes.</p> <p>Currently, the library supports loading sample documents in MsoMdoc format.</p> <p>The following code snippet shows how to load sample documents:</p> <pre><code>val sampleMdocDocuments: ByteArray = readFileWithSampleData()\n\nval createSettings = wallet.getDefaultCreateDocumentSettings()\nval loadResult = wallet.loadMdocSampleDocuments(\n    sampleData = sampleMdocDocuments,\n    createSettings = createSettings,\n    documentNamesMap = mapOf(\n        \"eu.europa.ec.eudi.pid.1\" to \"EU PID\",\n        \"org.iso.18013.5.1.mDL\" to \"mDL\"\n    )\n)\n\nval documentIds: List&lt;DocumentId&gt; = loadResult.getOrThrow()\n\n// ...\n\nfun readFileWithSampleData(): ByteArray = TODO(\"Reads the bytes from file with sample documents\")\n</code></pre> <p>Sample documents must be in CBOR format with the following structure:</p> <pre><code>Data = {\n \"documents\" : [+Document] ; Sample documents\n}\nDocument = {\n \"docType\" : DocType, ; Document type returned\n \"issuerSigned\" : IssuerSigned ; Data elements\n}\nIssuerSigned = {\n \"nameSpaces\" : IssuerNameSpaces, ; Returned data elements\n}\nIssuerNameSpaces = { ; Returned data elements for each namespace\n + NameSpace =&gt; [ + IssuerSignedItemBytes ]\n}\nIssuerSignedItem = {\n \"digestID\" : uint, ; Digest ID for issuer data authentication\n \"random\" : bstr, ; Random value for issuer data authentication\n \"elementIdentifier\" : DataElementIdentifier, ; Data element identifier\n \"elementValue\" : DataElementValue ; Data element value\n}\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/","title":"Index","text":"<p>Home / Build / Build your Wallet / Android / Wallet Application Level</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/#index-of-buildbuild-your-walletandroidwallet-application-level","title":"Index of Build/Build your Wallet/Android/Wallet Application Level","text":"<ul> <li>Build the App</li> <li>Running with Local Services</li> <li>Running with Remote Services</li> <li>Self-signed Certificates</li> </ul>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Build%20the%20App/","title":"Build the App","text":"<p>Home / Build / Build your Wallet / Android / Wallet Application Level / Build the App</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Build%20the%20App/#building-the-reference-apps-to-interact-with-issuing-and-verifying-services","title":"Building the Reference apps to interact with issuing and verifying services.","text":""},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Build%20the%20App/#overview","title":"Overview","text":"<p>This guide aims to assist developers build the EUDI Wallet application on Android.</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Build%20the%20App/#setup-eudi-wallet-applicationon-android","title":"Setup EUDI Wallet applicationon Android","text":"<p>To build the application using the source code and connect it with the issuer and verifier, please follow the next steps:</p> <ol> <li>Download and install Android Studio and its associated tools following the instuctions that can be found here. We recommend the latest stable version.</li> <li>Clone the Android repository using the following command:     <code>git clone git@github.com:eu-digital-identity-wallet/eudi-app-android-wallet-ui.git</code></li> <li>Open the project in Android Studio.</li> <li> <p>Configure the Build Variant by navigating to Build -&gt; Select Build Variant and from the tool window you can click on the \"Active Build Variant\" of the module \":app\" and select the one you prefer. It will automatically apply it for the other modules as well.</p> <p>The application has two product flavors:</p> <pre><code>- \"Dev\", which communicates with the services deployed in an environment based on the latest main branch.\n- \"Demo\", which communicates with the services deployed in an environment based on the latest main branch.\n</code></pre> <p>and two Build Types:</p> <pre><code>- \"Debug\", which has full logging enabled.\n- \"Release\", which has no logging enabled.\n</code></pre> <p>which, ultimately, result in the following Build Variants:</p> <pre><code>- \"devDebug\", \"devRelease\", \"demoDebug\", \"demoRelease\"\n</code></pre> </li> <li> <p>The App can be executed both on a device or on an emulator:</p> <ol> <li>To run the App on a device, firstly you must connect your device with the Android Studio, and then go to Run -&gt; Run 'app'.</li> <li>To run the App on an emulator, simply go to Run -&gt; Run 'app'.</li> </ol> </li> <li> <p>Finally, the App needs to be connected with an Issuer and a Verifier either locally, or remotely.</p> <ol> <li>To run remotely, please follow the instructions here</li> <li>To run locally, please follow the instructions here</li> </ol> </li> <li> <p>(Optional) In case serlf-signed certificates are required, please follow the instructions here</p> </li> </ol> <p>For a complete list of all configuration options please refer to this document</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Running%20with%20Local%20Services/","title":"Running with Local Services","text":"<p>Home / Build / Build your Wallet / Android / Wallet Application Level / Running with Local Services</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Running%20with%20Local%20Services/#running-with-local-services","title":"Running with local services","text":"<p>The first step here is to have all three services running locally on your machine, you can follow these Repositories for further instructions:</p> <ul> <li>Issuer</li> <li>Web Verifier UI</li> <li>Web Verifier Endpoint</li> </ul> <p>After this, and assuming you are now running everything locally, you need to change the contents of the ConfigWalletCoreImpl file, from: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://dev.issuer.eudiw.dev\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre> into something like this: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"local_IP_address_of_issuer\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p> <p>for example: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://192.168.1.1:5000\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p> <p>Finally, you have to also change the content of network_security_config.xml file and allow HTTP traffic, to this: <pre><code>&lt;network-security-config&gt;\n    &lt;base-config cleartextTrafficPermitted=\"true\" /&gt;\n&lt;/network-security-config&gt;\n</code></pre></p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Running%20with%20Remote%20Services/","title":"Running with Remote Services","text":"<p>Home / Build / Build your Wallet / Android / Wallet Application Level / Running with Remote Services</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Running%20with%20Remote%20Services/#running-with-remote-services","title":"Running with remote services","text":"<p>The app is configured to use some configuration in the two ConfigWalletCoreImpl.kt files (located in the \"core-logic\" module, in either srcdevjavaeueuropaeccorelogicconfig or srcdemojavaeueuropaeccorelogicconfig, depending on the flavor of your choice).</p> <p>These are the contents of the ConfigWalletCoreImpl file (dev flavor) and you don't need to change anything: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://dev.issuer.eudiw.dev\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Self-signed%20Certificates/","title":"Self-signed Certificates","text":"<p>Home / Build / Build your Wallet / Android / Wallet Application Level / Self-signed Certificates</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Self-signed%20Certificates/#how-to-work-with-self-signed-certificates","title":"How to work with self-signed certificates","text":"<p>This section describes configuring the application to interact with services utilizing self-signed certificates.</p> <ol> <li>Open the build.gradle.kts file of the \"core-logic\" module.</li> <li>In the 'dependencies' block add the following two:     <pre><code>implementation(libs.ktor.android)\nimplementation(libs.ktor.logging)\n</code></pre></li> <li>Now, you need to create a new kotlin file ProvideKtorHttpClient and place it into the srcmainjavaeueuropaeccorelogicconfig package.</li> <li>Copy and paste the following into your newly created ProvideKtorHttpClient kotlin file.     <pre><code>import android.annotation.SuppressLint\nimport io.ktor.client.HttpClient\nimport io.ktor.client.engine.android.Android\nimport io.ktor.client.plugins.logging.Logging\nimport java.security.SecureRandom\nimport javax.net.ssl.HostnameVerifier\nimport javax.net.ssl.SSLContext\nimport javax.net.ssl.TrustManager\nimport javax.net.ssl.X509TrustManager\nimport javax.security.cert.CertificateException\n\nobject ProvideKtorHttpClient {\n\n    @SuppressLint(\"TrustAllX509TrustManager\", \"CustomX509TrustManager\")\n    fun client(): HttpClient {\n        val trustAllCerts = arrayOf&lt;TrustManager&gt;(\n            object : X509TrustManager {\n                @Throws(CertificateException::class)\n                override fun checkClientTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                @Throws(CertificateException::class)\n                override fun checkServerTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                override fun getAcceptedIssuers(): Array&lt;java.security.cert.X509Certificate&gt; {\n                    return arrayOf()\n                }\n            }\n        )\n\n        return HttpClient(Android) {\n            install(Logging)\n            engine {\n                requestConfig\n                sslManager = { httpsURLConnection -&gt;\n                    httpsURLConnection.sslSocketFactory = SSLContext.getInstance(\"TLS\").apply {\n                        init(null, trustAllCerts, SecureRandom())\n                    }.socketFactory\n                    httpsURLConnection.hostnameVerifier = HostnameVerifier { _, _ -&gt; true }\n                }\n            }\n        }\n    }\n\n}\n</code></pre></li> <li>Finally, add this custom HttpClient to the EudiWallet provider function provideEudiWallet located in LogicCoreModule.kt <pre><code>@Single\nfun provideEudiWallet(\ncontext: Context,\nwalletCoreConfig: WalletCoreConfig,\nwalletCoreLogController: WalletCoreLogController\n): EudiWallet = EudiWallet(context, walletCoreConfig.config) {\n    withLogger(walletCoreLogController)\n    // Custom HttpClient\n    withKtorHttpClientFactory {\n        ProvideKtorHttpClient.client()\n    }\n}\n</code></pre></li> </ol>"},{"location":"Build/Build%20your%20Wallet/iOS/","title":"Index","text":"<p>Home / Build / Build your Wallet / iOS</p>"},{"location":"Build/Build%20your%20Wallet/iOS/#index-of-buildbuild-your-walletios","title":"Index of Build/Build your Wallet/iOS","text":"<ul> <li>Library Level</li> <li>Wallet Application Level</li> </ul>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/","title":"Index","text":"<p>Home / Build / Build your Wallet / iOS / Library Level</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/#index-of-buildbuild-your-walletioslibrary-level","title":"Index of Build/Build your Wallet/iOS/Library Level","text":"<ul> <li>Build the Core</li> <li>Introduction</li> <li>Manage Documents</li> </ul>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Build%20the%20Core/","title":"Build the Core","text":"<p>Home / Build / Build your Wallet / iOS / Library Level / Build the Core</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Build%20the%20Core/#build-the-kit","title":"Build the Kit","text":"<p>To use EUDI Wallet Kit, add the following dependency to your Package.swift: <pre><code>dependencies: [\n    .package(url: \"https://github.com/eu-digital-identity-wallet/eudi-lib-ios-wallet-kit.git\", .upToNextMajor(from: \"0.6.6\"))\n]\n</code></pre></p> <p>Then add the Eudi Wallet package to your target's dependencies: <pre><code>dependencies: [\n    .product(name: \"EudiWalletKit\", package: \"eudi-lib-ios-wallet-kit\"),\n]\n</code></pre></p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Build%20the%20Core/#reference","title":"Reference","text":"<p>Detailed documentation is provided in the DocC documentation here</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Build%20the%20Core/#initialization","title":"Initialization","text":"<p>The EudiWallet class provides a unified API for the two user attestation presentation flows. It is initialized with a document storage manager instance. For SwiftUI apps, the wallet instance can be added as an <code>environmentObject</code> to be accessible from all views. A KeyChain implementation of document storage is available.</p> <p>The wallet developer can customize cryptographic key operations by passing <code>SecureArea</code> instances to the wallet, otherwise the wallet-kit creates 'SecureEnclave' (default) and 'Software' secure areas. The wallet developer can specify key create options per doc-type such as curve type, secure area name, and key unlock policy.</p> <pre><code>let wallet = try! EudiWallet(serviceName: \"my_wallet_app\",\n   trustedReaderCertificates: [Data(name: \"eudi_pid_issuer_ut\", ext: \"der\")!] )\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Introduction/","title":"Introduction","text":"<p>Home / Build / Build your Wallet / iOS / Library Level / Introduction</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Introduction/#eudi-wallet-kit-library-for-ios","title":"EUDI Wallet Kit library for iOS","text":""},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Introduction/#overview","title":"Overview","text":"<p>This repository contains the EUDI Wallet Kit library for iOS. The library is a part of the EUDI Wallet Reference Implementation project.</p> <p>This library acts as a coordinator by orchestrating the various components that are required to implement the EUDI Wallet functionality. On top of that, it provides a simplified API that can be used by the application to implement the EUDI Wallet functionality.</p> <p>The library provides the following functionality:</p> <ul> <li>Document management<ul> <li> Storage encryption</li> <li> Using iOS Secure Enclave for generating/storing documents' keypair</li> <li> Enforcing device user authentication when retrieving documents' private keys</li> </ul> </li> <li>Document issuance<ul> <li> Support for OpenId4VCI document issuance<ul> <li> Authorization Code Flow</li> <li> Pre-authorization Code Flow</li> <li> Support for mso_mdoc format</li> <li> Support for sd-jwt-vc format</li> <li> Support credential offer</li> <li> Support for DPoP JWT in authorization</li> <li> Support for JWT and CWT proof types</li> <li> Support for deferred issuing</li> </ul> </li> </ul> </li> <li>Proximity document presentation<ul> <li> Support for ISO-18013-5 device retrieval<ul> <li> QR device engagement</li> <li> BLE data transfer</li> </ul> </li> </ul> </li> <li>Remote document presentation<ul> <li> OpenId4VP document transfer<ul> <li> For pre-registered verifiers</li> <li> Dynamic registration of verifiers</li> </ul> </li> </ul> </li> </ul> <p>The library is written in Swift and is compatible with iOS 14 or higher. It is distributed as a Swift package and can be included in any iOS project.</p> <p>It is based on the following specifications:</p> <ul> <li>ISO/IEC 18013-5 \u2013 Published</li> <li>Presentation Exchange v2.0.0 - Published</li> <li>OpenID4VP \u2013 Draft 18</li> <li>SIOPv2 \u2013 Draft</li> </ul>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Manage%20Documents/","title":"Manage Documents","text":"<p>Home / Build / Build your Wallet / iOS / Library Level / Manage Documents</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Manage%20Documents/#manage-documents","title":"Manage documents","text":"<p>The EudiWallet class provides a set of methods to work with documents.</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Manage%20Documents/#loading-documents","title":"Loading documents","text":"<p>The <code>loadDocuments</code> method returns documents with a specific status from storage.</p> <p>The following example shows how to retrieve issued documents:</p> <pre><code> public func loadDocuments() async throws {\n    let documents = try await wallet.loadDocuments(status: .issued)\n  }\n</code></pre> <p>To retrieve documents of all statuses use the <code>loadAllDocuments</code> method.</p> <pre><code>let documents = try await wallet.loadAllDocuments()\n</code></pre> <p>The <code>loadDocument(id:status:)</code> method returns a document with a given id and status. </p> <p>The following example shows how to retrieve a document:</p> <pre><code>let document = try await wallet.loadDocument(id: documentId, status: .issued)\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Manage%20Documents/#storage-manager","title":"Storage manager","text":"<p>The read-only property <code>storage</code> is an instance of a StorageManager class. Currently the keychain implementation is used. It provides document management functionality using the iOS KeyChain.</p> <p>The storage model provides the following models for the supported well-known document types:</p> DocType Model eu.europa.ec.eudiw.pid.1 EuPidModel org.iso.18013.5.1.mDL IsoMdlModel <p>Since the issued mDoc documents retrieved expose only basic metadata and the raw data, they must be decoded to the corresponding CBOR models. The library provides the <code>StorageManager\\toClaimsModel</code> function to decode document raw CBOR data to strongly-typed models conforming to DocClaimsDecodable protocol. </p> <p>The loading functions automatically update the <code>StorageManager</code> members. The decoded issued documents are available in the <code>docModels</code> property. The deferred and pending documents are available in the <code>StorageManager\\deferredDocuments</code> and <code>StorageManager\\pendingDocuments</code> properties respectively.</p> <p>For other document types the GenericMdocModel is provided.</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Manage%20Documents/#deleting-a-document","title":"Deleting a document","text":"<p>The <code>deleteDocument(id:)</code> method that deletes a document with the given id.</p> <p>The following example shows how to delete a document:</p> <pre><code>try await wallet.deleteDocument(id: documentId)\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/","title":"Index","text":"<p>Home / Build / Build your Wallet / iOS / Wallet Application Level</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/#index-of-buildbuild-your-walletioswallet-application-level","title":"Index of Build/Build your Wallet/iOS/Wallet Application Level","text":"<ul> <li>Build the App</li> <li>Running with Local Services</li> <li>Running with Remote Services</li> <li>Self-signed Certificates</li> </ul>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Build%20the%20App/","title":"Build the App","text":"<p>Home / Build / Build your Wallet / iOS / Wallet Application Level / Build the App</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Build%20the%20App/#building-the-reference-apps-to-interact-with-issuing-and-verifying-services","title":"Building the Reference apps to interact with issuing and verifying services.","text":""},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Build%20the%20App/#overview","title":"Overview","text":"<p>This guide aims to assist developers to build the EUDI Wallet application on iOS.</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Build%20the%20App/#setup-eudi-wallet-application-on-ios","title":"Setup EUDI Wallet application on iOS","text":"<ol> <li>You need xcode and its associated tools installed on your machine. We recommend the latest non-beta version. </li> <li>Clone the iOS repository using the following command:     <code>git clone git@github.com:eu-digital-identity-wallet/eudi-app-ios-wallet-ui.git</code></li> <li>Open the project file in Xcode.</li> <li> <p>The application has two schemes: \"EUDI Wallet Dev\" and \"EUDI Wallet Demo\" that can be configured in the xcconfig files located under the Config folder in the project.</p> <p>The application has two product flavors:</p> <pre><code>- \"Dev\", which communicates with the services deployed in an environment based on the latest main branch.\n- \"Demo\", which communicates with the services deployed in an environment based on the latest main branch.\n</code></pre> <p>and two Build Types:</p> <pre><code>- \"Debug\", which has full logging enabled, used when running the app from within Xcode.\n- \"Release\", which has no logging enabled, used when running the app after it has been distributed via a distribution platform, currently TestFlight.\n</code></pre> <p>which, ultimately, result in the following Build Variants:</p> <pre><code>- \"devDebug\", \"devRelease\", \"demoDebug\", \"demoRelease\"\n</code></pre> </li> <li> <p>The App can be executed both on a device or on an emulator:</p> <ol> <li>To run the app on the simulator, select your app schema and press Run.</li> <li>To run the app on a device, follow similar steps to running it on the simulator. Additionally, you need to supply your own provisioning profile and signing certificate in the Signing &amp; Capabilities tab of your app target.</li> </ol> </li> <li> <p>Finally, the App needs to be connected with an Issuer and a Verifier either locally, or remotely.</p> <ol> <li>To run remotely, please follow the instructions here</li> <li>To run locally, please follow the instructions here</li> </ol> </li> <li> <p>(Optional) In case self-signed certificates are required, please follow the instructions here</p> </li> </ol> <p>For a complete list of all configuration options please refer to this document</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Running%20with%20Local%20Services/","title":"Running with Local Services","text":"<p>Home / Build / Build your Wallet / iOS / Wallet Application Level / Running with Local Services</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Running%20with%20Local%20Services/#running-with-local-services","title":"Running with local services","text":"<ol> <li> <p>In order for the application to interact with locally running services; these must first be running on your machine. Please follow the instructions in the links below in order to have these services running locally:</p> <ul> <li>Issuer</li> <li>Web Verifier UI</li> <li>Web Verifier Endpoint</li> </ul> </li> <li> <p>In addition to the change above, you also need to allow self-signed certificates as described here.</p> </li> </ol>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Running%20with%20Remote%20Services/","title":"Running with Remote Services","text":"<p>Home / Build / Build your Wallet / iOS / Wallet Application Level / Running with Remote Services</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Running%20with%20Remote%20Services/#running-with-remote-services","title":"Running with remote services","text":"<p>The app is configured to the type (debug/release) and variant (dev/demo) in the four xcconfig files. These are the contents of the xcconfig file and you don't need to change anything if you don't want to:</p> <pre><code>BUILD_TYPE = RELEASE\nBUILD_VARIANT = DEMO\n</code></pre> <p>The values defined in the <code>.xcconfig</code> files are utilized within instances of <code>WalletKitConfig</code> and <code>RQESConfig</code> to assign the appropriate configurations. These configurations are selected based on the specified build type and build variant defined in the <code>.xcconfig</code> files.</p> <p>Instances of <code>ConfigLogic</code> are responsible for interpreting the raw string values extracted from the <code>.xcconfig</code> files and converting them into appropriate data types.</p> <pre><code>/**\n * Build type.\n */\nvar appBuildType: AppBuildType { get }\n\n/**\n * Build variant.\n */\nvar appBuildVariant: AppBuildVariant { get }\n</code></pre> <p>Using this parsed information, instances such as <code>WalletKitConfig</code> and <code>RQESConfig</code> can determine and assign their specific configurations based on the defined build type and variant.</p> <p>For instance, here's how <code>WalletKitConfig</code> resolves its configuration for OpenID4VCI remote services based on the build variant:</p> <pre><code>var vciConfig: VciConfig {\n    switch configLogic.appBuildVariant {\n    case .DEMO:\n        return .init(\n            issuerUrl: \"https://issuer.eudiw.dev\",\n            clientId: \"wallet-dev\",\n            redirectUri: URL(string: \"eu.europa.ec.euidi://authorization\")!\n        )\n    case .DEV:\n        return .init(\n            issuerUrl: \"https://dev.issuer.eudiw.dev\",\n            clientId: \"wallet-dev\",\n            redirectUri: URL(string: \"eu.europa.ec.euidi://authorization\")!\n        )\n    }\n}\n</code></pre> <p>In this example, the <code>vciConfig</code> property dynamically assigns configurations such as <code>issuerUrl</code>, <code>clientId</code>, and <code>redirectUri</code> based on the current appBuildVariant. This ensures that the appropriate settings are applied for each variant (e.g., .<code>DEMO</code> or <code>.DEV</code>).</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Self-signed%20Certificates/","title":"Self-signed Certificates","text":"<p>Home / Build / Build your Wallet / iOS / Wallet Application Level / Self-signed Certificates</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Self-signed%20Certificates/#how-to-work-with-self-signed-certificates-on-ios","title":"How to work with self signed certificates on iOS","text":"<p>In order for the app to interact with locally running service the following changes need to be done:</p> <ol> <li> <p>Before running the app in the simulator add these lines of code to the top of the file WalletKitController just below the import statements. </p> <pre><code>class SelfSignedDelegate: NSObject, URLSessionDelegate {\n  func urlSession(\n    _ session: URLSession,\n    didReceive challenge: URLAuthenticationChallenge,\n    completionHandler: @escaping (URLSession.AuthChallengeDisposition, URLCredential?) -&gt; Void\n  ) {\n    // Check if the challenge is for a self-signed certificate\n    if challenge.protectionSpace.authenticationMethod == NSURLAuthenticationMethodServerTrust,\n       let trust = challenge.protectionSpace.serverTrust {\n      // Create a URLCredential with the self-signed certificate\n      let credential = URLCredential(trust: trust)\n      // Call the completion handler with the credential to accept the self-signed certificate\n      completionHandler(.useCredential, credential)\n    } else {\n      // For other authentication methods, call the completion handler with a nil credential to reject the request\n      completionHandler(.cancelAuthenticationChallenge, nil)\n    }\n  }\n}\n\nlet walletSession: URLSession = {\n  let delegate = SelfSignedDelegate()\n  let configuration = URLSessionConfiguration.default\n  return URLSession(\n    configuration: configuration,\n    delegate: delegate,\n    delegateQueue: nil\n  )\n}()\n</code></pre> </li> <li> <p>Once the above is in place add, in order for the app to interact with web services that rely on self signed certificates, add the following line in the initializer:</p> <pre><code>wallet.urlSession = walletSession\n</code></pre> </li> </ol>"},{"location":"Reference%20Implementation/","title":"Index","text":"<p>Home / Reference Implementation</p>"},{"location":"Reference%20Implementation/#index-of-reference-implementation","title":"Index of Reference Implementation","text":"<ul> <li>Code Contributions</li> <li>Code of Conduct</li> <li>Demos</li> <li>Introduction</li> <li>Licensing</li> </ul>"},{"location":"Reference%20Implementation/Code%20Contributions/","title":"Code Contributions","text":"<p>Home / Reference Implementation / Code Contributions</p>"},{"location":"Reference%20Implementation/Code%20Contributions/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"Reference%20Implementation/Code%20Contributions/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"Reference%20Implementation/Code%20Contributions/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"Reference%20Implementation/Code%20Contributions/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"Reference%20Implementation/Code%20Contributions/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"Reference%20Implementation/Code%20Contributions/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/","title":"Code of Conduct","text":"<p>Home / Reference Implementation / Code of Conduct</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"Reference%20Implementation/Code%20of%20Conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"Reference%20Implementation/Disclaimer/","title":"Disclaimer","text":"<p>Home / Reference Implementation / Disclaimer</p>"},{"location":"Reference%20Implementation/Disclaimer/#disclaimer","title":"Disclaimer","text":"<p>The released software is a initial development release version:</p> <ul> <li>The initial development release is an early endeavor reflecting the efforts of a short timeboxed   period, and by no means can be considered as the final product.</li> <li>The initial development release may be changed substantially over time, might introduce new   features but also may change or remove existing ones, potentially breaking compatibility with your   existing code.</li> <li>The initial development release is limited in functional scope.</li> <li>The initial development release may contain errors or design flaws and other problems that could   cause system or other failures and data loss.</li> <li>The initial development release has reduced security, privacy, availability, and reliability   standards relative to future releases. This could make the software slower, less reliable, or more   vulnerable to attacks than mature software.</li> <li>The initial development release is not yet comprehensively documented.</li> <li>Users of the software must perform sufficient engineering and additional testing in order to   properly evaluate their application and determine whether any of the open-sourced components is   suitable for use in that application.</li> <li>We strongly recommend not putting this version of the software into production use.</li> <li>Only the latest version of the software will be supported</li> </ul>"},{"location":"Reference%20Implementation/Introduction/","title":"Introduction","text":"<p>Home / Reference Implementation / Introduction</p>"},{"location":"Reference%20Implementation/Introduction/#eudi-wallet-reference-implementation","title":"EUDI Wallet Reference Implementation","text":"<p>The EUDI Wallet Reference Implementation consists of open-source code libraries and a reference application, which are publicly available and ready for Member States and stakeholders to use in building their own applications.</p> <p>Its goal is to showcase a robust and interoperable platform for digital identification, authentication and electronic signatures based on common standards across the European Union.</p> <p>Reference Implementation can be used by wallet providers, issuers and verifiers as a basis for their own solution. It also includes a comprehensive test suite, which contains tools to support testing and ensure that your implementation meets the functional requirements.</p> <p>See GitHub for more details on the Reference Implementation, including a list of all repositories</p>"},{"location":"Reference%20Implementation/Introduction/#check-out-the-roadmap-to-discover-upcoming-features","title":"Check out the roadmap to discover upcoming features","text":"<p>New features are regularly added to the reference implementation. Roadmap of the EUDI Wallet reference implementation provides a transparent view of the features and enhancements that are currently being developed or planned for the future. Its purpose is to promote open communication and collaboration in our community.</p> <p>View the roadmap of the EUDI Wallet reference implementation.</p> <p>You are also welcome to join the discussion on Reference Implementation Roadmap.</p>"},{"location":"Reference%20Implementation/Introduction/#start-your-solution","title":"Start your solution","text":"<p>Leverage the EUDI Wallet Reference Implementation to build and test your solution:</p> <ul> <li>Build your Solution</li> <li>Test your Solution</li> </ul>"},{"location":"Reference%20Implementation/Licensing/","title":"Licensing","text":"<p>Home / Reference Implementation / Licensing</p>"},{"location":"Reference%20Implementation/Licensing/#licensing","title":"Licensing","text":"<p>EUDI Wallet is an open-source code base provided to the community in order to build their solutions on top. Therefore, the licenses covering it are the following:</p> <ul> <li>For libraries and the core element, Appache 2.0 license is used.</li> <li>For the Wallet application (Android and iOS) EUPL-1.2 license is used.</li> </ul>"},{"location":"Reference%20Implementation/Demos/","title":"Index","text":"<p>Home / Reference Implementation / Demos</p>"},{"location":"Reference%20Implementation/Demos/#index-of-reference-implementationdemos","title":"Index of Reference Implementation/Demos","text":"<ul> <li>Introduction</li> <li>Travel Scenario</li> </ul>"},{"location":"Reference%20Implementation/Demos/Introduction/","title":"Introduction","text":"<p>Home / Reference Implementation / Demos / Introduction</p>"},{"location":"Reference%20Implementation/Demos/Introduction/#demos","title":"Demos","text":"<p>EUDI Wallets will simplify the lives of citizens and businesses in many ways; making data more secure and private. It will also improve security and flexibility for governments and businesses when carrying out transactions online.</p> <p>Available use cases:</p> <ol> <li>Travel Scenario</li> <li>More to come shortly. Stay tuned...</li> </ol>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/","title":"Travel Scenario","text":"<p>Home / Reference Implementation / Demos / Travel Scenario</p>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/#travel-scenario","title":"Travel Scenario","text":"<p>The Reference Implementation includes the travel use case implementation to showcase the utilization of the EUDI Wallet in a \u2018Travel\u2019 scenario, where the EUDI Wallet is used for several purposes, such as presenting attestations (remotely and in proximity) as well as digitally signing documents.</p>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/#use-case","title":"Use case","text":"<ol> <li>Jane is preparing for her next trip with the help of her EUDI Wallet. Jane starts by securing her essential travel documents. She issues her Digital Identity, Mobile Driving License, and Photo-ID directly into her EUDI Wallet. Each document is safely stored, ready to be accessed whenever she needs them.</li> <li>Booking: With her documents in place, Jane navigates to the travel booking portal. Here, she effortlessly presents her Digital ID and other necessary documents requested by the booking portal from her EUDI Wallet to book her car rental and hotel.</li> <li>Renting a car: When it comes to renting a car, Jane is redirected to a remote signing portal to conclude the rental process. Using her EUDI Wallet, she digitally signs the car rental contract, finalizing her arrangements with security and ease.</li> <li>Hotel check-in: Upon arrival at her hotel, Jane approaches the check-in counter. She presents her Digital ID and Photo-ID from her EUDI Wallet to the hotel\u2019s proximity reader. The process is quick and secure, allowing her to start relaxing in her room in no time.</li> </ol>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/#demo","title":"Demo","text":"<p>In this section a video will be added to demonstrate the usage of the Wallet for the Travel Scenario.</p>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/#test-online-or-run-locally","title":"Test online or run locally","text":"<ol> <li>Download the EUDI Wallet Reference Implementation application.</li> <li>Access the demo booking service.</li> </ol>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/#user-journey","title":"User journey","text":"<ol> <li> <p>User is preparing for a trip with the help of her EUDI Wallet.</p> <ol> <li>User issues the necessary identification documents, i.e. Digital Identity, Mobile Driving License and Photo-ID</li> <li>User navigates to the issuance service and follows the process to complete the issuance of the needed documents</li> <li>Identification documents are successfully issued to the EUDI Wallet</li> </ol> </li> <li> <p>User makes a reservation</p> <ol> <li>User navigates to the booking service</li> <li>User fills in the required data for the booking reservation:<ol> <li>Number of Guests</li> <li>Number of Rooms</li> <li>Check In/Out dates</li> <li>Option to include \u2018car rental\u2019 in the reservation</li> </ol> </li> <li>User is requested to present the required attestations from the EUDI Wallet (note: depending on the scenario, the user scans the rendered QR-code or selects the deep-link in cross-device or same-device flows respectively)</li> <li>User receives the presentation request from the booking service and consents to the presentation of the requested attestations</li> </ol> </li> <li>User reviews reservation details<ol> <li>User can view a summary of the reservation details, based on the previously added data as well as the attestations shared from the EUDI Wallet</li> <li>User selects to add the reservation confirmation to the EUDI Wallet<ol> <li>User scans the rendered QR-code</li> <li>Following the issuance process in the EUDI Wallet, the \u2018reservation confirmation\u2019 is added to the EUDI Wallet</li> </ol> </li> </ol> </li> <li>User selects to sign the \u2018car rental contract\u2019<ol> <li>User downloads a template car rental contract from the corresponding link</li> <li>User selects to sign the car rental contract and is navigated to the external trust service, which prompts the user to remotely sign the uploaded car rental contract</li> </ol> </li> <li>User checks-in at the hotel:<ol> <li>User approaches the reader at the hotel check-in (note: the available proximity verifier can be utilized to mock the \u2018reader\u2019 service at a hotel)</li> <li>User presents the QR-code from the EUDI Wallet, which is scanned from the proximity verifier</li> <li>User receives the presentation request for the \u2018Photo-ID\u2019 and the \u2018Reservation\u2019 attestations</li> <li>User consents to present the attestations, which are successfully received by the proximity verifier</li> </ol> </li> </ol> <p>You can also run the booking service locally. Instructions for this available in Github.</p>"},{"location":"Resources/","title":"Index","text":"<p>Home / Resources</p>"},{"location":"Resources/#index-of-resources","title":"Index of Resources","text":"<ul> <li>Architecture Reference Implementation</li> <li>Introduction</li> <li>Large-Scale Pilots</li> <li>Regulation</li> </ul>"},{"location":"Resources/Architecture%20Reference%20Implementation/","title":"Architecture Reference Framework","text":"<p>Home / Resources / Architecture Reference Implementation</p>"},{"location":"Resources/Architecture%20Reference%20Implementation/#architecture-and-reference-framework","title":"Architecture and Reference Framework","text":"<p>The Architecture and Reference Framework (ARF) outlines the specifications required to develop an interoperable European Digital Identity (EUDI) Wallet Solution based on common standards and practices. It defines high-level requirements to ensure consistent implementation across Member States.</p> <p>The Architecture and Reference Framework (ARF) is a work in progress that is continuously updated. It reflects the collaborative efforts among the 27 Member States, the European Commission, and, where relevant, private sector operators.</p> <p>Please review the latest version of the ARF.</p>"},{"location":"Resources/Architecture%20Reference%20Implementation/#check-out-the-roadmap-to-see-what-is-coming-next","title":"Check out the roadmap to see what is coming next","text":"<p>New epics are analyzed in ARF. Roadmap of the ARF provides a transparent view of the new epics that are currently being discussed or planned to the future. Its purpose is to promote open communication and collaboration in our community.</p> <p>View the roadmap of the ARF.</p>"},{"location":"Resources/Architecture%20Reference%20Implementation/#contributions-and-discussion","title":"Contributions and discussion","text":"<p>We welcome contributions to the ARF. Whether it's fixing a bug, proposing a new feature, or improving documentation, we appreciate any and all contributions that can help make the ARF better. Please read instructions for contributions. </p> <p>You are also welcome to join the discussion on ARF.  </p>"},{"location":"Resources/Introduction/","title":"Introduction","text":"<p>Home / Resources / Introduction</p>"},{"location":"Resources/Introduction/#eudi-wallet-resources","title":"EUDI Wallet Resources","text":"<p>To support your introduction to the EUDI Wallet, we\u2019ve gathered essential resources that provide a comprehensive foundation. Dive into technical specifications, explore the regulatory framework, and gain insights from real-world pilot projects. These materials are designed to help you understand the EUDI Wallet from all critical perspectives.</p>"},{"location":"Resources/Introduction/#ensure-compliance-with-eudi-wallet-regulation","title":"Ensure compliance with EUDI Wallet Regulation","text":"<p>Understand the regulatory framework that underpins the development and deployment of the EU Digital Identity Wallet. This regulation outlines the legal requirements necessary to guarantee the wallet\u2019s secure, interoperable, and cross-border functionality.</p> <p>Explore the Regulation</p>"},{"location":"Resources/Introduction/#master-the-architecture-and-reference-framework","title":"Master the Architecture and Reference Framework","text":"<p>Discover the key specifications and guidelines needed to develop an interoperable EUDI Wallet solution. This framework provides a solid foundation based on common standards and best practices to ensure seamless integration and functionality. </p> <p>Explore the Architecture and Reference Framework</p>"},{"location":"Resources/Introduction/#explore-the-large-scale-pilots-shaping-the-eudi-wallet","title":"Explore the Large-Scale Pilots Shaping the EUDI Wallet","text":"<p>Four large-scale pilot projects are currently underway to test the EU Digital Identity Wallet, involving over 360 entities across 26 Member States, Norway, Iceland, and Ukraine. Gain valuable real-world insight by exploring these projects.</p> <p>Explore the Large Scale Pilots</p>"},{"location":"Resources/Introduction/#what-is-next","title":"What is next?","text":"<p>Leverage the EUDI Wallet Reference Implementation to build and test your solution:</p> <ul> <li>Discover EUDI Wallet Reference Implementation</li> <li>Build your Solution</li> <li>Test your Solution</li> </ul>"},{"location":"Resources/Large-Scale%20Pilots/","title":"Large-Scale Pilots","text":"<p>Home / Resources / Large-Scale Pilots</p>"},{"location":"Resources/Large-Scale%20Pilots/#eudi-wallet-large-scale-pilots","title":"EUDI Wallet Large-Scale Pilots","text":"<p>In May 2023, four Large-Scale Pilot projects were launched to rigorously test and prepare the EU Digital Identity Wallet for secure and seamless deployment. These Pilots involve approximately 360 entities, including private companies and public authorities, from 26 Member States, Norway, Iceland, and Ukraine. The projects are co-funded by European Commission grants and are guided by EUDI Wallet technical specifications. Running until 2025, the pilots are structured as consortia, combining public and private sector expertise across the EU.</p> <p>The Pilots aim to validate the wallet's functionality in real-life scenarios, gathering feedback on the reference implementation to enhance its security, interoperability, and overall design. These efforts focus on practical use cases that Europeans encounter daily, spanning 11 key areas such as accessing government services, opening bank accounts, and facilitating travel.</p> Pilot Focus EUDI Wallet Consortium (EWC) Focuses on Digital Travel Credentials, building on the reference wallet application to streamline cross-border travel. POTENTIAL Explores innovations across six digital identity sectors, including governmental services, banking, telecommunications, and healthcare. NOBID Led by Nordic and Baltic countries with Germany and Italy, testing EUDI Wallet in payments. DC4EU Targets education and social security, supporting integration of cross-border digital service infrastructures within a trust framework."},{"location":"Resources/Regulation/","title":"Regulation","text":"<p>Home / Resources / Regulation</p>"},{"location":"Resources/Regulation/#eudi-wallet-regulation","title":"EUDI Wallet Regulation","text":"<p>Regulation (EU) 2024/1183  establishing the European Digital Identity Framework has entered into force. The framework mandates Member States to provide EU Digital Identity (eID) Wallets to citizens within 24 months of Implementing Acts adoption. </p> <p>All the Implementing Acts  that have been adopted until now, and lay down the rules for the core functionalities and certification of the eID Wallets. </p>"},{"location":"Test/","title":"Index","text":"<p>Home / Test</p>"},{"location":"Test/#index-of-test","title":"Index of Test","text":"<ul> <li>Introduction</li> <li>Issuer</li> <li>Online Verifier</li> <li>Verifier Application</li> <li>Wallet Application</li> </ul>"},{"location":"Test/Introduction/","title":"Introduction","text":"<p>Home / Test / Introduction</p>"},{"location":"Test/Introduction/#test","title":"Test","text":"<p>EUDI Wallet Test Suite is a comprehensive toolkit that includes pre-built tools to support you in testing your EUDI Wallet solution. It is designed to ensure that the solution meets all specified functional requirements.</p>"},{"location":"Test/Introduction/#test-the-wallet-application","title":"Test the Wallet Application","text":"<p>Instructions are provided on how to install the EUDI Wallet Application on your mobile phone (Android or iOS) and initialize it through issuing and presenting attestations</p>"},{"location":"Test/Introduction/#test-the-issuer","title":"Test the Issuer","text":"<p>Test various issuance flows of OpenID4VCI with your wallet</p>"},{"location":"Test/Introduction/#test-the-online-verifier","title":"Test the online Verifier","text":"<p>Test how your wallet implementation responds to a credential request from a verifier. </p>"},{"location":"Test/Introduction/#test-the-local-verifier","title":"Test the local Verifier","text":"<p>Use the mDoc Verifier (Testing) app to test and validate your wallet implementation.</p>"},{"location":"Test/Issuer/","title":"Issuer","text":"<p>Home / Test / Issuer</p>"},{"location":"Test/Issuer/#issuer","title":"Issuer","text":"<p>As part of the test suite, we offer an issuer, that allows you to test various issuance flows of OpenID4VCI with your wallet:</p> <ul> <li>Credential Offer</li> <li>Credential Offer Pre-Authorization</li> <li>Credential Offer Deferred</li> <li>Credential Offer Dynamic</li> </ul> <p>You can test the issuance of credentials in both mdoc and sd-jwt formats. The test tools include a variety of credential types.</p> Tool Description Basic issuer Basic issuer that supports all issuance flows, in both mdoc and sd-jwt formats. Includes several credential types. Available at https://issuer.eudiw.dev/. Advanced issuance tester A more comprehensive issuance tester that enables following the different steps in the issuance flow. Supports all issuance flows, in both mdoc and sd-jwt formats. Includes several credential types.  Available at https://tester.issuer.eudiw.dev/. Locally installed issuer Install the issuer locally. Allows you to add new credential types.  See Installation instruction and instructions on how to add new credential types."},{"location":"Test/Online%20Verifier/","title":"Online Verifier","text":"<p>Home / Test / Online Verifier</p>"},{"location":"Test/Online%20Verifier/#online-verifier","title":"Online Verifier","text":"<p>Test how your wallet implementation responds to a credential request from a verifier. </p> <p>The test service provides extensive capabilities to test various credentials, including PID. You can also create custom credential requests tailored to your specific needs.</p> <p>Test service supports both mdoc and sd-jwt formats.</p> <p>There are two options available:</p> <ul> <li>https://verifier.eudiw.dev/ </li> <li>https://tester.relyingparty.eudiw.dev/</li> </ul>"},{"location":"Test/Verifier%20Application/","title":"Verifier Application","text":"<p>Home / Test / Verifier Application</p>"},{"location":"Test/Verifier%20Application/#mdoc-verifier-testing","title":"mDoc Verifier (Testing)","text":"<p>The mDoc Verifier (Testing) is an Android application based on the <code>appverifier</code> from the Google Identity Credential library, implementing ISO/IEC 18013-5:2021.</p>"},{"location":"Test/Verifier%20Application/#purpose","title":"Purpose","text":"<p>The mDoc Verifier (Testing) app is provided to help developers test and validate their wallet implementations.</p>"},{"location":"Test/Verifier%20Application/#modifications","title":"Modifications","text":"<p>Starting from the original code of the <code>appverifier</code> here, the following modifications have been made:</p> <ul> <li>Support for requesting EU Documents:</li> <li>Personal Identification Data (PID) document, according to the ARF PID RuleBook.</li> <li>Age Verification (Pseudonym) document.</li> <li>IACA Certificates: Updated to support EUDI Wallet IACAs as trusted certificates.</li> <li>Reader Authentication Certificate.</li> </ul>"},{"location":"Test/Verifier%20Application/#how-to-install","title":"How to install","text":"<p>The app is available for download from the App Center, here  (the code is not currently publicly available).</p>"},{"location":"Test/Verifier%20Application/#important-note","title":"Important Note","text":"<p>The mDoc Verifier (Testing) app is a testing tool for developers to validate their wallet implementations.  It is not intended for production use.  The app may contain bugs or other issues that affect its functionality on different mobile devices or Android versions. These issues will be addressed in the upcoming open-source library, which will be available for developers to build their own verifier applications.</p>"},{"location":"Test/Wallet%20Application/","title":"Index","text":"<p>Home / Test / Wallet Application</p>"},{"location":"Test/Wallet%20Application/#index-of-testwallet-application","title":"Index of Test/Wallet Application","text":"<ul> <li>Android</li> <li>Introduction</li> <li>iOS</li> </ul>"},{"location":"Test/Wallet%20Application/Introduction/","title":"Introduction","text":"<p>Home / Test / Wallet Application / Introduction</p>"},{"location":"Test/Wallet%20Application/Introduction/#wallet-application","title":"Wallet Application","text":"<p>The EUDI Wallet application is available for download to your phone. The app is available for both Android and iOS devices.</p>"},{"location":"Test/Wallet%20Application/Android/","title":"Index","text":"<p>Home / Test / Wallet Application / Android</p>"},{"location":"Test/Wallet%20Application/Android/#index-of-testwallet-applicationandroid","title":"Index of Test/Wallet Application/Android","text":"<ul> <li>Install</li> <li>Issue (Credential Offer)</li> <li>Issue (Wallet Initiated)</li> <li>Present (Proximity)</li> <li>Present (Same Device)</li> </ul>"},{"location":"Test/Wallet%20Application/Android/Install/","title":"Install","text":"<p>Home / Test / Wallet Application / Android / Install</p>"},{"location":"Test/Wallet%20Application/Android/Install/#how-to-install-the-application","title":"How to install the application","text":""},{"location":"Test/Wallet%20Application/Android/Install/#minimum-device-requirements","title":"Minimum device requirements","text":"<ul> <li>API level 26.</li> </ul>"},{"location":"Test/Wallet%20Application/Android/Install/#installation","title":"Installation","text":"<p>You can download the application here</p> <p>For the proximity flow (see below), you will also need to download the Android Verifier app. More information can be found here</p>"},{"location":"Test/Wallet%20Application/Android/Install/#app-launch","title":"App launch","text":"<ol> <li>Launch the application</li> <li>You will be presented with a welcome screen where you will be asked to create a PIN for future logins.</li> </ol>"},{"location":"Test/Wallet%20Application/Android/Install/#issuance-flow-wallet-initiated","title":"Issuance flow (Wallet Initiated)","text":"<p>Proceed to issue an attestation beginning within the wallet. </p>"},{"location":"Test/Wallet%20Application/Android/Install/#issuance-flow-credential-offer","title":"Issuance flow (Credential Offer)","text":"<p>Proceed to issue an attestation beginning from the issuer. </p>"},{"location":"Test/Wallet%20Application/Android/Install/#presentation-online-authenticationsame-device-flow","title":"Presentation (Online authentication/Same device) flow.","text":"<p>Proceed to present an attestation using the same device.</p>"},{"location":"Test/Wallet%20Application/Android/Install/#proximity-flow","title":"Proximity flow","text":"<p>Proceed to present an attestation using different devices.</p>"},{"location":"Test/Wallet%20Application/Android/Issue%20%28Credential%20Offer%29/","title":"Issue (Credential Offer)","text":"<p>Home / Test / Wallet Application / Android / Issue (Credential Offer)</p>"},{"location":"Test/Wallet%20Application/Android/Issue%20%28Credential%20Offer%29/#issuance-flow-credential-offer","title":"Issuance flow (Credential Offer)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Tap \"SCAN QR\".</li> <li>Scan The QR Code from the issuer's website EUDI Issuer</li> <li>Review the documents contained in the credential offer and tap \"Issue\".</li> <li>You will be shown a success screen. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol> <p>While on the \"Dashboard\" screen you can tap \"Add doc\" and issue a new document, e.g. \"Driving License\".</p> <p>If you want to re-issue a document you must delete it first by tapping on the document in the \"Dashboard\" screen and tapping the delete icon in the \"Document details\" view.</p>"},{"location":"Test/Wallet%20Application/Android/Issue%20%28Wallet%20Initiated%29/","title":"Issue (Wallet Initiated)","text":"<p>Home / Test / Wallet Application / Android / Issue (Wallet Initiated)</p>"},{"location":"Test/Wallet%20Application/Android/Issue%20%28Wallet%20Initiated%29/#issuance-flow-wallet-initiated","title":"Issuance flow (Wallet Initiated)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Pick \"National ID\".</li> <li>From the web view that appears select the \"FormEU\" option and tap submit.</li> <li>Fill in the form. Any data will do.</li> <li>You will be shown a success screen. Tap next.</li> <li>Your \"National ID\" is displayed. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol> <p>While on the \"Dashboard\" screen you can tap \"Add doc\" and issue a new document, e.g. \"Driving License\".</p> <p>If you want to re-issue a document you must delete it first by tapping on the document in the \"Dashboard\" screen and tapping the delete icon in the \"Document details\" view.</p>"},{"location":"Test/Wallet%20Application/Android/Present%20%28Proximity%29/","title":"Present (Proximity)","text":"<p>Home / Test / Wallet Application / Android / Present (Proximity)</p>"},{"location":"Test/Wallet%20Application/Android/Present%20%28Proximity%29/#proximity-flow","title":"Proximity flow","text":"<ol> <li>The user logs in successfully to the EUDI Wallet app and views the dashboard.</li> <li>The user clicks the 'SHOW QR/TAP' button to display the QR code.</li> <li>The Relying Party scans the presented QR code.</li> <li> <p>EUDI Wallet User can view the requested data set from the relying party.</p> <ol> <li>The distinction between mandatory and optional data elements is depicted.</li> <li>The requestor (i.e. relying party) of the data is depicted.</li> <li>EUDI Wallet User may select additional optional attributes to be shared.</li> </ol> </li> <li> <p>EUDI Wallet User selects the option to share the attributes.</p> </li> <li>EUDI Wallet authenticates to share data (quick PIN).</li> <li>User authorization is accepted - a corresponding message is displayed to the  EUDI Wallet User.</li> </ol>"},{"location":"Test/Wallet%20Application/Android/Present%20%28Same%20Device%29/","title":"Present (Same Device)","text":"<p>Home / Test / Wallet Application / Android / Present (Same Device)</p>"},{"location":"Test/Wallet%20Application/Android/Present%20%28Same%20Device%29/#presentation-online-authenticationsame-device-flow","title":"Presentation (Online authentication/Same device) flow.","text":"<ol> <li>Go to the browser application on your device and enter \"https://verifier.eudiw.dev\"</li> <li>Tap the first option (selectable) and pick the fields you want to share (e.g. \"Family Name\" and \"Given Name\")</li> <li>Tap \"Next\" and then \"Authorize\".</li> <li>When asked to open the wallet app tap \"Open\".</li> <li>You will be returned to the app to the \"Request\" screen. Tap \"Share\".</li> <li>Enter the PIN you added in the initial steps.</li> <li>On success tap \"Continue\".</li> <li>A browser will open showing that the Verifier has accepted your request.</li> <li>Return to the app. You are back to the \"Dashboard\" screen and the flow is complete.</li> </ol>"},{"location":"Test/Wallet%20Application/iOS/","title":"Index","text":"<p>Home / Test / Wallet Application / iOS</p>"},{"location":"Test/Wallet%20Application/iOS/#index-of-testwallet-applicationios","title":"Index of Test/Wallet Application/iOS","text":"<ul> <li>Install</li> <li>Issue (Credential Offer)</li> <li>Issue (Wallet Initiated)</li> <li>Present (Proximity)</li> <li>Present (Same Device)</li> </ul>"},{"location":"Test/Wallet%20Application/iOS/Install/","title":"Install","text":"<p>Home / Test / Wallet Application / iOS / Install</p>"},{"location":"Test/Wallet%20Application/iOS/Install/#how-to-install-the-application","title":"How to install the application","text":""},{"location":"Test/Wallet%20Application/iOS/Install/#minimum-device-requirements","title":"Minimum device requirements","text":"<ul> <li>Any device that supports iOS 16.0</li> </ul>"},{"location":"Test/Wallet%20Application/iOS/Install/#prerequisites","title":"Prerequisites","text":"<ol> <li>You need xcode and its associated tools installed on your machine. We recommend the latest non-beta version. </li> <li>Clone the iOS repository using the following command:     <code>git clone git@github.com:eu-digital-identity-wallet/eudi-app-ios-wallet-ui.git</code></li> <li> <p>Make sure you have access to the dependencies below:</p> <ul> <li>iso18013-data-model</li> <li>iso18013-data-transfer</li> <li>iso18013-security</li> <li>wallet-storage.</li> <li>wallet-kit</li> <li>openid4vp-swift</li> <li>presentation-exchange-swift</li> <li>openid4vci-swift</li> </ul> </li> <li> <p>To run the app on a device, select your app schema and press Run. Additionally, you need to supply your own provisioning profile and signing certificate in the Signing &amp; Capabilities tab of your app target.</p> </li> </ol> <p>You will also need to download the Android Verifier app. More information can be found here</p>"},{"location":"Test/Wallet%20Application/iOS/Install/#app-launch","title":"App launch","text":"<ol> <li>Launch the application</li> <li>You will be presented with a welcome screen where you will be asked to create a PIN for future logins.</li> </ol>"},{"location":"Test/Wallet%20Application/iOS/Install/#issuance-flow-scoped","title":"Issuance flow (Scoped)","text":"<p>Proceed to issue an attestation beginning within the wallet. </p>"},{"location":"Test/Wallet%20Application/iOS/Install/#issuance-flow-credential-offer","title":"Issuance flow (Credential Offer)","text":"<p>Proceed to issue an attestation beginning from the issuer. </p>"},{"location":"Test/Wallet%20Application/iOS/Install/#presentation-online-authenticationsame-device-flow","title":"Presentation (Online authentication/Same device) flow.","text":"<p>Proceed to present an attestation using the same device.</p>"},{"location":"Test/Wallet%20Application/iOS/Install/#proximity-flow","title":"Proximity flow","text":"<p>Proceed to present an attestation using different devices.</p>"},{"location":"Test/Wallet%20Application/iOS/Issue%20%28Credential%20Offer%29/","title":"Issue (Credential Offer)","text":"<p>Home / Test / Wallet Application / iOS / Issue (Credential Offer)</p>"},{"location":"Test/Wallet%20Application/iOS/Issue%20%28Credential%20Offer%29/#issuance-flow-credential-offer","title":"Issuance flow (Credential Offer)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Tap \"SCAN QR\".</li> <li>Scan The QR Code from the issuer's website EUDI Issuer</li> <li>Review the documents contained in the credential offer and tap \"Issue\".</li> <li>You will be shown a success screen. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol> <p>While on the \"Dashboard\" screen you can tap \"Add doc\" and issue a new document, e.g. \"Driving License\".</p> <p>If you want to re-issue a document you must delete it first by tapping on the document in the \"Dashboard\" screen and tapping the delete icon in the \"Document details\" view.</p>"},{"location":"Test/Wallet%20Application/iOS/Issue%20%28Wallet%20Initiated%29/","title":"Issue (Wallet Initiated)","text":"<p>Home / Test / Wallet Application / iOS / Issue (Wallet Initiated)</p>"},{"location":"Test/Wallet%20Application/iOS/Issue%20%28Wallet%20Initiated%29/#issuance-flow-wallet-initiated","title":"Issuance flow (Wallet Initiated)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Pick \"National ID\".</li> <li>From the web view that appears select the \"FormEU\" option and tap submit.</li> <li>Fill in the form. Any data will do.</li> <li>You will be shown a success screen. Tap next.</li> <li>Your \"National ID\" is displayed. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol>"},{"location":"Test/Wallet%20Application/iOS/Present%20%28Proximity%29/","title":"Present (Proximity)","text":"<p>Home / Test / Wallet Application / iOS / Present (Proximity)</p>"},{"location":"Test/Wallet%20Application/iOS/Present%20%28Proximity%29/#proximity-flow","title":"Proximity flow","text":"<ol> <li>The user logs in successfully to the EUDI Wallet app and views the dashboard.</li> <li>The user clicks the 'SHOW QR' button to display the QR code.</li> <li>The Relying Party scans the presented QR code.</li> <li> <p>EUDI Wallet User can view the requested data set from the relying party.</p> <ol> <li>The distinction between mandatory and optional data elements is depicted.</li> <li>The requestor (i.e. relying party) of the data is depicted.</li> <li>EUDI Wallet User may select additional optional attributes to be shared.</li> </ol> </li> <li> <p>EUDI Wallet User selects the option to share the attributes.</p> </li> <li>EUDI Wallet authenticates to share data (quick PIN).</li> <li>User authorization is accepted - a corresponding message is displayed to the  EUDI Wallet User.</li> </ol>"},{"location":"Test/Wallet%20Application/iOS/Present%20%28Same%20Device%29/","title":"Present (Same Device)","text":"<p>Home / Test / Wallet Application / iOS / Present (Same Device)</p>"},{"location":"Test/Wallet%20Application/iOS/Present%20%28Same%20Device%29/#presentation-online-authenticationsame-device-flow","title":"Presentation (Online authentication/Same device) flow.","text":"<ol> <li>Go to the browser application on your device and enter \"https://verifier.eudiw.dev\"</li> <li>Tap the first option (selectable) and pick the fields you want to share (e.g. \"Family Name\" and \"Given Name\")</li> <li>Tap \"Next\" and then \"Authorize\".</li> <li>When asked to open the wallet app tap \"Open\".</li> <li>You will be returned to the app to the \"Request\" screen. Tap \"Share\".</li> <li>Enter the PIN you added in the initial steps.</li> <li>On success tap \"Continue\".</li> <li>A browser will open showing that the Verifier has accepted your request.</li> <li>Return to the app. You are back to the \"Dashboard\" screen and the flow is complete.</li> </ol>"},{"location":"assets/","title":"Index","text":"<p>Home / assets</p>"},{"location":"assets/#index-of-assets","title":"Index of assets","text":""},{"location":"css/","title":"Index","text":"<p>Home / css</p>"},{"location":"css/#index-of-css","title":"Index of css","text":""},{"location":"eudi-app-android-wallet-ui/","title":"Index","text":"<p>Home / eudi-app-android-wallet-ui</p>"},{"location":"eudi-app-android-wallet-ui/#index-of-eudi-app-android-wallet-ui","title":"Index of eudi-app-android-wallet-ui","text":"<ul> <li>.github</li> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> <li>fastlane</li> <li>how-to-use-app</li> <li>wiki</li> </ul>"},{"location":"eudi-app-android-wallet-ui/fastlane/","title":"Index","text":"<p>Home / eudi-app-android-wallet-ui / fastlane</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#index-of-eudi-app-android-wallet-uifastlane","title":"Index of eudi-app-android-wallet-ui/fastlane","text":"<ul> <li>README</li> </ul>"},{"location":"eudi-app-android-wallet-ui/wiki/","title":"Index","text":"<p>Home / eudi-app-android-wallet-ui / wiki</p>"},{"location":"eudi-app-android-wallet-ui/wiki/#index-of-eudi-app-android-wallet-uiwiki","title":"Index of eudi-app-android-wallet-ui/wiki","text":"<ul> <li>configuration</li> <li>how_to_build</li> <li>verifier_proximity</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/","title":"Index","text":"<p>Home / eudi-app-ios-wallet-ui</p>"},{"location":"eudi-app-ios-wallet-ui/#index-of-eudi-app-ios-wallet-ui","title":"Index of eudi-app-ios-wallet-ui","text":"<ul> <li>.github</li> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> <li>Wallet</li> <li>fastlane</li> <li>how-to-use-app</li> <li>wiki</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/Wallet/","title":"Index","text":"<p>Home / eudi-app-ios-wallet-ui / Wallet</p>"},{"location":"eudi-app-ios-wallet-ui/Wallet/#index-of-eudi-app-ios-wallet-uiwallet","title":"Index of eudi-app-ios-wallet-ui/Wallet","text":"<ul> <li>Assets.xcassets</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/","title":"Index","text":"<p>Home / eudi-app-ios-wallet-ui / Wallet / Assets.xcassets</p>"},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/#index-of-eudi-app-ios-wallet-uiwalletassetsxcassets","title":"Index of eudi-app-ios-wallet-ui/Wallet/Assets.xcassets","text":"<ul> <li>AppIcon.appiconset</li> <li>AppIconDev.appiconset</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIcon.appiconset/","title":"Index","text":"<p>Home / eudi-app-ios-wallet-ui / Wallet / Assets.xcassets / AppIcon.appiconset</p>"},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIcon.appiconset/#index-of-eudi-app-ios-wallet-uiwalletassetsxcassetsappiconappiconset","title":"Index of eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIcon.appiconset","text":""},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIconDev.appiconset/","title":"Index","text":"<p>Home / eudi-app-ios-wallet-ui / Wallet / Assets.xcassets / AppIconDev.appiconset</p>"},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIconDev.appiconset/#index-of-eudi-app-ios-wallet-uiwalletassetsxcassetsappicondevappiconset","title":"Index of eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIconDev.appiconset","text":""},{"location":"eudi-app-ios-wallet-ui/fastlane/","title":"Index","text":"<p>Home / eudi-app-ios-wallet-ui / fastlane</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#index-of-eudi-app-ios-wallet-uifastlane","title":"Index of eudi-app-ios-wallet-ui/fastlane","text":"<ul> <li>README</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/wiki/","title":"Index","text":"<p>Home / eudi-app-ios-wallet-ui / wiki</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/#index-of-eudi-app-ios-wallet-uiwiki","title":"Index of eudi-app-ios-wallet-ui/wiki","text":"<ul> <li>configuration</li> <li>how_to_build</li> <li>verifier_proximity</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework</p>"},{"location":"eudi-doc-architecture-and-reference-framework/#index-of-eudi-doc-architecture-and-reference-framework","title":"Index of eudi-doc-architecture-and-reference-framework","text":"<ul> <li>.github</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> <li>docs</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/","title":"Arf","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / arf</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#european-digital-identity-wallet-architecture-and-reference-framework","title":"European Digital Identity Wallet Architecture and Reference Framework","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#11-context","title":"1.1 Context","text":"<p>On 3 June 2021, the European Commission adopted a Recommendation (COMMISSION RECOMMENDATION (EU) 2021/946 of 3 June 2021 on a common Union Toolbox for a coordinated approach towards a European Digital Identity Framework, OJ L 210/51, 14.6.2021) calling on Member States to work towards the development of a Toolbox including a technical Architecture and Reference Framework (hereinafter the ARF), a set of common standards and technical specifications and a set of common guidelines and best practices.</p> <p>The Recommendation specifies that these outcomes will serve as a basis for the implementation of the proposal for a European Digital Identity Framework, without the process of developing the Toolbox interfering with, or prejudging the legislative process.</p> <p>The Recommendation sets up a structured process of cooperation between Member States, the Commission and, where relevant, private sector operators, to develop the Toolbox. The eIDAS Expert Group is tasked as main interlocutor for the purposes of implementing this Recommendation. The Expert Group's page can be found at the official page.</p> <p>The eIDAS Expert Group has since further developed the concepts and specifications for the European Digital Identity Framework. The current ARF version 1.4.0 is based on the legal text adopted by the co-legislators.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#12-purpose-of-this-document","title":"1.2 Purpose of this document","text":"<p>The purpose of this version of the document is to establish high level requirements as reference to create uniform conditions for the implementation of the legislative act and to define the technical specifications, standards and procedures that the Commission shall develop for the purpose of implementing the eIDAS Regulation, and which are related to the following topics:</p> <ul> <li> <p>EUDIW core functionalities (art. 5a)</p> </li> <li> <p>EUDIW relying parties (art. 5b)</p> </li> <li> <p>Requirements for QEAA (art.45d)</p> </li> <li> <p>Verification of attributes against authentic sources (art.45e)</p> </li> <li> <p>Requirements for EAA issued by/on behalf of a public sector body     (PSB) (art.45f)</p> </li> <li> <p>Cross border identity matching (art.11a)</p> </li> <li> <p>Certification of the EUDIW (art. 5c)</p> </li> <li> <p>Publication of a list of certified EUDIW (art. 5d)</p> </li> <li> <p>Security breach of the EUDIW (art. 5e)</p> </li> <li> <p>Requirements for EAA issued by/on behalf of a PSB - notification     (art.45f)</p> </li> </ul> <p>The Commission intends to use this ARF to develop the EUDI Wallet Solution reference implementation.</p> <p>The document presents a state-of-play of ongoing work of the eIDAS Expert Group and does not imply any formal agreement regarding its content. This document will be complemented and updated over time through the process of establishing the toolbox, as described in Chapter 8.</p> <p>While the main document is descriptive, two of the six annexes are intended as reference for the technical specification and standards. The latter are the annexes with:</p> <ul> <li> <p>The high-level requirements: This annex specifies the     requirements for PID Providers, (Q)EAA Providers, PuB-EAA Providers,     EUDI Wallet Providers, Relying Parties and other actors in the EUDI     Wallet ecosystem.</p> </li> <li> <p>The attestation Rulebooks: There are 3 Rulebooks, each one     contains specific requirements to the PID, mDL and pseudonyms     attestation, accordingly.</p> </li> </ul> <p>The capitalised imperatives in the document are used in accordance with RFC 2119.</p> <p>This document itself holds no legal value and shall not prejudge the final mandatory legal requirements for European Digital Identity Wallets as only the finally adopted European Digital Identity Framework Regulation, and the implementing and delegated acts adopted under that legal basis, will be mandatory.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#13-guidance-for-the-large-scale-pilots-lsp","title":"1.3 Guidance for the Large-Scale Pilots (LSP)","text":"<p>To support the development of a reference implementation of EUDI Wallet Solutions and to pilot its usage across different priority use cases, the Commission launched a call for proposals on 22<sup>nd</sup> February 2022 under the Digital Europe Programme to pilot use cases for the EUDI Wallet at a large-scale.</p> <p>The objective of the Large-Scale Pilots (LSP) call is to support the piloting of the EUDI Wallet around a range of use-cases involving both public and private sector stakeholders. The LSPs will test the EUDI Wallet in both national and cross-borders contexts and integrate with the iterative development of the reference application.</p> <p>The works of the LSPs will be aligned by the ARF, which will guide pilot system design and architecture development together with the release of the reference implementation.</p> <p>The LSPs are expected to provide feedback on the ARF as they develop and interact with Relying Party services, Qualified or non-qualified Electronic Attestations of Attributes (Q)EAA Providers, Person Identification Data (PID) Providers, Qualified and non-Qualified Trust Service Providers and Users in meaningful interactions under the proposed use cases.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#14-definitions","title":"1.4 Definitions","text":"<p>The definitions used in this document are added in Annex 1 of this document. In Annex 1 there are two tables:</p> <ul> <li> <p>Table 1 includes definitions cited from the eIDAS Regulation or     from the eIDAS Regulation amendment proposal, and</p> </li> <li> <p>Table 2 includes technical definitions that are used in the ARF.     in some cases, these definitions originated in the context of     specific topics. In these cases, the topic number appears in     brackets following the definition, e.g., [Topic 11], to give it     the relevant context. If the definition is related to two topics,     both topic numbers will appear in the brackets, e.g., [Topic 33,     Topic 34]. If the technical definition is generic, that is to the     ARF as a whole or to more than 2 topics, no brackets will be added.     If a definition relies on an external source such as a standard or a     formal publication, the source is mentioned.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#15-scope","title":"1.5 Scope","text":"<p>This document only applies to the EUDI Wallet ecosystem. Attestations that are not bound to or used by Wallet Instances are not included in the scope of this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#2-use-cases","title":"2 Use Cases","text":"<p>The development of the Architecture Reference Framework (ARF) is strategically guided by use cases that showcase the user experience, value proposition, and business requirements of the EUDI Wallet. In this process, the eIDAS Expert Group initially creates service blueprints for each use case. These blueprints meticulously detail the service delivery's touchpoints, components, and processes. Their role is twofold: they are instrumental in the service design and function as a tool to improve user experience and service efficiency, while simultaneously highlighting potential areas for enhancement. Serving as a foundational element, these blueprints inform the creation of use case rulebooks and the development of common specifications. Detailed in the annexes, these blueprints offer comprehensive solutions with the flexibility to incorporate alternative approaches and optional steps, such as the discretionary display of pre-approved user data. It's important to note that user journeys may differ depending on the chosen implementation approach, affecting processes like data retrieval and user consent.</p> <p>The eIDAS Expert Group has described service blueprints for the following use cases:</p> <ul> <li> <p>Identification and authentication to access online services, see     Section 2.1 </p> </li> <li> <p>Qualified Electronic Signature, see Section 2.2 </p> </li> <li> <p>Mobile Driving Licence, see Section 2.3</p> </li> <li> <p>Pseudonyms, see Section 2.4.</p> </li> <li> <p>Several other use cases that will be detailed in subsequent versions     of this document, see Section 2.5.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#21-identification-and-authentication-to-access-online-services","title":"2.1 Identification and authentication to access online services","text":"<p>The EUDI Wallet is primarily designed to facilitate secure user identification and authentication at a high Level of Assurance (LoA) for various online services, both public and private. This capability is crucial, as it allows Relying Parties to confidently verify the identity of Users they interact with.</p> <p>In this specific use case, a User employs the EUDI Wallet to authenticate with their identity accessing online services by using high-security authentication. This process involves the use of multiple identity verification methods. The User is particularly mindful of the privacy and security concerns associated with sharing person identification data (PID) online. Their primary goals include reliably identifying themselves to services that demand user identification while maintaining control over the sharing of their personal data.</p> <p>This scenario covers the complete lifecycle of the EUDI Wallet from the User's perspective. It spans from acquiring a valid Wallet Instance to the process of identifying and authenticating themselves for an online service. The focus here is on a practical remote same-device flow (as detailed in Section 4.2.2 and 4.2.3). In this context, a User utilises a single device for both securing their session and accessing the service, ensuring a streamlined and secure experience.</p> <p>Details on PID issuance requirements, the PID attribute schema, and the Trust Infrastructure are further elaborated in the respective chapters - specifically Chapter 3 - Ecosystem, Chapter 5 - Attestations and  Chapter 6 - Trust Model, Annex 2 (High level requirements in [Topic 2], [Topic 10] and [Topic 23], and Annex 3.1 - PID Rulebook.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#22-qualified-electronic-signature","title":"2.2 Qualified electronic signature","text":"<p>The EUDI Wallet shall enable users to create qualified electronic signatures or seals. This goal can be reached by using the authentication and signature / seal capabilities of the EUDI Wallet as a part of a local QSCD, or a remote QSCD managed by a QTSP [Topic16] and [Topic 37].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#23-mobile-driving-licence","title":"2.3 Mobile Driving Licence","text":"<p>A significant use case for the EUDI Wallet involves allowing Users to acquire, store, and present a mobile Driving Licence (mDL) as an attestation to prove their driving privileges. In this use case, the User employs an EUDI Wallet to present a mDL to a Relying Party (e.g., the Traffic Police).</p> <p>The use case description concentrates on proximity supervised and unsupervised flows, which involve scenarios where the User is physically near a Relying Party, and the mDL attribute exchange and disclosure occurs using proximity technologies (e.g., NFC, Bluetooth). The two proximity flows have one significant difference: in the supervised flow, the EUDI Wallet presents mDL attributes to a human Relying Party or under their supervision (who may also use a device); whereas in the unsupervised flow, the EUDI Wallet presents mDL attributes to a machine without human oversight.</p> <p>(Q)EAA issuance requirements, mDL attribute schema and Trust Infrastructure details are further detailed specifically in Chapter 3 - Ecosystem, Chapter 5 - Attestations, and in Annex 2 - [Topic 2], [Topic 3], [Topic 10] and [Topic 23].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#24-pseudonyms","title":"2.4 Pseudonyms","text":"<p>The present use case specifies a single type of pseudonym, issued by a Pseudonym Provider, to a User having a Wallet Instance. There are several types of entities that may provide a pseudonym to a User; for example, a PID Provider or a QTSP.</p> <p>The pseudonym in this use case is not designed to fit all possible use cases and to comply with all possible requirements. Rather, it is intended for basic use case, namely allowing a Relying Party to recognise a User as someone about whom the Relying Party already knows something, or with whom the Relying Party has interacted before.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#25-other-use-cases","title":"2.5 Other use cases","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#251-health","title":"2.5.1 Health","text":"<p>Easy access to health data is crucial in both national and cross-border contexts. An EUDI Wallet Instance MAY enable access to patient summary, ePrescriptions, etc.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#252-educational-credentials-and-professional-qualifications","title":"2.5.2 Educational credentials and professional qualifications","text":"<p>Providing documents for qualification recognition procedures can be costly and time-consuming for Users, Relying Parties such as companies and employers, and Attestation Providers such as education and training providers or other academic institutions. For example, digital diploma attestations could be presented cross-border in a verifiable, trusted, and consumable format to another education or training institution or a prospective employer. An EUDI Wallet Instance may be a repository for educational digital credentials as Electronic Attestations of Attributes and a means for exchanging them by a learner to relevant relying parties.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#253-digital-finance","title":"2.5.3 Digital Finance","text":"<p>The EUDI Wallet Solutions can facilitate complying with strong customer authentication requirements, using the strong User Authentication capabilities described in Section 2.1. In line with the Commission's Retail Payments Strategy [RPS], the use case would be developed in close coordination with Member States' advisory groups on retail payments and the finance industry.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#254-digital-travel-credential","title":"2.5.4 Digital Travel Credential","text":"<p>Digital Travel Credential (DTC) Providers may issue DTCs to EUDI Wallets in a supported format enabling Relying Parties to identify Users and their travel, thus facilitating the travel experience and the User journey in this dynamic sector.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#3-ecosystem","title":"3. Ecosystem","text":"<p>This chapter describes the EUDI Wallet ecosystem as it is foreseen in the Commission's legislative proposal. The different roles in the EUDI Wallet ecosystem are described in figure 1 and detailed in the following sections.</p> <p></p> <p>Figure 1: Overview of the EUDI Wallet roles</p> <ol> <li> <p>Users of EUDI Wallets</p> </li> <li> <p>EUDI Wallet Providers</p> </li> <li> <p>Person Identification Data (PID) Providers</p> </li> <li> <p>Trusted Lists Registrar</p> </li> <li> <p>Qualified Electronic Attestation of Attributes (QEAA) Providers</p> </li> <li> <p>Public Body Authentic Source Electronic Attestation of Attributes     (Pub-EAA) Providers</p> </li> <li> <p>Electronic Attestation of Attributes (EAA) Providers</p> </li> <li> <p>Qualified Electronic signature Remote Creation Service Providers</p> </li> <li> <p>Authentic Sources</p> </li> <li> <p>Relying Parties</p> </li> <li> <p>Conformity Assessment Bodies (CAB)</p> </li> <li> <p>Supervisory Bodies</p> </li> <li> <p>Device Manufacturers and Related Subsystems Providers</p> </li> <li> <p>(Q)EAA Schema Providers</p> </li> <li> <p>National Accreditation Bodies</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#31-users-of-eudi-wallet","title":"3.1 Users of EUDI Wallet","text":"<p>Users of EUDI Wallets use the EUDI Wallet Instance to receive, store and present PID, QEAA, PuB-EAA, or EAA about themselves, including to prove their identity. EUDI Wallet Instance Users can also create Qualified Electronic Signatures and Seals (QES) and utilise wallet-to-wallet interactions.</p> <p>Who can be a User of an EUDI Wallet depends on national law. The use of an EUDI Wallet by citizens is not mandatory under the legislative proposal. However, each Member State shall provide at least one European Digital Identity Wallet within 24 months after the entry into force of the implementing acts referred to in the Regulation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#32-eudi-wallet-providers","title":"3.2 EUDI Wallet Providers","text":"<p>EUDI Wallet Providers are Member States or organisations either mandated or recognised by Member States making the EUDI Wallet available for end Users. The terms and conditions of the mandate or recognition are for each Member State to determine.</p> <p>The EUDI Wallet Providers make available to a User, through an instance of their EUDI Wallet Solution, a combination of several products and Trust Services foreseen in the legal proposal, which give the User full control over the use of their Person Identification Data (PID) and Electronic Attestations of Attributes (QEAA, PuB-EAA or EAA), and any other personal data within their EUDI Wallet. From a technical viewpoint, this may also imply guaranteeing a User sole control over sensitive cryptographic material (e.g., private keys) related to their PID and/or (Q)EAA, including the use cases for electronic identification and creating a signature or seal. EUDI Wallet Providers provide Wallet Trust Evidence (WTE) and Wallet Instance Attestation (WIA).</p> <p>EUDI Wallet Providers are responsible for ensuring compliance with the requirements for EUDI Wallets.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#33-person-identification-data-pid-providers","title":"3.3 Person Identification Data (PID) Providers","text":"<p>PID Providers are trusted entities responsible to:</p> <ul> <li> <p>verify the identity of the EUDI Wallet User in compliance with LoA     high requirements,</p> </li> <li> <p>issue PID to the EUDI Wallet in a harmonised common format, and</p> </li> <li> <p>make available information for Relying Parties to verify the     validity of the PID.</p> </li> </ul> <p>The terms and conditions of these services are for each Member State to determine.</p> <p>PID Providers may e.g., be the same organisations that today issue official identity documents, electronic identity means, EUDI Wallet Providers etc. EUDI Wallet Providers may be the same organisations as PID Providers. In case an organisation acts as both a PID Provider and a Wallet Provider, it shall comply with all requirements for both PID Providers and Wallet Providers.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#34-trusted-lists-registrar","title":"3.4 Trusted Lists Registrar","text":"<p>A Trusted List Registrar is a party responsible for maintaining, managing, and publishing a Trusted List. Within the EUDI Wallet ecosystem, Trusted Lists exist for the following entities:</p> <ul> <li> <p>Wallet Providers,</p> </li> <li> <p>PID Providers,</p> </li> <li> <p>QEAA Providers,</p> </li> <li> <p>PuB-EAA Providers,</p> </li> <li> <p>Access Certificate Authorities for</p> <ul> <li> <p>Relying Parties,</p> </li> <li> <p>PID Providers,</p> </li> <li> <p>QEAA Providers,</p> </li> <li> <p>PuB-EAA Providers.</p> </li> </ul> </li> </ul> <p>These Trusted Lists are described in more detail in Section 6.2.2, 6.3.2 and 6.4.2, as well as in [Topic 31]. Trusted Lists primarily contain the trust anchors of the relevant entities. A trust anchor is a combination of a public key and the identifier of the associated entity and may be used to verify signatures or seals created by that entity. For PuB-EAA Providers, the Trusted List will contain the trust anchor of the QTSPs that sign the PuB-EAA Provider certificates.</p> <p>Member States will provide Trusted Lists for PID Providers, QEAA Providers and PuB-EAA Providers, in compliance with Article 22. These Trusted Lists may also include non-qualified EAA Providers, but this is not mandatory. Alternatively, domain-specific trusted lists or alternative solutions for managing the trust anchors may be provided for EAA Providers. For instance, trustworthy mDL or DTC Providers are determined by other legal frameworks than eIDAS and published accordingly.</p> <p>An entity's status as a trusted entity can be verified by checking whether they are present on a Trusted List. Trusted List Providers need to provide a registration service for the relevant entities. The terms and conditions for entities to become registered are for each registrar to determine unless specified elsewhere e.g., in sectoral rules.</p> <p>For more information, please refer to [Topic 27] and to [Topic 31].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#35-qualified-electronic-attestation-of-attributes-qeaa-providers","title":"3.5 Qualified Electronic Attestation of Attributes (QEAA) Providers","text":"<p>Qualified EAAs are provided by Qualified Trust Service Providers (QTSPs). The general Trust Framework for QTSPs apply also to QEAA, but specific rules for this Trust Service need to be defined as well. QEAA Providers maintain an interface for requesting and providing QEAAs, including a mutual authentication interface with EUDI Wallets and potentially an interface towards Authentic Sources to verify attributes. QEAA Providers provide information on the location of the services that can be used to enquire about the validity status of the QEAAs, without having an ability to receive any information about the use of the attestations. The terms and conditions of these services are for each QTSP to determine, beyond what is specified in the eIDAS Regulation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#36-public-body-authentic-source-electronic-attestation-of-attributes-pub-eaa-providers","title":"3.6 Public Body Authentic Source Electronic Attestation of Attributes (PuB-EAA) Providers","text":"<p>Public Body Authentic Source EAAs (PuB-EAAs) are issued by or on behalf of a public body responsible for an authentic source. The requirements from Authentic Sources on the issuance and operation of PuB-EAAs are intended to enable to Relying Parties to recognise them as QEAA on the legal level.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#37-non-qualified-electronic-attestation-of-attributes-eaa-providers","title":"3.7 Non-Qualified Electronic Attestation of Attributes (EAA) Providers","text":"<p>EAAs can be provided by any Trust Service Provider. While they are supervised under eIDAS, it can be assumed that other legal or contractual frameworks than eIDAS mostly govern the rules for provision, use and recognition of EAAs. Those other frameworks may cover policy areas such as educational credentials, digital payments, although they may also rely on Qualified Electronic Attestation of Attributes Providers. For EAAs to be used, TSPs offer Users a way to request and obtain EAA, meaning they need to technically comply with EUDI Wallet interfaces specifications. Depending on the domain rules, EAA Providers may provide validity information about EAAs, without having an ability to receive any information about the use of the EAA. The terms and conditions of issuing EAAs and related services are subject to sectoral rules.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#38-qes-remote-creation-service-providers","title":"3.8 QES Remote Creation Service Providers","text":"<p>The EUDI Wallet will allow the User to create free-of-charge Qualified Electronic Signatures over any data. This will also enhance the use of the EUDI Wallet for signing, in a natural and convenient way. The creation of Qualified Electronic Signature or Seal by means of the EUDI Wallet can be reached by several ways:</p> <ul> <li> <p>the EUDI Wallet itself is certified as a qualified signature/seal     creation device (QSCD), or</p> </li> <li> <p>the EUDI Wallet implements secure authentication and electronic     signature or an electronic seal invocation capability as a part of a     local QSCD or a remote QSCD managed by a QTSP.</p> </li> </ul> <p>In figure 1 the QESRC Service Provider can be the remote QSCD. As part of the ecosystem, the use of common interfaces and protocols for provisioning Qualified Electronic Signatures and Seals will create a unified European market for QTSP offering remote signature services. European citizens will be able to choose any QTSP without worrying about technical interoperability between them and this will enhance competition and create better QTSP services.</p> <p>Besides Qualified Electronic Signatures and Seals, also Non-Qualified Electronic Signatures or Seal Providers can exist. However, Non-Qualified Electronic Signature/ Seal Providers are out of scope of the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#39-authentic-sources","title":"3.9 Authentic Sources","text":"<p>Authentic Sources are the public or private repositories or systems recognised or required by law containing attributes about natural and/ or legal persons. The Authentic Sources in scope of Article 45e are sources for, e.g. attributes on address, age, gender, civil status, family composition, nationality, education and training qualifications titles and licences, professional qualifications titles and licences, public permits and licences, financial and company data. Authentic Sources in scope of Article 45e are required to provide interfaces to QEAA Providers to verify the authenticity of the above attributes, either directly or via designated intermediaries recognised at national level. Authentic Sources may also issue PuB-EEAs themselves if they meet the requirements of the eIDAS Regulation. In figure 1 this is indicated by the arrow 'provides qualified data'.</p> <p>It is up to the Member States to define terms and conditions for the provisioning of these Pub-EAAs, but according to the minimum technical specifications, standards, and procedures applicable to the verification procedures for qualified electronic attestations of attributes.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#310-relying-parties","title":"3.10 Relying Parties","text":"<p>Relying Parties are natural or legal persons that rely upon an electronic identification or a Trust Service. In the context of EUDI Wallets, they request the necessary attributes contained within the PID dataset, QEAA, Pub-EAA and EAA from EUDI Wallet Users to rely on the EUDI Wallet, subject to the acceptance by the owner of the Wallet (User) and within the limits of applicable legislation and rules. The reason for reliance on the EUDI Wallet may be a legal requirement, a contractual agreement, or their own decision. To rely on the EUDI Wallet for the purpose of providing a service, Relying Parties need to inform the Member State where they are established and their intention for doing so. Relying Parties need to maintain an interface with the EUDI Wallet to request attestations with mutual authentication. Relying Parties are responsible for authenticating PIDs and (Q)EAAs.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#311-conformity-assessment-bodies-cab","title":"3.11 Conformity Assessment Bodies (CAB)","text":"<p>Conformity Assessment Bodies (CAB) are accredited public or private bodies, accredited by a national accreditation body designated by Member States according to Regulation 765/2008 Article 6c (3), as responsible for carrying out assessments on which Member States will have to rely before issuing an EUDI Wallet or providing the qualified status to a Trust Service Provider.</p> <p>The EUDI Wallets will need to be certified by CABs. QTSPs shall be audited regularly by CABs.</p> <p>The standards and schemes used by CABs to fulfil their tasks to certify EUDI Wallets are specified further, specifically in Chapter 7 - Certification.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#312-supervisory-bodies","title":"3.12 Supervisory Bodies","text":"<p>For the Regulation, the supervisory bodies are important to review and ensure proper functioning of the Wallet Providers and other relevant actors. Supervisory Bodies should be created and appointed in the Member States. The Supervisory Bodies are to be notified to the Commission by the Member States.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#313-device-manufacturers-and-related-subsystems-providers","title":"3.13 Device Manufacturers and Related Subsystems Providers","text":"<p>In the EUDI Wallet ecosystem, commercial actors such as device manufacturers and related subsystems providers fulfil an important role to enable the EUDI Wallet Solution to work smoothly and securely in the hands of the User.</p> <p>Hence, device manufacturers, and related subsystem providers need to provide a platform on which where the EUDI Wallet Solution can be built. Usability, security, stability and connectivity are key factors.</p> <p>The components provided by device manufacturers and providers of related subsystems may include, among others, hardware, operating systems, secure cryptographic hardware, libraries, and app stores.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#314-qualified-and-non-qualified-electronic-attestation-of-attributes-schema-providers","title":"3.14 Qualified and Non-Qualified Electronic Attestation of Attributes Schema Providers","text":"<p>(Q)EAA Schema Providers publish schemas and vocabularies describing (Q)EAA structure and semantics. It may enable other entities such as Relying Parties to discover and validate (Q)EAAs. The Commission sets out the minimum technical specifications, standards, and procedures for this purpose. Common schemas, including by sector- specific organisations are critical for wide-spread adoption of (Q)EAAs.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#315-national-accreditation-bodies","title":"3.15 National Accreditation Bodies","text":"<p>National Accreditation Bodies (NAB) under Regulation (EC) No 765/2008 are the bodies in Member States that perform accreditation with authority derived from the Member State. NABs accredit CABs as competent, independent, and supervised professional certification bodies in charge of certifying products/services/processes against normative document(s) establishing the requirements (e.g., legislations, specifications, protection profiles). NABs monitor the CABs to which they have issued an accreditation certificate.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#4-high-level-architecture","title":"4 High level architecture","text":"<p>This chapter provides a broad overview of a system's core components, their interfaces, and the overall design principles. Figure 2 visually clarifies these core components, the key entities within the Wallet high level architecture, and how they communicate via the primary interfaces.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#41-design-principles","title":"4.1 Design principles","text":"<p>To effectively translate the European Digital Identity Regulation into a user-friendly, privacy-focused, and secure technical architecture, establishing design principles is crucial. These principles, rooted in the regulatory framework and enriched by industry best practices, will serve as fundamental guidelines. This approach ensures compliance with requirements emphasizing user-centricity, privacy, security, and cross-border interoperability. It demonstrates a commitment to both regulatory alignment and excellence in the EUDI Wallet's design.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#411-user-centricity","title":"4.1.1 User-centricity","text":"<p>The EUDI Wallet prioritises user-centricity as a core design principle. This means placing user needs and experience at the forefront of every design decision. The wallet should be intuitive and easy to use, with seamless integration into existing use cases. Users should have clear control over their data and privacy, with transparent information about what data is being shared and with whom. Additionally, the wallet should be accessible and inclusive, catering to users with varying technical backgrounds and abilities. By prioritizing user-centricity, the EUDI Wallet fosters trust and encourages widespread adoption, ultimately achieving its goal of empowering users with secure and convenient digital identity management.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#412-interoperability","title":"4.1.2 Interoperability","text":"<p>The EUDI Wallet prioritises interoperability as a core design principle. This ensures the wallet functions seamlessly across borders within the EU. Users can travel freely and confidently utilise their digital identity wallets for various services, from e-government platforms to private online interactions. Interoperability fosters secure data exchange through standardised protocols, allowing trusted entities to verify credentials effortlessly. This not only simplifies the user experience but also strengthens overall security within the system. Moreover, interoperability prevents market fragmentation by creating a level playing field for different digital identity solutions. It fosters competition and collaboration, ultimately driving innovation in the European digital identity landscape. By prioritizing interoperability, the EUDI Wallet architecture lays the foundation for a trusted and universally accepted digital identity ecosystem across the EU.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#413-privacy-by-design","title":"4.1.3 Privacy by Design","text":"<p>The EUDI wallet architecture embodies the principle of privacy by design. This means that the protection of user data is a fundamental pillar of the wallet's design. The principle of data minimisation guides the collection of personal information, ensuring only what is necessary is gathered. The wallet empowers users with granular control over what data is shared and with whom. Transparency is built into the system, with clear explanations of how data is used and protected. By making privacy a cornerstone from the beginning, the EUDI wallet aims to foster trust and protect the fundamental rights of its users.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#414-security-by-design","title":"4.1.4 Security by Design","text":"<p>The EUDI wallet architecture embraces the principle of security by design. This means security considerations are woven into the very fabric of the wallet's design. Throughout the design process, potential vulnerabilities are identified and mitigated. Secure coding practices are mandated, and the architecture itself minimises attack surfaces by compartmentalizing sensitive data and access controls. By prioritizing security from the outset, the EUDI wallet aims to be inherently resistant to cyberattacks and data breaches, fostering trust and user confidence in this digital identity system.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#42-reference-architecture","title":"4.2 Reference Architecture","text":"<p>Figure 2 below gives an overview of the architecture of the EUDI Wallet ecosystem and its components.</p> <p></p> <p>Figure 2: EUDI Wallet Solution reference architecture</p> <p>The following components have been identified as the core components of the EUDI Wallet Solution:</p> <ul> <li> <p>User device (UD): A User device serves as the host for the     Wallet Instance. For Wallet Instances used by a natural person, the     User Device will typically be a mobile device. For Wallet Instances     used by a legal person, the User device may for example be a cloud     server. The minimum hardware and software requirements for the User     device will be determined by the Wallet Solution.</p> </li> <li> <p>Wallet Instance (WI): The app or application installed on a User     device, which is part of an EUDI Wallet Solution and belongs to and     is controlled by a User. This component implements     the core business logic and interfaces as depicted in figure 2. It     directly interacts with the WSCA/WSCD to securely manage     cryptographic assets and execute cryptographic functions, ensuring a     high level of assurance for authentication.</p> </li> <li> <p>Wallet Secure Cryptographic Device (WSCD): This is trusted     hardware providing a secure environment and storage for     cryptographic assets (such as keys) and for running the WSCA. This     includes the keystore but also the environment where the     security-critical functions are executed. The WSCD is tamper-proof     and duplication-proof. One WSCD may be used by multiple Wallet     Instances, e.g. in case of an HSM. The WSCD consists of two parts:     the WSCD hardware covers the hardware issued by the WSCD vendor and     the WSCD firmware covers security-related software, such as     operating system and cryptographic libraries provided by the WSCD     vendor.</p> </li> <li> <p>Wallet Secure Cryptographic Application (WSCA): This is the     secure application running on and utilizing the WSCD. One WSCA is     associated with at most one Wallet Instance, and manages assets,     such as keys, for this specific Wallet Instance.</p> </li> <li> <p>Wallet Provider backend (WP): The Wallet Provider backend offers     Users support with their Wallet Instances, performs essential     maintenance, and issues Wallet Trust Evidences and Wallet Instance     Attestations through the Wallet Provider Interface (WPI).</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#421-interfaces-and-protocols","title":"4.2.1 Interfaces and protocols","text":"<p>The interfaces and their respective protocols, as discussed in this section and illustrated in Figure 2, comply with the specifications established by Article 5a, paragraph 5, of the regulation.</p> <ul> <li> <p>The Wallet Provider Interface (WPI) is used by the Wallet     Instance to communicate with the Wallet Provider to issue the Wallet     Trust Evidence and the Wallet Instance Attestation, as well as     provide support to the user and collect metrics for accounting     purposes.</p> </li> <li> <p>The User Interface (UI) is the point of interaction and     communication between the User and the Wallet Instance.</p> </li> <li> <p>The Presentation Interface (PI) empowers Relying Parties to     securely request and receive the PID and various attestations (such     as QEAAs, PuB-EAAs and EAAs) from EUDI Wallets, accommodating both     remote and proximity interactions. For remote presentation flows, as     detailed in the following section, the Wallet Instance implements     the OpenID for Verifiable Presentation protocol [OpenId4VP]. In     contrast, for the proximity presentation flow, it adheres to the     [ISO/IEC 18013-5] standard. In a remote flow, when a Relying Party     requires user authentication and data access to provide a service,     the process initiates through either a web browser or a mobile app.</p> </li> <li> <p>The Secure Cryptographic Interface (SCI) enables the Wallet     Instance to communicate with the Wallet Secure Cryptographic     Application (WSCA). This interface is specifically designed for     managing cryptographic assets and executing cryptographic functions.</p> </li> <li> <p>The PID Issuance Interface (PII) is based on the [OpenID4VCI]     protocol and is used when the wallet instance communicates with a     PID Provider to request and receive PIDs to be stored within the     wallet instance.</p> </li> <li> <p>The Attestation Issuance Interfaces (AII) is based on the     [OpenID4VCI] protocol and is used by the wallet instance to     request various attestations that Users wants to include in their     Wallet Instance.</p> </li> <li> <p>The Remote Signing Interface (RSI) facilitates communication     between the Wallet Instance and the Qualified Electronic Signature     (QES) Remote Service Provider. This interface is specifically used     to execute a QES remote signature.</p> </li> </ul> <p>Note the \"Deletion Request Interface\" and the \"Reporting Interface\" as mentioned in the Regulation are not depicted as interface in this diagram. To be able to request as a User to delete personal data and to request reporting, are seen as features of the Wallet Solution which are required to be implemented in the solution.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#422-attestation-presentation-flows","title":"4.2.2 Attestation presentation flows","text":"<p>This section defines four distinct communication flows between a Wallet Instance and a Relying Party, guiding the implementation of the presentation interface:</p> <ul> <li> <p>Proximity Supervised Flow: The EUDI Wallet User is physically     near the Relying Party. Attestations are exchanged using near     proximity technology (e.g., NFC, Bluetooth) between the Wallet     Instance and the Relying Party Instance. Both devices may be with or     without internet connectivity. A human representative of the Relying     Party supervises the process.</p> </li> <li> <p>Proximity Unsupervised Flow: Like the supervised flow, but the     EUDI Wallet presents verifiable attributes to a machine without     human supervision.</p> </li> <li> <p>Remote Cross-Device Flow: The EUDI Wallet User views service     information on a separate device from their EUDI Wallet, which is     only used to secure the session (e.g., scanning a QR code on a login     page with the EUDI Wallet to access online services).</p> </li> <li> <p>Remote Same-Device Flow: The EUDI Wallet User uses their EUDI     Wallet device to both secure the session and consume the digital     service including information exchange.</p> </li> </ul> <p>Specific use cases integrate one or more of these flows. For detailed user journeys across various use cases, please refer to the blueprints in Annex 4 of the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#423-mobile-apps-and-web-browsers","title":"4.2.3 Mobile Apps and Web Browsers","text":"<p>This section examines the technical interaction between the Wallet Solution, web browsers, and mobile apps, in regards of the flows described in the previous section. This is necessary to implement the attestation presentation interface effectively, with a focus on both user experience and security.</p> <p>When a Relying Party requires User authentication and some data to provide a service, the process begins within either a web browser or a mobile app. In the Remote Same-Device flow in particular, the User's browser or app will redirect the request to their EUDI Wallet whenever a service provider needs authentication or data. In contrast, a Remote Cross-Device flow and both the proximity flows (supervised or unsupervised), might start by activating the Wallet Instance through an NFC tap or the scanning of a QR code, that will not require the interaction with the web browser.</p> <p>As illustrated in figure 2, secure and streamlined interaction with other applications, both on the User's device and externally, is crucial. Key areas for discussion and improvement include:</p> <ul> <li> <p>Secure Cross-Device Flows: Existing cross-device flows need     stronger security measures to combat phishing and relay attacks.</p> </li> <li> <p>Relying Party Authentication: Before sharing attributes, the     Wallet Instance must verify the Relying Party, and conversely, the     Relying Party might authenticate the Wallet Instance. This can     involve dynamic or static exchange of keys and metadata. Since the     web browser or mobile app mediates communication between the Relying     Party and Wallet Instance in the Remote Same-Device flow, it's     crucial to define how this interaction works.</p> </li> <li> <p>Wallet Selection and Invocation: In scenarios where users have     multiple Wallet Solutions, the process of selecting and activating     the appropriate Wallet Instance is critical for a seamless     experience. Clear application interface between the Wallet Instance     and the browser/app are also essential. Current approaches relying     on custom URIs can introduce user experience friction and scaling     issues.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#43-architecture-types","title":"4.3 Architecture types","text":"<p>Building upon the high-level design described in figure 2, at least four different types of architecture for the EUDI Wallet Solution can be identified, each leveraging a different type of Wallet Secure Cryptographic Device (WSCD):</p> <ol> <li> <p>Remote Wallet Secure Cryptographic Device (Remote WSCD): In     this architecture, the Wallet Secure Cryptographic Device is     situated remotely, separate from the user's device, for example -     implemented by the Wallet Provider using an HSM.</p> </li> <li> <p>Local External Wallet Secure Cryptographic Device (Local External WSCD): If a device lacks sufficiently secure hardware, such as a     secure element, external hardware components like smartcards may be     necessary to enhance security. This architecture involves an     external Wallet Secure Cryptographic Device that is connected to, or     interacts with, the User's device, to provide cryptographic     functions, for example - a hardware token or smart card.</p> </li> <li> <p>Local Wallet Secure Cryptographic Device (Local WSCD): This     architecture refers to a scenario where the Wallet Secure     Cryptographic Device is integrated directly within the User's     device. This includes solutions like eSIM/eUICC and eSE. In these     scenarios, the WSCA (e.g., a Java Card applet) might be deployed by     the Wallet Provider. Other examples are based on native solutions,     such as StrongBox (Google) and SecureEnclave (Apple), in which access     to the WSCD is facilitated via the operating system of the User     device.</p> </li> <li> <p>Hybrid architecture: This architecture combines two or more of     the previous three approaches.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#44-state-diagrams","title":"4.4 State diagrams","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#441-introduction","title":"4.4.1 Introduction","text":"<p>In this chapter, state diagrams are presented to explain the relations between the Wallet Solution the Wallet and the PID.</p> <p>The following descriptions are not prescriptive of form factor, hence depending on the implementation an EUDI Wallet Solution may consist of a single mobile app, or a set of local and remote components available to a specific User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#442-wallet-solution","title":"4.4.2 Wallet Solution","text":"<p>An EUDI Wallet Solution has a state of its own, as defined by Article 5d of the Regulation. The state of the Solution affects the state of all EUDI Wallet Instances of that EUDI Wallet Solution. Figure 3 below shows the states of the Wallet Solution:</p> <p></p> <p>Figure 3: State-chart of Wallet Solution</p> <p>The Candidate state is the first state of an EUDI Wallet Solution. This means it is fully implemented and the EUDI Wallet Provider requests the solution to be certified as an EUDI Wallet as part of an EUDI Wallet eID scheme.</p> <p>If all the legal and technical criteria have been met, including:</p> <ul> <li> <p>the certification of the Wallet Solution by accredited and   designated CAB(s),</p> </li> <li> <p>ex-ante supervisory activities by Member State supervisory bodies,</p> </li> <li> <p>both the body providing EUDI Wallets and the PID Providers have   been published by the Commission (in accordance with Article 5d),</p> </li> <li> <p>the information notified by Member States for publication of lists   of Wallets have been published in the Official Journal of the EU,</p> </li> </ul> <p>then a Member State may decide to start providing Instances of the Solution to Users. The state of the Solution becomes valid.</p> <p>According to Article 5d, Member States inform the Commission of each change in the certification status of their EUDI Wallet eID schemes and the EUDI Wallet Solutions provided under that scheme. This means the EUDI Wallet Solution can be officially launched, and Instances of the Solution can be provided to Users.</p> <p>Under the legal conditions in Article 5e, paragraph 1, the issuing Member State can temporarily suspend an EUDI Wallet Solution. This would for example be the result of a critical security issue on that EUDI Wallet Solution. This leads to the suspended state. Under Article 5d, paragraph 2, the issuing Member State can unsuspend the Wallet Solution and continue issuance, bringing the Solution back to the valid state. Under paragraph 1, the EUDI Wallet Solution can be completely withdrawn.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#443-wallet-instance","title":"4.4.3 Wallet Instance","text":"<p>Figure 4 below shows the states of the Wallet Instance.</p> <p></p> <p>Figure 4: State-chart of Wallet Instance</p> <p>An EUDI Wallet Instance lifecycle begins when the User installs a component part of a valid EUDI Wallet Solution to their User device (see Section 6.2; the Wallet Instance status is installed. Once an EUDI Wallet Instance establishes communication with other components that are part of the Wallet Solution, is activated, and is issued a Wallet Trust Evidence (WTE) and a Wallet Instance Attestation (WIA) by an EUDI Wallet Provider, it is in an operational state. In this state, the User manages the EUDI Wallet Instance, which may involve:</p> <ul> <li> <p>The EUDI Wallet Provider updating the EUDI Wallet Instance,</p> </li> <li> <p>The EUDI Wallet Provider revoking the EUDI Wallet Instance,     including at the User's request. Revocation of the Wallet Instance     is accomplished by revoking the Wallet Instance Attestation (see     [Topic 9] and [Topic 38]).</p> </li> <li> <p>The User uninstalling the EUDI Wallet Instance.</p> </li> </ul> <p>In the operational state of the EUDI Wallet Instance:</p> <ul> <li> <p>The User can request issuance of a PID and optionally a QEAA, a     PuB-EAA or an EAA.</p> </li> <li> <p>Once an EUDI Wallet Instance holds a valid PID set, it is considered     valid. Note that this state cannot be verified or looked upon     unless PID is requested. In this state, the User can use their EUDI     Wallet Instance to present PID attributes. If the PID expires or is     revoked, the EUDI Wallet is not automatically unusable, but rather     its state is merely downgraded back to operational. This may     affect the validity or usability of a QEAA, a PuB-EAA, an EAA or a     QES certificate.</p> </li> </ul> <p>Notes on Wallet Instance:</p> <ul> <li> <p>the above possibilities are independent from the possibility of a     PID, QEAA, PuB-EAA, or EAA Provider, to revoke the attestations that     they have issued to an EUDI Wallet Instance.</p> </li> <li> <p>The security provided by the Wallet Instance is relying on the     Wallet Secure Cryptographic Device and its Wallet Secure     Cryptographic Application. In the architecture overview (Section     6.1, figure 6) it is explained that multiple solutions are available     for implementation, such as Remote Wallet Secure Cryptographic     Device, Local External Wallet Secure Cryptographic Device, Local     Wallet Secure Cryptographic Device and / or a Hybrid architecture.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#444-person-identification-data-pid","title":"4.4.4 Person Identification Data (PID)","text":"<p>In the context of the EUDI Wallet, a PID begins its lifecycle when being issued to a Wallet Instance. Please note that this means that the management of attributes in the Authentic Source (adhering to national structures and attribute definitions) is outside of the scope of the ARF.</p> <p>For certain use cases, the PID may be pre-provisioned, meaning it is not yet valid when issued. In that case, its state is Issued, and it will transition to Valid when it reaches the beginning of its validity period. However, if the PID is issued on or after the validity start date, its state directly changes to Valid.</p> <p></p> <p>Figure 5: State-chart of PID</p> <p>There are two possible transitions from a valid PID: it automatically expires, by passage to the validity end date, or it is actively revoked by its PID Provider. Expiration and revocation are essentially independent transitions. Once a PID is expired or revoked, it cannot transition back to valid.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#5-attestations","title":"5 Attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#51-introduction","title":"5.1 Introduction","text":"<p>Within the European Digital Identity Wallet ecosystem, the Regulation distinguishes four legal categories of attestations, which are defined as follows:</p> <ul> <li> <p>Person Identification Data (PID): A set of data that is issued     in accordance with Union or national law and that enables the     establishment of the identity of a natural or legal person, or of a     natural person representing another natural person or a legal     person.</p> </li> <li> <p>Qualified Electronic Attestation of Attributes (QEAA): An     electronic attestation of attributes which is issued by a qualified     trust service provider and meets the requirements laid down in Annex     V of the Regulation.</p> </li> <li> <p>Electronic attestation of attributes issued by or on behalf of a     public sector body responsible for an authentic source (PuB-EAA):     An electronic attestation of attributes issued by a public sector     body that is responsible for an authentic source or by a public     sector body that is designated by the Member State to issue such     attestations of attributes on behalf of the public sector bodies     responsible for authentic sources in accordance with Article 45f and     with Annex VII of the Regulation.</p> </li> <li> <p>Non-Qualified EAA: An EAA which is not QEAA or PuB-EAA.</p> </li> </ul> <p>Please note that the differences between these types of attestation are purely legal. For example, a diploma may be a QEAA or a non-qualified EAA, depending on whether it is issued by a qualified trust service provider (QTSP) or by an unqualified one. Similarly, an mDL may be issued as a PuB-EAA, a QEAA, or a non-qualified EAA, depending on the legal status of the party issuing mobile driving licences in each Member State, in addition to being an authorised mDL Provider in accordance with the rules applicable for mDL Providers.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#52-available-standardised-formats","title":"5.2 Available standardised formats","text":"<p>All attestations can be described to have the following elements:</p> <ul> <li> <p>Attribute schema defines the structure, logical organisation,     type and namespace(s) of the attested attributes as well as     additional information such as information about the attestation,     its issuer, the verification mechanisms, the underlying identity     assurance, the Trust Framework to which the properties are related,     and the proof of possession by the legitimate User.</p> </li> <li> <p>Data formats define the way data in an attestation is formatted,     e.g. its character sets, encoding and serialisation.</p> </li> <li> <p>Proof mechanisms define the methods used to secure the     attestations for integrity and authenticity, including for selective     disclosure.</p> </li> </ul> <p>There are only a few suitable standardised formats for releasing electronic attestations of attributes currently available. These are:</p> <ol> <li> <p>ISO/IEC 18013-5 defines an attribute schema, data format and proof     mechanisms for mDL-s, which can be used also with other attribute     schemas, see [ISO/IEC 18013-5].</p> </li> <li> <p>Selective Disclosure for JWTs (SD-JWT) defines a proof mechanism     similar to [ISO/IEC 18013-5], but for a different data format, see     [SD-JWT].</p> </li> <li> <p>W3C Verifiable Credentials Data Model v1.1 [W3C VC DM v1.1]     defines a generic attribute schema agnostic to data formats and     proof mechanisms, while v 2.0 introduces requirements on format and     recommendations on proof mechanisms, see [W3C VC DM v2.0].</p> </li> <li> <p>SD-JWT-based Verifiable Credentials (SD-JWT VC) define a generic     attribute schema and establish requirements on data format and proof     mechanisms, see [SD-JWT-VC].</p> </li> </ol> <p>[Topic 12] presents the current and foreseen status of these technical specifications and states the requirements regarding support for these specifications by attestations.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#53-attestation-rulebooks","title":"5.3 Attestation Rulebooks","text":"<p>Since version 1.2.0 of this ARF document, the concept of an Attestation Rulebook has been introduced. For each type of attestation, such as PID, a pseudonym, an mDL, a diploma, an e-prescription, and so on, an Attestation Rulebook specifies the attribute schema, data format and proof mechanisms of that attestation, and, when required, the trust mechanisms for authentication and authorisation. Each attestation has an attestation type and namespace(s) it uses. The namespace(s) used by an attestation define the identifier, syntax, and semantics of all attributes that can be part of that attestation.</p> <p>An Attestation Rulebook also makes some choices regarding the protocol(s) for presentation that must be supported by the relevant attestations. [Topic 12] contains the requirements for Attestation Rulebooks.</p> <p>Attestation Rulebooks are defined by different organisations:</p> <ul> <li> <p>Some rulebooks already have been defined by the European Commission,     in consultation with the eIDAS Expert Group. This concerns the PID     Rulebook, the mDL Rulebook and the Pseudonym Rulebook. These can be     found in Annex 3.</p> </li> <li> <p>The rulebook for an attestation intended to be used across     organisations and/or across borders can be defined by an     organisation in which, insofar possible, all stakeholders are     represented. This will prevent multiple attestation rulebooks being     defined for the same type of attestation, for example, diplomas. It     will also prevent unnecessary differences in the syntax and     semantics between similar attestations. The decision on which     organisation will be responsible for a given attestation rulebook is     out of scope for this document. As explained in [Topic 12], it is     possible that an individual attestation provider needs to include     attributes in an attestation that have not been specified in the     relevant sectoral or EU-wide namespace. An example of this are     attributes that only have a meaning within the Member State in which     the attestation provider resides. To allow such domestic attributes,     an attestation provider can define a custom namespace to specify     attributes that are specific to this provider and are not included     in the EU-wide or sectoral namespace.</p> </li> <li> <p>The rulebook for an attestation intended to be used only within an     organisation, will be defined by that organisation.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#54-catalogues","title":"5.4 Catalogues","text":"<p>Section 2 in Article 45e of the regulation, sets up the direct legal basis for the Commission to \"where necessary, establish specifications and procedures for the catalogue of attributes and schemes for the attestation of attributes and verification procedures for qualified electronic attestations of attributes\".</p> <p>One of the main rationales for the ARF is to reach a high level of interoperability. This interoperability should be achieved on different layers. On the technical level, interoperability can be achieved by using common standards, protocols and technical specifications, ensuring common language for attestation Providers, Wallet Providers and Relying Parties, enabling issuance, presentation and processing of the data involved, based on agreed common protocols interfaces and syntax.</p> <p>The other layer is the semantic one and relates to semantic schemes of attributes. The risk is that an uncontrolled manner of implementation and usage, will create barriers to straight-forward approach and will complicate the implementation thus making the ecosystem much more costly to create and maintain, complex, and error-sensitive, affecting the quality of the overall system.</p> <p>To re-use the building blocks of attributes and attestations, the concept of using catalogues was introduced. Creating and maintaining controlled vocabulary, catalogue of attributes and attestation rulebooks, is essential for the development and success of the EUDI Wallet ecosystem, enabling shorter \"time-to-market\" and efficient implementation.</p> <p>Building on the requirements of [Topic 12], having in mind both the need for interoperability on the one hand and the varied nature of attestations and organisations specifying those attestations on the other hand, the following principals were defined:</p> <ul> <li> <p>Attestation Rulebooks for QEAAs and PuB-EAAs used within the EUDI     Wallet ecosystem may be registered and published in a publicly     accessible catalogue. The Attestation Rulebook catalogue MAY also     include Attestation Rulebooks for non-qualified EAAs.</p> </li> <li> <p>The Commission will take measures to establish and maintain the     Attestation Rulebooks catalogue.</p> </li> <li> <p>The Attestation Rulebooks catalogue will enable attestation     Providers, Relying Parties and other actors in the EUDI Wallet     ecosystem, to know which attestation types exist, and what are the     identifiers, syntax and semantics of all attributes that are part of     the attestation, that they may issue, request and receive from a     Wallet Instance, according to their role in the ecosystem.</p> </li> </ul> <p>Also, the following points were emphasised, to facilitate creation, updates and adoption:</p> <ul> <li> <p>Registration in the attestation catalogue is not mandatory.</p> </li> <li> <p>Registration in the attestation catalogue does not create any     obligation or automatic acceptance by any third party, or     automatically means cross-border recognition.</p> </li> <li> <p>The Attestation Rulebooks catalogue can be in the same     environment as the catalogue of attributes.</p> </li> </ul> <p>Implementation of these principals will be discussed further in detail. The ambition is to use existing efforts and tools created by the Member States, the Commission and cross-border organisations, to connect and interact with the stakeholders, to utilise existing data assets for updating them when needed and add new data sets to support new use cases that will be implemented in the eco-system.</p> <p>[Topic 25] and [Topic 26] (combined into one topic), present the current and foreseen status of the catalogues, their creation, distribution, discovery, management and maintenance, that will allow simple update procedures, not burdening the process on the one hand, while ensuring consistent and on-going mechanisms to keep the catalogues updated and accessible to the relevant actors, both those that create the content and those that use, consume and process the attributes and the attestations, and - last but not least - for the general public.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6-trust-model","title":"6 Trust model","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#61-overview","title":"6.1 Overview","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#611-scope","title":"6.1.1 Scope","text":"<p>The Trust Model presented in this chapter describes, for all interactions between components of the EUDI Wallet ecosystem, which trust relationships are established between the interacting parties to enable these interactions.</p> <p></p> <p>Figure 6: EUDI Wallet trust architecture</p> <p>Figure 6 above shows the parties and components that are involved in the trust architecture for the EUDI Wallet ecosystem.</p> <p>In the center of this ecosystem is the EUDI Wallet Instance, shown in the middle in blue. Section 6.5 describes the interactions between the Wallet Instance and other roles in the ecosystem in the lifecycle of a Wallet Instance, namely installation, activation, management, and de-installation.</p> <p>A Wallet Instance is the application of a Wallet Solution installed in the device of the User, which is provided by an EUDI Wallet Provider. Within this Trust Model, the operational lifespans of both the Wallet Solution and its corresponding Wallet Provider are the same. As illustrated in Figure 6, the diagram positions the Wallet Provider above the Wallet Instance and depicts the Wallet Provider Registrar located in the lower right corner for each Member State. Section 6.2 elaborates on the interactions among these entities throughout the lifecycle of a Wallet Solution and Wallet Provider, including processes such as registration and potential scenarios of withdrawal or suspension.</p> <p>One of the main functions of the Wallet Instance is to handle the User's PID(s) and attestations. The PID(s) are issued by PID Providers and the attestations by Attestation Providers, shown to the left of the Wallet Instance in Figure 1. Like Wallet Providers, PID Providers and Attestation Providers are registered by a PID Provider Registrar or by an Attestation Provider Registrar before they can interact with a Wallet Instance, and before a Relying Party can verify the PID(s) or attestation those Providers issue. As a consequence of the registration, a PID Provider or an Attestation Provider receives an access certificate from a PID Provider Access Certificate Authority (CA) or from an Attestation Provider Access CA, accordingly. Section 6.3 describes interactions between these roles in the lifecycle of a PID Provider or an Attestation Provider, namely registration, and possibly withdrawal and suspension.</p> <p>After receiving one or more PIDs or attestations, a Wallet Instance can present User attributes from these attestations to Relying Parties. On the right-hand side of the Wallet Instance, figure 6 shows the Relying Parties. Relying Parties are registered by a Relying Party Registrar in their Member State. As a result of the registration, a Relying Party receives an access certificate from a Relying Party Access CA. Section 6.4 describes interactions between these roles in the lifecycle of a Relying Party, namely registration, and possibly de-registration.</p> <p>Finally, Section 6.6 describes interactions in the lifecycle of a PID or an attestation, namely issuance, presentation to a Relying Party or to another Wallet Instance, management, and deletion.</p> <p>Notes:</p> <ul> <li> <p>This trust model is conceptual and may be implemented by Member     States in different ways. For example, the different Trusted Lists     may be implemented as a single list, provided that this list clearly     indicates which trust anchors can be used for which purposes.     Similarly, a Member State may decide to combine multiple Registrars     and/or Certificate Authorities into a single entity, again provided     that that entity maintains clear separations between its different     roles and responsibilities. In some case, existing entities can     probably be used to fulfil these roles.</p> </li> <li> <p>This trust model does not presume a specific implementation. In     particular, the use of term 'certificate' does not imply a specific     format. Depending on implementation, it may be an X.509 certificate     or another format specified in the context of any other trust     framework. Similarly, a 'Certificate Authority' may be implemented     as a 'classical' X509-based CA according to [RFC5280] and     [RFC3647], or as a trusted third party binding public keys to     entities in any other trust framework.</p> </li> <li> <p>This trust model is valid for both remote and proximity use cases.     However, technical measures taken to ensure that the requirements on     trust are fulfilled may differ between these two use cases.     Moreover, the authentication and authorisation mechanisms will     depend on the characteristics of the interacting parties.</p> </li> <li> <p>In this version of the ARF, the trust model does not yet include     interactions needed to enable Users to create qualified electronic     signatures or seals. Please refer to [Topic 16] and [Topic 37].</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#612-authentication-and-authorisation","title":"6.1.2 Authentication and authorisation","text":"<p>Within the EUDI Wallet ecosystem, many interactions take place between parties in which one party requests another party to perform a task. For example, a User may ask a PID Provider or an Attestation Provider to provide a PID or an attestation to a Wallet Instance, or a Relying Party may ask a User to present attributes from an attestation from its Wallet Instance. To be able to comply with such requests, these parties need to trust each other. This trust generally requires the existence of the following two conditions:</p> <ol> <li> <p>The requestee is sure about the requester's identity, and     optionally the requester is sure about the requestee's identity.     This is referred to as (single-side or mutual) authentication.</p> </li> <li> <p>The requestee is sure that the requester has the right to request     the data or task requested. This is referred to as authorisation.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#613-assumptions-on-trust","title":"6.1.3 Assumptions on trust","text":"<p>This document makes the following assumptions regarding the need for trust in the EUDI Wallet ecosystem:</p> <ul> <li> <p>For any party in the EUDI Wallet ecosystem, there is a risk that it     could be impersonated by an attacker. Therefore, when any     interaction between two parties takes place, both parties need to be     able to authenticate the other. Note that this assumption does not     mean that mutual authentication always takes place; it just means     that the possibility to do so exists if one party has a business     need to authenticate the other party it is interacting with.</p> </li> <li> <p>In some cases, there is a risk that a valid party in the EUDI Wallet     ecosystem tries to perform actions that it is not allowed to do. In     particular,</p> <ul> <li> <p>Attestation Providers may try to issue attestations they are not     allowed to issue. For example, an Attestation Provider that is     not officially entitled by a Member State to issue PIDs or mDLs     may nevertheless attempt to issue an attestation having the PID     or mDL attestation type.</p> </li> <li> <p>Relying Parties may try to request attributes from a Wallet     Instance for which they have no lawful grounds.</p> </li> </ul> </li> <li> <p>Relying Parties may try to violate a User's privacy by tracking the     User by processing their data without lawful grounds. They can do     so, as an example, by comparing without lawful grounds a signature,     hash, or public key value present in an attestation that the User     presents to them to similar values known to the Relying Party.     Moreover, Relying Parties may collude with other Relying Parties to     do so.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#614-other-trust-relations","title":"6.1.4 Other trust relations","text":"<p>Besides the trust relationships described in this chapter, other trust relations are established as well. For instance, Users, PID Providers and Attestation Providers, and Relying Parties trust certification bodies and Trusted List providers. This trust is primarily rooted in authority and in procedural measures, such as public oversight, published security and operational policies, and audits, rather than in technical measures. To verify that parties are indeed interacting with a trusted authority, standard technical measures suitable for the context will need to be used.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#62-trust-throughout-a-wallet-solution-lifecycle","title":"6.2 Trust throughout a Wallet Solution lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#621-wallet-solution-lifecycle","title":"6.2.1 Wallet Solution lifecycle","text":"<p>Section 4.4.2 presented the lifecycle of a Wallet Solution:</p> <ol> <li> <p>The Wallet Provider responsible for the Wallet Solution is     registered by a Registrar. As a result, the Wallet Solution enters     the Valid state. This is discussed in Section 6.2.2.</p> </li> <li> <p>Under specific conditions, a Registrar may decide to suspend or     withdraw a registered Wallet Provider. This implies that the Wallet     Provider is de-registered. This is discussed in Section 6.2.3.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#622-wallet-provider-registration-and-notification","title":"6.2.2 Wallet Provider registration and notification","text":"<p>Figure 6 depicts the Wallet Provider to the top of the EUDI Wallet Instance. To the left and below of this, the figure also shows that a Wallet Provider registers itself and its Wallet Solution with a Wallet Provider Registrar in its Member State. Subsequently, the Member State notifies the Wallet Provider to the European Commission.</p> <p>The Wallet Solution provided by the Wallet Provider is certified by a Notified Body. The certification process is described in chapter 7.</p> <p>If the registration and notification processes are successful, the trust anchors of the Wallet Provider are included in a Wallet Provider Trusted List. During issuance of a PID or an attestation, the PID Provider or the Attestation Provider can use these trust anchors to verify the authenticity of a Wallet Trust Evidence signed by the Wallet Provider, so they can be sure they are dealing with an authentic Wallet Instance from a trusted Wallet Provider. See Section 6.6.3.2 and [Topic 9]. Similarly, when the Wallet Instance presents a PID or an attestation to a Relying Party, the Relying Party can use the Wallet Provider trust anchors to verify the authenticity of a Wallet Instance Attestation signed by the Wallet Provider; see Section 6.6.3.10 and [Topic 38].</p> <p>More details on the Wallet Provider notification process can be found in [Topic 31].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#623-wallet-provider-suspension-or-withdrawal","title":"6.2.3 Wallet Provider suspension or withdrawal","text":"<p>Under specific conditions, a Registrar may decide to suspend or withdraw a Wallet Provider. This means the Wallet Provider is taken off from the Wallet Provider Trusted List. The conditions for this will be specified by each Registrar. As a result of de-registration, PID Providers, Attestation Providers and Relying Parties will no longer trust the trust anchors of the Wallet Provider and will therefore refuse to interact with any Wallet Instance provided by that Wallet Provider.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#63-trust-throughout-a-pid-provider-or-an-attestation-provider-lifecycle","title":"6.3 Trust throughout a PID Provider or an Attestation Provider lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#631-pid-provider-or-attestation-provider-lifecycle","title":"6.3.1 PID Provider or Attestation Provider lifecycle","text":"<p>Section 4.4.4 presented the lifecycle of a PID Provider:</p> <ol> <li> <p>A PID Provider or an Attestation Provider is registered by a     Registrar. This is discussed in Section 6.3.2.</p> </li> <li> <p>Under specific conditions, a Registrar may decide to suspend or     withdraw a registered PID Provider or Attestation Provider. This is     discussed in Section 6.3.3.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#632-pid-provider-or-attestation-provider-registration-and-notification","title":"6.3.2 PID Provider or Attestation Provider registration and notification","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6321-introduction","title":"6.3.2.1 Introduction","text":"<p>Figure 6 depicts the PID Providers and Attestation Providers to the left of the EUDI Wallet Instance. To the left and below of this, the figure also shows that each PID Provider and Attestation Provider will register itself with a PID Provider Registrar or an Attestation Provider Registrar in its Member State. Subsequently, the Member State notifies the PID Provider or Attestation Provider to the European Commission.</p> <p>If the registration and notification processes are successful, mainly two things happen:</p> <ul> <li> <p>The PID Provider or Attestation Provider receives an access     certificate.</p> </li> <li> <p>The trust anchors of the PID Provider or Attestation Provider are     included in a Trusted List.</p> </li> </ul> <p>These two aspects are discussed in the next two subsections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6322-pid-provider-or-attestation-provider-receives-an-access-certificate","title":"6.3.2.2 PID Provider or Attestation Provider receives an access certificate","text":"<p>A PID Provider Access Certificate Authority or Attestation Provider Access Certificate Authority (CA) issues one or more access certificates to the PID Provider or to the Attestation Provider. A PID Provider or an Attestation Provider needs such a certificate to authenticate itself towards a Wallet Instance when issuing a PID or an attestation to it, as described in Section 6.6.2.2. A PID Provider access certificate indicates that its subject is a PID Provider. Similarly, an Attestation Provider access certificate indicates that its subject is a QEEA Provider, a PuB-EAA Provider or a (non-qualified) EAA Provider.</p> <p>Note that the access certificate does not contain information about the authorization of the Provider to issue attestations of a specific type. Authorization is dealt with in the following manner:</p> <ul> <li> <p>For PID Providers, QEAA Providers, and Pub-EAA Providers, no     authorization is necessary, since these kinds of Providers are     legally trusted by default.</p> </li> <li> <p>For EAA Providers, this is different. Without additional measures, a     fraudulent EAA Provider may be technically able to issue types of     QEAAs, PuB-EAAs or EAAs that it is not legally allowed to issue. To     prevent this, the applicable Rulebook (see [Topic 12]) may define     mechanisms allowing a Wallet Instance, during issuance of an EAA, to     verify that the EAA Provider is authorised or registered to issue     the type of EAA the Wallet Instance is requesting. The same     mechanism may also be used by Relying Parties during presentation of     an EAA.</p> </li> </ul> <p>Subsequently, each Registrar includes the CA in a PID Provider Access CA Trusted List or Attestation Provider Access CA Trusted List. This Trusted List contains at least the trust anchor(s) of the CA. A Wallet Instance can use these trust anchors to verify the authenticity of a PID Provider or an Attestation Provider access certificate during the issuance of a PID or an attestation. For more information, see [Topic 31].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6323-pid-provider-or-attestation-provider-trust-anchors-are-included-in-a-trusted-list","title":"6.3.2.3 PID Provider or Attestation Provider trust anchors are included in a Trusted List","text":"<p>For a PID Provider, a QEAA Provider, or a PuB-EAA Provider, successful registration and notification also means that the Provider and its trust anchors are included in a Trusted List. This Trusted List contains at least the trust anchor(s) of the PID Provider, QEAA Provider or PuB-EAA Provider. Relying Parties can use these trust anchors to verify the authenticity of PIDs, QEAAs, and PuB-EAAs they obtain from Wallet Instances. As documented in [Topic 12], each PID, QEAA, or PuB-EAA, contains the URL at which the relevant Trusted List can be obtained.</p> <p>Non-qualified EAA Providers may be included in a Trusted List, although this is not required. Alternatively, non-qualified EAA Providers may be included in a Trusted List unrelated to the EUDI Wallet ecosystem but specific to another domain with a domain-specific governance such as for mDLs or other types of EAAs. This implies that if a Relying Party requests a non-qualified EAA from a Wallet Instance, it must know how to obtain the domain-specific trust anchor it needs to verify the signature over that EAA. To help with this, [Topic 12] requires that non-qualified EAAs contain the URL at which the relevant trust anchor can be obtained. However, Relying Parties must ensure, in some context-specific way, that these trust anchors can be trusted. The applicable Rulebook (see [Topic 12]) may define mechanisms enabling this.</p> <p>More details on the PID Provider or Attestation Provider notification process, as well as on the information registered and published in the PID Provider Trusted List or Attestation Provider Trusted List, can be found in [Topic 31].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#633-pid-provider-or-attestation-provider-suspension-or-withdrawal","title":"6.3.3 PID Provider or Attestation Provider suspension or withdrawal","text":"<p>Under specific conditions, a Registrar may decide to suspend or withdraw a registered PID Provider or Attestation Provider. The conditions for this will be specified by each Registrar.</p> <p>Suspension or withdrawal implies that the PID Provider or Attestation Provider access certificates are revoked. As a result, the PID Provider or Attestation Provider will no longer be able to issue PIDs or attestations to Wallet Instances.</p> <p>For PID Providers, QEAA Providers and PuB-EAA Providers, suspension or withdrawal also implies that their trust anchors are taken off the Trusted List. As a result, Relying Parties will no longer trust PIDs or attestations issued by the suspended or withdrawn Provider. The applicable Rulebook (see [Topic 12]) may define additional mechanisms ensuring that Relying Parties will no longer trust the trust anchors of EAA Providers that have been suspended or withdrawn.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#64-trust-throughout-a-relying-party-lifecycle","title":"6.4 Trust throughout a Relying Party lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#641-relying-party-lifecycle","title":"6.4.1 Relying Party lifecycle","text":"<p>The lifecycle of a Relying Party is described in this paragraph:</p> <ol> <li> <p>A Relying Party is registered by a Registrar in the Member State     where it resides. Relying Party registration and the Relying Party     Access CA Trusted List are discussed in Section 6.4.2.</p> </li> <li> <p>Under specific conditions, a Registrar may decide to de-register a     registered Relying Party. This is discussed in Section 6.4.3.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#642-relying-party-registration","title":"6.4.2 Relying Party registration","text":"<p>Figure 6 depicts the Relying Party to the right of the EUDI Wallet Instance. To the right and below of this, the figure also shows that each Relying Party will register itself with a Relying Party Registrar in its Member State. If the registration process is successful, the Registrar includes the Relying Party in its public registry.</p> <p>As a result of successful registration, a Relying Party Access Certificate Authority (CA) issues one or more access certificates to the Relying Party. A Relying Party Instance needs such a certificate to authenticate itself towards Wallet Instances when requesting the presentation of attributes, as described in Section 6.6.3.2.</p> <p>Subsequently, each Registrar creates a Relying Party Access CA Trusted List containing the trust anchor(s) of all associated Relying Party CA(s). A Wallet Instance can use these trust anchors to verify the authenticity of Relying Party Instance access certificates. The Registrar signs and publishes the Relying Party Access CA Trusted List and makes the URL of the Trusted List available to a common trust infrastructure maintained by the Commission, the so-called List of Trusted Lists. Using the common infrastructure, any party in the EUDI Wallet ecosystem will be able to find all Trusted Lists in the ecosystem.</p> <p>More details on the Relying Party registration process can be found in [Topic 27].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#643-relying-party-de-registration","title":"6.4.3 Relying Party de-registration","text":"<p>Under specific conditions, a Registrar may decide to de-register a registered Relying Party. The conditions for this will be specified by each Registrar.</p> <p>De-registration involves revocation of all valid Relying Party Instance certificates, such that the Relying Party is no longer able to interact with Wallet Instances.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#65-trust-throughout-a-wallet-instance-lifecycle","title":"6.5 Trust throughout a Wallet Instance lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#651-wallet-instance-lifecycle","title":"6.5.1 Wallet Instance lifecycle","text":"<p>Section 4.4.3 above presented the lifecycle of a Wallet Instance:</p> <ol> <li> <p>A Wallet instance is installed on a device by a User. The required     trust relationships for installation are discussed in Section 6.5.2     below.</p> </li> <li> <p>Next, the Wallet Instance is activated by the Wallet Provider and     becomes operational. The goals and required trust relationships for     activation are discussed in Section 6.5.3.</p> </li> <li> <p>Once in the Operational or Valid state, the Wallet Instance     is managed by the User and the Wallet Provider. This management     includes at least revoking the Wallet Instance when necessary. This     is discussed in Section 6.5.4. Management will also include regular     updates of the Wallet Instance to ensure its continued security and     functionality. However, this is not further defined in this chapter.</p> </li> <li> <p>The User may de-install the Wallet Instance; see Section 6.5.5.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#652-wallet-instance-installation","title":"6.5.2 Wallet Instance installation","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6521-required-trust-relationships","title":"6.5.2.1 Required trust relationships","text":"<p>The lifecycle of a Wallet Instance starts when a User decides to install an EUDI Wallet Instance on their device. A Wallet Solution is provided to the User by a Wallet Provider.</p> <p>When downloading and installing the Wallet Instance, the following trust relationships are established:</p> <ol> <li> <p>The User verifies that the Wallet Instance (i.e., the application     the User is installing) is genuine and authentic and does not     contain any malware or other threats.</p> </li> <li> <p>The User verifies that they can obtain the PID(s) or attestation(s)     they need in an instance of this EUDI Wallet Solution. If the     relevant PID Provider or Attestation Provider does not support the     Wallet Solution, the User would not be able to use the Wallet     Instance for obtaining those PID(s) or attestation(s).</p> </li> </ol> <p>The next two sections discuss these trust relationships.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6522-user-verifies-wallet-solution","title":"6.5.2.2 User verifies Wallet Solution","text":"<p>To ensure that the User can trust the Wallet Solution, Wallet Providers preferably make their certified Wallet Solutions available for installation only via the official app store of the relevant operating system (e.g., Android, iOS). This allows the operating system of the device to perform relevant checks regarding the authenticity of the app. It also allows Users to use the same well-known channel for obtaining a Wallet Instance as they use for obtaining other apps. Finally, it prevents the User must allow side-loading of apps, which can increase the risk of installing malicious apps.</p> <p>Note: The Regulation does not exclude the possibility that a Wallet Instance may be installed on a non-mobile device, for example a server. In general, verifying the authenticity of Wallet Solutions not intended to be installed on a mobile device is the responsibility of the User. This can be done, for example, by comparing the hash value of the application downloaded by the User with the hash value published by the Wallet Provider.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6523-user-validates-that-wallet-solution-is-usable-with-relevant-attestations","title":"6.5.2.3 User validates that Wallet Solution is usable with relevant attestations","text":"<p>A User installs a Wallet Instance because they want to obtain and use one or more PIDs and/or attestations. However, there is no requirement for a PID Provider or an Attestation Provider to support all certified Wallet Solutions in the EUDI Wallet ecosystem. This means that the PID Provider or an Attestation Provider are not obliged to issue a PID or an attestation respectively to any certified Wallet Instance upon the request of the User. Instead, they may decide to support only a single Wallet Solution, or a limited number of Wallet Solutions.</p> <p>Therefore, each PID Provider and Attestation Provider will publish a list of Wallet Solutions that they support. This list could be published, for example, on their respective website. A Wallet Provider can also publish a list of PID Providers and Attestation Providers supporting their Wallet Solution. This allows Users to know whether the Wallet Instance they are about to install will support the PID and the attestation(s) they wish to use.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#653-wallet-instance-activation","title":"6.5.3 Wallet Instance activation","text":"<p>After its installation, a new EUDI Wallet Instance will need to be activated by the Wallet Provider. Activation has at least the following purposes:</p> <ol> <li> <p>The EUDI Wallet Provider requests data about the User's device from     the EUDI Wallet Instance. This data may include the communication     technologies supported by the device and the characteristics of the     WSCD(s) used by the device to securely store cryptographic keys and     data associated with the EUDI Wallet Instance and the attestations     in that Wallet Instance.</p> </li> <li> <p>The EUDI Wallet Provider issues a Wallet Trust Evidence (WTE) to the     Wallet Instance. The WTE is described in [Topic 9]. The WTE has     two main purposes:</p> <ul> <li> <p>It describes the capabilities and properties of the Wallet     Instance, the User device and the WSCD(s). This allows a PID     Provider or an Attestation Provider to verify that the Wallet     Instance complies with the Provider's requirements and therefore     is fit to receive a PID or an attestation from the Provider.</p> </li> <li> <p>Moreover, the WTE contains a WTE public key. During the issuance     of a PID or an attestation (see Section 6.6.2.3), a PID Provider     or Attestation Provider can use this public key to verify that     the Wallet Instance is in possession of the corresponding     private key. Moreover, at that time, the Wallet Instance will     send another public key to the PID Provider or Attestation     Provider. The Provider will include this public key in the     issued PID or attestation. By using a concept called public key     association, described in [Topic 9], the PID Provider or     Attestation Provider can verify that the private key belonging     to this public key is protected by the same WSCD as the private     key belonging to the WTE public key. Thus, the PID Provider or     Attestation Provider can trust this new public key.</p> </li> </ul> </li> <li> <p>The Wallet Provider issues a Wallet Instance Attestation (WIA) to     the Wallet Instance. The WIA contains information allowing a PID     Provider, an Attestation Provider, or a Relying Party, to verify     that the Wallet Provider did not revoke the Wallet Instance     Attestation (and hence the Wallet Instance itself). The WIA and the     revocation mechanisms for Wallet Instances are described in [Topic     38].</p> </li> <li> <p>The Wallet Instance requests the User to set up a User     authentication mechanism. User authentication is necessary when (or     before) the Wallet Instance asks the User for approval to present     some attributes to a Relying Party, see Section 6.6.3.4. User     authentication can be done by the Wallet Instance itself or by the     WSCD. The latter is required before the WSCD performs any operations     with cryptographic keys belonging to the Wallet Instance or to a PID     or to an attestation.</p> </li> <li> <p>The Wallet Provider sets up a user account for the User to ensure     that the User can request the suspension or revocation of their     Wallet Instance in case of theft or loss. The Wallet Provider     associates the Wallet Instance with the new user account. The Wallet     Provider registers one or more backend-based User authentication     methods that the Wallet Provider will use to authenticate the User.     Note that:</p> <ul> <li> <p>The Wallet Provider does not need to know any real-world     attributes of the User. The User can use a pseudonym to     register, for example - an e-mail address. If the Wallet     Provider wants to request additional User attributes, for     example - to be able to provide additional services, they are     free to do so if the User consents.</p> </li> <li> <p>In any case, User details registered by the Wallet Provider will     not be included in the WIA or the WTE. They are strictly for use     by the Wallet Provider only.</p> </li> </ul> </li> </ol> <p>For successful EUDI Wallet Instance activation, the following trust relations are established:</p> <ol> <li> <p>The EUDI Wallet Instance authenticates the EUDI Wallet Provider,     meaning that the instance is sure that it is dealing with the     genuine Wallet Provider who provided it to the User.</p> </li> <li> <p>The EUDI Wallet Provider authenticates the EUDI Wallet Instance.     This means that the EUDI Wallet Provider is sure that the instance     is indeed a true instance of their EUDI Wallet Solution, and not a     fake app.</p> </li> </ol> <p>Both trust relationships are the responsibility of the Wallet Provider. The ARF does not specify how these trust relationships can be satisfied.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#654-wallet-instance-management","title":"6.5.4 Wallet Instance management","text":"<p>Starting from Wallet Instance activation and until it is de-installed by the User, a Wallet Instance is managed by the User and the Wallet Provider. The Wallet Provider is responsible at least to:</p> <ul> <li> <p>perform installation of a new version of the Wallet Solution as     necessary.</p> </li> <li> <p>update the WIAs or the WTEs as necessary; see [Topic 9].</p> </li> <li> <p>suspends or revokes the Wallet Instance in case its security is     compromised; see [Topic 38].</p> </li> </ul> <p>The User will be able to request the Wallet Provider to suspend or revoke the Wallet Instance at least in case of loss or theft of the User's device. See [Topic 38].</p> <p>In case the Wallet Instance contains a PID, the PID Provider may request the Wallet Provider to revoke the Wallet Instance in case the natural person using the Wallet Instance has died or the legal person using the Wallet Instance has ceased operations. See [Topic 38].</p> <p>Lastly, the Wallet Instance supports procedures for backing up and restoring the attestations it contains, or for migrating these attestations to a different Wallet Solution. See [Topic 33] and [Topic 34] respectively.</p> <p>To allow Wallet Instance management, the following trust relations are established:</p> <ol> <li> <p>When contacting the Wallet Provider, the User authenticates the     Wallet Provider. This means the User is sure that they are visiting     the website or the user portal of the genuine Wallet Provider who is     responsible for the User's Wallet Instance, and not a spoofed     website or portal. This can be done, for instance, by using standard     mechanisms such as TLS server authentication.</p> </li> <li> <p>When contacted by a User, the Wallet Provider authenticates the     User. This means that the Wallet Provider is sure that the User is     indeed the User that was associated with the Wallet Instance during     activation. For this, the Wallet Provider uses the authentication     methods established in the User's account during activation, see     Section 6.5.3.</p> </li> <li> <p>The EUDI Wallet Instance authenticates the EUDI Wallet Provider,     meaning that the EUDI Wallet Instance is sure that it is dealing     with the genuine EUDI Wallet Provider. This must be ensured by the     Wallet Provider. The ARF does not specify how this trust     relationship can be satisfied.</p> </li> <li> <p>The EUDI Wallet Provider authenticates the EUDI Wallet Instance.     This means that the EUDI Wallet Provider is sure that the EUDI     Wallet Instance is indeed a true instance of their EUDI Wallet     Solution, and not a fake app. This must be ensured by the Wallet     Provider. The ARF does not specify how this trust relationship can     be satisfied.</p> </li> </ol> <p>Specifically for the functionality allowing a PID Provider to request Wallet Instance revocation:</p> <ol> <li> <p>When contacted by a PID Provider, the Wallet Provider authenticates     the PID Provider. Section 6.6.2.2 below describes how a Wallet     Instance can do this during PID issuance; a Wallet Provider can use     the same mechanism.</p> </li> <li> <p>To identify the Wallet Instance that is to be revoked, the PID     Provider uses a Wallet Instance identifier provided by the Wallet     Provider in the WTE during PID issuance; see [Topic 9].</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#655-wallet-instance-de-installation","title":"6.5.5 Wallet Instance de-installation","text":"<p>No trust relationships are required for Wallet Instance de-installation; anybody able to access the device of the User will be able to do this.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#66-trust-throughout-a-pid-or-an-attestation-lifecycle","title":"6.6 Trust throughout a PID or an attestation lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#661-pid-or-attestation-lifecycle","title":"6.6.1 PID or attestation lifecycle","text":"<p>Section 4.4.4 above presented the lifecycle of a PID within an EUDI Wallet Instance:</p> <ol> <li> <p>Using their Wallet Instance, the User requests the issuance of a PID     or an attestation from a PID Provider or an Attestation Provider.     The required trust relationships for issuance are discussed in     Section 6.6.2 below.</p> </li> <li> <p>Once the attestation is issued into the Wallet Instance, the User     can then present attributes from this attestation to a Relying Party     Instance, according to the User's decision and depending on     successful authentication of the Relying Party. The required trust     relationships for presenting PIDs and attestations, including User     approval and Relying Party authentication, are discussed in Section     6.6.3.</p> </li> <li> <p>Instead of presenting attributes to a Relying Party, a User can also     present them to another User, meaning the Wallet Instance is     interacting with another Wallet Instance. This is briefly discussed     in Section 6.6.4.</p> </li> <li> <p>The PID Provider or the Attestation Provider respectively, remains     responsible for managing the attestation over its lifetime.     Management may include refreshing or changing the PID or the     attestation. The Provider can also remove or revoke the PID or the     attestation, possibly based on a request of the User. The required     trust relationships for managing PIDs and attestations are discussed     in Section 6.6.5.</p> </li> <li> <p>Finally, Section 6.6.6 discusses the scenario that a User decides to     delete the PID or an attestation from their Wallet Instance.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#662-pid-or-attestation-issuance","title":"6.6.2 PID or attestation issuance","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6621-required-trust-relationships","title":"6.6.2.1 Required trust relationships","text":"<p>The lifecycle of a PID or an attestation starts when a User, using their Wallet Instance, requests a PID Provider or an Attestation Provider to issue the PID or an attestation to their Wallet Instance. The following trust relationships are established during issuance:</p> <ol> <li> <p>The Wallet Instance authenticates the PID Provider or Attestation     Provider using the certificate referred to in Section 6.3. This ensures that     the User can trust that the PID or attestation they are about     to receive, is issued by an authenticated PID Provider or     Attestation Provider respectively. See Section 6.6.2.2 below     describing how this will be done.</p> </li> <li> <p>The PID Provider or Attestation Provider authenticates the User,     meaning that the Provider is sure about the identity of the User.     This is necessary to enable determination of the values of the     attributes that the Provider will attest to. For instance, a PID     Provider needs to authenticate the User to ensure it provides a PID     containing the correct family name and date of birth. The method by     which the PID Provider or Attestation Provider performs User     identification and authentication is out of scope of the ARF, as     these processes are specific to each PID Provider or Attestation     Provider.</p> </li> <li> <p>The PID Provider or Attestation Provider authenticates and validates     the Wallet Instance, see Section 6.6.2.3 below.</p> </li> <li> <p>The PID Provider or Attestation Provider verifies that the Wallet     Provider did not revoke or suspend the Wallet Instance. This is     described in Section 6.6.2.4.</p> </li> <li> <p>Finally, after the PID or attestation is issued to the Wallet     Instance, the User may have to activate it before they can use it;     see Section 6.6.2.5.</p> </li> </ol> <p>More detailed requirements for the issuance process of PIDs and attestations, for instance regarding the issuance protocol, are included in [Topic 10] and [Topic 23].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6622-wallet-instance-authenticates-the-pid-provider-or-attestation-provider","title":"6.6.2.2 Wallet Instance authenticates the PID Provider or Attestation Provider","text":"<p>As shown in figure 6, a Wallet Instance downloads the PID Provider Access CA Trusted List(s) and Attestation Provider Access CA Trusted List(s) it needs from the relevant Registrar(s), possibly after having located them via the Commission common trust infrastructure. See Section 6.3.2 for more information on these Trusted Lists.</p> <p>Notes:</p> <ul> <li> <p>The Wallet Instance downloads the PID Provider or Attestation     Provider Access CA Trusted Lists, not the PID Provider or     Attestation Provider Trusted Lists. See Section 6.3.2 for the     difference between these lists. The Wallet Instance needs the Access     CA Trusted Lists to authenticate the PID Provider or Attestation     Provider. The Wallet Instance does not need to verify the     authenticity of the PID(s) or attestations issued by the PID     Provider or Attestation Provider respectively.</p> </li> <li> <p>It is not mandatory for each Wallet Instance to possess all PID     Provider and Attestation Provider CA Trusted Lists, if there are     multiple. Wallet Providers will choose which Trusted Lists they need     to subscribe to, for example depending on the Member State(s) they     are operating in.</p> </li> </ul> <p>To start the process of requesting a PID or an attestation, the User directs the Wallet Instance to contact the PID Provider or Attestation Provider. The User may for example use the Wallet Instance to scan a QR code or tap an NFC tag to do so. Note that no centralised service discovery mechanism for PID or attestation issuance is foreseen.</p> <p>Before requesting the issuance of a PID or an attestation, the Wallet Instance authenticates the PID Provider or the Attestation Provider. To do so, the Wallet Instance verifies the certificate presented to it by the PID Provider or Attestation Provider. The Wallet Instance checks that the certificate indicates that its subject is indeed a PID Provider or an Attestation Provider. The Wallet Instance also verifies that the certificate is authentic, that it is valid at the time of validation, and that the issuer of the certificate is a CA that is in the Attestation Provider CA Trusted List.</p> <p>After the Wallet Instance receives the PID or attestation from the Provider, it verifies that the type of attestation it received matches the request.</p> <p>The Wallet Instance requests the User's approval before storing a PID or an attestation. When requesting approval, the Wallet Instance shows the contents of the PID or attestation to the User. The Wallet Instance also informs the User about the identity of the PID Provider or Attestation Provider, using the subject information from the PID Provider or Attestation Provider certificate.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6623-pid-provider-or-attestation-provider-validates-the-eudi-wallet-instance","title":"6.6.2.3 PID Provider or Attestation Provider validates the EUDI Wallet Instance","text":"<p>Verifies the authenticity of the Wallet Instance</p> <p>As shown in figure 6, a PID Provider or an Attestation Provider downloads the Wallet Provider Trusted List(s) it needs from the relevant Registrar(s), possibly after having located them via the Commission common trust infrastructure.</p> <p>Note:</p> <ul> <li>It is not mandatory for PID Providers or Attestation Providers to     possess all Wallet Provider Trusted Lists, if there are multiple.     This is because it is not mandatory for a PID Provider or an     Attestation Provider to accept all certified Wallet Solutions in the     EUDI Wallet ecosystem. Each PID Provider or Attestation Provider     will choose which Trusted Lists they need to subscribe to.</li> </ul> <p>Section 6.5.3 above described that a Wallet Provider, during activation of a Wallet Instance, issues a Wallet Trust Evidence (WTE) to the Wallet Instance. When the Wallet Instance sends a request for a PID or an attestation to a PID Provider or to an Attestation Provider, it includes the WTE in the request. The PID Provider or Attestation Provider verifies the signature over the WTE, using the Wallet Provider trust anchor obtained from the Trusted List. Next, the PID Provider or Attestation Provider verifies that the Wallet Instance possesses the private key belonging to the public key in the WTE. This proves that the Wallet Instance is authentic and is provided by a trusted Wallet Provider. For more details see [Topic 9].</p> <p>Optionally, verifies that the User's Wallet Instance supports all required features</p> <p>The WTE describes relevant features of the Wallet Instance, as well as the device it is installed on. Depending on their needs, PID Providers or Attestation Providers optionally verify that the User's Wallet Instance supports all features they require. For example, for some PID Providers or Attestation Providers it may be relevant to know whether the Wallet Instance supports presenting the attestation in proximity flows using NFC.</p> <p>Optionally, validates the properties of the WSCD</p> <p>The WTE describes the certifications and the other relevant properties of the WSCD, i.e., the secure cryptographic device used by the Wallet Instance to store and manage cryptographic keys. The security level of the WSCD is a key determinant for the overall Level of Assurance (LoA) of the Wallet Instance. For obtaining a PID, the Wallet Instance and the WSCD will need to comply with the requirements for LoA High. For other attestations, LoA High or Substantial will be needed, depending on the requirements of the Attestation Provider.</p> <p>Verifies that the PID key or the attestation key is protected by the WSCD</p> <p>Knowing the properties of the WSCD is not very useful if the PID Provider or Attestation Provider cannot be sure that the private key for the PID or their new attestation is indeed protected by that WSCD. [Topic 9] describes how the PID Provider or Attestation Provider can obtain a so-called proof of association from the WSCD. This proof of association proves that the WSCD described in the WTE protects both the WTE public key and the public key of the PID or the new attestation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6624-pid-provider-or-attestation-provider-verifies-that-wallet-instance-is-not-suspended-or-revoked","title":"6.6.2.4 PID Provider or Attestation Provider verifies that Wallet Instance is not suspended or revoked","text":"<p>Section 6.5.3 above described that a Wallet Provider, during activation of a Wallet Instance, issues a Wallet Instance Attestation (WIA) to the Wallet Instance. The WIA allows PID Providers, Attestation Providers and Relying Parties to verify that the Wallet Instance is not suspended or revoked. [Topic 38] describes how this is done.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6625-user-activates-the-pid-or-attestation","title":"6.6.2.5 User activates the PID or attestation","text":"<p>As documented in [Topic 9], to achieve Level of Assurance (LoA) \"high\", Commission Implementing Regulation (EU) 2015/1502 requires that an activation process must be implemented to verify that the PID or attestation was delivered only into the possession of the person to whom it belongs. This can be done, for example, by entering a PIN code that was sent by the PID Provider or Attestation Provider to the User 'out of band', for example by means of a letter sent to their official postal address.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#663-pid-or-attestation-presentation-to-relying-party","title":"6.6.3 PID or attestation presentation to Relying Party","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6631-required-trust-relationships","title":"6.6.3.1 Required trust relationships","text":"<p>A Relying Party can request a User to present some attributes from a PID or from an attestation in their Wallet Instance. Figure 6 shows that a Relying Party uses a Relying Party Instance to interact with the Wallet Instance of the User. The relationship between the Relying Party and their Relying Party Instance is equivalent to the relationship between the User and their Wallet Instance.</p> <p>When processing the request, the following trust relationships are established:</p> <ol> <li> <p>The Wallet Instance authenticates the Relying Party Instance,     ensuring the User about the Relying Party's identity. Section     6.6.3.2 explains how this will be done.</p> </li> <li> <p>The PID Provider or Attestation Provider, during issuance, may     optionally have embedded a disclosure policy in the PID or     attestation. If such a policy is present for the requested PID or     attestation, the Wallet Instance evaluates the disclosure policy and     informs the User about the outcome of this evaluation. See Section     6.6.3.3.</p> </li> <li> <p>The User approves or rejects the presentation of the requested     attributes, or some of them, for selective disclosure, possibly     based on the outcome of the evaluation of the embedded disclosure     policy. User approval is described in Section 6.6.3.4.</p> </li> </ol> <p>Subsequently, after the Wallet Instance presents the selected attributes from the PID or attestation to the Relying Party Instance by sending a response to the request, the Relying Party validates the response. The following trust relationships are established:</p> <ol> <li> <p>The Relying Party Instance verifies the electronic signature or seal     of the PID or attestation. This ensures that the Relying Party can     trust that the PID or attestation it receives is issued by an     authentic Provider and has not been changed. This is described in     Section 6.6.3.5.</p> </li> <li> <p>The Relying Party verifies that the PID Provider or Attestation     Provider did not revoke or suspend the PID or attestation. This is     described in Section 6.6.3.6.</p> </li> <li> <p>The Relying Party verifies that the PID Provider or Attestation     Provider issued this attestation to the same Wallet Instance that     provided it to the Relying Party. In other words, it checks that the     attestation was not copied or replayed. This is generally called     device binding, and it is discussed in Section 6.6.3.7</p> </li> <li> <p>In some use cases, the Relying Party verifies that the person     presenting the attestation is the User, meaning the subject of the     PID or attestation. This is called User binding. In other use     cases, the Relying Party trusts that Wallet Instance and the WSCD     have done this. User binding is discussed in Section 6.6.3.8.</p> </li> <li> <p>The Relying Party can request attributes from two or more     attestations in the same interaction. This is called a combined     presentation of attributes. If so, the Relying Party verifies that     these attestations belong to the same User. This is discussed in     Section 6.6.3.9.</p> </li> </ol> <p>Either before or after validating the PID or attestation per steps 4 - 8,</p> <ol> <li> <p>The Relying Party Instance authenticates the Wallet Instance and the     Wallet Provider; see Section 6.6.3.10.</p> </li> <li> <p>The Relying Party Instance verifies that the Wallet Provider did not     suspend or revoke the Wallet Instance, see Section 6.6.3.11.</p> </li> </ol> <p>Finally, after the interaction is over,</p> <ol> <li>The Wallet Instance enables the User to report unlawful or     suspicious requests for personal data by a Relying Party, based on     information logged by the Wallet Instance. Similarly, the Wallet     Instance enables the User to request a Relying Party to immediately     erase personal data obtained from the Wallet Instance. This is     discussed in Section 6.6.3.12.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6632-wallet-instance-authenticates-the-relying-party-instance","title":"6.6.3.2 Wallet Instance authenticates the Relying Party Instance","text":"<p>Relying Party authentication is a process whereby a Relying Party proves its identity to a Wallet Instance, in the context of an interaction in which the Relying Party requests the Wallet Instance to present some attributes. Relying Party authentication is discussed in [Topic 6].</p> <p>Relying Party authentication is included in the protocol used by a Wallet Instance and a Relying Party Instance to communicate. As documented in [Topic 12], at least two different protocols can be used within the EUDI Wallet ecosystem, namely the ones specified in [ISO/IEC 18013-5] and [OpenID4VP]. Both protocols include functionality allowing the Wallet Instance to authenticate the Relying Party Instance. Although these protocols differ in the details, on a high level, they both implement Relying Party authentication as shown in figure 7 below.</p> <p></p> <p>Figure 7 High-level overview of Relying Party authentication process</p> <p>The figure shows the following:</p> <p>First, there are two preconditions that need to be fulfilled before the Relying Party authentication process can begin. Note that these actions are not carried out for every presentation, but only once (excluding possible updates).</p> <p>A)  The Relying Party registered itself as described in Section 6.3.2     and obtained a Relying Party Instance access certificate.</p> <p>B)  The Wallet Instance obtained the trust anchor of the Relying Party     Access Certificate Authority.</p> <p>Subsequently, during each presentation of attributes:</p> <ol> <li> <p>The Relying Party Instance prepares a request for some attributes to     the Wallet Instance and includes its Relying Party Instance     certificate in the request, plus all intermediate certificates up to     (but excluding) the trust anchor.</p> </li> <li> <p>The Relying Party Instance signs some data in the attribute request     using its private key.</p> </li> <li> <p>The Relying Party Instance sends the request to the Wallet Instance.</p> </li> <li> <p>The Wallet Instance checks the authenticity of the request by     verifying the signature over the request using the public key in the     Relying Party Instance certificate.</p> </li> <li> <p>The Wallet Instance checks the authenticity of the Relying Party by     validating the Relying Party Instance certificate and all     intermediate certificates included in the request. For validating     the last intermediate certificate, the Wallet Instance uses the     trust anchor it obtained from the Trusted List.</p> </li> <li> <p>The Wallet Instance validates that none of the certificates in the     trust chain have been revoked. This includes the Relying Party     Instance certificate as well as all other certificates in the trust     chain, including the trust anchor itself if applicable.</p> </li> <li> <p>The Wallet Instance continues by requesting the User for approval.</p> </li> <li> <p>The User can approve, disapprove or approve selective disclosure of     the presentation of the requested attributes.</p> </li> <li> <p>The Wallet Instance sends a response containing only the approved     attributes, to the Relying Party Instance.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6633-wallet-instance-evaluates-disclosure-policy-embedded-in-attestation-if-present","title":"6.6.3.3 Wallet Instance evaluates disclosure policy embedded in attestation, if present","text":"<p>The PID Provider or Attestation Provider optionally embeds a disclosure policy in the PID or attestation. Such an embedded disclosure policy contains rules determining which (types of) Relying Party are allowed by the PID Provider or Attestation Provider to receive which attributes from the PID or attestation.</p> <p>If a policy is present in the PID or attestation, the Wallet Instance evaluates the policy, together with data obtained from the Relying Party or the User, to determine whether the PID Provider or Attestation Provider allows this Relying Party to receive the requested attributes. Data obtained from the Relying Party is typically included in the Relying Party Instance certificate. In any case, the Wallet Instance authenticates any data obtained from the Relying Party before using it.</p> <p>The Wallet Instance presents the outcome of the disclosure policy evaluation to the User in the form of advice, when requesting User approval. For example, \"The issuer of your PID does not want you to present &lt;attribute names&gt; to &lt;Relying Party name&gt;. Do you want to continue?\" Note that the User can overrule the disclosure policy evaluation outcome.</p> <p>For more details on the embedded disclosure policy, see [Topic 43].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6634-wallet-instance-obtains-user-approval-for-presenting-attributes","title":"6.6.3.4 Wallet Instance obtains User approval for presenting attributes","text":"<p>Note: In this document the term 'User approval' exclusively refers to a User's decision to present an attribute to a Relying Party. Under no circumstances User approval to present data from their EUDI Wallet Instance should be construed as lawful grounds for the processing of personal data by the Relying Party or any other party. A Relying Party requesting or processing personal data from an EUDI Wallet Instance must ensure that it has grounds for lawful processing of that data, according to Article 6 of the GDPR.</p> <p>Before presenting any attribute to a Relying Party, the Wallet Instance requests the User for their approval. This is critical for ensuring that the User remains in control of their attributes.</p> <p>A Wallet Instance requests User approval in all use cases, both in proximity flow and remote flow, and including:\u00a0</p> <ul> <li> <p>Use cases where the Relying Party could be assumed to be trusted,     for example, when the Relying Party is part of law enforcement or     another government agency.\u00a0</p> </li> <li> <p>Use cases where the requested attributes are critical for the     Relying Party to grant access to the User or deliver the requested     services.\u00a0</p> </li> <li> <p>Use cases where there is, according to the GDPR or other     legislation, no legal need to ask for the User's approval because     another legal basis exists for requesting the attributes.</p> </li> </ul> <p>A prerequisite for requesting User approval is that the Wallet Instance is sure that the person using the Wallet Instance is in fact the User. Therefore, the WSCA authenticates the User prior to or during requesting User approval, on request of the Wallet Instance. To do so, the Wallet Instance uses the User authentication mechanisms set up during Wallet Instance activation, see Section 6.5.3. More detailed requirements regarding User approval can be found in [Topic 6].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6635-relying-party-instance-verifies-the-authenticity-of-the-pid-or-attestation","title":"6.6.3.5 Relying Party Instance verifies the authenticity of the PID or attestation","text":"<p>The Relying Party Instance verifies the electronic signature or seal over the PID or attestation. For PID Providers, QEAA Providers, and PuB-EAA Providers, the Relying Party Instance uses a trust anchor of the Provider obtained from a Trusted List. For EAA Providers, the applicable Rulebook may describe how the Relying Party Instance should obtain the relevant trust anchor.</p> <p>The technical implementation of the signature verification process depends on which of the standards mentioned in [Topic 12] is supported by the Wallet Instance. Each of these standards specifies in detail how to carry out electronic signature or seal verification.</p> <p>In addition, the Relying Party may want to verify that the Attestation Provider can issue the type of attestation in question. This is only needed for EAA Providers, as the Relying Party trusts a PID Provider, QEAA Provider or PuB-EAA Provider by default. For EAA Providers, the applicable Rulebook may define methods that the Relying Party can use to verify that the EAA Provider is allowed to issue this type of attestation.</p> <p>Notes:</p> <ul> <li> <p>All PIDs and attestations in the EUDI Wallet ecosystem are digitally signed or sealed by the respective PID Provider or Attestation Provider, or by the WSCD available to the Wallet Instance. If an attestation is digitally signed or sealed by a WSCD, it is called a device-signed or self-issued attestation. Device-signed or self-issued attestations are allowed only if it can be shown that the WSCD signs or seals them at Level of Assurance (LoA) \u201chigh\u201d, meaning that the level of security offered by the WSCD is at least equivalent to the security level of the secure infrastructure used by the PID Provider or Attestation Provider for signing or sealing   </p> </li> <li> <p>The signature or seal over the attestation may or may not include the value of the presented attributes. If the attribute values are not included in the signature creation, the Relying Party trusts these attributes because they are presented over an authenticated channel set up between the secure environment (i.e., the WSCD or the secure infrastructure used by the PID Provider or Attestation Provider, see previous bullet) and the Relying Party. One possible way to set up such an authenticated channel is by ensuring the authenticity and integrity (but not the non-repudiation) of the attributes by means of a Message Authentication Code (MAC). The MAC is created by the secure environment over the presented attribute values. The MAC key is generated from an ephemeral key of the Relying Party (sent to the secure environment by the Wallet Instance) in combination with an ephemeral key created by the secure environment. The latter ephemeral key is sent to the Relying Party in such a way that the Relying Party can verify the authenticity of this key. Such a solution, or similar ones, can be used provided that:</p> <ul> <li> <p>the solution is fully compliant with the relevant standards, i.e., [ISO/IEC 18013-5] or [OpenID4VP] and [SD-JWT VC].</p> </li> <li> <p>the solution can be certified for security at LoA \"high\" according to chapter 7</p> </li> </ul> </li> <li> <p>A Relying Party typically has a list of attestations that it accepts for a certain use case. For example, a Relying Party could accept a mobile Driving Licence (mDL) issued by a national driving licence Provider, as proof of identity. If a Relying Party decides to accept a specific type of attestation issued by a specific Attestation Provider, the Relying Party must accept any valid and authentic attestation issued by that Attestation Provider, regardless of the User device it is installed on. In other words, the Relying Party trusts the PID Provider or Attestation Provider to have verified, during PID or attestation issuance, that the User device is fit to receive a PID or attestation, as described in Section 6.6.2.3. The Relying Party therefore does not assess the technical properties of the User device and WSCD during the attestation presentation process. If the Relying Party were to make its own independent assessment of the security of the User device, there is a possibility that it would not accept a User's attestation even though it is perfectly valid. That would be confusing to Users and might diminish their trust in their attestations and in the EUDI Wallet ecosystem as a whole.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6636-relying-party-verifies-that-the-pid-or-attestation-is-not-revoked","title":"6.6.3.6 Relying Party verifies that the PID or attestation is not revoked","text":"<p>To allow revocation checking of a PID or attestation, the PID Provider or Attestation Provider must include revocation information in the PID or attestation, respectively. This revocation information must include a URL indicating the location where a Relying Party can obtain a status list or revocation list, and an identifier or index for this specific certificate or attestation within that list.</p> <p>Notes:</p> <ul> <li> <p>A status list is a bit string or byte string in which each bit or     group of bits denotes the current revocation status (valid,     suspended, or revoked) of one attestation. To get the status of the     attestation it has received from the Wallet Instance, the Relying     Party obtains the status list from the URL specified in the     attestation and verifies the value encoded at the bit position given     by the index value in the attestation.</p> </li> <li> <p>A revocation list is a list of PID identifiers or attestations     identifiers revoked by the PID Provider or Attestation Provider. To     get the status of the PID or attestation it has received from the     Wallet Instance, the Relying Party obtains the revocation list from     the URL specified in the attestation and verifies whether the     identifier included in the attestation is on the list or not.</p> </li> </ul> <p>For more details and requirements, see [Topic 7].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6637-relying-party-verifies-device-binding","title":"6.6.3.7 Relying Party verifies device binding","text":"<p>Device binding is the property that an attestation is bound to a specific device (in fact, a WSCD) and cannot be used independent from that device. Device binding protects the attestation against copying or cloning, which enhances its security.</p> <p>A PID Provider or an Attestation Provider implements device binding by including a cryptographic public key in the attestation and signing it. The corresponding private key is protected by the certified WSCD used by the Wallet Instance.</p> <p>[Topic 9] explains that a WSCD generates a public-private key pair for each attestation upon request of the Wallet Instance, and that the Wallet Instance sends the public key to the PID Provider or Attestation Provider. Furthermore, it discusses how the PID or Attestation Provider can verify that the corresponding private key is really protected by the WSCD.</p> <p>During an interaction, the Relying Party verifies that the PID or attestation it received from a Wallet Instance is indeed bound to the WSCD used by the Wallet Instance. The Relying Party does so by requesting the Wallet Instance to sign some data using the private key corresponding to the public key in the PID or attestation. For this reason, device binding is also called 'proof of possession'. In [ISO/IEC 18013-5] it is called 'mdoc authentication'. In [SD-JWT VC] it is called 'key binding'.</p> <p>The technical implementation of this verification depends on which of the standards mentioned in [Topic 12] is supported by the Wallet Instance. Each of these standards specifies in detail how to carry out this verification.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6638-relying-party-verifies-or-trusts-user-binding","title":"6.6.3.8 Relying Party verifies or trusts User binding","text":"<p>User binding (sometimes also called 'holder binding') is the property that the subject of the PID or attestation, meaning the natural or legal person described in the PID or attestation, is in fact the person that presents the PID or attestation to the Relying Party. User binding prevents an attacker from presenting a PID or an attestation that they are not legally allowed to use.</p> <p>The mechanism(s) available for User binding depend on the presentation flow type (proximity or remote, supervised or unsupervised, see also Section 4.2.3), and on the attributes issued to the User by the PID Provider or Attestation Provider.</p> <p>In the first place, the Relying Party can always decide to trust the User authentication mechanisms implemented by the Wallet Instance and the WSCD (see [Topic 9]). This means that the Relying Party trusts that the Wallet Instance and the WSCD have properly authenticated the User before allowing the User to present the attributes. Note that:</p> <ul> <li> <p>This trust is not based on the outcome of any verification by the     Relying Party but is a-priori trust in (in particular) the certified     WSCD used by the Wallet Instance.</p> </li> <li> <p>Using this method implies that Relying Parties also trust device     binding, as described in Section 6.5.3. The Relying Party Instance     in fact first verifies that the PID or attestation is bound to a     WSCD trusted by the PID Provider or Attestation Provider, and then     trusts that the Wallet Instance and the WSCD have properly     authenticated the User.</p> </li> <li> <p>As a matter of fact, this User authentication method will always be     carried out, since a Wallet Instance must authenticate its User when     asking for User approval for presenting any attributes, and since     device binding is also mandatory.</p> </li> </ul> <p>In addition, in some cases, if a Relying Party does not want to only trust the above mechanism, it may be able to use User attributes to carry out User authentication. For example, if the PID or attestation contains a User portrait, the Relying Party may be able to visually or biometrically compare that portrait to the face of the person presenting the attestation or by a photo taken of it (by an automated machine or by a \"selfie\"). This will generally be possible in supervised proximity presentations by human inspection, or in an unsupervised proximity flow if equipped with the appropriate equipment It may also be possible to do this in unsupervised presentations by using face recognition technology, possibly even remotely. However, to generate trustworthy outcomes in such situations, special conditions are required, such as good lighting, clear instructions for the User for positioning their face and an approved liveness detection mechanism supporting Presentation Attacks Detection (PAD).</p> <p>Lastly, if the person presenting the PID or attestation is able to present an identity document, the Relying Party may be able to authenticate the User by comparing attributes from the PID or attestation, such as first and last name, to those in the identity document. However, this requires that the Relying Party can verify that the identity document really belongs to the person presenting it. In practice this will often mean that the identity document is a photo ID, and the presentation must consequently be done in proximity and be supervised, or done remotely and supported by PAD.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#6639-relying-party-verifies-combined-presentation-of-attributes","title":"6.6.3.9 Relying Party verifies combined presentation of attributes","text":"<p>According to the Regulation, a combined presentation of attributes is a request for attributes from two or more attestations in the same action. In this case, the Relying Party has to verify that these attestations belong to the same User, to prevent a hacked or fraudulent Wallet Instance from presenting attributes from different Users. [Topic 18] describes how the Relying Party Instance can verify this by checking that the public keys in the attestations are associated. Key association is described in [Topic 9].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#66310-relying-party-authenticates-the-wallet-instance-and-the-wallet-provider","title":"6.6.3.10 Relying Party authenticates the Wallet Instance and the Wallet Provider","text":"<p>Section 6.5.3 above describes that a Wallet Provider, during activation of a Wallet Instance, issues a Wallet Instance Attestation (WIA) to the Wallet Instance. When requesting attributes from a Wallet Instance, a Relying Party Instance:</p> <ul> <li> <p>ensures it obtains the WIA from the Wallet Instance. The technical     way this will be done is yet to be determined, see Section 6.5.3.</p> </li> <li> <p>verifies the signature over the WIA using the Wallet Provider trust     anchor obtained from the Wallet Provider Trusted List.</p> </li> <li> <p>verifies that the Wallet Instance is in possession of the private     key belonging to the public key in the WIA. This proves that the     Wallet Instance is authentic and is provided by the trusted Wallet     Provider.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#66311-relying-party-verifies-that-wallet-instance-is-not-suspended-or-revoked","title":"6.6.3.11 Relying Party verifies that Wallet Instance is not suspended or revoked","text":"<p>Section 6.6.2.4 explained how a PID Provider, or an Attestation Provider, can verify that a Wallet Instance is not suspended or revoked. The same mechanism is used by Relying Party Instances as well.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#66312-wallet-instance-enables-the-user-to-report-suspicious-requests-by-a-relying-party-and-to-request-a-relying-party-to-erase-personal-data","title":"6.6.3.12 Wallet Instance enables the User to report suspicious requests by a Relying Party and to request a Relying Party to erase personal data","text":"<p>A Wallet Instance will enable the User to report unlawful or suspicious requests for personal data by a Relying Party to a Data Protection Authority (DPA). To allow this, a Wallet Instance, perhaps in combination with the Wallet Provider backend, provides a dashboard allowing the User to lodge a complaint about a suspicious Relying Party presentation request to the DPA of the Member State that provided their EUDI Wallet. For more information and requirements, see [Topic 50].</p> <p>The dashboard also enables the User to request a Relying Party to immediately erase personal data. For more information and requirements, see [Topic 48].</p> <p>To be able to substantiate a complaint, or to list data that must be erased, the User needs to be informed about which attributes were requested by which Relying Parties. To enable this, a Wallet Instance maintains a log of all attributes that were requested and presented. The abovementioned dashboard also enables the User to view the log and lodge a complaint for any attribute in the log. More details about the logging functionality can be found in [Topic 19].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#664-pid-or-attestation-presentation-to-another-wallet-instance","title":"6.6.4 PID or attestation presentation to another Wallet Instance","text":"<p>Section 6.6.3 discussed the trust relationships necessary when a Wallet Instance receives a request from a Relying Party Instance and presents attributes to that Relying Party Instance.</p> <p>However, the Regulation requires that a Wallet Instance is also able to receive such a request from another Wallet Instance, and present attributes to that requesting Wallet Instance. For more information and requirements, please refer to [Topic 30].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#665-pid-or-attestation-management","title":"6.6.5 PID or attestation management","text":"<p>Starting from the issuance of a PID or attestation, the PID or attestation is managed by the User and the Wallet Provider. Management is performed until the PID, or attestation, is deleted or the Wallet Instance is de-installed by the User.</p> <p>For PID and attestation revocation, see [Topic 7]. The User can request the PID Provider or Attestation Provider to revoke the PID or attestation at least in case of loss or theft.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#666-pid-or-attestation-deletion","title":"6.6.6 PID or attestation deletion","text":"<p>In case the User no longer wants to retain a specific PID or attestation in their Wallet Instance, the User can delete it. If the PID Provider or Attestation Provider issued multiple attestations that have the same content and are valid, the Wallet Instance deletes them all. Deleting a PID or an attestation also means that the WSCD destroys the cryptographic key material associated with that PID or attestation. Before deleting the PID or attestation and the cryptographic keys, the (WSCD used by the) Wallet Instance must authenticate the User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#7-security-and-data-protection","title":"7 Security and Data Protection","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#71-introduction","title":"7.1 Introduction","text":"<p>This chapter is dedicated to the certification of EUDI Wallet Solutions, covering the legal foundation outlined in the amending Regulation (the Regulation), the overall certification approach, and its accompanying design principles. In addition, the main two supporting documents, the High-Level requirements (HLR) and the Risk assessment (RA) are described. Furthermore, supporting documents regarding certification of EUDI Wallets are provided in appendix 6 and will be expanded upon in following releases of the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#711-legal-basis-and-requirements","title":"7.1.1 Legal basis and requirements","text":"<p>The Regulation requires certification of EUDI Wallets to ensure conformity of the wallets with functional, security, and privacy related requirements, to achieve a high level of interoperability, security and trustworthiness. The use of relevant and available cybersecurity certification schemes under the Cybersecurity Act (CSA)<sup>1</sup> referenced in the Regulation implementing act (IA) should avoid divergent approaches and harmonise the implementation of the cybersecurity requirements laid down by the Regulation.</p> <p>Member States, according to Article 5c(3) of the Regulation, shall designate accredited conformity assessment bodies (CABs) which will carry out conformity assessment of EUDI Wallets solutions against the Regulation requirements. Once this designation has been made, Member States shall communicate to the European Commission the names and addresses of these public or private bodies under Article 5c(7) of the Regulation.</p> <p>EUDI Wallet Providers shall request (select, contract) one or more designated CABs to assess and certify the conformity of their EUDI Wallet Solution against the requirements of the Regulation.</p> <p>EUDI Wallet certification is then conducted by the CAB to evaluate and certify the conformity of the EUDI Wallet Solution (target of the certification) against requirements which will be established by:</p> <ul> <li> <p>Art. 5a(23) - Implementing act(s) on technical and operational     specifications and reference standards, for the requirements laid     down in Article 5a(4), (5), (8);</p> </li> <li> <p>Art. 5a(14) - Logical separation between data relating to the     provision of the EUDI Wallet and any other data held by the provider     of the EUDI Wallet;</p> </li> <li> <p>Art. 5a(24) -- Where applicable, implementing act(s) on     specifications, procedures and reference standards, in order to     facilitate the onboarding of users to the EUDI Wallet either by     electronic identification means conforming to level of assurance     (LoA) 'high' or by electronic identification means conforming to LoA     'substantial' in conjunction with additional remote onboarding     procedures that together meet the requirements of LoA 'high'.</p> </li> </ul> <p>The EUDI Wallet shall be certified to ensure conformity assessments but also security robustness assessment of conformance to a high level of security.</p> <p>In addition, Article 5c(5) provides for an optional certification of the personal data processing operations against Regulation (EU) 2016/679<sup>2</sup>. While this certification is not mandatory, the Regulation (EU) 2016/679 requirements fully apply to the EUDI Wallets and consequently to their providers.</p> <p>Article 5c(6) specifies that the Commission shall, by means of IA, establish a list of reference standards and, where necessary, establish specifications and procedures for the certification of EUDI Wallets.</p> <p>The certification process of EUDI Wallet Providers should leverage, rely on, and mandate the use of relevant and existing CSA certification schemes, or parts thereof, to certify the compliance of wallets or parts thereof, with the applicable cybersecurity requirements.</p> <p>For requirements that are not relevant for cybersecurity, and to the extent that cybersecurity certification schemes do not, or only partially, cover those cybersecurity requirements, Member States shall establish national certification schemes following the harmonised requirements set out in the IA. Member States shall transmit their draft national certification schemes to the European Digital Identity Cooperation Group established pursuant to Article 46e(1) (the 'Cooperation Group') which may issue opinions and recommendations.</p> <p>Certification shall be valid for up to five years, provided that a vulnerability assessment is carried out every two years. Where a vulnerability is identified and not remedied in a timely manner, certification shall be cancelled.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#72-overall-approach-to-certification-of-eudi-wallet-solutions","title":"7.2 Overall approach to Certification of EUDI Wallet Solutions","text":"<p>The certification of EUDI Wallets is of the utmost importance in ensuring their interoperability, security, trustworthiness, and robustness. Therefore, the overarching goal is the development of a dedicated CSA cybersecurity certification scheme. The scope of the scheme should cover both the EUDI Wallets and the underlying eID scheme. The Regulation allows the use of national certification schemes only for those parts that cannot be covered by European cybersecurity certification schemes and only until such appropriate European cybersecurity certification schemes are available.</p> <p>As defining and adopting a dedicated European CSA certification scheme for EUDI Wallets depends on the complex certification of different components and requires the full technical specification of the EUDI Wallets, the certification approach is structured in two phases: a short-term approach and a long-term approach. In the short-term, the IA of Article 5c(6) will be established, laying the groundwork for the creation of transitory national certification schemes. Consequently, building upon the foundation of the IA and transitory schemes, a dedicated CSA certification scheme for the EUDI Wallets will be established by ENISA.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#721-certification-of-eudi-wallet-solutions-in-the-short-term","title":"7.2.1 Certification of EUDI Wallet Solutions in the short term","text":"<p>Until a dedicated EUDI Wallets cybersecurity certification scheme under the CSA is available, the Regulation allows Member States to establish national certification schemes (following Article 5c(3)). Following Article 5c(6) of the Amending Regulation, an IA should be established which will serve as a harmonised guideline for the development of these transitory national certification schemes. It will leverage the use of relevant and existing CSA certification schemes by establishing specifications, procedures and reference technical standards for certification. This can include procedures and methods on how to derive evaluation activities from an architecture analysis, as well as a reference certification or a minimum set of risks to be mitigated.</p> <p>The guiding principles will take into consideration the composite nature of the EUDI Wallets, as well as the potential different architectures considering that the amending Regulation is technology and architecture neutral. Guidance on certification will allow for various proposed architecture models (including components, security functions, threats, mitigations), evaluation of their individual components (design, implementation, and effectiveness), and related risks as reflected through a common risk registry defined by the RA (see also Section 7.4).</p> <p>The IA will refer to standards, and where available, relevant European CSA schemes must be used. Currently, only the EUCC scheme for the cybersecurity certification of the ICT products, parts, or components for products<sup>3</sup> is available. For those cybersecurity requirements not covered by the EUCC, its supporting documents or an extended version of the EUCC, and for the non-cybersecurity requirements, the use of the ISO/IEC 17065<sup>4</sup> framework under Regulation (EC) 765/2008<sup>5</sup> is foreseen as the harmonised standard for certification. This may be complemented by ISO/IEC 17067<sup>6</sup> on the definition of schemes, which is like ENISA's previous work in the definition of other candidate EU certification schemes.</p> <p>In order to prepare the content on the IA, the transitory national certification schemes, and eventually a dedicated cybersecurity certification scheme under the CSA, the following key documents are prepared; a Risk and Cybersecurity Assessment, a HLR, and a mapping of relevant existing certification schemes (the latter two documents prepared by ENISA). In addition, an architecture survey has been conducted in the Toolbox Expert Group to gain insights into potential EUDI Wallet implementations and architectural possibilities.</p> <p>First, the RA aims to identify initial security and privacy threats (potential attacks carried out by different actors) and provide a list of assets which must be protected against the identified threats (critical, non-critical). The risks will provide input to a common risk registry, listing the minimum set of risks that should be addressed by Member States' implementations (see also Section 7.4). This common risk registry will serve as input to the IA, and later on to the detailed definition of privacy and security requirements to mitigate identified threats, at the relevant Level of Assurance.</p> <p>Second, the HLR document provides recommendations for the certification of EUDI Wallet implementations in the short term. It outlines the high-level process requirements for certification, in addition to high-level statements on the functional components of the EUDI Wallet. In essence, it defines 'what' will need to be certified and what the process steps will be. The identified requirements in this document form the skeleton of the IA [appendix 6]).</p> <p>Third, a mapping of existing certification schemes is performed to support the requirements of Article 5c(2) of the Regulation, mandating the use of relevant and existing European cybersecurity certification schemes. This mapping can include European, national, and other global schemes, in relation to the defined certification requirements (i.e., functional, process, privacy and security certification requirements).</p> <p>Fourth, once the mapping has been performed, it will be used as a basis for the development of certification schemes for EUDI Wallets, both at the national and European levels. The schemes will rely on the identified certification schemes to provide assurance, either in a composite approach, or through the establishment of assumptions on external components, such as the Wallet users' devices.</p> <p>Finally, non-cybersecurity requirements should ensure functional interoperability of the EUDI Wallet. To this end, the IA aims to define a requirement to CABs for functional testing, for example supported by test-suites or test cases.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#722-certification-of-eudi-wallet-solutions-in-the-long-term","title":"7.2.2 Certification of EUDI Wallet Solutions in the long term","text":"<p>In parallel to the work described above, ENISA is requested to draft a dedicated European cybersecurity certification scheme for the EUDI Wallets under the CSA. Once available, this CSA scheme should replace the national transitory schemes mentioned above for the cybersecurity requirement it will cover. This scheme should be based on harmonised requirements, and identify any additional requirements relevant for cybersecurity. The scheme should further detail the cybersecurity requirements, identify and set normative standards and define the target level of assurance or security for the relevant EUDI Wallet components.</p> <p>The scheme should also take into account the inputs of the ARF as part of the Toolbox process, and the input from the Certification subgroup (CSG), including deliverables mentioned above.</p> <p>Finally, ENISA is asked to also facilitate the transition from national certification schemes to the dedicated cybersecurity certification scheme under the CSA.</p> <p>A visual description of the overall EUDI Wallet certification process can be found in [annex 6].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#73-high-level-requirements-hlr","title":"7.3 High-Level Requirements (HLR)","text":"<p>The main goal of the HLR document is to provide recommendations for the certification of EUDI Wallets implementations in the short term. It outlines the high-level process requirements for certification. It also provides functional and process-related requirements derived from the Regulation, to facilitate certification.</p> <ul> <li> <p>Process-related: Related to the 'how' rather than the 'what' of     certification, such as process to define or obtain a certification.</p> </li> <li> <p>Functional: Describes functional requirements (i.e. what the     EUDI Wallet should be able to do, such as provisioning of     attributes). Most functional requirements are derived in the other     sections of the ARF coming from the Toolbox process.</p> </li> </ul> <p>To provide recommendations on certification, the document describes 121 requirements across five sections: legal requirements, scheme requirements, general scheme content, other scheme content and annexes.</p> <ul> <li> <p>Legal requirements: Describes the certification requirements,     certification scope stemming from the Regulation.</p> </li> <li> <p>Scheme requirements: Describes the EUDI Wallets, how to organise     certification, and the content of a scheme and the accompanying IA.</p> </li> <li> <p>General scheme content: Describes HLR related to content of the     scheme, such as accreditation, non-conformities, vulnerability     management, and peer assessment.</p> </li> <li> <p>Other scheme content: Describes supporting requirements, such as     licensing, surveillance, marketing, review and Wallet versioning.</p> </li> <li> <p>Annexes: Describes methods and procedures, dependency analysis,     acceptance criteria for assurance information and surveillance and     compliance monitoring.</p> </li> </ul> <p>Detailed information outlining the HLR certification requirements can be found in [annex 6].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#74-risk-based-approach-and-risk-registry","title":"7.4 Risk-based approach and risk registry","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#741-introduction","title":"7.4.1 Introduction","text":"<p>This chapter details the approach to develop harmonised guidelines for the development of the transitory national certification schemes. In addition to the process-based requirements in the HLR, security and privacy risks associated with the EUDI Wallets should be identified. Here, a risk-based approach is envisioned as the basis for certification by Member States. This is inspired by known processes such as for the General Data Protection Regulation (GDPR) and related Data Protection Impact Assessments (DPIA).</p> <p>The risk-based approach proposes that a common risk register will be developed that contains a comprehensive but non-exhaustive list of security and privacy risks. These risks are architecture-agnostic and provide a benchmark overview of the most critical risks. As a minimum, Member States schemes should require Wallet Providers to evaluate these risks and propose appropriate mitigations in a dedicated risk assessment that will be evaluated by CABs. The methodology to perform the individual RA will be up to the Member States, as long as it demonstrates taking into account the risks identified in the common risk register.</p> <p>This chapter will define, through iterative publications of the ARF, the rationale and approach to derive and categorise these identified risks and provide the iterative output of this exercise as a starting point of relevant privacy and security risks.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#742-rationale-and-approach","title":"7.4.2 Rationale and approach","text":"<p>Threats and risks play pivotal roles in the EUDI Wallets certification process as they are fundamental in achieving the security objectives described in the Regulation, such as privacy, confidentiality, integrity, availability, authenticity and non-repudiation of the EUDI Wallet and the data contained in it. Importantly, understanding the threats and risks in relation to the separate assets involved allows to determine the mitigation (and related certification requirements or standards).</p> <p>A simplified overview of this approach is shown below. In short, threats may cause risks to assets. These assets are the components and elements listed in the reference architecture, including the Wallet Secure Cryptographic Application (WSCA) and Wallet Secure Cryptographic Device (WSCD).</p> <p>Threats can be defined according to different threat models, such as the STRIDE approach for security threat risks, and the LINDDUN framework for privacy threat modelling. Such models allow to inspire and categorise threats such as spoofing, tampering, information disclosure, or linking. While security and privacy are closely related, they do start from a different mindset. Both security threat modelling and privacy threat modelling aim to create a system model, identify threats systematically for each system component and rely on threat categories to drive the analysis. This helps to eventually mitigate threats, for example through certification requirements. However, the security mindset is to protect assets, whereas the privacy mindset is to protect personal data of the user.</p> <p></p> <p>Figure 8: Relation between threats, risks, vulnerabilities, and assets</p> <p>A threat modelling approach will support deriving privacy and security risks and gain insights into potential risks within the system. The outcome of the threat model exercise will be a list of security and privacy risks, which in turn allows to identify the appropriate treatment, such as mitigation or acceptance. A common, minimum set of risks will form the foundation for the risk registry, which will be used by Member States as a benchmark to assess the security of their national transitory certification schemes.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#75-design-principles-and-assumptions","title":"7.5 Design principles and assumptions","text":"<p>In the approach to EUDI Wallet certification described above, a few design principles can be identified and will be further expanded upon through work in the CSG:</p> <ul> <li> <p>The amending Regulation requires the EUDI Wallets to be certified at     LoA 'high'. However, not all EUDI Wallet components may need to     individually meet LoA 'high' or be certified, for the overall EUDI     Wallet to reach that level of assurance.</p> </li> <li> <p>The transitory schemes are defined by the Member States which may     tailor them to their specific Wallet architectures. However, the aim     is to harmonise the underlying principles through the IA and provide     guidance or common requirements where relevant as no mutual     recognition of the national certification schemes is provided.</p> </li> <li> <p>The certification scheme will be a composite scheme. The object     certification will be the entire system (eID scheme, EUDI Wallet,     management thereof). It will therefore have to align with and rely     on other available international standards, certification schemes,     and conformity assessments.</p> </li> <li> <p>Certification should cover both cross-functional requirements,     including security and privacy, as well as functional requirements     in order to ensure European interoperability.</p> </li> <li> <p>The final EUDI Wallet certification implies a multitude of     certificates, however, the aim is to minimise this number to the     extent possible.</p> </li> <li> <p>The certification scheme should support a variety of different known     and unknown architectures.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#76-supporting-documents","title":"7.6 Supporting documents","text":"<p>Supporting documents applicable to the certification of the EUDI Wallet ecosystem have been assembled in [annex 6].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#8-document-development","title":"8 Document development","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#81-publication","title":"8.1 Publication","text":"<p>This document is made publicly available at https://github.com/eu-digital-identity-wallet/eudi-doc-architecture-and-reference-framework (GitHub repository) where it will be regularly updated.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#82-contributing","title":"8.2 Contributing","text":"<p>We value your feedback and encourage you to share any thoughts, suggestions, or concerns you may have regarding this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#821-providing-feedback","title":"8.2.1 Providing Feedback","text":"<p>To provide feedback on this document, please visit our GitHub repository. You can do so by navigating to the \"Issues\" tab and submitting a new issue or commenting on existing ones. Whether you've spotted a typo, have a suggestion for clarifying a section, or want to propose a new topic for inclusion, we welcome your feedback.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#8211-guidelines-for-adding-issues-to-the-github-repository","title":"8.2.1.1 Guidelines for adding issues to the Github repository","text":"<p>When adding issues to the Github repository, please follow these general guidelines:</p> <ul> <li> <p>Use clear and descriptive titles for your issues to provide a     concise summary of the problem or task. This helps others quickly     understand the issue at a glance.</p> </li> <li> <p>Provide a detailed description of the issue, including any     relevant context, background information. The description should be     comprehensive enough for others to understand the issue and take     appropriate action.</p> </li> <li> <p>Use one or more of the following labels to categorize issues. Labels     help organize and prioritize issues, making it easier to manage the repository.</p> </li> </ul> Label Description Content Clarifications Raise issues seeking clarification on specific content within the document. This could include explanations of concepts, definitions of terms, or examples to illustrate certain points. Suggestions for Improvements Propose suggestions to enhance the clarity, completeness, or accuracy of the document. This could involve restructuring sections, adding examples, or providing additional information. Errors and Corrections Identify errors such as typos, grammatical mistakes, or factual inaccuracies within the document and suggest corrections. Compatibility and Integration Issues related to how the document integrates with other systems or technologies, ensuring compatibility with different platforms or frameworks. Enhancement Requests Request new features, sections, or content to be added to the document to improve its usefulness or relevance. Formatting and Styling Feedback regarding the visual appearance, organization, and consistency of formatting within the document. Documentation Standards Discussions around adhering to documentation standards, conventions, or guidelines. Licence and Legal Concerns Questions or concerns related to the licensing of the document, usage rights, attribution requirements, or legal implications for contributors and users. Technical Clarification Raise issues seeking clarification on specific technical content within the document. <ul> <li> <p>Attach relevant files, screenshots, or links to additional     resources that provide context or assist in resolving the issue.     This can include references to related documentation or     discussions.</p> </li> <li> <p>Follow issue etiquette by conducting a search to see if the     issue has already been reported before creating a new one. This     helps avoid duplicate issues.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#8212-guidelines-for-discussing-existing-issues-in-the-github-repository","title":"8.2.1.2 Guidelines for discussing existing issues in the GitHub repository","text":"<p>When discussing existing issues in the Github repository, please follow these general guidelines:</p> <ul> <li> <p>Communicate with respect and courtesy towards other     contributors, maintain a professional tone, and avoid using language     that could be interpreted as confrontational or inflammatory.</p> </li> <li> <p>Provide context and background information to help others     understand your perspective. Explain the reasoning behind your     comments.</p> </li> <li> <p>Communicate your intentions and motivations behind your comments or     suggestions to avoid misunderstandings.</p> </li> <li> <p>Keep discussions focused on the technical aspects of the issue     at hand.</p> </li> <li> <p>Provide constructive feedback and suggestions in a helpful and     supportive manner. Instead of simply pointing out problems, offer     solutions or alternative approaches to address the issue positively.</p> </li> <li> <p>Approach discussions with a mindset of collaboration and     problem-solving.</p> </li> <li> <p>Be open to different perspectives, as contributors may have     different viewpoints, experiences, and expertise levels.</p> </li> <li> <p>Contribute to a positive and welcoming community atmosphere.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#822-managing-issues-and-pull-requests","title":"8.2.2 Managing Issues and Pull Requests","text":"<p>Our team is committed to managing issues and pull requests related to this document in a transparent and efficient manner to ensure that all feedback is addressed promptly and effectively. Here's how we manage issues and pull requests to set the right expectations:</p> <ul> <li> <p>Issue Management: When an issue is submitted, our team will review     and prioritise it based on its relevance and impact. We'll keep you     informed of the status of your issue and provide updates as it     progresses. Once resolved, we'll close the issue and incorporate     any necessary changes into the document.</p> </li> <li> <p>Pull Request Management: If you submit a pull request with proposed     changes or improvements to the document, our team will review it     carefully and provide feedback and suggestions for refinement.     We'll work collaboratively with you to ensure that your     contribution aligns with our document's objectives and maintains     consistency and quality. Once approved, we'll merge your changes     into the document and acknowledge your contribution.</p> </li> </ul> <p>Your feedback and contributions are essential in helping us maintain the quality and relevance of this document. We value your participation and strive to create a collaborative environment where everyone's contributions are valued and recognised.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#83-document-versioning","title":"8.3 Document Versioning","text":"<p>To avoid interoperability issues and changes to the ARF going unnoticed, a version control system and the following semantic versioning scheme (https://semver.org) will be used for the ARF.</p> <p>The ARF document will be published under a standardized release versioning format, MAJOR.MINOR.PATCH, where:</p> <p>MAJOR version is incremented (i.e., new version), when the ARF document has undergone significant changes, for example introducing some breaking changes in the architecture,</p> <p>MINOR version is incremented when new information has been added to the document or information has been removed from the document, and</p> <p>PATCH version is incremented when minor changes have been made (e.g., fixing typos).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#9-references","title":"9 References","text":"<p>For undated references, the latest version available applies.</p> Item Reference Standard name/details [2015/1505] COMMISSION IMPLEMENTING DECISION (EU) 2015/1505 of 8 September 2015 laying down technical specifications and formats relating to trusted lists pursuant to Article 22(5) of Regulation (EU) No 910/2014 of the European Parliament and of the Council on electronic identification and trust services for electronic transactions in the internal market. [eIDAS 2.0] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [ISO/IEC 18013-5] ISO/IEC 18013-5, Personal identification --- ISO-compliant driving licence - Part 5: Mobile driving licence (mDL) application, First edition, 2021-09. [ISO/IEC 18013-7] ISO/IEC CD TS 18013-7: Personal identification ISO-compliant driving licence - Part 7: Mobile driving licence (mDL) add-on functions [ISO/IEC 23220-1] ISO/IEC 23220-1:2023: Cards and security devices for personal identification - Building blocks for identity management via mobile devices, Part 1: Generic system architectures of mobile eID systems [ISO/IEC TS 23220-3] ISO/IEC CD TS 23220-3: Cards and security devices for personal identification - Building blocks for identity management via mobile devices, Part 3: Protocols and services for issuing phase [ISO/IEC TS 23220-4] ISO/IEC TS 23220-4: Cards and security devices for personal identification - Building blocks for identity management via mobile devices - Part 4: Protocols and services for operational phase. Retrievable from: https://www.iso.org/standard/79126.html [ISO 3166-1] ISO 3166-1: Codes for the representation of names of countries and their subdivisions -- Part 1: Country codes: alpha-2 country [ISO 3166-2] ISO 3166-2:2020: Codes for the representation of names of countries and their subdivisions --- Part 2: Country subdivision code [ISO/IEC 24760-1] ISO/IEC 24760-1:2019: IT Security and Privacy - A framework for identity management - Part 1: Terminology and concepts [ETSI TS 119 612] Electronic Signatures and Infrastructures (ESI); Trusted Lists [ETSI EN 319 411-1] ETSI EN 319 411-1 V1.3.1 (2021-05): Electronic Signatures and Infrastructures (ESI); Policy and security requirements for Trust Service Providers issuing certificates; Part 1: General requirements [ETSI EN 319 411-2] ETSI EN 319 411-2 V2.3.3 (2021-08): Electronic Signatures and Infrastructures (ESI); Policy and security requirements for Trust Service Providers issuing certificates; Part 2: Requirements for trust service providers issuing EU qualified certificates [ETSI TS 119 431-1] ETSI TS 119 431-1 - Electronic Signatures and Infrastructures (ESI); Policy and security requirements for trust service providers; Part 1: TSP service components operating a remote QSCD / SCDev. [ETSI TS 119 431-2] ETSI TS 119 431-2 - Electronic Signatures and Infrastructures (ESI); Policy and security requirements for trust service providers; Part 2: TSP service components supporting AdES digital signature creation [ETSI TS 119 432] ETSI TS 119 432 - Electronic Signatures and Infrastructures (ESI); Protocols for remote digital signature creation [ETSI EN 319 132-1] ETSI EN 319 132-1 - Electronic Signatures and Infrastructures (ESI); XAdES digital signatures; Part 1: Building blocks and XAdES baseline signatures (XAdES) [ETSI TS 119 182-1] ETSI TS 119 182-1 - Electronic Signatures and Infrastructures (ESI); JAdES digital signatures; Part 1: Building blocks and JAdES baseline signatures [ETSI EN 319 122-1] ETSI EN 319 122-1  - Electronic Signatures and Infrastructures (ESI); CAdES digital signatures; Part 1: Building blocks and CAdES baseline signatures [ETSI EN 319 162-1] ETSI EN 319 162-1 - Electronic Signatures and Infrastructures (ESI); Associated Signature Containers (ASiC); Part 1: Building blocks and ASiC baseline containers [ETSI EN 319 142] ETSI EN 319 142 - Electronic Signatures and Infrastructures (ESI); PAdES digital signatures; Part 1: Building blocks and PAdES baseline signatures [CEN EN 419 241-1] CEN EN 419 241-1 -- Trustworthy Systems Supporting Server Signing - Part 1: General System Security Requirements [SOG-IS] Agreed Cryptographic Mechanisms v1.2, https://www.sogis.eu/documents/cc/crypto/SOGIS-Agreed-Cryptographic-Mechanisms-1.2.pdf [SD-JWT] Selective Disclosure for JWTs (SD-JWT). Retrievable from: https://datatracker.ietf.org/doc/draft-ietf-oauth-selective-disclosure-jwt/ [SD-JWT VC] SD-JWT-based Verifiable Credentials (SD-JWT VC). Retrievable from: https://datatracker.ietf.org/doc/draft-ietf-oauth-sd-jwt-vc/ [RFC 2119] RFC 2119 - Key words for use in RFCs to Indicate Requirement Levels. S. Bradner, March 1997. [RFC 3339] RFC 3339 - Date and Time on the Internet: Timestamps, G. Klyne et al., July 2002 [RFC 4122] RFC 4122 - A Universally Unique Identifier (UUID) URN Namespace, P. Leach et al., July 2005 [RFC 5280] RFC 5280 - Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile, D. Kooper et al., May 2008 [RFC 3647] RFC 3647 - Internet X.509 Public Key Infrastructure Certificate Policy and Certification Practices Framework, S. Chokhani et al., November 2003 [RFC 7519] RFC 7519 - JSON Web Token (JWT): M. Jones, Microsoft; J. Bradley, Ping Identity; N. Sakimura, NRI. May 2015 [RFC 8259] RFC 8259 - The JavaScript Object Notation (JSON) Data Interchange Format, T. Bray, Ed., December 2017 [RFC 8392] RFC 8392 - CBOR Web Token (CWT): M. Jones, Microsoft; E. Wahlstroem, S. Erdtman, Spotify AB; H. Tschofenig, ARM Ltd.; May 2018 [RFC 8610] RFC 8610 - Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures, H. Birkholz et al., June 2019 [RFC 8943] RFC 8943 - Concise Binary Object Representation (CBOR) Tags for Date, M. Jones et al., November 2020 [RFC 8949] RFC 8949 - Concise Binary Object Representation (CBOR), C. Bormann et al., December 2020 [RFC 9396] RFC 9396 - OAuth 2.0 Rich Authorization Requests, T. Lodderstedt, yes.com; J. Richer, Bespoke Engineering; B. Campbell, Ping Identity. May 2023. [W3C VCDM v1.1] Sporny, M., Longley, D. and D. Chadwick, \"Verifiable Credentials Data Model 1.1\", W3C Recommendation, 03 March 2022 [W3C VCDM v2.0] Sporny, M. et al, \"Verifiable Credentials Data Model v2.0\", W3C Candidate Recommendations Draft, 16 April 2024 [OpenID4VCI] Lodderstedt, T. et al., \"OpenID for Verifiable Credential Issuance\", OpenID Foundation. Available: https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html [OpenID4VP] TBD, \"OpenID Connect for Verifiable Presentations\", OpenID Foundation. Available: https://openid.net/specs/openid-4-verifiable-presentations-1_0.html [HAIP] OpenID4VC High Assurance Interoperability Profile with SD-JWT VC -- draft 00, 9 January 2024 [6] [RPS] Communication from the Commission to the European Parliament, the Council, the European Economic and Social Committee and the Committee of the Regions on a Retail Payments Strategy for the EU (COM/2020/592 final) [X.509] ITU-T X.509 (2019) Cor. 2 (10/2023) [CSC] Cloud Signature Consortium (CSC) specification (API v2.0): This specification in ETSI standard where the SCA is \"defined\", namely ETSI TS 119 432. [Topic 6] Annex 2 - Relying Party authentication and User Approval [Topic 7] Annex 2 - Attestation validity checks and revocation [Topic 9] Annex 2 - Wallet Trust Evidence [Topic 10] Annex 2 - Issuing a (Q)EAA to the EUDI Wallet [Topic 11] Annex 2 - Pseudonym attestation [Topic 12] Annex 2 - (Q)EAA Rule Book [Topic 16] Annex 2 - Signing documents with EUDI Wallet [Topic 18] Annex 2 - Relying Party handling EUDI Wallet attribute combined presentation [Topic 19] Annex 2 - EUDI Wallet User Navigation requirements (Dashboard logs for transparency) [Topic 23] Annex 2 - PID issuance and (Q)EAA issuance [Topic 25] Annex 2 - Unified definition and controlled vocabulary for attestation attributes [Topic 26] Annex 2 - Attestations Catalogue [Topic 27] Annex 2 - Relying Party registry [Topic 30] Annex 2 - Interaction between EUDI Wallets [Topic 31] Annex 2 - PID, Wallet and Attestation Providers registration [Topic 34] Annex 2 - Migrate to a different wallet solution [Topic 37] Annex 2 - QES -- Remote Signing - Technical Requirements [Topic 38] Annex 2 - Wallet Instance Revocation [Topic 43] Annex 2 - Embedded disclosure policy [Topic 50] Annex 2 - Blueprint to report unlawful or suspicious request of data"},{"location":"eudi-doc-architecture-and-reference-framework/docs/arf/#10-annexes","title":"10 Annexes","text":"<ul> <li> <p>Annex 1 - Definitions</p> </li> <li> <p>Annex 2 - High Level Requirements</p> </li> <li> <p>[Annex 3] - Rulebooks  <ul> <li> <p>Annex 3.1 - PID rulebook</p> </li> <li> <p>Annex 3.2 - mDL rulebook</p> </li> <li> <p>Annex 3.3 - Pseudonym rulebook</p> </li> </ul> <li> <p>Annex 4 - Service Blueprints  <ul> <li> <p>Annex 4.1 - Blueprint Initialization and activation</p> </li> <li> <p>Annex 4.2 - Blueprint Online identification and authentication</p> </li> <li> <p>Annex 4.3 - Blueprint Issuing mDL</p> </li> <li> <p>Annex 4.4 - Blueprint Presenting mDL (proximity-supervised)</p> </li> <li> <p>Annex 4.5 - Blueprint Presenting mDL (proximity-unsupervised)</p> </li> <li> <p>Annex 4.6 - Blueprint Remote QES -- Creating a signature for     authentication / authorisation</p> </li> <li> <p>Annex 4.7 - Blueprint Remote QES - Enrolment</p> </li> <li> <p>Annex 4.8 - Blueprint Remote QES - Creating a signature     channelled by EUDI Wallet</p> </li> <li> <p>Annex 4.9 - Blueprint Remote QES - Creating a signature     channelled by Relying Party</p> </li> <li> <p>Annex 4.10 - Blueprint QES -- View history of signatures</p> </li> <li> <p>Annex 4.11 - Blueprint Local QES - Enrolment</p> </li> <li> <p>Annex 4.12 - Blueprint Local QES -- Creating a signature.</p> </li> </ul> <li> <p>Annex 5 - Design guides</p> <ul> <li> <p>Annex 5.1 - EUDI Wallet design guide</p> </li> <li> <p>Annex 5.2 - EUDI Wallet design guide -- data sharing scenarios</p> </li> </ul> </li> <li> <p>Annex 6 - Certification high level requirements</p> </li> <ol> <li> <p>Regulation (EU) 2019/881 on ENISA (the European Union Agency for Cybersecurity) and on information and communications technology cybersecurity certification (Cybersecurity Act). Available online at: Regulation - 2019/881 - EN - EUR-Lex (europa.eu) \u21a9</p> </li> <li> <p>Regulation (EU) 2016/679 of the European Parliament and of the Council of 27 April 2016 on the protection of natural persons regarding the processing of personal data and on the free movement of such data, and repealing Directive 95/46/EC (General Data Protection Regulation) \u21a9</p> </li> <li> <p>Commission Implementing Regulation (EU) 2024/482 of 31 January 2024 laying down rules for the application of Regulation (EU) 2019/881 of the European Parliament and of the Council as regards the adoption of the European Common Criteria-based cybersecurity certification scheme (EUCC). Available online at: Implementing regulation - EU - 2024/482 - EN - EUR-Lex (europa.eu) \u21a9</p> </li> <li> <p>ISO/IEC 17065:2012, 'Conformity assessment -- Requirements for bodies certifying products, processes and services'.\u00a0\u21a9</p> </li> <li> <p>Regulation (EC) No 765/2008 of the European Parliament and of the Council of 9 July 2008 setting out the requirements for accreditation and market surveillance relating to the marketing of products and repealing Regulation (EEC) No 339/93. Available online at: Regulation - 765/2008 - EN - EUR-Lex (europa.eu).\u00a0\u21a9</p> </li> <li> <p>ISO/IEC 17067:2013, 'Conformity assessment -- Fundamentals of product certification and guidelines for product certification schemes'.\u00a0\u21a9</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / annexes</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/#index-of-eudi-doc-architecture-and-reference-frameworkdocsannexes","title":"Index of eudi-doc-architecture-and-reference-framework/docs/annexes","text":"<ul> <li>annex-1</li> <li>annex-2</li> <li>annex-3</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / annexes / annex-1</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/#index-of-eudi-doc-architecture-and-reference-frameworkdocsannexesannex-1","title":"Index of eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1","text":"<ul> <li>annex-1-definitions</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / annexes / annex-2</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/#index-of-eudi-doc-architecture-and-reference-frameworkdocsannexesannex-2","title":"Index of eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2","text":"<ul> <li>annex-2-high-level-requirements</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / annexes / annex-3</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/#index-of-eudi-doc-architecture-and-reference-frameworkdocsannexesannex-3","title":"Index of eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3","text":"<ul> <li>annex-3.01-pid-rulebook</li> <li>annex-3.02-mDL-rulebook</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/#index-of-eudi-doc-architecture-and-reference-frameworkdocsdiscussion-topics","title":"Index of eudi-doc-architecture-and-reference-framework/docs/discussion-topics","text":"<ul> <li>README</li> <li>a-privacy-risks-and-mitigations</li> <li>b-re-issuance-and-batch-issuance-of-pids-and-attestations</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/img/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics / img</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/img/#index-of-eudi-doc-architecture-and-reference-frameworkdocsdiscussion-topicsimg","title":"Index of eudi-doc-architecture-and-reference-framework/docs/discussion-topics/img","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/media/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / media</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/media/#index-of-eudi-doc-architecture-and-reference-frameworkdocsmedia","title":"Index of eudi-doc-architecture-and-reference-framework/docs/media","text":""},{"location":"eudi-lib-android-wallet-core/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core</p>"},{"location":"eudi-lib-android-wallet-core/#index-of-eudi-lib-android-wallet-core","title":"Index of eudi-lib-android-wallet-core","text":"<ul> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>CustomizeSecureArea</li> <li>README</li> <li>SECURITY</li> <li>changelog</li> <li>docs</li> <li>licenses</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/#index-of-eudi-lib-android-wallet-coredocswallet-core","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core","text":"<ul> <li>eu.europa.ec.eudi.wallet</li> <li>eu.europa.ec.eudi.wallet.document</li> <li>eu.europa.ec.eudi.wallet.issue.openid4vci</li> <li>eu.europa.ec.eudi.wallet.logging</li> <li>eu.europa.ec.eudi.wallet.presentation</li> <li>eu.europa.ec.eudi.wallet.transfer.openid4vp</li> <li>eu.europa.ec.eudi.wallet.util</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/issuer-name/","title":"Issuer name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / issuer-name //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/issuerName</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/issuer-name/#issuername","title":"issuerName","text":"<p>[androidJvm] abstract val issuerName: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/as-pair/","title":"As pair","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document / as-pair //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/asPair</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/as-pair/#aspair","title":"asPair","text":"<p>[androidJvm] open fun asPair(): Pair &lt;String, String &gt;</p> <p>Converts this item to a pair of name and document type.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/component1/","title":"Component1","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document / component1 //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/component1</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/component1/#component1","title":"component1","text":"<p>[androidJvm] open operator fun component1(): String</p> <p>Destructures this item into a pair of name and document type.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/component2/","title":"Component2","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document / component2 //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/component2</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/component2/#component2","title":"component2","text":"<p>[androidJvm] open operator fun component2(): String</p> <p>Destructures this item into a pair of name and document type.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/doc-type/","title":"Doc type","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document / doc-type //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/docType</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/doc-type/#doctype","title":"docType","text":"<p>[androidJvm] abstract val docType: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document / name //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/name/#name","title":"name","text":"<p>[androidJvm] abstract val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-offer-tx-code-spec","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec","text":"<ul> <li>-input-mode</li> <li>-tx-code-spec</li> <li>description</li> <li>input-mode</li> <li>length</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-tx-code-spec/","title":"tx code spec","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec / -tx-code-spec //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/TxCodeSpec/TxCodeSpec</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-tx-code-spec/#txcodespec","title":"TxCodeSpec","text":"<p>[androidJvm] constructor(inputMode: Offer.TxCodeSpec.InputMode = NUMERIC, length: Int?, description: String? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/description/","title":"Description","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec / description //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/TxCodeSpec/description</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/description/#description","title":"description","text":"<p>[androidJvm] val description: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/input-mode/","title":"Input mode","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec / input-mode //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/TxCodeSpec/inputMode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/input-mode/#inputmode","title":"inputMode","text":"<p>[androidJvm] val inputMode: Offer.TxCodeSpec.InputMode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/length/","title":"Length","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec / length //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/TxCodeSpec/length</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/length/#length","title":"length","text":"<p>[androidJvm] val length: Int?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec / -input-mode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-offer-tx-code-spec-input-mode","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode","text":"<ul> <li>-n-u-m-e-r-i-c</li> <li>-t-e-x-t</li> <li>entries</li> <li>value-of</li> <li>values</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/entries/","title":"Entries","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec / -input-mode / entries //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/TxCodeSpec/InputMode/entries</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/entries/#entries","title":"entries","text":"<p>[androidJvm] val entries: EnumEntries &lt;Offer.TxCodeSpec.InputMode&gt;</p> <p>Returns a representation of an immutable list of all enum entries, in the order they're declared.</p> <p>This method may be used to iterate over the enum entries.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/value-of/","title":"Value of","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec / -input-mode / value-of //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/TxCodeSpec/InputMode/valueOf</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm] fun valueOf( value: String): Offer.TxCodeSpec.InputMode</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/value-of/#throws","title":"Throws","text":"IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/values/","title":"Values","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec / -input-mode / values //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/TxCodeSpec/InputMode/values</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/values/#values","title":"values","text":"<p>[androidJvm] fun values(): Array &lt;Offer.TxCodeSpec.InputMode&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/-n-u-m-e-r-i-c/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec / -input-mode / -n-u-m-e-r-i-c</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/-n-u-m-e-r-i-c/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-offer-tx-code-spec-input-mode-n-u-m-e-r-i-c","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/-n-u-m-e-r-i-c","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/-t-e-x-t/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -tx-code-spec / -input-mode / -t-e-x-t</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/-t-e-x-t/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-offer-tx-code-spec-input-mode-t-e-x-t","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-tx-code-spec/-input-mode/-t-e-x-t","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/expires-in/","title":"Expires in","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -refresh-token-t-o / expires-in //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO/expiresIn</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/expires-in/#expiresin","title":"expiresIn","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"expires_in\")</p> <p>val expiresIn: Long? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-open-id4-vp-request/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-open-id4-vp-request</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-open-id4-vp-request/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-processed-open-id4-vp-request","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-open-id4-vp-request","text":"<ul> <li>-processed-open-id4-vp-request</li> <li>generate-response</li> <li>mso-mdoc-nonce</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-open-id4-vp-request/-processed-open-id4-vp-request/","title":"processed open id4 vp request","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-open-id4-vp-request / -processed-open-id4-vp-request //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedOpenId4VpRequest/ProcessedOpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-open-id4-vp-request/-processed-open-id4-vp-request/#processedopenid4vprequest","title":"ProcessedOpenId4VpRequest","text":"<p>[androidJvm] constructor(processedDeviceRequest: ProcessedDeviceRequest, resolvedRequestObject: ResolvedRequestObject, msoMdocNonce: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-open-id4-vp-request/generate-response/","title":"Generate response","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-open-id4-vp-request / generate-response //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedOpenId4VpRequest/generateResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-open-id4-vp-request/generate-response/#generateresponse","title":"generateResponse","text":"<p>[androidJvm] open override fun generateResponse(disclosedDocuments: DisclosedDocuments, signatureAlgorithm: Algorithm?): ResponseResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-open-id4-vp-request/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-open-id4-vp-request / mso-mdoc-nonce //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedOpenId4VpRequest/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-open-id4-vp-request/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/element-identifier/","title":"Element identifier","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -sd-jwt-vc-item / element-identifier //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/SdJwtVcItem/elementIdentifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/element-identifier/#elementidentifier","title":"elementIdentifier","text":"<p>[androidJvm] open override val elementIdentifier: String</p>"},{"location":"eudi-lib-ios-wallet-kit/","title":"Index","text":"<p>Home / eudi-lib-ios-wallet-kit</p>"},{"location":"eudi-lib-ios-wallet-kit/#index-of-eudi-lib-ios-wallet-kit","title":"Index of eudi-lib-ios-wallet-kit","text":"<ul> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> <li>Sources</li> <li>changelog</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/Sources/","title":"Index","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/#index-of-eudi-lib-ios-wallet-kitsources","title":"Index of eudi-lib-ios-wallet-kit/Sources","text":"<ul> <li>EudiWalletKit</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/","title":"Index","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources / EudiWalletKit</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/#index-of-eudi-lib-ios-wallet-kitsourceseudiwalletkit","title":"Index of eudi-lib-ios-wallet-kit/Sources/EudiWalletKit","text":"<ul> <li>EudiWalletKit.docc</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/","title":"Index","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources / EudiWalletKit / EudiWalletKit.docc</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/#index-of-eudi-lib-ios-wallet-kitsourceseudiwalletkiteudiwalletkitdocc","title":"Index of eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc","text":"<ul> <li>EudiWalletKit</li> <li>GetStarted</li> <li>IssueDocuments</li> <li>ManageDocuments</li> <li>PresentationService</li> <li>Resources</li> <li>SecureAreas</li> <li>WalletUI</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/Resources/","title":"Index","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources / EudiWalletKit / EudiWalletKit.docc / Resources</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/Resources/#index-of-eudi-lib-ios-wallet-kitsourceseudiwalletkiteudiwalletkitdoccresources","title":"Index of eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/Resources","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#index-of-eudi-srv-web-issuing-eudiw-py","title":"Index of eudi-srv-web-issuing-eudiw-py","text":"<ul> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> <li>api_docs</li> <li>app</li> <li>changelog</li> <li>install</li> <li>licenses</li> <li>support</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/#index-of-eudi-srv-web-issuing-eudiw-pyapi_docs","title":"Index of eudi-srv-web-issuing-eudiw-py/api_docs","text":"<ul> <li>add_credential</li> <li>authorization</li> <li>batch_credential</li> <li>configuration</li> <li>credential</li> <li>credential_offer</li> <li>deferred</li> <li>notification</li> <li>pre-authorized</li> <li>token</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / app</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/#index-of-eudi-srv-web-issuing-eudiw-pyapp","title":"Index of eudi-srv-web-issuing-eudiw-py/app","text":"<ul> <li>static</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / app / static</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/#index-of-eudi-srv-web-issuing-eudiw-pyappstatic","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static","text":"<ul> <li>images</li> <li>issuer_guides</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/images/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / app / static / images</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/images/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticimages","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/images","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / app / static / issuer_guides</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guides","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides","text":"<ul> <li>guides_images</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / app / static / issuer_guides / guides_images</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guidesguides_images","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images","text":"<ul> <li>credential_offer</li> <li>credential_offer_deferred</li> <li>credential_offer_dynamic_age_over18</li> <li>credential_offer_pre-auth</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / app / static / issuer_guides / guides_images / credential_offer</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guidesguides_imagescredential_offer","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_deferred/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / app / static / issuer_guides / guides_images / credential_offer_deferred</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_deferred/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guidesguides_imagescredential_offer_deferred","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_deferred","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_dynamic_age_over18/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / app / static / issuer_guides / guides_images / credential_offer_dynamic_age_over18</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_dynamic_age_over18/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guidesguides_imagescredential_offer_dynamic_age_over18","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_dynamic_age_over18","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_pre-auth/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / app / static / issuer_guides / guides_images / credential_offer_pre-auth</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_pre-auth/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guidesguides_imagescredential_offer_pre-auth","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_pre-auth","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/support/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / support</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/#index-of-eudi-srv-web-issuing-eudiw-pysupport","title":"Index of eudi-srv-web-issuing-eudiw-py/support","text":"<ul> <li>suport</li> </ul>"},{"location":"eudi-web-booking-service-demo/","title":"Index","text":"<p>Home / eudi-web-booking-service-demo</p>"},{"location":"eudi-web-booking-service-demo/#index-of-eudi-web-booking-service-demo","title":"Index of eudi-web-booking-service-demo","text":"<ul> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>public</li> </ul>"},{"location":"eudi-web-booking-service-demo/public/","title":"Index","text":"<p>Home / eudi-web-booking-service-demo / public</p>"},{"location":"eudi-web-booking-service-demo/public/#index-of-eudi-web-booking-service-demopublic","title":"Index of eudi-web-booking-service-demo/public","text":"<ul> <li>images</li> </ul>"},{"location":"eudi-web-booking-service-demo/public/images/","title":"Index","text":"<p>Home / eudi-web-booking-service-demo / public / images</p>"},{"location":"eudi-web-booking-service-demo/public/images/#index-of-eudi-web-booking-service-demopublicimages","title":"Index of eudi-web-booking-service-demo/public/images","text":""},{"location":"eudi-web-verifier/","title":"Index","text":"<p>Home / eudi-web-verifier</p>"},{"location":"eudi-web-verifier/#index-of-eudi-web-verifier","title":"Index of eudi-web-verifier","text":"<ul> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> </ul>"},{"location":"iOS/","title":"Index","text":"<p>Home / iOS</p>"},{"location":"iOS/#index-of-ios","title":"Index of iOS","text":"<ul> <li>Build the App</li> <li>HowTo Install</li> <li>HowTo Issue (Credential Offer)</li> <li>HowTo Issue (Scoped)</li> <li>HowTo Present (Proximity)</li> <li>HowTo Present (Same Device)</li> <li>Running with Local Services</li> <li>Running with Remote Services</li> <li>Self-signed Certificates</li> </ul>"},{"location":"temp/","title":"Index","text":"<p>Home / temp</p>"},{"location":"temp/#index-of-temp","title":"Index of temp","text":"<ul> <li>coming_soon</li> <li>coming_soon_1</li> <li>coming_soon_10</li> <li>coming_soon_11</li> <li>coming_soon_12</li> <li>coming_soon_13</li> <li>coming_soon_14</li> <li>coming_soon_15</li> <li>coming_soon_2</li> <li>coming_soon_3</li> <li>coming_soon_4</li> <li>coming_soon_5</li> <li>coming_soon_6</li> <li>coming_soon_7</li> <li>coming_soon_8</li> <li>coming_soon_9</li> </ul>"},{"location":"temp/coming_soon/","title":"Coming soon","text":"<p>Home / temp / coming_soon</p>"},{"location":"temp/coming_soon/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_1/","title":"Coming soon 1","text":"<p>Home / temp / coming_soon_1</p>"},{"location":"temp/coming_soon_1/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_10/","title":"Coming soon 10","text":"<p>Home / temp / coming_soon_10</p>"},{"location":"temp/coming_soon_10/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_11/","title":"Coming soon 11","text":"<p>Home / temp / coming_soon_11</p>"},{"location":"temp/coming_soon_11/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_12/","title":"Coming soon 12","text":"<p>Home / temp / coming_soon_12</p>"},{"location":"temp/coming_soon_12/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_13/","title":"Coming soon 13","text":"<p>Home / temp / coming_soon_13</p>"},{"location":"temp/coming_soon_13/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_14/","title":"Coming soon 14","text":"<p>Home / temp / coming_soon_14</p>"},{"location":"temp/coming_soon_14/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_15/","title":"Coming soon 15","text":"<p>Home / temp / coming_soon_15</p>"},{"location":"temp/coming_soon_15/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_2/","title":"Coming soon 2","text":"<p>Home / temp / coming_soon_2</p>"},{"location":"temp/coming_soon_2/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_3/","title":"Coming soon 3","text":"<p>Home / temp / coming_soon_3</p>"},{"location":"temp/coming_soon_3/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_4/","title":"Coming soon 4","text":"<p>Home / temp / coming_soon_4</p>"},{"location":"temp/coming_soon_4/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_5/","title":"Coming soon 5","text":"<p>Home / temp / coming_soon_5</p>"},{"location":"temp/coming_soon_5/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_6/","title":"Coming soon 6","text":"<p>Home / temp / coming_soon_6</p>"},{"location":"temp/coming_soon_6/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_7/","title":"Coming soon 7","text":"<p>Home / temp / coming_soon_7</p>"},{"location":"temp/coming_soon_7/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_8/","title":"Coming soon 8","text":"<p>Home / temp / coming_soon_8</p>"},{"location":"temp/coming_soon_8/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"temp/coming_soon_9/","title":"Coming soon 9","text":"<p>Home / temp / coming_soon_9</p>"},{"location":"temp/coming_soon_9/#coming-soon","title":"Coming Soon","text":"<p>This section is currently under development. Please check back later for updates.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework</p>"},{"location":"eudi-doc-architecture-and-reference-framework/#the-european-digital-identity-wallet","title":"The European Digital Identity Wallet","text":""},{"location":"eudi-doc-architecture-and-reference-framework/#the-digital-identity-regulation","title":"The Digital Identity Regulation","text":"<p>Under the Electronic Identification, Authentication and Trust Services (eIDAS) Regulation, EU Member States may, on a voluntary basis, notify and recognise, national electronic identification schemes in their Member States. The recognition of notified electronic identification became mandatory in 2018. Yet, there is no requirement for Member States to develop a national electronic identification and to make it interoperable with those in other Member States. This has led to discrepancies between countries. The new Regulation on digital identity addresses shortcomings in eIDAS by improving the effectiveness of the framework and extending its benefits to the private sector. Member States will offer citizens and businesses digital wallets that will be able to link various aspects of their national digital identities. These may be provided by public authorities or the private sector, if they are recognized by the Member States.</p> <p>The EU Digital Identity Wallet will be:</p> <ul> <li>made available to anyone who wants to use it:\u00a0 Any EU citizen, resident,   and business in the EU who would like to make use of the EU\u00a0Digital Identity   will be able to do so.</li> <li>used widely: EU\u00a0Digital Identity Wallets will be used as a way to   identify users when providing them with access to public and private digital   services across the EU.</li> <li>controlled by users: The EU Digital Identity Wallets will enable people   to choose and keep track of their identity, data and certificates which they   share with third parties. Anything which is not necessary to share will not   be shared.</li> </ul> <p>Consumers should also be able to access services online without having to use private platforms or unnecessarily sharing personal data. They will have full control of the data they share.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/#the-architecture-and-reference-framework","title":"The Architecture and Reference Framework","text":"<p>On 3 June 2021, the European Commission adopted a Recommendation calling on Member States to work towards the development of a Toolbox including a technical Architecture and Reference Framework a set of common standards and technical specifications and a set of common guidelines and best practices.</p> <p>The Recommendation specifies that these outcomes will serve as a basis for the implementation of the European Digital Identity Framework, without the process of developing the Toolbox interfering with, or prejudging the legislative process.</p> <p>The Recommendation foresees that the Toolbox is developed by Member States\u2019 experts in the eIDAS Expert Group  in close coordination with the Commission and, where relevant for the functioning of the European Digital Identity (EUDI) Wallet infrastructure, other concerned public and private sector parties.</p> <p>This repository contains the \"Architecture and Reference Framework\" (hereinafter the ARF).</p> <p>The current authoritative version is tagged as realease/tag in this repository.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/#contributing","title":"Contributing","text":"<p>Please read CONTRIBUTING.md for details on our code of conduct, and the process for submitting pull requests to us.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/#versioning","title":"Versioning","text":"<p>We use SemVer for versioning. For the versions available, see the tags on this repository.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/#authors","title":"Authors","text":"<p>See the list of contributors who participated in this project.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/#license","title":"License","text":"<p>This project is licensed under the Attribution 4.0 International - see the LICENSE.txt file for details.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/#european-commission-website","title":"European Commission website","text":"<ul> <li>Contact the European Commission</li> <li>Follow the European Commission on social media</li> <li>Resources for partners</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home / eudi-doc-architecture-and-reference-framework / CONTRIBUTING</p>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/#contributing-to-the-european-digital-identity-wallet-architecture-and-reference-framework","title":"Contributing to The European Digital Identity Wallet Architecture and Reference Framework","text":"<p>We welcome contributions to The European Digital Identity Wallet Architecture and Reference Framework (ARF). Whether you are fixing a bug, proposing a new feature, or improving documentation, we appreciate any contributions that help improve the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/#how-to-contribute","title":"How to Contribute","text":"<ol> <li>Fork the repository and create your changes on a separate branch.</li> <li>Submit a pull request targeting the <code>main</code> branch.</li> <li>Your pull request will be reviewed and, if approved, merged.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/#guidelines","title":"Guidelines","text":"<ul> <li>Follow the existing style and conventions.</li> <li>Document any additions or changes to the text.</li> <li>Proofread your work thoroughly before submitting a pull request.</li> <li>Keep each pull request focused on a single change or fix.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>All contributors are expected to abide by our Code of Conduct (pending). Please ensure you are familiar with its contents before contributing.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/#license","title":"License","text":"<p>By contributing to The European Digital Identity Wallet Architecture and Reference Framework, you agree that your contributions will be licensed under the Project's License.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/","title":"SECURITY","text":"<p>Home / eudi-doc-architecture-and-reference-framework / SECURITY</p>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/#the-european-digital-identity-wallet","title":"The European Digital Identity Wallet","text":"<p>Digital Identity</p> <p></p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/#the-proposed-digital-identity-regulation","title":"The proposed Digital Identity Regulation","text":"<p>Under the Electronic Identification, Authentication and Trust Services (eIDAS) Regulation, EU Member States may, on a voluntary basis, notify and recognise, national electronic identification schemes in their Member States. The recognition of notified electronic identification became mandatory in 2018. Yet, there is no requirement for Member States to develop a national electronic identification and to make it interoperable with those in other Member States. This has led to discrepancies between countries. The new proposal for a Regulation on digital identity will address shortcomings in eIDAS by improving the effectiveness of the framework and extending its benefits to the private sector. Member States will offer citizens and businesses digital wallets that will be able to link various aspects of their national digital identities. These may be provided by public authorities or the private sector, if they are recognised by the Member States.</p> <p>The EU Digital Identity Wallet will be:</p> <ul> <li>made available to anyone who wants to use it:\u00a0 Any EU citizen, resident, and business in the EU who would like to make use of the EU\u00a0Digital Identity will be able to do so.</li> <li>used widely: EU\u00a0Digital Identity Wallets will be used as a way to identify users when providing them with access to public and private digital services across the EU.</li> <li>controlled by users: The EU Digital Identity Wallets will enable people to choose and keep track of their identity, data and certificates which they share with third parties. Anything which is not necessary to share will not be shared.</li> </ul> <p>Consumers should also be able to access services online without having to use private platforms or unnecessarily sharing personal data. They will have full control of the data they share.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/#the-architecture-and-reference-framework","title":"The Architecture and Reference Framework","text":"<p>On 3 June 2021, the European Commission adopted a Recommendation calling on Member States to work towards the development of a Toolbox including a technical Architecture and Reference Framework a set of common standards and technical specifications and a set of common guidelines and best practices.</p> <p>The Recommendation specifies that these outcomes will serve as a basis for the implementation of the proposal for a European Digital Identity Framework, without the process of developing the Toolbox interfering with, or prejudging the legislative process.</p> <p>The Recommendation foresees that the Toolbox is developed by Member States\u2019 experts in the eIDAS Expert Group  in close coordination with the Commission and, where relevant for the functioning of the European Digital Identity (EUDI) Wallet infrastructure, other concerned public and private sector parties.</p> <p>This repository contains the \"Architecture and Reference Framework\" (hereinafter the ARF).</p> <p>The current authoritative version is tagged as release/tag in this repository.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/#contributing","title":"Contributing","text":"<p>Please read CONTRIBUTING.md for details on our code of conduct, and the process for submitting pull requests to us.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/#versioning","title":"Versioning","text":"<p>We use SemVer for versioning. For the versions available, see the tags on this repository.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/#authors","title":"Authors","text":"<p>See the list of contributors who participated in this project.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/#licence","title":"Licence","text":"<p>This project is licensed under the Attribution 4.0 International - see the LICENCE file for details.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/#european-commission-website","title":"European Commission website","text":"<ul> <li>Contact the European Commission</li> <li>Follow the European Commission on social media</li> <li>Resources for partners</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/","title":"Architecture and reference framework main","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / architecture-and-reference-framework-main</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#european-digital-identity-wallet-architecture-and-reference-framework-150","title":"European Digital Identity Wallet Architecture and Reference Framework 1.5.0","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#11-context","title":"1.1 Context","text":"<p>On 3 June 2021, the European Commission adopted a Recommendation ([COMMISSION RECOMMENDATION (EU) 2021/946 of 3 June 2021 on a Common Union Toolbox for a coordinated approach towards a European Digital Identity Framework, OJ L 210/51, 14.6.2021) calling on Member States to work closely together with the Commission towards the development of a Toolbox including a technical Architecture and Reference Framework (hereinafter the ARF), a set of common standards and technical specifications and a set of common guidelines and best practices.</p> <p>The Recommendation specifies that these outcomes will serve as a basis for the implementation of the [European Digital Identity Regulation], without the process of developing the Toolbox interfering with, or prejudging the legislative process.</p> <p>The Recommendation establishes a structured framework for cooperation between Member States, the Commission, and, where relevant, private sector operators to develop the Toolbox. The European Digital Identity Cooperation Group (EDICG), formerly known as the eIDAS Expert Group, is responsible for:</p> <ul> <li>exchange best practices and cooperate with the Commission on emerging policy initiatives in the field of digital identity wallets, electronic identification means and trust services;</li> <li>advising the Commission in the preparation of draft implementing and delegated acts;</li> <li>supporting Supervisory Bodies in the implementation of the [European Digital Identity Regulation];</li> <li>organising peer reviews of electronic identification schemes;</li> <li>engaging with the Commission and other relevant stakeholders to develop a Common Union Toolbox;</li> </ul> <p>The European Digital Identity Cooperation Group's page can be found at the official page.</p> <p>The European Digital Identity Cooperation Group has since further developed the concepts and specifications for the European Digital Identity Framework. The current ARF version 1.5.0 is based on the legal text adopted by the co-legislators, including the adopted Commission Implementing Regulations:</p> <ul> <li>CIR 2024/2977 regarding PID and EAA,</li> <li>CIR 2024/2979 regarding integrity and core functionalities,</li> <li>CIR 2024/2980 regarding ecosystem notifications,</li> <li>CIR 2024/2981 regarding certification of Wallet Solutions,</li> <li>CIR 2024/2982 regarding protocols and interfaces.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#12-purpose-of-this-document","title":"1.2 Purpose of this document","text":"<p>The purpose of this document is to explain the architecture of the EUDI Wallet ecosystem and all of its components, as well as how these components will interact to ensure the security of the ecosystem and the privacy of its Users. Also, it serves as background information to allow a better understanding of the the high-level requirements established in Annex 2.</p> <p>Additionally, this document forms a reference to create uniform conditions for the implementation of the [European Digital Identity Regulation] and to define the technical specifications, standards and procedures that the Commission will develop for the purpose of implementing this Regulation.</p> <p>Finally, this document is used to develop the Wallet Solution reference implementation.</p> <p>The document presents a state-of-play of ongoing work of the European Digital Identity Cooperation Group and does not imply any formal agreement regarding its content. This document will be complemented and updated over time through the process of establishing the toolbox, as described in Chapter 8.</p> <p>This document holds no legal value and does not prejudge the final mandatory legal requirements for the EUDI Wallet ecosystem. Only the adopted [European Digital Identity Regulation], and the implementing and delegated acts adopted under that Regulation, are mandatory.  This document serves as a foundation for regularly updating the implementing acts, ensuring alignment with technological and standards developments.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#13-relation-to-the-large-scale-pilots-lsp","title":"1.3 Relation to the Large-Scale Pilots (LSP)","text":"<p>To support the development of a reference implementation of a Wallet Solution and to pilot its usage across different priority use cases, the Commission launched a call for proposals on 22 February 2022 under the Digital Europe Programme to pilot use cases for the EUDI Wallet ecosystem at a large-scale.</p> <p>The objective of the Large-Scale Pilots (LSP) call is to support the piloting of the EUDI Wallet ecosystem around a range of use cases involving both public and private sector stakeholders. The LSPs will test the EUDI Wallet ecosystem in both national and cross-borders contexts and integrate with the iterative development of the reference application.</p> <p>The works of the LSPs will be aligned with the ARF, which will guide pilot system design and architecture development together with the release of the reference implementation.</p> <p>The LSPs are expected to provide feedback on the ARF as they develop and interact with Relying Party services, Qualified or non-qualified Electronic Attestations of Attributes (Q)EAA Providers, Person Identification Data (PID) Providers, Qualified and non-Qualified Trust Service Providers and Users in meaningful interactions under the proposed use cases.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#14-definitions","title":"1.4 Definitions","text":"<p>The definitions used in this document can be found in Annex 1 of this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#15-scope","title":"1.5 Scope","text":"<p>The EUDI Wallet Architecture and Reference Framework (ARF) document defines the structural and functional aspects of the EUDI Wallet ecosystem, detailing its key components and their interactions. It provides a technical foundation to ensure interoperability, security, and privacy, aligning with the high-level requirements specified in Annex 2. The ARF serves as a reference for the harmonized implementation of the [European Digital Identity Regulation], guiding the development of technical specifications, standards, and operational procedures.</p> <p>This document only applies to EUDI Wallet ecosystems compliant with the [European Digital Identity Regulation], ensuring consistency in architecture and implementation. It is designed to support the development of the Wallet Solution reference implementation while remaining adaptable to technological and regulatory advancements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#16-additional-topics","title":"1.6 Additional topics","text":"<p>In this version 1.5.0 of the ARF, several key areas still require further exploration and refinement. These topics will be discussed in collaboration with Member States, the European Digital Identity Cooperation Group, civil society, industry representatives, and professionals, ensuring comprehensive feedback from all relevant stakeholders. The outcomes of these discussions will be incorporated into future versions of this ARF. The document will be iteratively updated to improve its content and address emerging topics, with the process for providing feedback and details on how updates will be managed outlined in Chapter 8.</p> <p>Among the areas identified for further discussion are:</p> <ul> <li>privacy risks and mitigations,</li> <li>the re-issuance and batch issuance of PIDs and attestations,</li> <li>Wallet Unit Attestation (WUA),</li> <li>embedded disclosure policies,</li> <li>the use of pseudonyms.</li> </ul> <p>Other topics that will be developed include:</p> <ul> <li>the Digital Credential API,</li> <li>Zero Knowledge Proofs (ZKP),</li> <li>transaction logs maintained by the Wallet Unit,</li> <li>scenarios involving a natural person representing another natural person,</li> <li>Wallet-to-Wallet interactions,</li> <li>combined presentations of attestations,</li> <li>User requests for data deletion by Relying Parties,</li> <li>mechanisms for Users to report unlawful or suspicious data requests to data protection authorities (DPAs),</li> <li>data portability.</li> </ul> <p>Further discussions will explore the following topics:</p> <ul> <li>the development of catalogues for attestations,</li> <li>secure cryptographic interfaces between the Wallet Instance and the WSCA,</li> <li>User interfaces with Wallet Instances,</li> <li>authentication mechanisms for Users to access their devices,</li> <li>certificate transparency,</li> <li>support and maintenance responsibilities of Wallet Providers,</li> <li>the EUDI Wallet Trust Mark,</li> <li>the PID Rulebook,</li> <li>transactional data needed by Wallet Units in payments and other use cases.</li> </ul> <p>A detailed list of these topics and the progress of their development is available on GitHub.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2-eudi-wallet-functionalities","title":"2 EUDI Wallet functionalities","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#21-introduction","title":"2.1 Introduction","text":"<p>The EUDI Wallet ecosystem is designed as a secure, User-controlled digital environment that enables Users to use their Wallet Unit to manage and present their person identification data (PID) and attestations across both public and private services in the EU. Its functionalities are built around security, privacy, and User control, ensuring seamless interactions with Relying Parties and other entities, while adhering to data protection principles.  </p> <p>This chapter outlines the core functionalities of Wallet Solutions, as defined by the [European Digital Identity Regulation], and examines how the requirements for its implementation align with real-world use cases where Users will use their Wallet Unit.  </p> <p>The functionalities of a Wallet Unit can be grouped into the following categories:  </p> <ul> <li>Secure identification and authentication, ensuring that Users can present person identification data in a trusted environment.  </li> <li>Exchanging qualified and non-qualified User attributes through secure and verifiable electronic attestations of attributes.  </li> <li>Electronic signing of documents or data, allowing Users to create legally recognized qualified electronic signatures and seals.</li> </ul> <p>These functionalities are discussed in the next three sections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#22-identification-and-authentication","title":"2.2 Identification and authentication","text":"<p>Using their Wallet Units, Users are able to:  </p> <ul> <li>Identify and authenticate to online and offline services, while using selective disclosure of attributes as well as User approval. This ensures that only necessary and User-approved attributes are presented to Relying Parties, which minimises exposure of personal information.  </li> <li>Generate and use pseudonyms for authentication, to enhance privacy and prevent tracking.  </li> <li>Securely authenticate Relying Parties or other Wallet Units, making sure that attributes are only presented to trusted entities.  </li> <li>Onboard seamlessly with PID Providers or attestation Providers by leveraging existing electronic identification schemes, for a smooth and secure registration process.  </li> <li>Be informed whether a Relying Party is authorised or registered to receive the requested attributes.</li> <li>Access a transaction log via a dashboard, allowing Users to:  <ul> <li>Review past interactions with Relying Parties and Wallet Units.  </li> <li>Request data erasure under the GDPR Article 17 to maintain privacy.  </li> <li>Report suspicious Relying Parties to the relevant national data protection authority.</li> </ul> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#23-attribute-exchange-mechanism-using-attestations","title":"2.3 Attribute Exchange Mechanism using Attestations","text":"<p>Using their Wallet Solutions, Users are able to:  </p> <ul> <li>Request, store, and present personal identification data and electronic attestations of attributes under their sole control, ensuring secure usage in both online and offline scenarios.  </li> <li>Backup a list of their attributes, attestations, and configurations, guaranteeing compliance with data portability rights.  </li> <li>Prevent tracking by Relying Parties when using attestations, ensuring privacy-preserving interactions.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#24-qualified-electronic-signature","title":"2.4 Qualified electronic signature","text":"<p>Using their Wallet Solutions, Users are able to:  </p> <ul> <li>Create qualified electronic signatures and seals for legally binding digital transactions.  </li> <li>Sign documents using qualified electronic signatures, which are provided by default and free of charge within the Wallet Unit, ensuring universal accessibility and compliance with legal standards.</li> </ul> <p>These functionalities are implemented by using the authentication and signing capabilities of the Wallet Unit as a part of a local QSCD, or a remote QSCD managed by a QTSP. See [Topic 16] and [Topic 37].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#25-the-role-of-use-cases-in-the-development-of-the-architecture-and-reference-framework","title":"2.5 The role of use cases in the development of the Architecture and Reference Framework","text":"<p>The development of the Architecture and Reference Framework (ARF) is strategically driven by real-world use cases, ensuring that the User experience, value proposition, and requirements of the EUDI Wallet ecosystem are effectively addressed. To achieve this, the European Digital Identity Cooperation Group initially created service blueprints for each use case, which detail service touch points, components, and processes.</p> <p>These blueprints serve a dual purpose: they play a crucial role in service design, enhancing both User experience and operational efficiency, while also identifying areas for improvement. As a foundational element, these blueprints shape the development of common specifications, providing comprehensive yet flexible solutions that can accommodate alternative approaches and optional steps.</p> <p>It is important to note that User journeys may vary based on the specific implementation approach, influencing aspects such as data retrieval and User approval processes. The Annexes contain detailed descriptions of these blueprints, ensuring transparency and adaptability.</p> <p>The European Digital Identity Cooperation Group has outlined service blueprints for the following key use cases:</p> <ul> <li>Identification and authentication to access online services, see Section 2.5.1,</li> <li>Qualified Electronic Signature, see Section 2.4,</li> <li>Mobile Driving Licence, see Section 2.5.2,</li> <li>Additional use cases that will be introduced in the future, see Section 2.5.3.</li> </ul> <p>These blueprints, along with all relevant information on use cases implementation, will be compiled in a standardized format within a dedicated document titled the \"Use Cases Manual\", and distributed together with this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#251-identification-and-authentication-to-access-online-services","title":"2.5.1 Identification and authentication to access online services","text":"<p>The EUDI Wallet ecosystem is primarily designed to facilitate secure User identification and authentication at Level of Assurance (LoA) high for various online services, both public and private. This capability is crucial, as it allows Relying Parties to confidently verify the identity of Users they interact with.</p> <p>In this use case, a User employs their Wallet Unit to present some User attributes to a Relying Party, in order to access online services. Before presenting the attributes, the Wallet Unit authenticates the User. The User is particularly mindful of the privacy and security concerns associated with presenting person identification data (PID) online. Their primary goals include reliably identifying themselves to services that demand User identification while maintaining control over the presentation of their personal data.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#252-mobile-driving-licence","title":"2.5.2 Mobile Driving Licence","text":"<p>A significant use case for the Wallet Unit involves allowing Users to request, store, and present a mobile Driving Licence (mDL) as an attestation in their Wallet Unit, allowing them mainly to prove their driving privileges. In this use case, the User employs a Wallet Unit to present a mDL to a Relying Party, for instance a police officer.</p> <p>The use case description concentrates on proximity supervised and unsupervised flows, which involve scenarios where the User is physically near a Relying Party, and the mDL attribute exchange occurs using proximity technologies (e.g., NFC, Bluetooth). The two proximity flows have one significant difference: in the supervised flow, the Wallet Unit presents mDL attributes to a human Relying Party or under their supervision, whereas in the unsupervised flow, the Wallet Unit presents mDL attributes to a machine without human oversight.</p> <p>In addition, like any other attestation type, an mDL can be presented online, over the internet.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#253-other-use-cases","title":"2.5.3 Other use cases","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2531-health-data","title":"2.5.3.1 Health data","text":"<p>Easy access to health data is crucial in both national and cross-border contexts. A Wallet Unit may enable access to patient summary, ePrescriptions, etc.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2532-educational-attestations-and-professional-qualifications","title":"2.5.3.2 Educational attestations and professional qualifications","text":"<p>Providing credentials for qualification recognition procedures can be costly and time-consuming for Users, Relying Parties (such as companies and employers), and Attestation Providers (such as education and training providers or academic institutions). A Wallet Unit may be a repository for educational credentials and a means for exchanging them by the User to relevant Relying Parties.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2533-digital-finance","title":"2.5.3.3 Digital finance","text":"<p>A Wallet Unit may facilitate complying with strong customer authentication requirements, using the user authentication capabilities described in Section 2.5.1. In line with the Commission's Retail Payments Strategy, this use case would be developed in close coordination with Member States' advisory groups on retail payments and the finance industry.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2534-digital-travel-credential","title":"2.5.3.4 Digital Travel Credential","text":"<p>Digital Travel Credential (DTC) Providers may issue DTCs to Wallet Units in a supported format, to enable Relying Parties to identify Users, thus facilitating a smooth travel experience and  User journey. Relying Parties for a DTC may include governments, transportation providers, hospitality agents, or any other actors operating in a regulated environment which requires the use of a DTC.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2535-social-security","title":"2.5.3.5 Social Security","text":"<p>Documents related to social security are important for many EU citizens to prove their rights and obligations under social security legislation in the EU. Examples include:</p> <ul> <li>Portable Document (\u201cPDA1\u201d) This is a statement of applicable legislation which is useful to prove that a person pays social contributions in another EU country, for example if they are a posted worker or work in several countries at the same time.</li> <li>Electronic Health Insurance Card (\u201cEHIC\u201d) This is a free card that provides every citizen with access to medically necessary government-provided healthcare during a temporary stay in one of the 27 EU countries, Iceland, Liechtenstein, Norway, and Switzerland, under the same conditions and at the same cost (free in some countries) as persons insured in that country. This includes, for example, services related to chronic or existing illnesses, as well as in connection with pregnancy and childbirth.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#3-eudi-wallet-ecosystem","title":"3. EUDI Wallet ecosystem","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#31-introduction","title":"3.1 Introduction","text":"<p>This chapter describes the EUDI Wallet ecosystem as it is foreseen in [European Digital Identity Regulation]. The different roles in the EUDI Wallet ecosystem are described in Figure 1 and detailed in the following sections.</p> <p> Figure 1: Overview of the EUDI Wallet ecosystem roles</p> <ol> <li>Users of Wallet Units, see Section 3.2,</li> <li>Wallet Providers, see Section 3.3,</li> <li>Person Identification Data (PID) Providers, see Section 3.4,</li> <li>Trusted List Providers, see Section 3.5,</li> <li>Qualified Electronic Attestation of Attributes (QEAA) Providers, see Section 3.6,</li> <li>Electronic Attestation of Attributes issued by or on behalf of a public sector body responsible for an authentic source (Pub-EAA) Providers, see Section 3.7,</li> <li>Electronic Attestation of Attributes (EAA) Providers, see Section 3.8,</li> <li>Qualified Electronic Signature Remote Creation Providers, see Section 3.9,</li> <li>Authentic Sources, see Section 3.10,</li> <li>Relying Parties, see Section 3.11,</li> <li>Conformity Assessment Bodies (CAB), see Section 3.12,</li> <li>Supervisory Bodies, see Section 3.13,</li> <li>Device Manufacturers and Related Subsystems Providers, see Section 3.14,</li> <li>Attribute Schema Providers, see Section 3.15,</li> <li>National Accreditation Bodies, see Section 3.16,</li> <li>Access Certificate Authorities, see Section 3.17.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#32-users-of-wallet-units","title":"3.2 Users of Wallet Units","text":"<p>Users of Wallet Units use the Wallet Unit to receive, store, and present PID, QEAA, PuB-EAA, or non-qualified EAA to Relying Parties. Users can also create qualified electronic signatures and seals (QES) and create and present pseudonyms.</p> <p>[CIR 2024/2982] (among others) defines 'wallet user' as 'a user who is in control of the wallet unit'. Being in control of the Wallet Unit implies being able to present a PID or attestation to a Relying Party. In most cases, the User (the person presenting a PID or attestation) is the subject of that PID or attestation. However, this may not always be the case, as a Wallet Unit may possibly contain the PIDs of different persons or legal entities. An example is the case of a parent having their children's PIDs in their Wallet Unit. Another example is a natural person representing a legal person, who may hold a legal-person PID in their Wallet Unit next to their own natural-person PID. However, the topics of representation and delegation will be further discussed with Member States in the future and no decisions have been made yet.</p> <p>The use of a Wallet Unit by citizens is not mandatory under the [European Digital Identity Regulation]. However, each Member State will provide at least one European Digital Identity Wallet within 24 months after the entry into force of the implementing acts referred to in the [European Digital Identity Regulation].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#33-wallet-providers","title":"3.3 Wallet Providers","text":"<p>Wallet Providers are Member States or organisations either mandated or recognised by Member States making a Wallet Solution available to Users. All Wallet Solutions must be certified as described in Chapter 7.</p> <p>A Wallet Provider makes a combination of several products and Trust Services available to a User, which give the User sole control over the use of their Person Identification Data (PID) and Electronic Attestations of Attributes (QEAA, PuB-EAA or EAA), and any other personal data within their Wallet Unit. This also implies guaranteeing a User sole control over sensitive cryptographic material (e.g., private keys) related to their Wallet Unit.</p> <p>Wallet Providers are responsible for ensuring compliance with the requirements for Wallet Solutions.</p> <p>From the viewpoint of the other actors in the EUDI Wallet ecosystem, the Wallet Provider is responsible for all components of the Wallet Unit. These components are described in Section 4.3.2. In particular, the Wallet Provider is responsible for ensuring that the Wallet Instance can access a Wallet Secure Cryptographic Device (WSCD) that has a level of security sufficient to ensure that the Wallet Unit can achieve Level of Assurance \"high\", as required in the [European Digital Identity Regulation]. This is true even if the WSCD is not delivered by the Wallet Provider but is integrated into the User device. For more information, see Section 4.5. Other actors in the ecosystem do not need to interact with or explicitly trust a WSCD supplier. As explained in Section 6.5.3, Wallet Providers provide a Wallet Unit Attestation (WUA) to the Wallet Unit. The WUA attests that the Wallet Unit and all of its components, including the WSCD, comply with the relevant requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#34-person-identification-data-pid-providers","title":"3.4 Person Identification Data (PID) Providers","text":"<p>PID Providers are trusted entities responsible for:</p> <ul> <li>verifying the identity of the User in compliance with LoA high requirements,</li> <li>issuing a PID to the Wallet Unit, and</li> <li>making available, in a privacy preserving way, information for Relying Parties to verify the validity of the PID.</li> </ul> <p>The terms and conditions of these services are for each Member State to determine.</p> <p>PID Providers may be the same organisations that today issue official identity documents, electronic identity means, etc. PID Providers may be the same organisations as Wallet Providers. In case an organisation acts as both a PID Provider and a Wallet Provider, it complies with all requirements for both PID Providers and Wallet Providers.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#35-trusted-list-provider","title":"3.5 Trusted List Provider","text":"<p>A Trusted List Provider (TLP) is a body responsible for maintaining, managing, and publishing a Trusted List. In compliance with Article 22, a Trusted List Provider is appointed by a Member State and notified to the Commission. Within the EUDI Wallet ecosystem, Trusted Lists exist for the following entities:</p> <ul> <li>Wallet Providers,</li> <li>PID Providers,</li> <li>QEAA Providers,</li> <li>PuB-EAA Providers,</li> <li>Access Certificate Authorities,</li> <li>Qualified Electronic Signature Remote Creation (QESRC) Providers.</li> </ul> <p>Note: Trusted Lists and Trusted List Providers may also exist for non-qualified EAA Providers, but this is out of scope of the ARF.</p> <p>These Trusted Lists are described in more detail in Sections 6.2.2, 6.3.2 and 6.4.2, as well as in [Topic 31]. Some Trusted Lists contain the trust anchors of the relevant entities. A trust anchor is a combination of a public key and the identifier of the associated entity and may be used to verify signatures created by that entity.</p> <p>An entity's status as a trusted entity can be verified by checking whether they are present on the relevant Trusted List. Trusted List Providers provide a registration service for the relevant entities. The terms and conditions for entities to become registered are for each Trusted List Provider to determine unless specified elsewhere e.g., in sectoral rules.</p> <p>For more information, please refer to [Topic 27] and to [Topic 31].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#36-qualified-electronic-attestation-of-attributes-qeaa-providers","title":"3.6 Qualified Electronic Attestation of Attributes (QEAA) Providers","text":"<p>Qualified EAAs are provided by Qualified Trust Service Providers (QTSPs). The general trust framework for QTSPs (see Chapter III, Section 3 of the [European Digital Identity Regulation] applies also to QEAA Providers, but specific rules for the Trust Service of issuing QEAAs may be defined as well.</p> <p>QEAA Providers maintain an interface to Wallet Units to provide QEAAs upon request. Potentially, they also maintain an interface towards Authentic Sources to verify attributes, as specified in Annex 2 [Topic 42].</p> <p>It is likely that for most QEAAs, a QEAA Provider will need to verify the identity of a User when issuing a QEAA. It is up to each QEAA Provider to implement the necessary User authentication processes, in compliance with all applicable national and Union legislation. Note that, when User identity verification is necessary, it is likely that the User requesting a QEAA already possesses a PID. This would enable the QEAA Provider to carry out User identification and authentication at LoA high, by requesting and verifying User attributes from the PID in the Wallet Unit.</p> <p>The terms and conditions of these services are for each QEEA Provider to determine, beyond what is specified in the [European Digital Identity Regulation].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#37-eaa-issued-by-or-on-behalf-of-a-public-sector-body-responsible-for-an-authentic-source-pub-eaa-providers","title":"3.7 EAA issued by or on behalf of a public sector body responsible for an authentic source (Pub-EAA) Providers","text":"<p>As specified in the [European Digital Identity Regulation], an attestation may be issued by or on behalf of a public sector body responsible for an Authentic Source. This ARF calls such an attestation a PuB-EAA. For a description of Authentic Sources, see Section 3.10. A public sector body primarily is a state, regional or local authority, or a body governed by public law.</p> <p>A PuB-EAA Provider, meaning a public sector body issuing PuB-EAAs, is not a QTSP. However, a PuB-EAA Provider has a qualified certificate, issued by a QTSP, that allows it to sign PuB-EAAs. A Relying Party verifies a PuB-EAA by first verifying the signature over the PuB-EAA, and subsequently verifying the signature of the qualified PuB-EAA Provider certificate. For more details, refer to Section 6.6.3.6.</p> <p>the [European Digital Identity Regulation] stipulates that PuB-EAAs, like QEAAs, have the same legal effect as attestations in paper form. It is up to the Member States to define terms and conditions for the provisioning of Pub-EAAs, but PuB-EAA Providers will comply with the same technical specifications and standards as Providers of PIDs and other attestations.</p> <p>For the precise and legally binding definitions and obligations regarding the issuance of PuB-EAAs, please refer to the [European Digital Identity Regulation].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#38-non-qualified-electronic-attestation-of-attributes-eaa-providers","title":"3.8 Non-Qualified Electronic Attestation of Attributes (EAA) Providers","text":"<p>Non-qualified EAAs can be provided by any (non-qualified) Trust Service Provider. While they will be supervised under [European Digital Identity], it can be assumed that other legal or contractual frameworks will mostly govern the rules for provision, use and recognition of EAAs. Those other frameworks may cover policy areas such as educational credentials, digital payments, although they may also rely on Qualified Electronic Attestation of Attributes Providers. For non-qualified EAAs to be used, EAA Providers offer Users a way to request and obtain these EAAs. This implies that these non-qualified EAA Providers comply with the Wallet Unit interface specifications. The terms and conditions of issuing EAAs and related services are subject to sectoral rules.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#39-qualified-electronic-signature-remote-creation-qesrc-providers","title":"3.9 Qualified Electronic Signature Remote Creation (QESRC) Providers","text":"<p>The Wallet Unit will allow the User to create free-of-charge qualified electronic signatures or seals over any data. This will also enhance the use of the Wallet Unit for signing, in a natural and convenient way. The creation of a qualified electronic signature or seal by means of the Wallet Unit can be achieved in several ways:</p> <ul> <li>the Wallet Unit itself could be certified as a qualified signature or seal creation device (QSCD), or</li> <li>the Wallet Unit could implement secure authentication into an electronic signature or electronic seal invocation capability, as part of a local QSCD or a remote QSCD managed by a QTSP.</li> </ul> <p>As part of the ecosystem, the use of common interfaces and protocols for provisioning qualified electronic signatures and seals will create a unified European market for QTSPs offering remote signature services. European citizens will be able to choose any QTSP, without worrying about technical interoperability, and this will enhance competition.</p> <p>Besides providers of qualified electronic signatures and seals, also providers of non-qualified electronic signatures or seals may exist. However, such providers are out of scope of this ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#310-authentic-sources","title":"3.10 Authentic Sources","text":"<p>Authentic Sources are public or private repositories or systems, recognised or required by law, containing attributes about natural or legal persons. Authentic Sources are sources for attributes on, for instance, address, age, gender, civil status, family composition, nationality, education and training qualifications titles and licences, professional qualifications titles and licences, public permits and licences, or financial and company data.</p> <p>Authentic Sources are required to provide an interface to QEAA Providers to verify the authenticity of the above attributes, either directly or via designated intermediaries recognised at national level. Authentic Sources may act as PuB-EAA Providers if they meet the requirements of the [European Digital Identity] Regulation, see Section 3.7. In Figure 1 this is indicated by the arrow 'provides qualified data'.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#311-relying-parties-and-intermediaries","title":"3.11 Relying Parties and intermediaries","text":"<p>Relying Parties are natural or legal persons that rely upon an electronic identification scheme or on a Trust Service. They request attributes contained within a PID, QEAA, Pub-EAA or EAA from the Wallet Unit, subject to the approval of the User and within the limits of applicable legislation and rules.</p> <p>The reason for reliance on the Wallet Unit may be a legal requirement, a contractual agreement, or their own decision. In particular, the [European Digital Identity Regulation] requires that providers of very large online platforms must accept the EUDI Wallet for their user authentication processes.</p> <p>Relying Parties maintain an interface with Wallet Units to request PIDs and attestations, using Relying Party authentication, as described in Section 6.6.3.2. If a Wallet Unit presents attributes from a PID or attestation to a Relying Party, the Relying Party can verify the authenticity of these attributes.</p> <p>To rely on Wallet Units for the purpose of providing a service, Relying Parties inform the Member State where they are established about their intention for doing so, and register the attributes that they intend to request. See Section 6.4.2 for more information on Relying Party registration. During a transaction, a Wallet Unit will verify that the Relying Party only requests attributes that it registered. It will warn the User if this is not the case. This is explained in Section 6.6.3.3.</p> <p>In addition, an Attestation Provider may embed a disclosure policy in an attestation. Such a policy indicates to which Relying Parties a Wallet Unit should (or should not) present specific attributes from that attestation. During a transaction, the Wallet Unit evaluates the policy based on data provided by the Relying Party, and warns the User if the outcome of that evaluation is negative. Please refer to Section 6.6.3.4 for more information.</p> <p>So-called intermediaries form a special class of Relying Party. Article 5b (10) of the [European Digital Identity Regulation] states \"Intermediaries acting on behalf of relying parties shall be deemed to be relying parties and shall not store data about the content of the transaction.\". Such an intermediary is a party that offers services to Relying Parties to, on their behalf, connect to Wallet Units and request the User attributes that these Relying Parties need. The intermediary then sends the presented attributes to the 'end' Relying Party. This implies that an intermediary performs all tasks assigned to a Relying Party in this ARF on behalf of the 'end' Relying Party. In particular:</p> <ol> <li>The intermediary registers once as a Relying Party and obtains an access certificate (see Section 6.6.3.2) bearing its own name and Relying Party identifier. This access certificate is not different from an access certificate issued to a 'normal' Relying Party, since an intermediary is, as a matter of legal fact, a Relying Party.</li> <li>Next, the intermediary will separately register each of the 'end' Relying Parties that uses its services, including registering the attributes the 'end' Relying Party wants to request. The intermediary obtains a registration certificate (see Section 6.6.3.3) showing the name of the 'end' Relying Party. The Registrar verify, in a manner to be decided by a Member State, that the 'end' Relying Party is indeed using the services of the intermediary. If all is correct, the Registrar will issue a registration certificate containing an additional attribute stating that the 'end' Relying Party is using the services of the intermediary.</li> <li>When asked by an 'end' Relying Party, the intermediary will request the presentation of attributes from Wallet Units, using one or more of the flows described in Section 4.4. For this, the intermediary will use their own access certificate (point 1. above) and the registration certificate of the 'end' Relying Party (point 2. above).</li> <li>If a Wallet Unit, during a transaction, receives an registration certificate indicating that the Relying Party uses the services of an intermediary, it verifies that the name and the identifier of the intermediary in the registration certificate are identical to the name and identifier in the access certificate. If this verification fails, the Wallet Unit treats this as a Relying Party authentication failure. If this verification succeeds, the Wallet Unit displays to the User the name of the intermediary when asking for User approval to present the requested attributes.</li> <li>The intermediary forwards the User attributes it obtained from the Wallet Unit to the 'end' Relying Party. There must be an interface between an intermediary and a Relying Party, over which the 'end' Relying Party can request the intermediary to request some User attributes from a Wallet Unit and that the intermediary uses to send back the attribute values presented by the Wallet Unit. However, specifying this interface or the (security) requirements with which it needs to comply, is out of scope of the ARF. In particular, it is not required that the User attributes are end-to-end encrypted between the Wallet Unit and the 'end' Relying Party, such that an intermediary would not be able to see them.</li> </ol> <p>Note that this approach implies that an intermediary (if it is acting only as an intermediary, and never as an 'end' Relying Party in its own right) will not need a registration certificate. Conversely, an 'end' Relying Party using the services of an intermediary will not need an access certificate.</p> <p>As discussed in Section 6.6.3.5, during a transaction, a Wallet Unit requests the User for their approval to present any User attributes to the Relying Party. In this process, the Wallet Unit informs the User about the authenticated identity of the intermediary (from the access certificate), and also about the identity of the 'end' Relying Party and the fact that this Relying Party is using the services of the intermediary (from the registration certificate).</p> <p>For high-level requirements on this topic, see [Topic 52].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#312-conformity-assessment-bodies-cab","title":"3.12 Conformity Assessment Bodies (CAB)","text":"<p>Conformity Assessment Bodies (CAB) are public or private bodies that are accredited by a national accreditation body, which itself is designated by Member States according to Regulation 765/2008 Article 6c (3). In particular, CABs are accredited to carry out assessments on which Member States will rely before issuing a Wallet Solution or providing the 'qualified' status to a Trust Service Provider.</p> <p>Wallet Solutions will be certified by CABs. QTSPs will be audited regularly by CABs.</p> <p>The standards and schemes used by CABs to fulfil their tasks to certify Wallet Solutions are discussed in Chapter 7.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#313-supervisory-bodies","title":"3.13 Supervisory Bodies","text":"<p>Supervisory Bodies review the proper functioning of Wallet Providers and other actors in the EUDI Wallet ecosystem. Supervisory Bodies will be created and appointed by the Member States. The Supervisory Bodies will be notified to the Commission by the Member States.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#314-device-manufacturers-and-related-subsystems-providers","title":"3.14 Device Manufacturers and Related Subsystems Providers","text":"<p>In the EUDI Wallet ecosystem, commercial actors such as device manufacturers and related subsystems providers fulfil an important role to enable a Wallet Unit to work smoothly and securely. Device manufacturers and related subsystem providers provide a platform on which a Wallet Unit can be built. Wallet Providers ensure that their Wallet Units use that platform to ensure usability, security, stability and connectivity. The components provided by device manufacturers and providers of related subsystems may include, among others, hardware, operating systems, secure cryptographic hardware, libraries, and app stores.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#315-attribute-schema-providers-for-qeaa-pub-eaa-and-eaa","title":"3.15 Attribute Schema Providers for QEAA, PuB-EAA and EAA","text":"<p>Attribute Schema Providers publish attribute schemas describing the structure  of QEAAs, PuB-EAAs and EAAs, including the identifier, semantics, and encoding  of all attributes. These attribute schemas are published in Attestation  Rulebooks, see Section 5.5. For PIDs and mDLs, the  applicable Rulebooks are published by the Commission.</p> <p>A catalogue of published Attestation Rulebooks will enable other entities such  as Relying Parties to discover which attestations exist within the EUDI Wallet  ecosystem, and how attributes from these attestations can be requested and  validated. The Commission sets out the technical specifications, standards, and  procedures for this purpose. Common schemas, including by sector-specific  organisations, are critical for widespread adoption of attestations.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#316-national-accreditation-bodies","title":"3.16 National Accreditation Bodies","text":"<p>National Accreditation Bodies (NAB), under Regulation (EC) No 765/2008, are the bodies in Member States that perform accreditation with authority derived from the Member State. NABs accredit CABs (Section 3.12) as competent, independent, and supervised professional certification bodies in charge of certifying Wallet Solutions against normative document(s) establishing the relevant requirements. NABs monitor the CABs to which they have issued an accreditation certificate.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#317-access-certificate-authorities","title":"3.17 Access Certificate Authorities","text":"<p>Access Certificate Authorities issue access certificate to all PID Providers, QEAA Providers, PuB-EAA Providers, non-qualified EAA Providers and Relying Parties in the EUDI Wallet ecosystem. When these entities interact with a Wallet Unit to issue or request a PID or attestation, they will present an access certificate to prove their authenticity and validity.</p> <p>Access Certificate Authorities must be notified by a Member State to the Commission. As part of the notification process, the trust anchors of the Access CA must be included in a Trusted List. A trust anchor is the combination of a public key and an identifier for the associated entity. Wallet Units need these trust anchors to verify of the signatures over the access certificates presented to them when a new PID or attestation is issued or when they receive an attribute presentation request from a Relying Party.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4-high-level-architecture","title":"4 High level architecture","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#41-introduction","title":"4.1 Introduction","text":"<p>This chapter provides a broad overview of the EUDI Wallet ecosystem's core components, their interfaces, and the overall design principles. This chapter is structured as follows:</p> <ul> <li>Section 4.2 discusses the design principles that guided the design of the EUDI Wallet ecosystem, as described in this ARF.</li> <li>Section 4.3 presents an overview of the ecosystem's architecture, focussing on the components that make up a Wallet Unit and on the interfaces between a Wallet Unit and other entities, as well as the protocols used on these interfaces.</li> <li>Section 4.4 discusses the different attestation presentation flows enabled by this architecture, and in particular the mechanisms foreseen to enable and secure remote presentation flows in which the Wallet Unit and the Relying Party interact over the internet.</li> <li>Section 4.5 briefly discusses the different architecture types Wallet Providers may use for implementing one or more Wallet Secure Cryptographic Device(s) into their Wallet Solutions.</li> <li>Section 4.6 presents state diagrams for all of the main entities and components in the EUDI Wallet ecosystem, discussing all of the states a particular component can be in, as well as the conditions triggering state transitions.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#42-design-principles","title":"4.2 Design principles","text":"<p>To effectively translate the [European Digital Identity Regulation] into a User-friendly, privacy-focused, and secure technical architecture, establishing design principles is crucial. These principles, rooted in the regulatory framework and enriched by industry best practices, will serve as fundamental guidelines. This approach ensures compliance with requirements emphasising User-centricity, privacy, security, and cross-border interoperability. It demonstrates a commitment to both regulatory alignment and excellence in the EUDI Wallet architecture's design.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#421-user-centricity","title":"4.2.1 User-centricity","text":"<p>The EUDI Wallet ecosystem prioritises User-centricity as a core design principle. This means placing User needs and experience at the forefront of every design decision. The Wallet Unit should be intuitive and easy to use, with seamless integration into existing use cases. Users should have full control over their attributes and privacy, with transparent information about what attributes are being presented and to whom. Additionally, the Wallet Unit should be accessible and inclusive, catering to Users with varying technical backgrounds and abilities. By prioritising User-centricity, the EUDI Wallet ecosystem fosters trust and encourages widespread adoption, ultimately achieving its goal of empowering Users with secure and convenient digital identity management.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#422-interoperability","title":"4.2.2 Interoperability","text":"<p>The EUDI Wallet ecosystem prioritises interoperability as a core design principle. This ensures a Wallet Unit functions seamlessly across borders within the EU. Users can travel freely and confidently utilise their digital identity wallets for various services, from e-government platforms to private online interactions. Interoperability fosters secure data exchange through standardised protocols, allowing trusted entities to verify credentials effortlessly. This not only simplifies the User experience but also strengthens overall security within the system. Moreover, interoperability prevents market fragmentation by creating a level playing field for different Wallet Solutions. It fosters competition and collaboration, ultimately driving innovation in the EUDI Wallet ecosystem. By prioritising interoperability, the EUDI Wallet architecture lays the foundation for a trusted and universally accepted EUDI Wallet ecosystem across the EU.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#423-privacy-by-design","title":"4.2.3 Privacy by design","text":"<p>The EUDI Wallet architecture embodies the principle of privacy by design. This means that the protection of User data is a fundamental pillar of the architecture's design. The principle of data minimisation guides the collection of personal information, ensuring that Relying Parties gather only the attributes they need and have registered for. By enabling selective disclosure of attributes, the Wallet Unit empowers Users with granular control over what data is presented and to whom. Transparency is built into the system, with clear explanations of how data is used and protected. By making privacy a cornerstone from the beginning, the EUDI Wallet ecosystem aims to foster trust and protect the fundamental rights of its Users. Finally, measures are taken to prevent Users from being tracked by Relying Parties, PID Providers, or Attestation Providers.</p> <p>For more information, please refer to Sections 7.4.3.4 and 7.4.3.5.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#424-security-by-design","title":"4.2.4 Security by design","text":"<p>The EUDI Wallet architecture embraces the principle of security by design. This means security considerations are woven into the very fabric of the architecture's design. Throughout the design process, potential vulnerabilities are identified and mitigated. Secure coding practices are mandated, and the architecture itself minimises attack surfaces by compartmentalising sensitive data and access controls. By prioritising security from the outset, the EUDI Wallet architecture aims to be inherently resistant to cyberattacks and data breaches, fostering trust and User confidence in this EUDI Wallet ecosystem.</p> <p>For more information, please refer to Sections 7.4.3.2 and 7.4.3.3.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#43-reference-architecture","title":"4.3 Reference architecture","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#431-overview","title":"4.3.1 Overview","text":"<p>The figure below gives an overview of the architecture of the EUDI Wallet ecosystem and its components. In comparison to Figure 1, this figure presents more detail on the composition of a Wallet Unit and its interfaces to other entities. The depicted components of a Wallet Unit are described in Section 4.3.2, while the interfaces are described in Section 4.3.3. The other entities shown in the figure were already described in Chapter 3.</p> <p> Figure 2: EUDI Wallet ecosystem reference architecture</p> <p>Note that a User device can host more than one Wallet Unit, either provided by multiple Wallet Providers or by the same one, if supported by that Wallet Provider. If a User device hosts more than one Wallet Unit, all statements in this ARF regarding a Wallet Unit and its components hold for each Wallet Unit independently.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#432-components-of-a-wallet-unit","title":"4.3.2 Components of a Wallet Unit","text":"<p>The following have been identified as the core components of a Wallet Unit:</p> <ul> <li> <p>User device (UD): A User Device comprises the hardware, operating system, and software environment required to host and execute the Wallet Instance. The minimum hardware and software requirements for the User device will be determined by the Wallet Provider.</p> </li> <li> <p>Wallet Instance (WI): The app or application installed on a User device, which is an instance of a Wallet Solution and belongs to and is controlled by a User. This component implements the core business logic and interfaces as depicted in Figure 2. It directly interacts with the WSCA/WSCD (see bullets hereafter) to securely manage cryptographic assets and execute cryptographic functions, ensuring a high level of assurance for authentication.</p> </li> <li>User device (UD): A User device comprises the hardware, operating system, and software environment required to host and execute the Wallet Instance. The minimum hardware and software requirements for the User device will be determined by the Wallet Provider.</li> <li> <p>Wallet Secure Cryptographic Device (WSCD): tamper-resistant device that provides an environment that is linked to and used by the wallet secure cryptographic application to protect critical assets and provide cryptographic functions for the secure execution of critical. This includes a keystore, but also the environment where the security-critical functions are executed. The WSCD is tamper-proof and duplication-proof. One WSCD may be included in multiple Wallet Units, e.g. in case of a remote HSM. The WSCD consists of two parts: the WSCD hardware covers the hardware issued by the WSCD vendor and the WSCD firmware covers security-related software, such as an operating system and cryptographic libraries provided by the WSCD vendor. Figure 2 shows four different possible security architectures for the WSCD (for more details see Section 4.5):</p> <ul> <li>a remote WSCD, a remote device, such as a Hardware Security Module (HSM), accessed over a network.</li> <li>a local external WSCD, an external device, such as a smart card issued to the User specifically for this purpose,</li> <li>a local internal WSCD, a component within the User device, such as a SIM, e-SIM, or embedded Secure Element,</li> <li>a local native WSCD, a component embedded in the User device and accessed via an API provided by the operating system.</li> </ul> </li> <li> <p>Wallet Secure Cryptographic Application (WSCA): an application that manages critical assets by being linked to and using the cryptographic and non-cryptographic functions provided by the Wallet Secure Cryptographic Device. The WSCA interfaces directly with the Wallet Instance. For more details see Section 4.5.</p> </li> <li>Wallet Provider backend (WPB): The Wallet Provider backend offers Users support with their Wallet Units, performs essential maintenance, and issues Wallet Unit Attestations through the Wallet Provider Interface (WPI).</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#433-wallet-unit-interfaces-and-protocols","title":"4.3.3 Wallet Unit interfaces and protocols","text":"<p>Figure 2 shows the following interfaces between components of a Wallet Unit, or between the Wallet Unit and other entities in the EUDI Wallet ecosystem:</p> <ul> <li>The Wallet Provider Interface (WPI) is used by the Wallet Instance to communicate with the Wallet Provider to request and issue the Wallet Unit Attestation, as well as to provide support to the User and collect aggregated and user-consented information in a privacy-preserving manner to provision the Wallet Unit, in compliance with applicable legislation. Because the Wallet Provider is responsible for both sides of this interface, it will not be standardised in the scope of the EUDI Wallet ecosystem.</li> <li>The User Interface (UI) is the point of interaction and communication between the User and the Wallet Instance. This interface will not be standardised in the scope of the EUDI Wallet ecosystem.</li> <li>The Presentation Interface (PI) enables Relying Party Instances to securely request and receive PIDs, QEAAs, PuB-EAAs and EAAs from Wallet Units. This interface accommodates both remote and proximity interactions. For remote presentation flows, as detailed in Section 4.4.3, the Wallet Instance implements the OpenID for Verifiable Presentation protocol [OpenID4VP] in combination with the [W3C Digital Credentials API]. In contrast, for the proximity presentation flow, this interface adheres to the [ISO/IEC 18013-5] standard, see Section 4.4.2. The same interface can also be used by another Wallet Unit to request User attributes, see Section 6.6.4.</li> <li> <p>The Secure Cryptographic Interface (SCI) enables the Wallet Instance to communicate with the Wallet Secure Cryptographic Application (WSCA). This interface is specifically designed for managing critical assets and executing cryptographic functions. To be able to support different types of WSCA/WSCD, Wallet Instances may need to be able to handle multiple flavours of this interface.</p> </li> <li> <p>The PID Issuance Interface (PII) complies with the [OpenID4VCI] standard and is used when the Wallet Unit communicates with a PID Provider to request and receive PIDs to be stored within the Wallet Unit.</p> </li> <li>The Attestation Issuance Interface (AII) complies with the [OpenID4VCI] standard and is used by the Wallet Unit to request various attestations that the User wants to include in their Wallet Unit.</li> <li>The Remote Signing Interface (RSI) facilitates communication between the Wallet Unit and a Qualified Electronic Signature or Seal Remote Creation (QESRC) Provider. This interface is used by the Wallet Unit to generate a qualified electronic signature or seal.</li> </ul> <p>*Note that the \"Attribute Deletion Request to Relying Party Interface\" and the \"Reporting Relying Party to DPA Interface\", which are mentioned in the Regulation, are not depicted as interfaces in Figure 2. Functionality enabling a User to request a Relying Party to delete personal data (i.e., User attributes) obtained from the User's Wallet Unit is seen as a feature of the Wallet Solution. The same applies to functionalities enabling the User to report a Relying Party to a Data Protection Authority.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#44-data-presentation-flows","title":"4.4 Data presentation flows","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#441-overview","title":"4.4.1 Overview","text":"<p>This section defines four distinct communication flows that can be used when a Wallet Unit presents a PID or attestation to a Relying Party Instance:</p> <ul> <li>Proximity Supervised Flow: In this flow, the User and their User Device are physically near the Relying Part Instance. PIDs and attestations are exchanged using proximity technology (e.g., NFC, Bluetooth) between the Wallet Unit and the Relying Party Instance. Both devices may be with or without internet connectivity. A human representative of the Relying Party supervises the process.</li> <li>Proximity Unsupervised Flow: This flow is like the supervised flow, but the Wallet Unit presents attestations to a machine, without human supervision. The interfaces and protocols used in this flow are the same as for the proximity supervised flow, and are described in Section 4.4.2.</li> <li>Remote Same-Device Flow:In this flow, the User utilises a web browser or another application on their User Device to access a Relying Party's a service. If consuming the service requires the Relying Party to obtain specific attributes from the User's Wallet Unit, the Relying Party sends a presentation request to the Wallet Unit. As explained in Section 4.4.3.2, this request is managed by the web browser on the User's device, utilising the [W3C Digital Credentials API] and, behind the scenes, an inter-app API provided by the device's operating system.</li> <li>Remote Cross-Device Flow: In this flow, the User uses a web browser on a device other than their Wallet Instance, for instance a desktop or laptop, to access the Relying Party's service. If the Relying Party needs to send a presentation request to the User's Wallet Unit, it presents this request to the web browser on the other device. Again using the [W3C Digital Credentials API], this web browser sets up a secure communication channel between the other device and the User's device. Section 4.4.3.3 explains this in more detail.</li> </ul> <p>Specific use cases integrate one or more of these flows. Each of these flows is described in more detail in one of the next sections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#442-proximity-presentation-flows","title":"4.4.2 Proximity presentation flows","text":"<p>Figure 3 shows how attestation presentation works when the User and their User Device are physically near the Relying Part Instance. In this case, the [ISO/IEC 18013-5] standard specifies how a communication channel is set up and how a presentation request and the corresponding response are exchanged.</p> <p> Figure 3: Proximity presentations</p> <p>The attribute presentation flow begins when the User opens the Wallet Instance and instructs it to display a QR code or present an NFC tag. This QR code or NFC tag contains the information necessary to establish an NFC, BLE, or Wi-Fi Aware connection. The Relying Party Instance scans the QR code or the NFC tag and set ups the connection. The QR code or NFC tag also contains the information necessary to create an authenticated and encrypted secure channel between both entities.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#443-remote-presentation-flows","title":"4.4.3 Remote presentation flows","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4431-introduction","title":"4.4.3.1 Introduction","text":"<p>Remote transaction flows are use cases in which the Relying Party Instance is remote from the User and the User device. The Relying Party Instance requests data to the Wallet Unit over the internet, using a browser. These use cases can be further distinguished in same-device flows, in which the browser is running on the same device as the Wallet Unit, and cross-device flows, where the browser is on a different device.</p> <p>Remote presentation flows come with a number of challenges that are not present for proximity flows:</p> <ol> <li>Secure Cross-Device Flows: Cross-device flows are vulnerable to phishing and relay attacks, necessitating enhanced security measures. Proximity checks, managed by the mobile operating system, can mitigate these the risks derived by these vulnerabilities by leveraging built-in security features to verify the authenticity of interactions, ensuring they are both secure and reliable.</li> <li>Wallet Unit Selection: In remote flows, where interactions do not originate from the Wallet Unit, Users may encounter difficulties in selecting and invoking the appropriate Wallet Instance to fulfill a specific presentation request, particularly when multiple Wallet Units are present on the device. A unified interface provided by the web browser and the mobile operating system can streamline this process, offering a seamless and intuitive User experience.</li> <li>Invocation Mechanism: Establishing a communication channel between the Wallet Unit and the remote Relying Party Instance presents challenges due to inconsistent invocation methods. One approach considered by standardisation bodies involves using custom URI schemes, such as \"mdoc://\" or \"openid4vp://\". In this approach, the mobile operating system would trigger the Wallet Unit when the Relying Party Instance requests a connection via a custom URI. Another approach is the use of domain-bound universal links (a.k.a. app links). However, relying on custom URI schemes or universal links introduces variability in User experiences across different browsers and operating systems, resulting in operational inefficiencies and potential security risks.</li> <li>Clear Origin Verification: Protecting against relay attacks requires precise identification of the Relying Party Instance's origin. Including the origin information, such as the website domain or app package name, within the presentation request ensures the authenticity of the request and enhances trust for both Wallet Units and Users.</li> </ol> <p>The next sections describe how these challenges can be solved for both same-device and cross-device remote presentation flows, by using the [W3C Digital Credentials API]. Note that requirements for Wallet Units and Relying Party Instances to use the [W3C Digital Credentials API] for remote presentation flows will be updated in the major release of this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4432-same-device-remote-presentation-flows","title":"4.4.3.2 Same-device remote presentation flows","text":"<p> Figure 4: Remote same-device presentations</p> <p>Compared to Figure 2, Figure 4 shows additional detail. In particular, it shows the browser on the User device and the relevant interfaces of this browser:</p> <ul> <li>The Remote same-device presentation interface establishes communication between the web browser and a remote Relying Party Instance, which may operate on a server managed by the Relying Party. This interface complies with the [Digital Credentials API], which is a browser API that is currently being standardised within the W3C.</li> <li>The WI-platform API interface is an inter-app API that implements the Digital Credentials API mechanism at OS level. There are however no current plans to standardise this interface on the level of the API calls. These calls will be specified in the developer documentation for the respective OS. One of the key elements of this API is that Wallet Unit receives reliable information regarding the origin of the presentation request.</li> </ul> <p>Obviously, the browser also has a User interface allowing the User to interact with it. This interface will not be standardised in the context of the EUDI Wallet ecosystem.</p> <p>A remote same-device attribute presentation flow begins when the User accesses the Relying Party's website using a browser on their device. The website may provide an option for the User to present attributes from their Wallet Unit, typically via a button or similar interface.</p> <p>When the User selects this option, the browser prompts the User for permission to connect to the Wallet Unit. Upon granting permission, the Relying Party Instance sends a presentation request compliant with OpenID4VP specifications to the browser via the Digital Credentials API.</p> <p>The browser, working in tandem with the device's operating system (OS), forwards the request to the Wallet Unit using the WI-platform API. If the device hosts multiple Wallet Units, the browser and OS will determine which Wallet Unit should handle the request. This decision may involve consulting the User.</p> <p>The selected Wallet Instance processes the presentation request and seeks the User\u2019s approval before returning the requested attributes in an encrypted format to the browser. The browser then forwards this encrypted response to the remote Relying Party Instance.</p> <p>A remote same-device attribute presentation flow begins when the User uses the browser on their User device to visit the website of the Relying Party. The website may offer the User the possibility to present attributes from their Wallet Unit, for example by clicking a button. If the User does so, the browser will ask the User for permission to connect to the Wallet Unit. If the User allows this, the Relying Party Instance sends an OpenID4VP-compliant presentation request to the browser over the Digital Credentials API. The browser, in collaboration with the device OS, forwards this request to the Wallet Instance, using the WI-platform API described above. If there are multiple Wallet Instances present on the User device, the browser and the device OS will determine to which of these the request will be forwarded, possibly after consulting the User. The selected Wallet Unit will process the presentation request and, after requesting approval from the User, will return the requested attributes in encrypted format to the browser. The browser will forward the response to the remote Relying Party Instance.</p> <p>Figure 4 also illustrates an inter-app attribute presentation flow. In this scenario, a mobile application, such as a banking or shopping app, on the User's device, rather than a web browser, acts as the Relying Party Instance. The app can leverage the User attributes retrieved from the Wallet Unit for various purposes, including User authentication or automatically filling in data fields like name and address.</p> <p>In this use case, the attribute presentation flow begins when the User opens the mobile app and initiates a request for attributes from the Wallet Unit via the WI-platform API. Notably, this is the same API used in remote same-device presentation flows involving a browser. The primary difference lies in the origin information included in the presentation request, which may vary.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4433-cross-device-remote-presentation-flows","title":"4.4.3.3 Cross-device remote presentation flows","text":"<p> Figure 5: Remote cross-device presentations</p> <p>A remote cross-device attribute presentation flow begins when the User uses a browser on a device different from their User device to visit the website of the Relying Party. The website may offer the User the possibility to present attributes from their Wallet Unit, for example by clicking a button. If the User does so, the browser will ask the User for permission to connect to the Wallet Unit. If the User allows this, the Relying Party Instance sends a presentation request to the browser over the Digital Credentials API. The browser then establishes a tunnel towards the User device, using the FIDO CTAP 2.2 hybrid flow, see section 11.5 of [CTAP]. Note that this flow is also used for FIDO Passkeys. This is done as follows:</p> <ol> <li>The browser presents a QR code that includes information about the tunnel  endpoint, as well as keys that will be used for establishing a secure channel over this  tunnel.</li> <li>The User scans the QR code using the camera on the User device.</li> <li>The User device emits a BLE advertisement, which is received by the browser.  The advertisement includes, in an encrypted form, information required for  establishing the secure tunnel. This advertisement is used as a proximity  check: the tunnel cannot be established if the User device and the device on  which the browser runs are not close to each other.</li> <li>A tunnel is established between the two devices.</li> </ol> <p>The browser then sends the OpenID4VP-compliant presentation request to the User device. If there are multiple Wallet Instances present on the User device, the device OS will determine to which of these the request will be forwarded, possibly after consulting the User. The selected Wallet Unit will process the presentation request and, after requesting approval from the User, will return the requested attributes in encrypted format to the browser, using the established tunnel. The browser will forward the response to the remote Relying Party Instance.</p> <p>Note that the Wallet Instance does not see any difference between the cross-device flow and the same-device flow. In both cases, it receives an OpenID4VP-compliant presentation request over the WI-platform API described in the previous section.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4434-profiling-the-use-of-openid4p-in-remote-presentation-flows","title":"4.4.3.4 Profiling the use of [OpenID4P] in remote presentation flows","text":"<p>As mentioned above, for both same-device and cross-device remote presentation flows, the messages used to request and present attestations comply with [OpenID4VP]. The OpenID Foundation is standardising a profile for the W3C Digital Credentials API, that will define how OpenID4VP will be used over this API.</p> <p>In addition, there are two other profiles that will be used by Wallet Units and remote Relying Parties:</p> <ul> <li>[ISO/IEC 18013-7] Annex B contains a profile for OpenID4VP. Relying Parties and Wallet Unit will comply with the requirements in this profile when the format of the attestation complies with [ISO/IEC 18013-5].</li> <li>Otherwise, i.e. when the format of the attestation complies with [SD-JWT VC], Relying Parties and Wallet Unit will comply with the requirements in the profile specified in [HAIP].</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#45-wscd-architecture-types","title":"4.5 WSCD architecture types","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#451-introduction","title":"4.5.1 Introduction","text":"<p>Figure 2 showed four different types of architecture for the WSCD, which are:</p> <ul> <li>Remote WSCD</li> <li>Local external WSCD</li> <li>Local internal WSCD</li> <li>Local native WSCD</li> </ul> <p>In addition, this section also describes a hybrid architecture. Within the EUDI Wallet ecosystem, a Wallet Provider is allowed to use any of these architectures.</p> <p>Note that, regardless of the architecture used, the Wallet Provider is responsible for ensuring that the Wallet Instance can access a WSCD that has a level of security sufficient to ensure that the Wallet Unit can achieve Level of Assurance \"high\", as required in the [European Digital Identity Regulation]. The Wallet Provider remains responsible for managing cryptographic keys on the WSCD (through the WSCA) throughout the lifetime of the Wallet Unit. The Wallet Provider is also responsible for attesting the properties of the WSCD (including relevant certifications) in the Wallet Unit Attestation, see Section 6.5.3.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#452-remote-wscd","title":"4.5.2 Remote WSCD","text":"<p>In this architecture, the Wallet Secure Cryptographic Device is situated remotely from the User device. Typically, it will be implemented by the Wallet Provider using an HSM running on a secure server. The Wallet Provider will also provide the WSCA with which the Wallet Unit interacts.</p> <p>This architecture is typically used if the User device lacks sufficiently secure hardware, or if the Wallet Provider does not want to have a dependency on such hardware.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#453-local-external-wscd","title":"4.5.3 Local external WSCD","text":"<p>If the User device lacks sufficiently secure hardware, another option is to use a local external hardware component as the WSCD. This local external WSCD is typically a smart card or a secure token. It is connected to the User device via NFC or another short-range connection, and is able to perform all of the cryptographic operations required from a WSCD / WSCA in the ARF. Note that many existing smart cards, such as identity cards, will not be able to do this.</p> <p>The WSCA typically takes the form of a Java Card applet. The WSCA is installed prior to issuance of the smart card or secure token to the User. The issuer of the WSCD and of the WSCA is the Wallet Provider or another entity acting on behalf of or in cooperation with the Wallet Provider.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#454-local-internal-wscd","title":"4.5.4 Local internal WSCD","text":"<p>In this architecture, the Wallet Secure Cryptographic Device is integrated directly within the User's device. This includes solutions like UICCs, e-SIM/SAMs, or embedded Secure Elements. Such solutions typically are compliant with the GlobalPlatform Card Specifications [GP CS] or with the GSMA Secured Applications for Mobile [GSMA SAM] specification.</p> <p>The WSCA will typically be a Java Card applet, and it is remotely issued to the WSCD by the Wallet Provider, at the moment the Wallet Unit is activated; see Section 6.5.3. In order to do this, the Wallet Provider may need to connect to and collaborate with other entities, such as a Trusted Service Manager employed by the owner of the WSCD.</p> <p>The Wallet Provider is responsible for verifying that the local internal WSCD is compliant with all applicable requirements, prior to activating a Wallet Unit using such a WSCD.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#455-local-native-wscd","title":"4.5.5 Local native WSCD","text":"<p>A local native WSCD is integrated into the User device. However, the API to access the WSCD is included in the operating system of the User device. Therefore, no separate WSCA is necessary. Alternatively, the API offered by the OS may be viewed as the WSCA.</p> <p>The Wallet Provider is responsible for verifying that the local native WSCD is compliant with all applicable requirements, prior to activating a Wallet Unit using such a WSCD.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#456-hybrid-architecture","title":"4.5.6 Hybrid architecture","text":"<p>In this architecture, two or more of the different types of WSCD described above are combined. For example, a remote HSM may manage the cryptographic keys of the Wallet Unit and of PIDs and attestations present in the Wallet Unit, while an embedded Secure Element is used to manage the access to the remote HSM.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#46-state-diagrams","title":"4.6 State diagrams","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#461-introduction","title":"4.6.1 Introduction","text":"<p>In this section, state diagrams are presented to explain the relations between the Wallet Solution, the Wallet Unit, and the PID.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#462-wallet-solution","title":"4.6.2 Wallet Solution","text":"<p>A Wallet Solution has a state diagram of its own. The state of a Wallet Solution affects the state of all Wallet Units of that Wallet Solution. Figure 6 below shows the states of the Wallet Solution:</p> <p> </p> <p>Figure 6: State diagram of Wallet Solution</p> <p>The Candidate state is the first state of a Wallet Solution. This means it is fully implemented and the Wallet Provider requests the solution to be certified as a Wallet Solution as part of an EUDI Wallet eID scheme.</p> <p>If all the legal and technical criteria have been met, a Member State may decide to allow a Wallet Provider to start providing the Wallet Solution to Users. The state of the Wallet Solution becomes Valid. This means the Wallet Solution can be officially launched, and can be provided to Users. The issuing Member State informs the Commission of each change in the certification status of their EUDI Wallet eID schemes and the Wallet Solutions provided under that scheme.</p> <p>The issuing Member State can temporarily suspend a Wallet Solution. This would for example be the result of a critical security issue. This leads to the Suspended state. The issuing Member State can unsuspend the Wallet Solution, bringing the Solution back to the Valid state. The issuing Member State can also decide to completely withdraw the Wallet Solution, which brings the Wallet Solution in the Withdrawn state.</p> <p>A Wallet Unit that is part of a suspended or withdrawn Wallet Solution Provider cannot request the issuance of a PID or attestation. Nor will a PID or attestation presented by such a Wallet Unit be accepted by a Relying Party.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#463-wallet-unit","title":"4.6.3 Wallet Unit","text":"<p>Figure 7 below shows the states of a Wallet Unit.</p> <p> </p> <p>Figure 7: State diagram of Wallet Unit</p> <p>A Wallet Unit lifecycle begins when the User installs a Wallet Instance on their User device (see Section 6.5.2. The Wallet Unit's state is then Installed. In this state, the User and the Wallet Provider can perform only one action, namely activating the Wallet Unit, as described in Section 6.5.3. As part of the activation process, the Wallet Provider issues a Wallet Unit Attestation (WUA) to the Wallet Unit.</p> <p>Once a Wallet Unit is activated, it is in the Operational state. In this state, the User and the Wallet Provider manage the Wallet Unit and can perform the same actions as in the Valid state, see below. However, obviously, the User cannot present a PID to a Relying Party, nor can any other action with a PID be performed, because by definition no valid PID is present in this state.</p> <p>If, in the Operational state, a PID Provider issues a PID to a Wallet Unit, it transitions to the Valid state. If, in either of these two states, the Wallet Provider revokes the WUA or the WUA expires, the Wallet Unit moves back to Installed.</p> <p>The following actions can be performed in the Valid state:</p> <ul> <li>The Wallet Provider updates the Wallet Unit to a new version,</li> <li>The Wallet Provider revokes the Wallet Unit, for instance at the User's request of if the security of the Wallet Instance is broken. Revocation of the Wallet Unit is accomplished by revoking the Wallet Unit Attestation (see [Topic 9] and [Topic 38]).</li> <li>The User requests issuance of a PID, a QEAA, a PuB-EAA, or an EAA.</li> <li>The User presents attributes from a PID, a QEAA, a PuB-EAA, or an EAA to a Relying Party.</li> <li>The User deletes a PID, a QEAA, a PuB-EAA, or an EAA.</li> <li>A PID, a QEAA, a PuB-EAA, or an EAA is revoked by its Provider (if it is valid for more than 24 hours).</li> <li>The User uninstalls the Wallet Instance.</li> </ul> <p>If the last or only PID in the Wallet Unit expires, is revoked, or is deleted, the Wallet Unit's state is moved back to Operational. Note that if there are multiple PIDs in the Wallet Unit, it does not move to the Operational state as long as at least one of them is valid.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#464-pid-provider-or-attestation-provider","title":"4.6.4 PID Provider or Attestation Provider","text":"<p>Figure 8 shows the possible states of a PID Provider or Attestation Provider.</p> <p> </p> <p>Figure 8: State diagram of PID Provider or Attestation Provider</p> <p>The Valid state is the first state of a PID Provider or Attestation Provider. This means it is registered by the corresponding Trusted List Provider and notified to the Commission, as described in Section 6.3.2.</p> <p>The Trusted List Provider can temporarily suspend a PID Provider or Attestation Provider. This leads to the Suspended state. The Trusted List Provider can unsuspend the PID Provider or Attestation Provider, bringing it back to the Valid state. The Trusted List Provider can also decide to completely withdraw the PID Provider or Attestation Provider, which brings it in the Withdrawn state. For more information about suspension or withdrawal, please refer to Section 6.3.3. A suspended or withdrawn PID Provider or Attestation Provider cannot issue PIDs or attestations to Wallet Units, nor will a PID or attestation issued by such a PID Provider or Attestation Provider be accepted by Relying Parties.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#465-pid-or-attestation","title":"4.6.5 PID or attestation","text":"<p>Figure 9 shows the possible states of a PID or attestation.</p> <p>In the context of the EUDI Wallet ecosystem, a PID or attestation begins its lifecycle when being issued to a Wallet Unit. Please note that this means that the management of attributes in the Authentic Source (adhering to national structures and attribute definitions) is outside of the scope of the ARF.</p> <p>For certain use cases, a PID or attestation may be pre-provisioned, meaning it is not yet valid when issued. In that case, its state is Issued, and it will transition to Valid when it reaches the beginning of its validity period. However, if a PID or attestation is issued on or after the validity start date, its state directly changes to Valid.</p> <p> </p> <p>Figure 9: State diagram of PID or attestation</p> <p>There are two possible transitions for a valid PID or attestation: it expires by passing through the validity end date and transitions to the Expired state, or it is revoked by its PID Provider or Attestation Provider, ending up in the Revoked state. Expiration and revocation are independent transitions. Once a PID or attestation is expired or revoked, it cannot transition back to Valid.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#466-relying-party","title":"4.6.6 Relying Party","text":"<p>Figure 10 shows the possible states of a Relying Party.</p> <p> </p> <p>Figure 9: State diagram of Relying Party</p> <p>The Valid state is the first state of a Relying Party. This means it has been registered by a Relying Party Registrar, as described in Section 6.4.2.</p> <p>The Registrar can de-register a Relying Party. This leads to the Invalid state. For more information about de-registration, please refer to Section 6.4.3. A Wallet Unit will not present a PID or attestation to a Relying Party that is in this state.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#5-data-model","title":"5 Data model","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#51-introduction","title":"5.1 Introduction","text":"<p>Within the EUDI Wallet ecosystem, data is exchanged in the form of Electronic Attestations of Attributes (EAA), hereafter referred to as \"attestations.\" Apart from EAA, the [European Digital Identity Regulation] explicitly defines another category of data, called Person Identification Data (PID), which establishes the identity of a natural person or a legal person. PID can only be issued by a PID provider operating under the supervision of the Member State. Each PID and attestation consists of the following key elements:</p> <ul> <li> <p>A set of attributes, which provide information about the subject of the attestation. The subject of the PID or attestation may be a natural person or a legal person. A Relying Party will request one or more of these attributes to get the reliable information they need to provide some service to the User. The set of attributes that an attestation may contain is defined in an attribute schema, see below.</p> </li> <li> <p>A set of metadata, meaning information about the attestation itself, such as its attestation type (PID, mDL, diploma, etc.), its Attestation Provider, and its administrative validity period, if applicable. This kind of metadata is also defined in an attribute schema. In addition, metadata also includes information that is necessary to ensure the security of the attestation. This includes at least its technical validity period. It also includes a public key of the attestation, which a Relying Party will use to verify that the attestation was not copied, see Section 6.6.3.8. It may also include information allowing the Relying Party to verify that the attestation was not revoked, see Section 6.6.3.7.</p> </li> <li> <p>A proof, which ensures the integrity, authenticity, and support of selective disclosure of the attestation. The format of the proof complies with the proof mechanism specified for this type of attestation, see below. The proof includes information that enables a Relying Party to verify the proof, for example a Attestation Provider certificate and a reference to a trust anchor that can be used to verify that certificate.</p> </li> </ul> <p>An attribute schema defines the logical organisation of all mandatory and optional attributes within an attestation, as well as the format of each attribute, meaning its unique identifier, encoding, allowed values, and serialisation. In addition, an attribute schema specifies some of the attestation metadata, such as its attestation type and information about its Attestation Provider, validity period, etc. Within the EUDI Wallet ecosystem, the attribute schema for each attestation type is specified by an Attribute Schema Provider in an Attestation Rulebook according to Section 5.5.</p> <p>A proof mechanism defines the method used to create the attestation proof. For example, a 'standard' digital signature is a proof ensuring integrity and authenticity, but not allowing selective disclosure. Proof mechanisms are specified in standards or technical specifications. The attestation formats listed in Section 5.4 either specify a proof mechanism that allows for selective disclosure, or leave it to other technical specifications to do so.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#52-attestation-categories","title":"5.2 Attestation categories","text":"<p>Within the European Digital Identity Wallet ecosystem, the [European Digital Identity Regulation] distinguishes four legal categories of attestations, which are defined as follows:</p> <ul> <li> <p>Person Identification Data (PID): A set of data that is issued in accordance with Union or national law and that enables the establishment of the identity of a natural or legal person, or of a natural person representing another natural person or a legal person.</p> </li> <li> <p>Qualified Electronic Attestation of Attributes (QEAA): An electronic attestation of attributes which is issued by a qualified trust service provider (QTSP) and meets the requirements laid down in Annex V of the Regulation.</p> </li> <li> <p>Electronic attestation of attributes issued by or on behalf of a public sector body responsible for an authentic source (PuB-EAA): An electronic attestation of attributes issued by a public sector body that is responsible for an authentic source or by a public sector body that is designated by the Member State to issue such attestations of attributes on behalf of the public sector bodies responsible for authentic sources in accordance with Article 45f and with Annex VII of the Regulation.</p> </li> <li> <p>Non-Qualified EAA: An EAA which is not QEAA or PuB-EAA.</p> </li> </ul> <p>Please note that the differences between these attestation categories are purely legal. For example, a diploma may be a QEAA or a non-qualified EAA, depending on whether it is issued by a qualified trust service provider (QTSP) or by an unqualified one. Similarly, an mDL may be issued as a PuB-EAA, a QEAA, or a non-qualified EAA, depending on the legal status of the party issuing mobile driving licences in each Member State. From a technical point of view, all PIDs, QEAAs, PuB-EAAs, and EAAs comply with one of the attestation formats listed in Section 5.4.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#53-person-identification-data","title":"5.3 Person Identification Data","text":"<p>Besides the fact that the Regulation defines the PID as a category of data that is legally different from EAAs, another difference between PID and EAA is that the presence or absence of a valid PID determines whether a Wallet Unit is in the Operational or the Valid state, as discussed in Section 4.6.3.</p> <p>As implied in that section, it is possible for a Wallet Unit to contain multiple PIDs. In fact, if the User has multiple nationalities, they may be able to receive a PID from multiple PID Providers in a single Wallet Unit. However, please note that a Wallet Provider is free to decide that its Wallet Unit does not support all PID Providers, and that, conversely, a PID Provider may decide that it does not support all Wallet Solutions; see Section 6.5.2.3. Note that in this situation, the subject of all PIDs in the Wallet Unit will be the same person, namely the User of the Wallet Unit.</p> <p>Additionally, a Wallet Unit may contain multiple PIDs, where these PIDs have different subjects. This may happen in case the User is a natural person representing another natural person or a legal person. Examples of this include a parent holding the PID of a child, or a guardian holding the PID of a disabled or elderly person they can legally represent, or a company owner holding a legal-person PID for their company. However, such a situation may lead to operational complexities. In general, how to handle legal representation use cases within the EUDI Wallet ecosystem is a topic that will be further discussed with Member States in the future.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#54-standardised-attestation-formats","title":"5.4 Standardised attestation formats","text":"<p>Within the EUDI Wallet ecosystem, the following suitable standardised formats for electronic attestations of attributes are (potentially) used:</p> <ol> <li>The ISO/IEC 18013-5 standard defines an attribute schema, data format and proof mechanisms for mobile driving licences, which can be used also for other types of attestations, see [ISO/IEC 18013-5].</li> <li>SD-JWT-based Verifiable Credentials (SD-JWT VC) defines a proof mechanism similar to [ISO/IEC 18013-5], but for a different data format, see [SD-JWT VC].</li> <li>W3C Verifiable Credentials Data Model v1.1 [W3C VC DM v1.1] defines a generic attribute schema agnostic to data formats and proof mechanisms, while v2.0 introduces requirements on format and recommendations on proof mechanisms, see [W3C VC DM v2.0].</li> </ol> <p>[Topic 12] states the requirements regarding support for these specifications.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#55-attestation-rulebooks","title":"5.5 Attestation Rulebooks","text":"<p>This section specifies the concept of an Attestation Rulebook. For each type of attestation, such as a PID, an mDL, a diploma, or an e-prescription, an Attestation Rulebook specifies the attribute schema and proof mechanisms of that attestation, and, when required, the trust mechanisms for authentication and authorisation. Each attestation has an attestation type. The attribute schema specified in the Attestation Rulebook defines the unique identifier, syntax, and semantics of all attributes that can be part of that attestation.</p> <p>An Attestation Rulebook also makes some choices regarding the protocol(s) for presentation that must be supported by the relevant attestations. [Topic 12] contains the requirements for Attestation Rulebooks.</p> <p>Attestation Rulebooks are defined by Attribute Schema Providers, see Section 3.15. This role can be assumed by different types of organisation:</p> <ul> <li>Some Rulebooks already have been defined by the European Commission, in consultation with the European Digital Identity Cooperation Group (EDIGC). This concerns the PID Rulebook and the mDL Rulebook. These can be found in Annex 3 of this ARF.</li> <li>The Rulebook for an attestation intended to be used across organisations and/or across borders can be defined by an organisation in which, insofar possible, all stakeholders are represented. This will prevent multiple Attestation Rulebooks being defined for the same type of attestation, for example, diplomas. It will also prevent unnecessary differences in the syntax and semantics between similar attestations. The decision on which organisation will be responsible for a given Attestation Rulebook is out of scope for this document. As explained in [Topic 12], it is possible that an individual Attestation Provider needs to include attributes in an attestation that have not been specified in the relevant sectoral or EU-wide Rulebook. An example of this are attributes that only have a meaning within the Member State in which the Attestation Provider resides. To allow such domestic attributes, an Attestation Provider can define a custom Rulebook to specify attributes that are specific to this Provider and are not included in the EU-wide or sectoral Rulebook.</li> <li>The Rulebook for an attestation intended to be used only within an organisation will be defined by that organisation.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#56-catalogues","title":"5.6 Catalogues","text":"<p>Section 2 in Article 45e of the Regulation, sets up the direct legal basis for the Commission to \"where necessary, establish specifications and procedures for the catalogue of attributes and schemes for the attestation of attributes and verification procedures for qualified electronic attestations of attributes\".</p> <p>One of the main rationales for the ARF is to reach a high level of interoperability. This interoperability can be achieved on different layers. On the technical level, interoperability can be achieved by using common standards, protocols and technical specifications, ensuring common language for Attestation Providers, Wallet Providers and Relying Parties, enabling issuance, presentation and processing of attestations, based on agreed common protocols interfaces and syntax.</p> <p>The other layer is the semantic one and relates to semantic schemes of attributes. The risk is that an uncontrolled manner of implementation and usage will create barriers and complicate the implementation, thus making the ecosystem much more costly to create and maintain, complex, and error-sensitive, affecting the quality of the overall system.</p> <p>For the development and success of the EUDI Wallet ecosystem, re-using the building blocks of attributes and attestations is therefore essential. Creating and maintaining controlled vocabularies, a catalogue of attributes, and attestation rulebooks enables shorter 'time-to-market' and efficient implementation.</p> <p>Building on the requirements of [Topic 12], having in mind both the need for interoperability on the one hand and the varied nature of attestations and organisations specifying those attestations on the other hand, the following principles were defined:</p> <ul> <li>Attestation Rulebooks for QEAAs and PuB-EAAs used within the EUDI Wallet ecosystem may be registered and published in a publicly accessible catalogue. The Attestation Rulebook catalogue may also include Attestation Rulebooks for non-qualified EAAs.</li> <li>The Commission will take measures to establish and maintain the Attestation Rulebooks catalogue.</li> <li>The Attestation Rulebooks catalogue will enable Attestation Providers, Relying Parties and other actors in the EUDI Wallet ecosystem to know which attestation types exist, and what are the identifiers, syntax, and semantics of all attributes that are part of the attestation.</li> </ul> <p>Also, the following points are emphasised, to facilitate creation and adoption:</p> <ul> <li>Registration of an Attestation Rulebook in the Attestation Rulebook catalogue is not mandatory.</li> <li>Registration does not create any obligation or automatic acceptance by any third party, or automatically implies cross-border recognition of the type of attestation described in the Rulebook.</li> <li>The Attestation Rulebooks catalogue can be in the same environment as the catalogue of attributes.</li> </ul> <p>Implementation of these principles will be discussed further in detail. The ambition is to use existing efforts and tools created by the Member States, the Commission and cross-border organisations, to connect and interact with the stakeholders, to utilise existing data assets for updating them when needed and add new data sets to support new use cases that will be implemented in the EUDI Wallet ecosystem.</p> <p>[Topic 25] and [Topic 26] (combined into one topic), present the current and foreseen status of the catalogues, their creation, distribution, discovery, management and maintenance, that will allow simple update procedures, not burdening the process on the one hand, while ensuring consistent and on-going mechanisms to keep the catalogues updated and accessible to the relevant actors, both those that create the content and those that use, consume and process the attributes and the attestations, and - last but not least - for the general public.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6-trust-model","title":"6 Trust model","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#61-scope","title":"6.1 Scope","text":"<p>The trust model presented in this chapter defines how trust is established, maintained, validated, and managed among entities within the EUDI Wallet ecosystem. It outlines the underlying rules, assumptions, and mechanisms that govern trust relationships, determining whether an entity (such as a Wallet Unit, User Device, or Relying Party) can be considered trustworthy.</p> <p> </p> <p>Figure 11 illustrates the key entities and the relationships in the trust model of the EUDI Wallet ecosystem.</p> <p>At its core is the Wallet Unit (top middle, blue), which interacts with various entities throughout its lifecycle, which consists of installation, activation, management, and de-installation (detailed in Section 6.5).  Each Wallet Unit is a configuration of a Wallet Solution, comprising a Wallet Instance and one or more WSCA/WSCDs, provided by a Wallet Provider. The Wallet Provider oversees these components and manages their registration, withdrawal, or suspension (see Section 6.2).  A Wallet Unit Attestation (WUA) is issued to enable other entities to authenticate a Wallet Unit. The Wallet Provider can revoke the WUA if needed.</p> <p>The Wallet Unit handles User PIDs and attestations (QEAAs, PuB-EAAs, and non-qualified EAAs). PIDs are issued by PID Providers and attestations by Attestation Providers, both positioned to the left of the Wallet Unit in Figure 11. Before interacting with a Wallet Unit these providers must be registered with a PID Provider Trusted List Provider (TLP) or Attestation Provider TLP. Upon registration, they receive an access certificate from a PID Provider Access CA or Attestation Provider Access CA. See Section 6.3.</p> <p>Once a Wallet Unit receives a PID or attestation, it can present User attributes to Relying Party Instances (right side of Figure 11). These instances are hardware/software setups enabling Relying Parties to interact with Wallet Units. Relying Parties register with a Relying Party Registrar, receiving an access certificate for each Relying Party Instance, as well as a Relying Party Registration Certificate This is discussed in Section 6.4.</p> <p>Section 6.6 further details the lifecycle of PIDs and attestations, including issuance, presentation, management, and deletion.</p> <p>Notes:</p> <ul> <li>This conceptual trust model may be implemented with slight variations across Member States, such as adopting one or multiple Certification Authorities or leveraging existing entities that already fulfill this role.</li> <li>For Access Certificates, PIDs, qualified EAAs, and PuB-EAAs, interoperability is essential (Section 4.2.2) and is achieved by using a PKI following X.509 certificate standards (RFC5280, RFC3647). Non-qualified EAAs may adopt alternative trust model and verification mechanisms.</li> <li>The model supports both remote and proximity use cases, though technical measures and authentication mechanisms may vary.</li> <li>This version of the ARF does not yet include trust interactions for qualified electronic signatures or seals (see [Topic 16] and [Topic 37] in Annex 2).</li> <li>Besides the trust relationships described in this chapter, other trust relations are established as well. For instance, Users, PID Providers, Attestation Providers, and Relying Parties trust certification bodies and Trusted List Providers. This trust is primarily rooted in authority and in procedural measures, such as public oversight, published security and operational policies, and audits, rather than in technical measures. To verify that entities are indeed interacting with a trusted authority, standard technical measures suitable for the context will be used.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#62-trust-throughout-a-wallet-solution-lifecycle","title":"6.2 Trust throughout a Wallet Solution lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#621-wallet-solution-lifecycle","title":"6.2.1 Wallet Solution lifecycle","text":"<p>Section 4.6.2 presented the lifecycle of a Wallet Solution:</p> <ol> <li>The Wallet Provider responsible for the Wallet Solution is registered by a Trusted List Provider. As a result, the Wallet Solution enters the Valid state. This is discussed in Section 6.2.2.</li> <li>Under specific conditions, a Trusted List Provider may decide to suspend or withdraw a registered Wallet Provider. This is discussed in Section 6.2.3.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#622-wallet-provider-registration-and-notification","title":"6.2.2 Wallet Provider registration and notification","text":"<p>Figure 11 depicts the Wallet Provider to the top of the Wallet Unit. To the left and below of this, the figure also shows that a Wallet Provider registers itself and its Wallet Solution with a Wallet Provider Trusted List Provider in its Member State. Subsequently, the Member State notifies the Wallet Provider to the European Commission.</p> <p>The Wallet Solution provided by the Wallet Provider is certified as described in Chapter 7.</p> <p>If the registration and notification processes are successful, the trust anchors of the Wallet Provider are included in a Wallet Provider Trusted List. During issuance of a PID or an attestation, the PID Provider or the Attestation Provider can use these trust anchors to verify the authenticity of a Wallet Unit Attestation signed by the Wallet Provider, so they can be sure they are dealing with an authentic Wallet Unit from a trusted Wallet Provider. See Section 6.6.3.2 and [Topic 9]. Similarly, when the Wallet Unit presents a PID or an attestation to a Relying Party, the Relying Party can use the Wallet Provider trust anchors to verify the authenticity of a Wallet Unit Attestation signed by the Wallet Provider; see Section 6.6.3.11 and [Topic 38].</p> <p>If a certain entity offers multiple Wallet Solutions, they will register as a separate Wallet Provider for each of these Wallet Solutions. This implies that such an entity will register different trust anchors for each of their Wallet Solutions.</p> <p>More details on the Wallet Provider notification process can be found in [Topic 31].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#623-wallet-provider-suspension-or-withdrawal","title":"6.2.3 Wallet Provider suspension or withdrawal","text":"<p>Under specific conditions, a Trusted List Provider may decide to suspend or withdraw a Wallet Provider. This implies that the Wallet Provider's status in the respective Trusted List will be changed to Invalid. The conditions for this will be specified by each Trusted List Provider. As a result of de-registration, PID Providers, Attestation Providers and Relying Parties will no longer trust the trust anchors of the Wallet Provider and will therefore refuse to interact with any Wallet Unit provided by that Wallet Provider.</p> <p>When a Trusted List Provider withdraws a Wallet Provider, the Wallet Provider revokes all of its WUAs as described in Section 6.6.3.12.</p> <p>If an entity has registered multiple Wallet Providers, each offering a different Wallet Solution, and one of these Wallet Providers is suspended or withdrawn, only the applicable Wallet Solution will be impacted. It may happen that the reason for suspension or withdrawal is applicable to all Wallet Solutions offered, in which case all of the Wallet Providers registered by that entity will be withdrawn or suspended separately.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#63-trust-throughout-a-pid-provider-or-an-attestation-provider-lifecycle","title":"6.3 Trust throughout a PID Provider or an Attestation Provider lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#631-pid-provider-or-attestation-provider-lifecycle","title":"6.3.1 PID Provider or Attestation Provider lifecycle","text":"<p>Section 4.6.4 presented the lifecycle of a PID Provider or Attestation Provider:</p> <ol> <li>A PID Provider or an Attestation Provider is registered by a Trusted List Provider. This is discussed in Section 6.3.2.</li> <li>Under specific conditions, a Trusted List Provider may decide to suspend or withdraw a registered PID Provider or Attestation Provider. This is discussed in Section 6.3.3.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#632-pid-provider-or-attestation-provider-registration-and-notification","title":"6.3.2 PID Provider or Attestation Provider registration and notification","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6321-introduction","title":"6.3.2.1 Introduction","text":"<p>Figure 11 depicts the PID Providers and Attestation Providers to the left of the Wallet Unit. To the left and below of this, the figure also shows that each PID Provider and Attestation Provider will register itself with a PID Provider Trusted List Provider or an Attestation Provider Trusted List Provider in its Member State. Subsequently, the Member State notifies the PID Provider or Attestation Provider to the European Commission.</p> <p>If the registration and notification processes are successful, mainly two things happen:</p> <ul> <li>The PID Provider or Attestation Provider receives an access certificate.</li> <li>The trust anchors of the PID Provider or Attestation Provider are included in a Trusted List.</li> </ul> <p>These two processes are discussed in the next two subsections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6322-pid-provider-or-attestation-provider-receives-an-access-certificate","title":"6.3.2.2 PID Provider or Attestation Provider receives an access certificate","text":"<p>When a PID Provider or Attestation Provider is registered by a Member State, a PID Provider Access Certificate Authority (CA) or Attestation Provider Access Certificate Authority issues one or more access certificates to the PID Provider or to the Attestation Provider. A PID Provider or an Attestation Provider needs such a certificate to authenticate itself towards a Wallet Unit when issuing a PID or an attestation to it, as described in Section 6.6.2.2. A PID Provider access certificate indicates that its subject is a PID Provider. Similarly, an Attestation Provider access certificate indicates that its subject is a QEEA Provider, a PuB-EAA Provider or a non-qualified EAA Provider.</p> <p>Subsequently, the Access Certificate Authority is included in a PID Provider Access CA Trusted List or Attestation Provider Access CA Trusted List. This Trusted List contains at least the trust anchor(s) of the CA. A Wallet Unit can use these trust anchors to verify the authenticity of a PID Provider or an Attestation Provider access certificate during the issuance of a PID or an attestation. For more information, see [Topic 31].</p> <p>Note that, in case the subject is an Attestation Provider, the access certificate does not contain further information about its authorisation or registration to issue attestations of a specific type, for instance an mDL or diploma. Authorisation is dealt with in the following manner:</p> <ul> <li> <p>For QEAA Providers and Pub-EAA Providers, no authorisation is necessary, since these kinds of Providers are trusted by other actors in the EUDI Wallet ecosystem to not fraudulently issue attestations that they are not legally allowed to issue. This trust is warranted since these kinds of Providers operate within a regulated framework and are regularly audited.</p> </li> <li> <p>For non-qualified EAA Providers, this is different, since they are unregulated and may not be completely trustworthy. Without additional measures, a fraudulent EAA Provider may be technically able to issue types of QEAAs, PuB-EAAs or EAAs that it is not legally allowed to issue. To prevent this, the applicable Rulebook (see [Topic 12]) may define mechanisms allowing a Wallet Unit, during issuance of an EAA, to verify that the EAA Provider is authorised or registered to issue the type of EAA the Wallet Unit is requesting. The same mechanism may also be used by Relying Parties during presentation of an EAA.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6323-pid-provider-or-attestation-provider-trust-anchors-are-included-in-a-trusted-list","title":"6.3.2.3 PID Provider or Attestation Provider trust anchors are included in a Trusted List","text":"<p>For a PID Provider, a QEAA Provider, or a PuB-EAA Provider, successful registration and notification also means that the Provider is notified to the European Commission and that its trust anchors are included in a Trusted List. Relying Parties can use these trust anchors to verify the authenticity of PIDs, QEAAs, and PuB-EAAs they obtain from Wallet Units.</p> <p>Non-qualified EAA Providers are not included in a Trusted List by a Member State. However, if a Relying Party requests a non-qualified EAA from a Wallet Instance, it must know how to obtain the domain-specific trust anchor it needs to verify the signature over that EAA. To help with this, [Topic 12] recommends that the applicable Rulebook specifies the mechanisms enabling this. This mechanism may be similar to the one for QEAAs, namely that the relevant non-qualified EAA Providers and their trust anchors are included in a trusted list. However, other methods may be used as well, and even if such a trusted list exists, it does not have to comply with the requirements in [Topic 31].</p> <p>More details on the PID Provider or Attestation Provider notification process, as well as on the information registered and published in the PID Provider Trusted List or Attestation Provider Trusted List, can be found in [Topic 31].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#633-pid-provider-or-attestation-provider-suspension-or-withdrawal","title":"6.3.3 PID Provider or Attestation Provider suspension or withdrawal","text":"<p>Under specific conditions, a Trusted List Provider may decide to suspend or withdraw a registered PID Provider or Attestation Provider. The conditions for this will be specified by each Trusted List Provider.</p> <p>Suspension or withdrawal implies that the PID Provider or Attestation Provider access certificates are revoked. As a result, the PID Provider or Attestation Provider will no longer be able to issue PIDs or attestations to Wallet Units.</p> <p>For a PID Provider, QEAA Provider or PuB-EAA Provider, suspension or withdrawal also implies that its status in the respective Trusted List will be changed to Invalid. As a result, Relying Parties will no longer trust PIDs or attestations issued by the suspended or withdrawn Provider. For non-qualified EAA Providers, the applicable Rulebook (see [Topic 12]) may define additional mechanisms ensuring that Relying Parties will no longer trust the trust anchors of EAA Providers that have been suspended or withdrawn.</p> <p>When a Trusted List Provider suspends or withdraws a PID Provider or Attestation Provider, the PID Provider or Attestation Provider revokes all of their PIDs or attestations as described in Section 6.6.3.7.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#64-trust-throughout-a-relying-party-lifecycle","title":"6.4 Trust throughout a Relying Party lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#641-relying-party-lifecycle","title":"6.4.1 Relying Party lifecycle","text":"<p>Section 4.6.6 presented the lifecycle of a Relying Party:</p> <ol> <li>A Relying Party is registered by a Registrar in the Member State where it resides. Relying Party registration is discussed in Section 6.4.2.</li> <li>Under specific conditions, a Registrar may decide to de-register a registered Relying Party. This is discussed in Section 6.4.3.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#642-relying-party-registration","title":"6.4.2 Relying Party registration","text":"<p>Figure 11 depicts the Relying Party Instance to the right of the Wallet Unit. A Relying Party Instance is a combination of hardware and software used by a Relying Party to interact with a Wallet Unit. A Relying Party can use multiple Relying Party Instances, especially in case the interactions with the Wallet Unit take place in proximity, for instance, a border control agency at an aiport employing multiple lines where arriving passengers can present their PID.</p> <p>Figure 11 also shows the Relying Party. Below that, it shows that each Relying Party will register itself with a Relying Party Registrar in its Member State. If the registration process is successful, the Registrar includes the Relying Party in its public registry.</p> <p>As a result of successful registration,</p> <ul> <li>the Registrar issues a registration certificate to the Relying Party. The purpose of the registration certificate is described in Section 6.6.3.3.</li> <li>a Relying Party Instance Access Certificate Authority (CA) associated with the Registrar issues an access certificate to each Relying Party Instance of the Relying Party. A Relying Party Instance needs such a certificate to authenticate itself towards Wallet Units when requesting the presentation of attributes, as described in Section 6.6.3.2.</li> </ul> <p>Subsequently, a Trusted List Provider in each Member State creates a Relying Party Instance Access CA Trusted List containing the trust anchor(s) of all associated Relying Party Instance Access CA(s). A Wallet Unit can use these trust anchors to verify the authenticity of Relying Party Instance access certificates. The Trusted List Provider signs and publishes the Relying Party Instance Access CA Trusted List and makes the URL of the Trusted List available to a common trust infrastructure maintained by the Commission, the so-called List of Trusted Lists. Using the common infrastructure, any entity in the EUDI Wallet ecosystem will be able to find all Trusted Lists in the ecosystem.</p> <p>More details on the Relying Party registration process can be found in [Topic 27].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#643-relying-party-de-registration","title":"6.4.3 Relying Party de-registration","text":"<p>Under specific conditions, a Registrar may decide to de-register a registered Relying Party. The conditions for this will be specified by each Registrar.</p> <p>De-registration involves revocation of all valid Relying Party Instance access certificates by the relevant Access CA, such that the Relying Party is no longer able to interact with Wallet Units.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#65-trust-throughout-a-wallet-unit-lifecycle","title":"6.5 Trust throughout a Wallet Unit lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#651-wallet-unit-lifecycle","title":"6.5.1 Wallet Unit lifecycle","text":"<p>Section 4.6.3 above presented the lifecycle of a Wallet Unit:</p> <ol> <li>The Wallet Instance that is part of the Wallet Unit is installed on a device by a User. The required trust relationships for installation are discussed in Section 6.5.2 below.</li> <li>Next, the Wallet Unit is activated by the Wallet Provider and the User and becomes operational. The goals and required trust relationships for activation are discussed in Section 6.5.3.</li> <li>Once in the Operational or Valid state, the Wallet Unit is managed by the User and the Wallet Provider. This management includes at least revoking the Wallet Unit when necessary. This is discussed in Section 6.5.4. Management will also include regular updates of the Wallet Instance application to ensure its continued security and functionality. However, this is not further defined in this chapter.</li> <li>The User may de-install the Wallet Instance; see Section 6.5.5.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#652-wallet-instance-installation","title":"6.5.2 Wallet Instance installation","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6521-required-trust-relationships","title":"6.5.2.1 Required trust relationships","text":"<p>The lifecycle of a Wallet Unit starts when a User decides to install a Wallet Instance application on their device. This application in an instance of a Wallet Solution, which is provided to the User by a Wallet Provider.</p> <p>When downloading and installing the Wallet Instance, the following trust relationships are established:</p> <ol> <li>On behalf of the User, the OS of the User's device and the relevant app store verify that the Wallet Instance (i.e., the application the User is installing) is genuine and authentic and does not contain any malware or other threats.</li> <li>The User verifies that they can obtain the PID(s) they need in an instance of this Wallet Solution. If the relevant PID Provider does not support the Wallet Solution, the User would not be able to use the Wallet Unit for obtaining those PID(s).</li> </ol> <p>The next two sections discuss these trust relationships.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6522-wallet-solution-authenticity-is-verified","title":"6.5.2.2 Wallet Solution authenticity is verified","text":"<p>To ensure that the User can trust the Wallet Solution, Wallet Providers preferably make their certified Wallet Solutions available for installation via the official app store of the relevant operating system (e.g., Android, iOS). This allows the operating system of the device to perform relevant checks regarding the authenticity of the app. It also allows Users to use the same well-known channel for obtaining a Wallet Instance as they use for obtaining other apps. Finally, it avoids a situation where a User must allow side-loading of apps, which would increase the risk of unintentionally installing malicious apps.</p> <p>If a Wallet Provider makes its Wallet Solution available for installation through other means than the official OS app store, it implements a mechanism allowing the User to verify the authenticity of the Wallet Unit. Moreover, the Wallet Provider provides clear instructions to the User on how to install the Wallet Unit, including:</p> <ul> <li>instructions on how to verify the authenticity of the Wallet Instance to be installed. This can be done, for example, by comparing the hash value of the application downloaded by the User with a hash value published by the Wallet Provider.</li> <li>instructions on bypassing of any operating system limitations on side-loading of apps, if applicable, and ensuring that these limitations are restored after the Wallet Instance has been installed.</li> </ul> <p>Note: The [European Digital Identity Regulation] does not exclude the possibility that a Wallet Instance may be installed on a non-mobile device, for example a server. The requirements above also apply for the installation of a Wallet Unit on a User device that is not a mobile device, and for which no official operating system app store may exist.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6523-user-validates-that-wallet-solution-is-usable-with-relevant-pid","title":"6.5.2.3 User validates that Wallet Solution is usable with relevant PID","text":"<p>A User installs a Wallet Unit because they want to obtain and use one or more PIDs. However, PID Providers are not required to support all Wallet Solutions in the EUDI Wallet ecosystem. 'Support' here means that the PID Provider is willing to issue a PID to an instance of a given Wallet Solution on request of the User. Instead, a PID Provider may choose to support only a single Wallet Solution or a limited number of Wallet Solutions. Therefore, each PID Provider will publish a list of Wallet Solutions that they support, such that a User that wants to request a PID from that PID Provider knows which Wallet Unit they should install. This list could be published, for example, on the PID Provider's website.</p> <p>Conversely, a Wallet Solution is not required to support all PID Providers, where 'support' means that it is able to request the issuance of a PID from a PID Provider. Each Wallet Provider will, prior to or during installation of a Wallet Instance, let the User know which PID Providers are supported by this Wallet Solution.</p> <p>For QEAAs, Pub-EAAs, and non-qualified EAAs, the situation is different. Providers of such attestations will support all Wallet Solutions and are not allowed to discriminate between them when processing a request for the issuance of an attestation. Conversely, a Wallet Solution supports all Attestation Providers, and cannot discriminate between different Attestation Providers when requesting the issuance of an attestation at the User's request.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#653-wallet-unit-activation","title":"6.5.3 Wallet Unit activation","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6531-introduction","title":"6.5.3.1 Introduction","text":"<p>After installation of the Wallet Instance, the new Wallet Unit (which includes that Wallet Instance) will contact the Wallet Provider to start the activation process. For successful EUDI Wallet Instance activation, the following trust relations are established:</p> <ol> <li>The EUDI Wallet Instance authenticates the EUDI Wallet Provider, meaning that the instance is sure that it is dealing with the genuine Wallet Provider who provided it to the User.</li> <li>The EUDI Wallet Provider authenticates the EUDI Wallet Instance. This means that the EUDI Wallet Provider is sure that the instance is indeed a true instance of their EUDI Wallet Solution, and not a fake app.</li> </ol> <p>Both of these trust relationships are the responsibility of the Wallet Provider. The ARF does not specify how these trust relationships can be satisfied.</p> <p>During the activation process, at least the following steps happen:</p> <ol> <li>The Wallet Provider requests data about the User's device from the Wallet Instance.</li> <li>The Wallet Provider requests the User to set up at least one User authentication mechanism.</li> <li>The Wallet Provider issues one or more Wallet Unit Attestations to the Wallet Unit.</li> <li>The Wallet Provider sets up a User account for the User.</li> </ol> <p>These steps are described in the sections below.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6532-wallet-provider-requests-data-about-the-users-device-from-the-wallet-instance","title":"6.5.3.2 Wallet Provider requests data about the User's device from the Wallet Instance","text":"<p>The Wallet Instance connects to the Wallet Provider to be activated. Then, the Wallet Provider requests data about the User's device from the Wallet Instance. This data may include the communication technologies supported by the device and the characteristics of the WSCD(s) available to the device for securely storing cryptographic keys and data associated with the Wallet Unit itself and with the attestations in that Wallet Unit.</p> <p>Notes:</p> <ul> <li>As discussed in Section 4.5, a WSCD may be integrated directly within the User's device. Examples of this include an e-SIM, a UICC, an embedded Secure Element, or native secure hardware accessible via the device's OS. If so, the Wallet Instance will discover the presence of such a WSCD during activation and will communicate the characteristics of the WSCD to the Wallet Provider. In some cases, the Wallet Provider will subsequently deploy a WSCA to the WSCD to facilitate communication between the Wallet Instance and the WSCD.</li> <li>Sometimes, the User's device does not contain a WSCD, or the WSCD does not have the security posture necessary to enable the Wallet Unit to be an identity means at LoA \"high\". In such a case, the Wallet Provider ensures the Wallet Unit gets access to a remote HSM operated by the Wallet Provider.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6533-wallet-provider-requests-user-to-set-up-at-least-one-user-authentication-mechanism","title":"6.5.3.3 Wallet Provider requests User to set up at least one User authentication mechanism","text":"<p>User authentication will take place at several moments when a User uses their Wallet Unit:</p> <ol> <li>When the User opens the Wallet Instance. This is necessary to prevent anyone except the User from accessing the Wallet Unit and inspecting the User's attestations and attribute values. This data is personal and might be sensitive.</li> <li>When (or before) the Wallet Unit asks the User for approval to present some attributes to a Relying Party, see Section 6.6.3.5.</li> </ol> <p>User authentication for opening the Wallet Instance above can be done either by the Wallet Instance or by a WSCD. In the latter case, it is the same mechanism employed before the presentaion of any attributes, see below. In the former case, the mechanism is Wallet Unit-specific, meaning it is independent from any general User authentication mechanism used by the User device, such as a lock screen.</p> <p>User authentication before presenting attributes is always done by the WSCA. It means that the User gives the WSCA permission to use the cryptographic keys belonging to the Wallet Unit and to the PID or attestation for performing the cryptographic operations necessary for presenting that PID or attestation. For that reason, it is always the WSCD that performs User authentication in this case.</p> <p>During activation of the Wallet Unit, depending on the choice made by the Wallet Provider to combine the two User authentication mechanisms or not, the Wallet Provider will ask the User to set up one or two authentication mechanisms.</p> <p>Note that, as discussed in the first bullet in Section 6.6.3.9, the User authentication mechanisms implemented in the WSCD may also play a role in ensuring User binding. User binding allow a Relying Party to trust that the person presenting a PID or attestation is in fact the subject of that PID or attestation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6534-wallet-provider-issues-one-or-more-wallet-unit-attestations-to-the-wallet-unit","title":"6.5.3.4 Wallet Provider issues one or more Wallet Unit Attestations to the Wallet Unit","text":"<p>During the activation of a Wallet Unit, the Wallet Provider issues one or more Wallet Unit Attestations to the Wallet Unit. The Wallet Unit Attestation (WUA) is described in [Topic 9]. A WUA has three main purposes:</p> <ul> <li>It describes the capabilities and properties of the Wallet Unit, including the Wallet Instance, the User device, and the WSCD(s). This allows a PID Provider or an Attestation Provider to verify that the Wallet Unit complies with the Provider's requirements and therefore is fit to receive a PID or an attestation from the Provider.</li> <li>Moreover, the WUA contains a WUA public key. During the issuance of a PID or an attestation (see Section 6.6.2.3, a PID Provider or Attestation Provider can use this public key to verify that the Wallet Unit is in possession of the corresponding private key. Moreover, at that time, the Wallet Unit will send another public key to the PID Provider or Attestation Provider. The Provider will include this public key in the issued PID or attestation. By using a concept called public key association, described in [Topic 9], the PID Provider or Attestation Provider can verify that the private key belonging to this public key is protected by the same WSCD as the private key belonging to the WUA public key. Thus, the PID Provider or Attestation Provider can trust this new public key.</li> <li>Lastly, if a WUA is valid for 24 hours or longer, it contains information allowing a PID Provider, an Attestation Provider, or a Relying Party to verify that the Wallet Provider did not revoke the Wallet Unit Attestation, and hence the Wallet Unit itself. The WUA and the revocation mechanisms for Wallet Units are described in [Topic 38].</li> </ul> <p>The detailed format of the WUA will be discussed with Member States for ARF 2.0. However, it will be an attestation complying either with [SD-JWT VC] or [ISO/IEC 18013-5], allowing selective disclosure of attributes. This is necessary because Relying Parties do not need to know the properties of the Wallet Unit described in the first bullet above. Consequently, the Wallet Unit must be able to present a WUA without disclosing these attributes.</p> <p>The responsibilities of the Wallet Provider regarding issuance of a WUA are similar to those of a PID Provider or Attestation Provider regarding the issuance of a PID or attestation. This means that after the initial issuance of a WUA during activation, the Wallet Provider will manage the WUA and will issue new WUAs to the Wallet Unit as needed, during the lifetime of the Wallet Unit. In particular, the Wallet Provider will ensure that the risk of malicious Relying Parties linking multiple presentations of the same WUA in order to track the User, is minimised. For example, the Wallet Provider may set up the Wallet Unit in such a way that each Wallet Unit Attestation is presented to at most one PID Provider, Attestation Provider, or Relying Party. This topic will be discussed with Member States for ARF 2.0.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6535-wallet-provider-sets-up-a-user-account-for-user","title":"6.5.3.5 Wallet Provider sets up a User account for User","text":"<p>The User needs a User account at the Wallet Provider to ensure that they can request the revocation of their Wallet Unit in case of theft or loss. The Wallet Provider associates the Wallet Unit with the User account. The Wallet Provider registers one or more backend-based User authentication methods that the Wallet Provider will use to authenticate the User. Note that:</p> <ul> <li>The Wallet Provider does not need to know any real-world attributes of the User. The User can use a pseudonym to register, for example an e-mail address. If the Wallet Provider wants to request additional User attributes, for instance to be able to provide additional services, they are free to do so if the User consents.</li> <li>In any case, User details registered by the Wallet Provider will not be included in the WUA. They are strictly for use by the Wallet Provider only.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#654-wallet-unit-management","title":"6.5.4 Wallet Unit management","text":"<p>Starting from Wallet Unit activation and until the Wallet Instance is de-installed by the User, a Wallet Unit is managed by the User and the Wallet Provider. The Wallet Provider is responsible at least to:</p> <ul> <li>perform installation of a new version of the Wallet Solution as necessary.</li> <li>update the WUAs as necessary; see [Topic 9].</li> <li>revoke the Wallet Unit in case its security is compromised; see [Topic 38].</li> </ul> <p>The User will be able to request the Wallet Provider to revoke the Wallet Unit at least in case of loss or theft of the User's device. See [Topic 38].</p> <p>In case the Wallet Unit contains a PID, the PID Provider may request the Wallet Provider to revoke the Wallet Unit in case the natural person using the Wallet Unit has died or the legal person using the Wallet Unit has ceased operations. See [Topic 38].</p> <p>Lastly, the Wallet Unit supports procedures for backing up and restoring the attestations it contains, or for migrating these attestations to a different Wallet Solution. See [Topic 33] and [Topic 34] respectively.</p> <p>To allow Wallet Unit management, the following trust relations are established:</p> <ol> <li>When contacting the Wallet Provider, for instance to request the revocation of the Wallet Unit, the User authenticates the Wallet Provider. This means the User is sure that they are visiting the website or the User portal of the genuine Wallet Provider who is responsible for the User's Wallet Unit, and not a spoofed website or portal. This risk can be partly mitigated by using standard mechanisms such as TLS server authentication. However, in addition the User will need to be vigilant as well, just as with any website on the internet.</li> <li>When contacted by a User, the Wallet Provider authenticates the User. This means that the Wallet Provider is sure that the User is indeed the User that was associated with the Wallet Unit during activation. For this, the Wallet Provider uses the authentication methods established in the User's account during activation, see Section 6.5.3.</li> <li>When the Wallet Unit and the Wallet Provider set up a communication channel, the Wallet Unit authenticates the Wallet Provider, meaning that the Wallet Unit is sure that it is dealing with the genuine Wallet Provider. Similarly, the Wallet Provider authenticates the Wallet Unit. This means that the Wallet Provider is sure that the EUDI Wallet Instance is indeed a true instance of their Wallet Solution, and not a fake app. This will be ensured by the Wallet Provider. The ARF does not specify how these trust relationships can be satisfied.</li> <li>When contacted by a PID Provider to request Wallet Unit revocation, the Wallet Provider authenticates the PID Provider. Section 6.6.2.2 below describes how a Wallet Unit can do this during PID issuance; a Wallet Provider can use the same mechanism.</li> <li>To identify the Wallet Unit that is to be revoked, the PID Provider uses a Wallet Unit identifier provided by the Wallet Provider in the WUA during PID issuance; see [Topic 9].</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#655-wallet-instance-de-installation","title":"6.5.5 Wallet Instance de-installation","text":"<p>No trust relationships are required for Wallet Instance de-installation; anybody able to access the device of the User will be able to do this.</p> <p>If the User uninstalls the Wallet Instance, the Wallet Instance ensures that the associated WSCA(s) delete all sensitive data and cryptographic keys related to the Wallet Unit and to all PIDs and attestations on the Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66-trust-throughout-a-pid-or-an-attestation-lifecycle","title":"6.6 Trust throughout a PID or an attestation lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#661-pid-or-attestation-lifecycle","title":"6.6.1 PID or attestation lifecycle","text":"<p>Section 4.6.5 above presented the lifecycle of a PID or attestation within a Wallet Unit:</p> <ol> <li>Using their Wallet Unit, the User requests the issuance of a PID or an attestation from a PID Provider or an Attestation Provider. The required trust relationships for issuance are discussed in Section 6.6.2 below.</li> <li>Once the PID or attestation is issued into the Wallet Unit, the User can present attributes from it to a Relying Party Instance, according to the User's decision and depending on successful authentication of the Relying Party. The required trust relationships for presenting PIDs and attestations, including User approval and Relying Party authentication, are discussed in Section 6.6.3.</li> <li>Instead of presenting attributes to a Relying Party, a User can also present them to another User, meaning that their Wallet Unit is interacting with another Wallet Unit. This is briefly discussed in Section 6.6.4.</li> <li>The PID Provider or the Attestation Provider remains responsible for managing the PID or attestation over its lifetime. Management may include re-issuing the PID or attestation with the same or with different attribute values. The Provider can also revoke the PID or the attestation, possibly based on a request of the User. The required trust relationships for managing PIDs and attestations are discussed in Section 6.6.5.</li> <li>Finally, Section 6.6.6 discusses what happens if a User decides to delete a PID or an attestation from their Wallet Unit.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#662-pid-or-attestation-issuance","title":"6.6.2 PID or attestation issuance","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6621-required-trust-relationships","title":"6.6.2.1 Required trust relationships","text":"<p>The lifecycle of a PID or an attestation starts when a User, using their Wallet Unit, requests a PID Provider or an Attestation Provider to issue the PID or an attestation to their Wallet Unit. The following trust relationships are established during issuance:</p> <ol> <li>The Wallet Unit authenticates the PID Provider or Attestation Provider using the access certificate referred to in Section 6.3. This ensures that the User can trust that the PID or attestation they are about to receive, is issued by an authenticated PID Provider or Attestation Provider respectively. See Section 6.6.2.2 below describing how this will be done.</li> <li>The PID Provider or Attestation Provider authenticates the User, meaning that the Provider is sure about the identity of the User. This is necessary to enable determination of the values of the attributes that the Provider will attest to. For instance, a PID Provider needs to authenticate the User to ensure it provides a PID containing the correct family name and date of birth. The method by which the PID Provider or Attestation Provider performs User identification and authentication is out of scope of the ARF, as these processes are specific to each PID Provider or Attestation Provider. However, they will satisfy the requirements for the Level of Assurance required for the PID or attestation issued.</li> <li>The PID Provider or Attestation Provider authenticates and validates the Wallet Unit, see Section 6.6.2.3 below.</li> <li>The PID Provider or Attestation Provider verifies that the Wallet Provider did not revoke the Wallet Unit. This is described in Section 6.6.2.4.</li> <li>After the PID or attestation is issued to the Wallet Unit, the Wallet Unit verifies the authenticity of the PID or attestation; see Section 6.6.2.5.</li> <li>Finally, the User will activate a PID before they can use it; see Section 6.6.2.6.</li> </ol> <p>More detailed requirements for the issuance process of PIDs and attestations, for instance regarding the issuance protocol, are included in [Topic 10] and [Topic 23].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6622-wallet-unit-authenticates-the-pid-provider-or-attestation-provider","title":"6.6.2.2 Wallet Unit authenticates the PID Provider or Attestation Provider","text":"<p>As shown in Figure 11, a Wallet Unit downloads the PID Provider Access CA Trusted List(s) it needs from the relevant Trusted List Provider(s), possibly after having located them via the Commission common trust infrastructure. It also downloads all Attestation Provider Access CA Trusted List(s)See Section 6.3.2 for more information on these Trusted Lists.</p> <p>Note: It is not mandatory for each Wallet Unit to possess all PID Provider CA Trusted Lists, if there are multiple. Wallet Providers will choose which Trusted Lists they need to subscribe to, for example depending on the Member State(s) they are operating in. It is however mandatory to possess all Attestation Provider CA Trusted Lists, as Wallet Units must support all QEAA Providers and PuB-EAA Providers in the EUDI Wallet ecosystem.</p> <p>To start the process of requesting a PID or an attestation, the User directs the Wallet Unit to contact the PID Provider or Attestation Provider. The User may for example use the Wallet Unit to scan a QR code or tap an NFC tag to do so. Note that no centralised service discovery mechanism for PID or attestation issuance is foreseen.</p> <p>Before requesting the issuance of a PID or an attestation, the Wallet Unit authenticates the PID Provider or the Attestation Provider. To do so, the Wallet Unit verifies the access certificate presented to it by the PID Provider or Attestation Provider in its Issuer metadata according to [OpenID4VCI]. The Wallet Unit checks that the access certificate indicates that its subject is a PID Provider or an Attestation Provider. The Wallet Unit also verifies that the access certificate is authentic, that it is valid at the time of validation, and that the issuer of the certificate is a CA that is in the PID Provider or Attestation Provider Access CA Trusted List.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6623-pid-provider-or-attestation-provider-validates-the-wallet-unit","title":"6.6.2.3 PID Provider or Attestation Provider validates the Wallet Unit","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66231-verifies-the-authenticity-of-the-wallet-unit","title":"6.6.2.3.1 Verifies the authenticity of the Wallet Unit","text":"<p>As shown in Figure 11, a PID Provider or an Attestation Provider downloads the Wallet Provider Trusted List(s) it needs from the relevant Trusted List Provider(s), possibly after having located them via the Commission common trust infrastructure.</p> <p>Note that for PID Providers it is not mandatory to possess all Wallet Provider Trusted Lists, if there are multiple. This is because it is not mandatory for a PID Provider to accept all certified Wallet Solutions in the EUDI Wallet ecosystem. Each PID Provider will choose which Trusted Lists they need to subscribe to. This is different for Attestation Providers: they must accept all Wallet Solutions and hence must possess all Wallet Provider Trusted Lists.</p> <p>Section 6.5.3 above described that a Wallet Provider, during activation of a Wallet Unit, issues a Wallet Unit Attestation (WUA) to the Wallet Unit. When the Wallet Unit sends a request for a PID or an attestation to a PID Provider or to an Attestation Provider, it includes the WUA in the request. The PID Provider or Attestation Provider verifies the signature over the WUA, using the Wallet Provider trust anchor obtained from the Trusted List. Next, the PID Provider or Attestation Provider verifies that the Wallet Unit possesses the private key belonging to the public key in the WUA. This proves that the Wallet Unit is authentic and is provided by a trusted Wallet Provider. For more details see [Topic 9].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66232-optionally-verifies-that-the-users-wallet-unit-supports-all-required-features","title":"6.6.2.3.2 Optionally, verifies that the User's Wallet Unit supports all required features","text":"<p>The WUA describes relevant features of the Wallet Unit, as well as the device it is installed on. Depending on their needs, PID Providers or Attestation Providers optionally verify that the User's Wallet Instance supports all features they require. For example, for some PID Providers or Attestation Providers it may be relevant to know whether the Wallet Unit supports presenting the attestation in proximity flows using NFC.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66233-optionally-validates-the-properties-of-the-wscd","title":"6.6.2.3.3 Optionally, validates the properties of the WSCD","text":"<p>The WUA describes the certifications and the other relevant properties of the WSCD, i.e., the secure cryptographic device included in the Wallet Unit to store and manage cryptographic keys. The security level of the WSCD is a key determinant for the overall Level of Assurance (LoA) of the Wallet Unit. For obtaining a PID, the Wallet Unit and the WSCD will comply with the requirements for LoA High. For other attestations, LoA High or Substantial will be needed, depending on the requirements of the Attestation Provider.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66234-verifies-that-the-pid-key-or-the-attestation-key-is-protected-by-the-wscd","title":"6.6.2.3.4 Verifies that the PID key or the attestation key is protected by the WSCD","text":"<p>Knowing the properties of the WSCD is not very useful if the PID Provider or Attestation Provider cannot be sure that the private key for their new PID or attestation is indeed protected by that WSCD. [Topic 9] describes how the PID Provider or Attestation Provider can obtain a so-called proof of association from the WSCD. This proof of association proves that the WSCD described in the WUA protects both the WUA private key and the private key of the PID or the new attestation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6624-pid-provider-or-attestation-provider-verifies-that-wua-is-not-revoked","title":"6.6.2.4 PID Provider or Attestation Provider verifies that WUA is not revoked","text":"<p>Section 6.5.3 above described that a Wallet Provider, during activation of a Wallet Unit, issues a Wallet Unit Attestation (WUA) to the Wallet Unit. If the WUA is valid for longer than 24 hours, it contains revocation information. During the lifetime of the Wallet Unit, the Wallet Provider regularly verifies that the security of the Wallet Unit is not breached or compromised. If the Wallet Unit is no longer secure, the Wallet Provider revokes any of its WUAs that has a remaining validity period of 24 hours or longer. If the Wallet Provider uses WUAs with a validity period of less than 24 hours, it stops issuing new WUAs to a Wallet Unit that is no longer secure. The WUA thus allows PID Providers, Attestation Providers and Relying Parties to verify that the Wallet Unit is not revoked.</p> <p>[Topic 38] describes Wallet Unit revocation in more detail.</p> <p>Once it has done all verifications, the PID Provider or Attestation Provider will issue the PID or attestation to the Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6625-wallet-unit-verifies-pid-or-attestation","title":"6.6.2.5 Wallet Unit verifies PID or attestation","text":"<p>After the Wallet Unit receives the PID or attestation, it will</p> <ul> <li>verify that the PID or attestation it received matches the request.</li> <li>verify the signature of the PID or attestation, using the appropriate trust anchor, in the same way as described for a Relying Party Instance in Section 6.6.3.6.</li> <li>show the contents (i.e., attribute values) of the new PID or attestation to the User and request the User's approval for storing the new PID or attestation. When requesting approval, the Wallet Unit shows the contents of the PID or attestation to the User. The Wallet Unit also informs the User about the identity of the PID Provider or Attestation Provider, using the subject information from the PID Provider or Attestation Provider access certificate.</li> </ul> <p>If one these verifications fail, the Wallet Unit will delete the PID or attestation, and will inform the User that issuance was not successful.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6626-user-activates-the-pid","title":"6.6.2.6 User activates the PID","text":"<p>As documented in [Topic 9], to achieve Level of Assurance (LoA) \"high\", Commission Implementing Regulation (EU) 2015/1502 requires that an activation process will be implemented to verify that a PID was in fact delivered into the possession of the person to whom it belongs.</p> <p>However, in fact no additional step is needed in the issuance process to ensure this. This is because the User always starts the issuance process from the Wallet Unit into which they want the PID Provider to issue the new PID. The PID Provider sets up a secure communication channel towards this Wallet Unit, using the flow specified in [OpenID4VCI]. Additionally, the User uses an eID means on LoA High to authenticate towards the PID Provider. This process ensures that the new PID can only end up on the mobile device of the subject of the PID.</p> <p>Note that activation is formally required only for PIDs, since the [European Digital Identity Regulation] only requires PIDs to be issued at LoA \"high\". However, the above applies for QEAAs, PuB-EAAs, and non-qualified EAAs as well.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#663-pid-or-attestation-presentation-to-relying-party","title":"6.6.3 PID or attestation presentation to Relying Party","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6631-required-trust-relationships","title":"6.6.3.1 Required trust relationships","text":"<p>A Relying Party can request a User to present some attributes from a PID or from an attestation in their Wallet Unit. Figure 11 shows that a Relying Party uses a Relying Party Instance to interact with the Wallet Unit of the User. The relationship between the Relying Party and their Relying Party Instance is equivalent to the relationship between the User and their Wallet Unit.</p> <p>When processing the request, the following trust relationships are established:</p> <ol> <li>The Wallet Unit authenticates the Relying Party Instance, ensuring the User about the Relying Party's identity. Section 6.6.3.2 explains how this will be done.</li> <li>The Wallet Unit verifies that the Relying Party does not request more attributes than it has registered for, and informs the User about the outcome of this verification. See Section 6.6.3.3 for more information.</li> <li>The Attestation Provider, during issuance, may optionally have embedded a disclosure policy in the attestation. If such a policy is present for the requested attestation, the Wallet Unit evaluates the disclosure policy and informs the User about the outcome of this evaluation. See Section 6.6.3.4.</li> <li>The User approves or rejects the presentation of the requested attributes. User approval and selective disclosure are described in Section 6.6.3.5.</li> </ol> <p>Subsequently, after the Wallet Unit presents the selected attributes from the PID or attestation to the Relying Party Instance by sending a response to the request, the Relying Party validates the response. The following trust relationships are established: 5. The Relying Party Instance verifies the signature of the PID or attestation. This ensures that the Relying Party can trust that the PID or attestation it receives is issued by an authentic Provider and has not been changed. This is described in Section 6.6.3.6. 6. The Relying Party verifies that the PID Provider or Attestation Provider did not revoke the PID or attestation. This is described in Section 6.6.3.7. 7. The Relying Party verifies that the PID Provider or Attestation Provider issued this PID or attestation to the same Wallet Unit that provided it to the Relying Party. In other words, it checks that the PID or attestation was not copied or replayed. This is generally called device binding, and it is discussed in Section 6.6.3.8 8. In some use cases, the Relying Party verifies that the person presenting the PID or attestation is the subject of the PID or attestation. This is called User binding. In other use cases, the Relying Party trusts that Wallet Unit and the WSCD have done this. User binding is discussed in Section 6.6.3.9. 9. The Relying Party can request attributes from two or more attestations in the same interaction. This is called a combined presentation of attributes. If so, the Relying Party verifies that these attestations belong to the same User. This is discussed in Section 6.6.3.10.</p> <p>Either before or after validating the PID or attestation per steps 5 - 9,</p> <ol> <li>The Relying Party Instance authenticates the Wallet Unit and the Wallet Provider; see Section 6.6.3.11.</li> <li>The Relying Party Instance verifies that the Wallet Provider did not revoke the Wallet Unit, see Section 6.6.3.12</li> </ol> <p>Finally, after the interaction with the Relying Party Instance is over,</p> <ol> <li>The Wallet Unit enables the User to report unlawful or suspicious requests for personal data by a Relying Party, based on information logged by the Wallet Unit. Similarly, the Wallet Unit enables the User to request a Relying Party to delete personal data (i.e., User attributes) obtained from the Wallet Unit. This is discussed in Section 6.6.3.13.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6632-wallet-unit-authenticates-the-relying-party-instance","title":"6.6.3.2 Wallet Unit authenticates the Relying Party Instance","text":"<p>Relying Party authentication is a process whereby a Relying Party proves its identity to a Wallet Unit, in the context of an interaction in which the Relying Party requests the Wallet Unit to present some attributes. Relying Party authentication is discussed in [Topic 6].</p> <p>Relying Party authentication is included in the protocol used by a Wallet Unit and a Relying Party Instance to communicate. As documented in [Topic 12], at least two different protocols can be used within the EUDI Wallet ecosystem, namely the ones specified in [ISO/IEC 18013-5] and [OpenID4VP]. Both protocols include functionality allowing the Wallet Unit to authenticate the Relying Party Instance. Although these protocols differ in the details, on a high level, they both implement Relying Party authentication as shown in Figure 12 below.</p> <p> </p> <p>Figure 12 High-level overview of Relying Party authentication process</p> <p>The figure shows the following:</p> <p>First, there are two preconditions that need to be fulfilled before the Relying Party authentication process can begin. Note that these actions are not carried out for every presentation, but only once (excluding possible updates):</p> <p>A) The Relying Party registered itself as described in Section 6.3.2 and obtained a Relying Party Instance access certificate.</p> <p>B) The Wallet Unit obtained the trust anchor of the Relying Party Instance Access Certificate Authority.</p> <p>Subsequently, during each presentation of attributes:</p> <ol> <li>The Relying Party Instance prepares a request for some attributes to the Wallet Unit and includes its Relying Party Instance access certificate in the request, plus all intermediate certificates up to (but excluding) the trust anchor.</li> <li>The Relying Party Instance signs some data in the attribute request using its private key.</li> <li>The Relying Party Instance sends the request to the Wallet Unit.</li> <li>The Wallet Unit checks the authenticity of the request by verifying the signature over the request using the public key in the Relying Party Instance access certificate.</li> <li>The Wallet Unit checks the authenticity of the Relying Party by validating the Relying Party Instance access certificate and all intermediate certificates included in the request. For validating the last intermediate certificate, the Wallet Unit uses the trust anchor it obtained from the Trusted List.</li> <li>The Wallet Unit validates that none of the certificates in the trust chain have been revoked. This includes the Relying Party Instance access certificate as well as all other certificates in the trust chain, including the trust anchor itself if applicable.</li> <li>The Wallet Unit continues by requesting the User for approval.</li> <li>The User approves the attributes that will be presented.</li> <li>The Wallet Unit sends a response containing only the approved attributes to the Relying Party Instance.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6633-wallet-unit-allows-user-to-verify-that-relying-party-does-not-request-more-attributes-than-it-registered","title":"6.6.3.3 Wallet Unit allows User to verify that Relying Party does not request more attributes than it registered","text":"<p>During registration, the Relying Party registered which attributes it intends to request from Wallet Units. The Registrar listed these attributes in a Relying Party registration certificate and sent it to the Relying Party, which distributes it to all of its Relying Party Instances.</p> <p>During a transaction, a Relying Party Instance sends this registration certificate to the Wallet Unit in the presentation request. The Wallet Unit displays the contents of the registration certificate to the User when asking the User for approval, see Section6.6.3.5, at least in case one or more of the requested attributes is not included in the list of attributes in the registration certificate.</p> <p>The format of the registration certificate, as well as the way in which the Wallet Unit can verify that the registration certificate belongs to the authenticated Relying Party, will be specified in a technical specification. For more information, see [Topic 44].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6634-wallet-unit-evaluates-disclosure-policy-embedded-in-attestation-if-present","title":"6.6.3.4 Wallet Unit evaluates disclosure policy embedded in attestation, if present","text":"<p>During attestation issuance, an Attestation Provider optionally has embedded a disclosure policy in the attestation. Such an embedded disclosure policy contains rules determining which types of Relying Party are allowed by the Attestation Provider to receive specific attributes from the attestation. Note that the [European Digital Identity Regulation] does not contain a requirement for PIDs to be able to contain an embedded disclosure policy, but only for QEAAs and PuB-EAAs.</p> <p>If a policy is present in the attestation, the Wallet Unit evaluates the policy, together with data obtained from the Relying Party, to determine whether the Attestation Provider allows this Relying Party to receive the requested attributes. Data obtained from the Relying Party may be included in an attribute certificate comparable to the registration certificate discussed in the previous section. Such an attribute certificate may have been issued to the Relying Party by the Attestation Provider itself. In any case, the Wallet Unit authenticates any data obtained from the Relying Party before using it.</p> <p>The Wallet Unit presents the outcome of the disclosure policy evaluation to the User in the form of advice, when requesting User approval. For example, \"The issuer of your medical data does not want you to present &lt;attribute names&gt; to &lt;Relying Party name&gt;. Do you want to continue?\" Note that the User can overrule the disclosure policy evaluation outcome.</p> <p>For more details on the embedded disclosure policy, see [Topic 43]. This topic will be further discussed with Member States for ARF 2.0.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6635-wallet-unit-obtains-user-approval-for-presenting-selected-attributes","title":"6.6.3.5 Wallet Unit obtains User approval for presenting selected attributes","text":"<p>Note: In this document the term 'User approval' exclusively refers to a User's *decision to present an attribute to a Relying Party. Under no circumstances *User approval to present data from their Wallet Unit should be construed as *lawful grounds for the processing of personal data by the Relying Party or any *other entity. A Relying Party requesting or processing personal data from a *Wallet Unit must ensure that it has grounds for lawful processing of that data, *according to Article 6 of the GDPR.</p> <p>Before presenting any attribute to a Relying Party, the Wallet Unit requests the User for their approval. This is critical for ensuring that the User remains in control of their attributes.</p> <p>A Wallet Unit requests User approval in all use cases, both in proximity flow and remote flow, and including:</p> <ul> <li>Use cases where the Relying Party could be assumed to be trusted, for example, when the Relying Party is part of law enforcement or another government agency.</li> <li>Use cases where the requested attributes are critical for the Relying Party to grant access to the User or deliver the requested services.</li> <li>Use cases where there is, according to the GDPR or other legislation, no legal need to ask for the User's approval because another legal basis exists for requesting the attributes.</li> </ul> <p>A prerequisite for requesting User approval is that the Wallet Unit is sure that the person using the Wallet Unit is in fact the User. Therefore, the WSCA authenticates the User prior to or during requesting User approval, on request of the Wallet Unit. To do so, the Wallet Unit uses the User authentication mechanisms set up during Wallet Unit activation, see Section 6.5.3. More detailed requirements regarding User approval can be found in [Topic 6].</p> <p>Another prerequisite for effective User approval is that the Wallet Unit allows the selective disclosure of attributes. Selective disclosure implies mainly two thing. First, it enables a Relying Party to specify which of the attributes in an attestation it wishes to receive (and which ones not). A Relying Party may have different purposes for the requested attributes. For example, an online liquor shop may need an age attestation to comply with its legal obligations, and in addition would like to receive address information to be able to send the ordered liquor to the User's home. Therefore, the Relying Party indicates the goal of each (group of) requested attributes.</p> <p>Secondly, selective disclosure implies that the Wallet Unit enables the User to approve or deny the presentation of each (group of) attributes separately. The User takes a decision based on at least the following information:</p> <ul> <li>The authenticated identity of the Relying Party,</li> <li>The information in the Relying Party's registration certificate regarding the attributes that the Relying Party has registered during registration, at least in case one or more of the requested attributes is not included in the list of attributes in the registration certificate,</li> <li>The information in the Relying Party's registration certificate regarding an intermediary used by the Relying Party, if any, see Section 3.11.</li> <li>The outcome of the evaluation of the embedded disclosure policy, if any.</li> </ul> <p>After the User gives their approval, the Wallet Unit will present the approved User attributes to the Relying Party Instance.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6636-relying-party-instance-verifies-the-authenticity-of-the-pid-or-attestation","title":"6.6.3.6 Relying Party Instance verifies the authenticity of the PID or attestation","text":"<p>The Relying Party Instance receives a PID or attestation, including some attributes, from the Wallet Unit. Subsequently, it verifies the signature over the PID or attestation. To do this for PIDs and QEAAs, the Relying Party Instance uses a trust anchor of the Provider obtained from a Trusted List. Note that the PID Provider or QEAA Provider may use an intermediate signing certificate to sign the PID or attestation, and use the trust anchor to sign the signing certificate, instead of signing the PID or attestation directly with the trust anchor.</p> <p>For PuB-EAAs, the Relying Party Instance verifies a PuB-EAA by first verifying the signature of the PuB-EAA Provider over the PuB-EAA, using the PuB-EAA Provider certificate issued by a QTSP. Subsequently, the Relying Party Instance verifies the signature over this certificate, using the corresponding trust anchor from the QTSP Trusted List. Note that both the PuB-EAA Provider and the QTSP may use an intermediate signing certificate. All other things being equal, the verification of a PuB-EAA will therefore involve one or more extra certificates, compared to the verification of a PID or QEAA.</p> <p>Finally, for non-qualified EAAs, the applicable Rulebook may describe how the Relying Party Instance obtains the relevant trust anchor.</p> <p>The above implies that a Relying Party Instance is aware whether the attestation it is requesting from a Wallet Instance is a PID, a QEAA, a PuB-EAA, or a non-qualified EAA. Also, the Relying Party Instance stores trust anchors in such a way that, at the time of verification, it is able to distinguish between trust anchors usable either for PIDs, for QEAAs, for PuB-EAAs, or for non-qualified EAAs.</p> <p>The technical implementation of the signature verification process depends on which of the standards mentioned in [Topic 12] is supported by the Wallet Unit. Each of these standards specifies in detail how to carry out signature verification.</p> <p>In addition, the Relying Party may want to verify that the Attestation Provider can legally issue the type of attestation in question. As described in Section 6.6.3.3, this is only needed for non-qualified EAA Providers, as the Relying Party trusts a PID Provider, QEAA Provider or PuB-EAA Provider. For EAA Providers, the applicable Rulebook may define methods that the Relying Party can use to verify that the EAA Provider is allowed to issue this type of attestation.</p> <p>Notes:</p> <ul> <li> <p>All PIDs and attestations in the EUDI Wallet ecosystem are digitally signed by the respective PID Provider or Attestation Provider, or by a WSCD that is part of the Wallet Unit. If an attestation is digitally signed by a WSCD, it is called a device-signed or self-issued attestation. Device-signed or self-issued PIDs or attestations are allowed only if it can be shown that the WSCD signs them at the required Level of Assurance (LoA). This implies that the level of security offered by the WSCD is at least equivalent to the security level of the secure infrastructure used by the PID Provider or Attestation Provider for signing PIDs or attestations.</p> </li> <li> <p>The signature over the PID or attestation may or may not include the value of the presented attributes. If the attribute values are not included in the signature creation, the Relying Party trusts these attributes because they are presented over an authenticated channel set up between the secure environment (i.e., the WSCD or the secure infrastructure used by the PID Provider or Attestation Provider, see previous bullet) and the Relying Party. One possible way to set up such an authenticated channel is by ensuring the authenticity and integrity (but not the non-repudiation) of the attributes by means of a Message Authentication Code (MAC). The MAC is created by the secure environment over the presented attribute values. The MAC key is generated from an ephemeral key of the Relying Party (sent to the secure environment by the Wallet Instance) in combination with an ephemeral key created by the secure environment. The latter ephemeral key is sent to the Relying Party in such a way that the Relying Party can verify the authenticity of this key. Such a solution, or similar ones, can be used provided that:</p> <ul> <li>the solution is fully compliant with the relevant standards, i.e., [ISO/IEC 18013-5] or [OpenID4VP] and [SD-JWT VC].</li> <li>the solution can be certified for security at LoA \"high\" according to Chapter 7</li> </ul> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6637-relying-party-verifies-that-the-pid-or-attestation-is-not-revoked","title":"6.6.3.7 Relying Party verifies that the PID or attestation is not revoked","text":"<p>To allow revocation checking of a PID or attestation, the PID Provider or Attestation Provider includes revocation information in the PID or attestation, if it is valid for longer than 24 hours. This revocation information includes a URL indicating the location where a Relying Party can obtain a status list or revocation list, and an identifier or index for this specific certificate or attestation within that list.</p> <p>Notes:</p> <ul> <li>For attestations with a validity period of less than 24 hours, including revocation information is not necessary.  </li> <li>A status list is a bit string or byte string in which each bit or group of bits denotes the current revocation status (valid or revoked) of one attestation. To get the status of the attestation it has received from the Wallet Unit, the Relying Party obtains the status list from the URL specified in the attestation and verifies the value encoded at the bit position given by the index value in the attestation.</li> <li>A revocation list is a list of PID identifiers or attestations identifiers revoked by the PID Provider or Attestation Provider. To get the status of the PID or attestation it has received from the Wallet Unit, the Relying Party obtains the revocation list from the URL specified in the attestation and verifies whether the identifier included in the attestation is on the list or not.</li> </ul> <p>For more details and requirements on revocation, see [Topic 7].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6638-relying-party-instance-verifies-device-binding","title":"6.6.3.8 Relying Party Instance verifies device binding","text":"<p>Device binding is the property that an attestation is bound to a specific device (in fact, a WSCD) and cannot be used independent from that device. Device binding protects the attestation against copying or cloning, which enhances its security.</p> <p>A PID Provider or an Attestation Provider implements device binding by including a cryptographic public key in the attestation and signing it. The corresponding private key is protected by a certified WSCD in the Wallet Unit.</p> <p>[Topic 9] explains that a WSCD generates a public-private key pair for each attestation upon request of the Wallet Unit, and that the Wallet Unit sends the public key to the PID Provider or Attestation Provider. Furthermore, it discusses how the PID or Attestation Provider can verify that the corresponding private key is really protected by the WSCD.</p> <p>During an interaction, the Relying Party verifies that the PID or attestation it received from a Wallet Unit is indeed bound to the WSCD included in the Wallet Unit. The Relying Party does so by requesting the Wallet Unit to sign some data using the private key corresponding to the public key in the PID or attestation. For this reason, device binding is also called 'proof of possession'. In [ISO/IEC 18013-5] it is called 'mdoc authentication'. In [SD-JWT VC] it is called 'key binding'.</p> <p>The technical implementation of this verification depends on which of the standards mentioned in [Topic 12] is supported by the Wallet Unit. Each of these standards specifies in detail how to carry out this verification.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6639-relying-party-instance-verifies-or-trusts-user-binding","title":"6.6.3.9 Relying Party Instance verifies or trusts User binding","text":"<p>User binding (sometimes also called 'holder binding') is the property that the subject of the PID or attestation, meaning the natural or legal person described in it, is in fact the person that presents the PID or attestation to the Relying Party. User binding prevents an attacker from successfully presenting a PID or an attestation that they are not legally allowed to use.</p> <p>The mechanism(s) available for User binding depend on the presentation flow type (proximity or remote, supervised or unsupervised, see also Section 4.4), and on the attributes issued to the User by the PID Provider or Attestation Provider:</p> <ol> <li>In the first place, the Relying Party can always decide to trust the User authentication mechanisms implemented by the WSCD (see [Topic 9]). This means that the Relying Party trusts that the the WSCD has properly authenticated the User before allowing the User to present the attributes. Note that:</li> <li>This trust is not based on the outcome of any verification by the Relying    Party but is a-priori trust in (in particular) the certified WSCD that is    part of the Wallet Unit.</li> <li>Using this method implies that Relying Parties also trust device binding,    as described in Section 6.5.3. The Relying    Party Instance in fact first verifies that the PID or attestation is bound to    a WSCD trusted by the PID Provider or Attestation Provider, and then trusts    that the WSCD has properly authenticated the User.</li> <li>As a matter of fact, this User binding method will always be carried out,    since the WSCD must authenticate its User when asking for User approval for    presenting any attributes, and since device binding is also mandatory.</li> <li>In addition, in some cases, if a Relying Party does not want to only trust the above mechanism, it may be able to use User attributes to carry out an additional User binding process. For example, if the PID or attestation contains a User portrait, the Relying Party may be able to visually or biometrically compare that portrait to the face of the person presenting the attestation or by a photo taken of it by an automated machine or as a \"selfie\". This will generally be possible in supervised proximity presentations by human inspection, or in an unsupervised proximity flow if equipped with the appropriate equipment. It may also be possible to do this in unsupervised remote presentations by using face recognition technology, possibly even remotely. However, to generate trustworthy outcomes in such situations, special conditions and dedicated security measures are required, such as good lighting, clear instructions for the User for positioning their face and an approved liveness detection mechanism supporting Presentation Attacks Detection (PAD), as well as mechanisms for injection attack detection, in particular deepfake detection.</li> <li>Lastly, if the person presenting the PID or attestation is able to present an identity document, the Relying Party may be able to verify User binding by comparing attributes from the PID or attestation, such as first and last name, to those in the identity document. However, this requires that the Relying Party can verify that the identity document is authentic and really belongs to the person presenting it. In practice this will often mean that the identity document is a photo ID, and the presentation must consequently be done in proximity and be supervised, or done remotely and supported by PAD.</li> </ol> <p>Finally, note that in a combined presentation of attributes according to the next section, if User binding is proven for one of the presented attestations, it is proven for all of them.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66310-relying-party-instance-verifies-combined-presentation-of-attributes","title":"6.6.3.10 Relying Party Instance verifies combined presentation of attributes","text":"<p>According to the [European Digital Identity Regulation], a combined presentation of attributes is a request for attributes from two or more attestations in the same action. In this case, the Relying Party will verify that these attestations belong to the same User, to prevent a hacked or fraudulent Wallet Unit from presenting attributes from different Users.</p> <p>A Relying Party can verify this by comparing attributes from the different attestations. For example, the Relying Party may request the first and last name of the User in all of the attestations, and compare the names. If they match, the Relying Party concludes that the attestations belong to the same User. However, this method implies that the Relying Party must request identifying information from the User. In some use cases, requiring that information may not be strictly necessary, and so this method may be seen as a threat to User privacy. Moreover, this method may not be conclusive, for instance if multiple people share the same name.</p> <p>To solve these drawbacks, [Topic 18] describes how the Relying Party Instance can verify this cryptographically by checking that the public keys in the attestations are associated. Key association is described in [Topic 9].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66311-relying-party-instance-authenticates-the-wallet-unit-and-the-wallet-provider","title":"6.6.3.11 Relying Party Instance authenticates the Wallet Unit and the Wallet Provider","text":"<p>Section 6.5.3 above describes that a Wallet Provider, during the lifetime of a Wallet Unit, ensures that the Wallet Unit is always in possession of one or more valid Wallet Unit Attestations (WUAs). Either before or after requesting one or more PIDs or attestations from a Wallet Unit, a Relying Party Instance:</p> <ul> <li>requests a WUA from the Wallet Unit.</li> <li>verifies the signature over the WUA using the Wallet Provider trust anchor obtained from the Wallet Provider Trusted List.</li> <li>verifies that the Wallet Unit is in possession of the private key belonging to the public key in the WUA. This proves that the Wallet Unit is authentic and is provided by the trusted Wallet Provider.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66312-relying-party-verifies-that-wua-is-not-revoked","title":"6.6.3.12 Relying Party verifies that WUA is not revoked","text":"<p>Section 6.6.2.4 explained how a PID Provider or an Attestation Provider can verify that a Wallet Unit is not revoked. The same mechanism is used by Relying Party Instances as well.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66313-wallet-unit-enables-the-user-to-report-suspicious-requests-by-a-relying-party-and-to-request-a-relying-party-to-erase-personal-data","title":"6.6.3.13 Wallet Unit enables the User to report suspicious requests by a Relying Party and to request a Relying Party to erase personal data","text":"<p>A Wallet Unit enables the User to report unlawful or suspicious requests for personal data by a Relying Party to a Data Protection Authority (DPA). To allow this, a Wallet Unit provides a dashboard allowing the User to lodge a complaint about a suspicious Relying Party presentation request to the DPA of the Member State that provided their Wallet Unit. For more information and requirements, see [Topic 50]. The User can make such a report regardless of whether any attributes were actually presented to the Relying Party. Even if the Wallet Instance prevented the presentation of any attributes because Relying Party authentication failed, or if the User did not approve the presentation of any attributes, the User can still lodge a complaint about the request with the relevant Data Protection Authority.</p> <p>The dashboard also enables the User to request a Relying Party to immediately erase personal data. For more information and requirements, see [Topic 48].</p> <p>To be able to substantiate a complaint, or to list data that must be deleted, the User needs to be informed about which attributes were requested by which Relying Parties. To enable this, a Wallet Unit maintains a log of all attributes that were requested and presented. The aforementioned dashboard also enables the User to view the log and lodge a complaint for any attribute in the log. More details about the logging functionality can be found in [Topic 19].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#664-pid-or-attestation-presentation-to-another-wallet-unit","title":"6.6.4 PID or attestation presentation to another Wallet Unit","text":"<p>Section 6.6.3 discussed the trust relationships necessary when a Wallet Unit receives a request from a Relying Party Instance and presents attributes to that Relying Party Instance.</p> <p>However, the [European Digital Identity Regulation] requires that a Wallet Unit is also able to receive such a request from another Wallet Unit, and present attributes to that requesting Wallet Unit. For more information and requirements, please refer to [Topic 30].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#665-pid-or-attestation-management","title":"6.6.5 PID or attestation management","text":"<p>Starting from the issuance of a PID or attestation, the PID or attestation is managed by the User and the Wallet Provider. Management is performed until the PID, or attestation, is deleted or the Wallet Instance is de-installed by the User.</p> <p>For PID and attestation revocation, see [Topic 7]. The User can request the PID Provider or Attestation Provider to revoke the PID or attestation at least in case of loss or theft.</p> <p>In addition, a PID Provider or Attestation Provider could regularly verify, for each of its valid PIDs or attestations, whether the Wallet Provider revoked the Wallet Unit on which that PID or attestation is residing. If it turns out that the Wallet Unit is revoked, the PID Provider or Attestation Provider could revoke the respective PID or attestation. Currently, no mechanism has been specified yet to enable a PID Provider or Attestation Provider to verify whether a Wallet Unit is revoked. This will be discussed for ARF 2.0.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#666-pid-or-attestation-deletion","title":"6.6.6 PID or attestation deletion","text":"<p>In case the User no longer wants to retain a specific PID or attestation in their Wallet Unit, the User can delete it. If the PID Provider or Attestation Provider issued multiple attestations that have the same content and are valid, the Wallet Unit deletes them all. Deleting a PID or an attestation also means that the WSCD destroys the cryptographic key material associated with that PID or attestation. Before deleting the PID or attestation and the cryptographic keys, the WSCA included in the Wallet Unit will authenticate the User.</p> <p>For high-level requirements on this topic, see [Topic 51].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7-certification-and-risk-management","title":"7 Certification and Risk Management","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#71-introduction","title":"7.1 Introduction","text":"<p>This chapter briefly describes the certification of Wallet Solutions and the eID schemes under which they are provided, covering the overall certification approach, design principles, and key requirements outlined in the European Digital Identity Regulation and Commission Implementing Regulation (CIR) laying down rules for on the certification of Wallet Solution (2024/2981), or simply the CIR 2024/2981. Furthermore, references are made to the Annex I of the CIR, the Risk Register, supporting the risk-based approach of the Wallet Solutions. For more detailed requirements, please refer to the CIR itself.</p> <p>The European Digital Identity Regulation requires certification of Wallet Solutions to ensure conformity of the Wallet Solutions with functional, security, and privacy related requirements, to achieve a high level of interoperability, security and trustworthiness. Certification applies to the Wallet Solutions and the eID schemes under which they are provided; for ease of reading this chapter only refers to Wallet Solutions. Furthermore, the object of certification includes software components, hardware components (in cases where they are provided directly or indirectly by the Wallet Provider) and the processes that support the provision and operation of a Wallet Solution, such as Wallet Unit activation, see Section 6.5.3.</p> <p>The aim is to harmonise the implementation of the requirements laid down by the [European Digital Identity Regulation] and avoid divergent approaches to the maximum extent possible. For this reason, the Commission requested ENISA to prepare a candidate European certification scheme under the Cybersecurity Act, the CSA. As defining and adopting a dedicated, harmonised certification scheme for Wallet Solutions depends on agreements between Member States on detailed security requirements, on the availability of underlying certification schemes, and on established good practices in the Member States themselves, a transitory approach is foreseen by means of national certification schemes.</p> <p>In other words, the certification approach for Wallet Solutions follows two phases. In the short-term, Member States provide national (transitory) certification schemes. In the medium term, a harmonised CSA scheme will be established. When the CSA-based scheme becomes available, it replaces the national schemes as for cybersecurity requirements. The schemes may continue to exist for functional requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#72-certification-of-wallet-solutions-against-national-certification-schemes","title":"7.2. Certification of Wallet Solutions against national certification schemes","text":"<p>Until a dedicated Wallet Solution cybersecurity certification scheme under the CSA is available, the [European Digital Identity Regulation] requires Member States to establish national certification schemes. This will be done in time to make available the Wallet Solutions before the end of 2026. The Commission has adopted the CIR 2024/2981 to provide the main requirements on Member States for creation of national certification schemes. The [CIR 2024/2981] and resulting national certification schemes are defined around a number of guiding principles:</p> <p>First, the goal is to harmonise requirements to the extent possible. Member States are also encouraged to work together in the design and implementation of national schemes. Additionally, national schemes will leverage the use of relevant and existing certification schemes and standards for Wallet Solution certification and evaluation. Where available, relevant European CSA schemes must be used. Currently, only the Common Criteria based European candidate cybersecurity certification EUCC scheme is available for the cybersecurity certification of ICT products, parts, or components for products. Upcoming CSA-based schemes include EUCS &amp; EU5G. Additionally, other existing or upcoming schemes\u200b include schemes based on FITCEM (EN 17640)\u200b, national schemes such as on remote identity verification, or other private schemes (e.g. for mobile devices and apps)\u200b. For harmonisation of functional requirements, the Commission Implementing Regulations (CIRs) adopted under European Digital Identity Regulation article 5(a) are referenced. For harmonisation of certification requirements, the ISO/IEC 17065 framework under Regulation [765/2008] is used, complemented by ISO/IEC 17067 on the definition of schemes.</p> <p>Next, the CIR 2024/2981 refers to the composite nature of the Wallet Solutions as well as the potential different architectures in Member States, considering that the European Digital Identity Regulation is technology (and architecture) neutral. This means that a final ('top-level') certification of the Wallet Solution will yield a composite certificate, built on certification of separate components, such as EUCC certification. Wallet Solutions are always to be certified against assurance level \"high\", as set out in European Digital Identity Regulation as well as CIR (EU) 2015/1502. That assurance level has to be reached by the overall Wallet Solution. Under this Regulation, some components of the Wallet Solution may be certified at a lower assurance level, provided this is duly justified and without prejudice to the assurance level \"high\" reached by the overall Wallet Solution. For the use of assurance information from other certification schemes or sources, a dependency analysis will be performed.</p> <p>Finally, in order to ensure a harmonised approach to cybersecurity and the assessment of the most critical risks that might affect the provision and operation of Wallet Units, a register of risks and threats is defined [#7.4-Risk-based-approach-and-risk-register]. The Risk Register contains high level risks and threats in relation to Wallet Solutions and the ecosystem, as well as detailed threat scenarios that will be taken into consideration when designing Wallet Solutions, independent of their specific architecture.</p> <p>As a first step towards certification of Wallet Solutions under national schemes, Member States will assign a scheme owner, and design and roll out the scheme. As part of this process, Certification Bodies (CBs) will be accredited to carry out conformity assessments of Wallet Solutions against the requirements of the CIR 2024/2981 and the national scheme. Wallet Providers then request one or more designated CABs to assess and certify the conformity of their Wallet Solution. The CAB evaluates and certifies the conformity of the Wallet Solution if they meet the requirements.</p> <p>The European Commission and ENISA support Member States in designing and implementing national certification schemes in the Cooperation Group.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#73-certification-of-wallet-solutions-against-a-dedicated-csa-based-scheme","title":"7.3 Certification of Wallet Solutions against a dedicated CSA-based scheme","text":"<p>In parallel to the work described above, ENISA is requested to draft a dedicated European cybersecurity certification scheme for the Wallet Solutions under the CSA. Once available, this CSA-based scheme will replace the national transitory schemes mentioned above for the cybersecurity requirement it covers. This scheme will be based on available national schemes, harmonised requirements, and identify any additional requirements relevant for cybersecurity. The scheme will further detail the cybersecurity requirements, identify and set normative standards and define the target level of assurance or security for the relevant Wallet Solution components.</p> <p>The work to develop the CSA-based scheme follows the milestones set out by the CSA and is supported by the Ad Hoc Working Group or 'AHWG'. This group is composed of selected experts from private organisations and industry, with extensive knowledge and experience in the areas of cybersecurity certification, digital wallets, electronic identification and trust services. The first step is to have a candidate scheme ready for public consultation and submitted for feedback of the European Cybersecurity Certification Group or ECCG. The ECCG\u2019s opinion serves as advisory input to ensure the candidate scheme aligns to EU cybersecurity objectives, standards and regulatory requirements. Although the ECCG\u2019s opinion is not binding, it will hold significant influence, as it reflects the collective expertise of national cybersecurity authorities, aiming to harmonise cybersecurity certification practices across Member States. Based on this input, the candidate scheme might be updated further. After finalisation of the ECCG opinion, the scheme will be transformed into a new Implementing Regulation and adopted by comitology procedure.</p> <p>Finally, ENISA is also asked to facilitate the transition from national certification schemes to the dedicated cybersecurity certification scheme under the CSA.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#74-risk-based-approach-and-risk-register","title":"7.4 Risk-based approach and risk register","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#741-introduction","title":"7.4.1 Introduction","text":"<p>This section details the approach to develop harmonised guidelines for the development of the transitory national certification schemes. In addition to the requirements set out in the European Digital Identity Regulation article 5c, cybersecurity risks and threats associated with the Wallet Solutions will be identified. Here, a risk-based approach is envisioned as the basis for certification by Member States, ensuring that the Wallet Solutions uphold confidentiality, availability and strong safeguards for User privacy and data protection. This is inspired by known processes, such as for the General Data Protection Regulation (GDPR) and related Data Protection Impact Assessments (DPIA).</p> <p>The risk-based approach sets out a common Risk Register that contains a comprehensive but non-exhaustive list of risks and threats related to the Wallet Solution. These risks and threats are architecture-agnostic and provide a benchmark overview of the most critical risks and threats to Wallet Solutions. By adopting this common set of risks and threats, national transitory certification schemes will achieve a baseline level of harmonisation.</p> <p>The risk register will be applied by scheme owners, Wallet Providers, and Certification Bodies (CBs). When establishing their certification schemes, scheme owners will perform a risk assessment to refine and complement the risks and threats listed in the register with those specific to their architecture, and consider how the applicable risks and threats can be appropriately treated. Wallet Providers will complement the scheme\u2019s risk assessment to identify any risks and threats specific to their implementation and propose appropriate mitigation measures for evaluation by the certification body.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#742-high-level-risks-and-threats","title":"7.4.2 High-level risks and threats","text":"<p>The following is an excerpt from [Risk Register]. To keep in line with the continuously evolving threat landscape, the risk register will be maintained and regularly updated in collaboration with the Cooperation Group.</p> <p>High-level risks and threats</p> <pre><code>R1     Creation or use of an existing electronic identity \nR2     Creation or use of a fake electronic identity \nR3     Creation or use of fake attributes \nR4     Identify theft \nR5     Data theft \nR6     Data disclosure \nR7     Data manipulation \nR8     Data loss \nR9     Unauthorised transaction \nR10    Transaction manipulation \nR11    Repudiation \nR12    Transaction data disclosure \nR13    Service disruption\nR14    Surveillance\n</code></pre> <p>System-related risks</p> <pre><code>SR1 Wholesale surveillance \nSR2 Reputational damage \nSR3 Legal non-compliance\n</code></pre> <p>Technical threats</p> <pre><code>TT1 Physical attacks\n\n1.1    Theft \n1.2    Information leakage \n1.3    Tampering\n\nTT2 Errors and misconfigurations\n\n2.1    Errors made when managing an IT system \n2.2    Application-level errors or usage errors \n2.3    Development-time errors and system misconfigurations\n\nTT3 Use of unreliable sources\n\n3.1    Erroneous use or configuration of wallet components\n\nTT4 Failure and outages\n\n4.1    Failure or dysfunction of equipment, devices or systems \n4.2    Loss of resources \n4.3 Loss of support services\n\nTT5 Malicious actions\n\n5.1 Interception of information \n5.2 Phishing and spoofing \n5.3 Replay of messages \n5.4 Brute-force attack \n5.5 Software vulnerabilities \n5.6 Supply chain attacks \n5.7 Malware \n5.8 Random number prediction\n</code></pre>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#743-risks-and-mitigation-measures-discussed-in-chapter-6-of-this-arf","title":"7.4.3 Risks and mitigation measures discussed in Chapter 6 of this ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7431-introduction","title":"7.4.3.1 Introduction","text":"<p>This section briefly discusses some of the risks that were considered when the trust model in Chapter 6 was created, together with the mitigations for these risks and the residual risks that remain after these mitigations. This section is not intended to be a comprehensive risk register for the EUDI Wallet ecosystem as a whole; for that register, see [Risk Register] and Section 7.4.2 above. This section is limited to the scope of the ARF, namely, the Wallet Unit and its interactions with other entities in the ecosystem, as depicted in Figure 11 in Chapter 6.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7432-risks-and-mitigation-measures-related-to-confidentiality-integrity-and-authenticity","title":"7.4.3.2 Risks and mitigation measures related to confidentiality, integrity, and authenticity","text":"<p>Within the EUDI Wallet ecosystem, many interactions take place between entities in which one entity requests another entity to perform a task. For example, a User may ask a PID Provider or an Attestation Provider to provide a PID or an attestation to a Wallet Unit, or a Relying Party may ask a User to present attributes from an attestation in their Wallet Unit. For any of these interactions, the following risks apply:</p> <ul> <li>An attacker could impersonate one of the interacting entities. Therefore, the receiver of a message must be able to verify the identity of the sender, and vice versa. In other words, mutual authentication is needed. This authentication can be performed because valid entities in the EUDI Wallet ecosystem are put on a Trusted List by Member States. By verifying the signature over a message and verifying the associated public key certificates with a trust anchor included in a Trusted List, the receiver of a message can be sure about the identity of the message's sender.</li> <li>Messages between entities could be intercepted, meaning that they could be read by an attacker. To mitigate this risk, messages must be encrypted to ensure confidentiality.</li> <li>Intercepted messages could be changed by an attacker. To mitigate this risk, messages must be authenticated, so that the receiver can verify that originate from the authenticated sender and were not changed.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7433-risks-and-mitigation-measures-related-to-tampering-of-cryptographic-keys-and-sensitive-data","title":"7.4.3.3 Risks and mitigation measures related to tampering of cryptographic keys and sensitive data","text":"<p>The mechanisms for authentication and confidentiality described in the previous section rely on the security of cryptographic keys, especially private and secret keys. If an attacker can obtain, use, or tamper with these keys, these security mechanisms would break down. Therefore, all cryptographic keys are managed by dedicated secure applications (WSCAs), running on secure hardware (WSCDs), as described in Section 4.3. The security of WSCDs and WSCAs is ensured by means of an appropriate certification process.</p> <p>These mitigation measures apply for all entities in the EUDI Wallet ecosystem that use cryptographic keys, including Wallet Units, Wallet Providers, PID Providers and Attestation Providers, Trusted List Providers, and Certificate Authorities. For Relying Parties and Relying Party Instances, such measures are formally not required.</p> <p>WSCDs and WSCAs in a Wallet Unit may also be used to store other sensitive data except cryptographic keys. In particular, they could be used to store User attributes, in such a way that attackers, including malicious applications residing on the same User device as the Wallet Instance, cannot retrieve these attributes. This is beneficial for User privacy.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7434-risks-and-mitigation-measures-related-to-authorisation","title":"7.4.3.4 Risks and mitigation measures related to authorisation","text":"<p>In certain cases, there is a risk that a legitimate entity within the EUDI Wallet ecosystem may attempt to perform actions beyond its authorized scope. This risk primarily affects two types of entities.</p> <p>First, a non-qualified EAA Provider may attempt to issue attestations for which it lacks the necessary authorization. For example, an Attestation Provider that has not been officially designated by a Member State or another relevant authority to issue diplomas may still attempt to generate an attestation of the diploma type. Within the EUDI Wallet ecosystem, this risk is limited to non-qualified EAA Providers, as PID Providers, QEAA Providers, and PuB-EAA Providers are assumed to be inherently trustworthy in this context. For more information, see Section 6.3.2.2.</p> <p>This risk is mitigated by querying the Relying Party registry via an API. This registry, maintained by the Member State, contains comprehensive information about each Relying Party, allowing the system to verify the legitimacy of the issuer and ensure compliance with regulatory requirements.</p> <p>In the context of the [European Digital Identity Regulation] Regulation, the term Relying Party encompasses both Attestation Providers and entities that provide services relying on attestations, ensuring a broad and consistent approach to trust and verification within the EUDI Wallet ecosystem.</p> <p>Second, a Relying Party in the EUDI Wallet ecosystem may attempt to request attributes from a Wallet Unit without being registered or authorized to do so. This risk is mitigated mainly by three measures:</p> <ol> <li>Selective Disclosure and User Control \u2013 The attestation formats and protocols specified in [ISO/IEC 18013-5] and [SD-JWT] + [OpenID4VP] enable selective disclosure of attributes. This allows a Relying Party to specify which attributes within an attestation it wishes to receive while excluding others, a feature known as collection limitation. Additionally, selective disclosure ensures that the User retains control over their data, as they can approve or deny the presentation of requested attributes. More details on selective disclosure and User approval can be found in Section 6.6.3.5.</li> <li>Mandatory Relying Party Registration of Requested Attributes \u2013 The [European Digital Identity Regulation] mandates that each Relying Party register the attributes it intends to request from Users. According to [CIR 2024/2982], these registered attributes must be included in a Relying Party registration certificate, which the Wallet Unit uses to verify the legitimacy of the request and inform the User accordingly. This transparency ensures that Users can make an informed decision about whether to approve or deny the presentation of the requested attributes. More details on this requirement can be found in Section 6.6.3.3.</li> <li>Attestation Provider Disclosure Policy Enforcement \u2013 the [European Digital Identity Regulation] also mandates that Attestation Providers can embed a disclosure policy within their attestations. This policy may include rules governing whether the Attestation Provider approves the presentation of certain attributes to an authenticated Relying Party. The Wallet Unit evaluates this policy \u2014if present\u2014 alongside authenticated data from the Relying Party, and informs the User of the outcome. This mechanism further supports the User in making a well-informed decision on whether to approve or deny attribute presentation. More information on disclosure policy enforcement can be found in Section 6.6.3.4.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7435-risks-and-mitigation-measures-related-to-user-privacy","title":"7.4.3.5 Risks and mitigation measures related to User privacy","text":"<p>User privacy is a key aspect in the design and implementation of the EUDI Wallet ecosystem. Attributes are presented as electronic attestations using formats based on salted and hashed attributed. These attestations contain unique, fixed elements such as hash values, public keys, and signatures. Malicious Relying Parties could exploit these values to track Users by storing and comparing them across multiple transactions, identifying recurring patterns.  This privacy threat, known as Relying Party linkability, can occur within a single Relying Party or among colluding entities.</p> <p>A similar privacy threat arises when colluding Relying Parties share unique values with a malicious Attestation Provider, allowing it to track User activity across multiple services. In this case, it's called Attestation Provider linkability.</p> <p>Regarding the mitigation of these risks:</p> <ul> <li>A trustworthy PID Provider or Attestation Provider can mitigate Relying Party linkability, either partially or fully, by issuing multiple PIDs or attestations to the same User. Wallet Units can use these attestations as disposable (single-use) or Relying Party-specific, ensuring that different Relying Parties receive distinct attestations that cannot be linked. However, this approach increases issuance complexity and management overhead. This topic will be further explored in the context of the next major release of ARF. Additionally, organizational and enforcement measures can help deter Relying Parties from colluding and tracking Users. In particular, Relying Parties found in violation will have their access certificates revoked, preventing them from further interactions with Wallet Units.</li> <li>Attestation Provider linkability cannot be fully eliminated when using attestation formats based on salted hashes. The only viable mitigation is to adopt Zero-Knowledge Proofs (ZKPs) as a verification mechanism instead of relying on salted-attribute hashes. However, the integration of ZKPs in the EUDI Wallet ecosystem is still under discussion and development due to the complexity of implementing ZKP solutions in secure hardware and the lack of support in currently available secure hardware (WSCDs). This topic will be further explored in the context of of the next major release od the ARF. As with Relying Party linkability, organizational and enforcement measures can help deter Attestation Providers from colluding and tracking Users.  Additionally, many Attestation Providers are subject to regular audits, making it easier to detect collusion and tracking compared to Relying Parties.</li> </ul> <p>Zero-Knowledge Proof (ZKP) mechanisms for verifying personal information are highly promising and essential for ensuring privacy in various use-case scenarios. They enable Users to prove statements such as \"I am over 18\" without disclosing any personal data, offering a robust solution for privacy-preserving authentication and verification.</p> <p>One key area of development is age verification, where the European Commission is actively exploring and testing ZKP-based solutions. The outcomes of this initiative could pave the way for the adoption of ZKPs within the EUDI Wallet ecosystem, further strengthening privacy protections in future implementations.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#8-document-development","title":"8 Document development","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#81-publication","title":"8.1 Publication","text":"<p>This document is made publicly available at https://github.com/eu-digital-identity-wallet/eudi-doc-architecture-and-reference-framework (GitHub repository) where it will be regularly updated.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#82-contributing","title":"8.2 Contributing","text":"<p>We value your feedback and encourage you to share any thoughts, suggestions, or concerns you may have regarding this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#821-providing-feedback","title":"8.2.1 Providing Feedback","text":"<p>To provide feedback on this document, please visit our GitHub repository. You can do so by navigating to the \"Issues\" tab and submitting a new issue or commenting on existing ones. Whether you've spotted a typo, have a suggestion for clarifying a section, or want to propose a new topic for inclusion, we welcome your feedback.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#8211-guidelines-for-adding-issues-to-the-github-repository","title":"8.2.1.1 Guidelines for adding issues to the Github repository","text":"<p>When adding issues to the Github repository, please follow these general guidelines:</p> <ul> <li>Use clear and descriptive titles for your issues to provide a concise summary of the problem or task. This helps others quickly understand the issue at a glance.</li> <li>Provide a detailed description of the issue, including any relevant context, background information. The description should be comprehensive enough for others to understand the issue and take appropriate action.</li> <li>Use one or more of the following labels to categorise issues. Labels help organise and prioritise issues, making it easier to manage the repository.</li> </ul> Label Description Content Clarifications Raise issues seeking clarification on specific content within the document. This could include explanations of concepts, definitions of terms, or examples to illustrate certain points. Suggestions for Improvements Propose suggestions to enhance the clarity, completeness, or accuracy of the document. This could involve restructuring sections, adding examples, or providing additional information. Errors and Corrections Identify errors such as typos, grammatical mistakes, or factual inaccuracies within the document and suggest corrections. Compatibility and Integration Issues related to how the document integrates with other systems or technologies, ensuring compatibility with different platforms or frameworks. Enhancement Requests Request new features, sections, or content to be added to the document to improve its usefulness or relevance. Formatting and Styling Feedback regarding the visual appearance, organisation, and consistency of formatting within the document. Documentation Standards Discussions around adhering to documentation standards, conventions, or guidelines. Licence and Legal Concerns Questions or concerns related to the licensing of the document, usage rights, attribution requirements, or legal implications for contributors and Users. Technical Clarification Raise issues seeking clarification on specific technical content within the document. <ul> <li>Attach relevant files, screenshots, or links to additional resources that provide context or assist in resolving the issue. This can include references to related documentation or discussions.</li> <li>Follow issue etiquette by conducting a search to see if the issue has already been reported before creating a new one. This helps avoid duplicate issues.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#8212-guidelines-for-discussing-existing-issues-in-the-github-repository","title":"8.2.1.2 Guidelines for discussing existing issues in the GitHub repository","text":"<p>When discussing existing issues in the Github repository, please follow these general guidelines:</p> <ul> <li>Communicate with respect and courtesy towards other contributors, maintain a professional tone, and avoid using language that could be interpreted as confrontational or inflammatory.</li> <li>Provide context and background information to help others understand your perspective. Explain the reasoning behind your comments.</li> <li>Communicate your intentions and motivations behind your comments or suggestions to avoid misunderstandings.</li> <li>Keep discussions focused on the technical aspects of the issue at hand.</li> <li>Provide constructive feedback and suggestions in a helpful and supportive manner. Instead of simply pointing out problems, offer solutions or alternative approaches to address the issue positively.</li> <li>Approach discussions with a mindset of collaboration and problem-solving.</li> <li>Be open to different perspectives, as contributors may have different viewpoints, experiences, and expertise levels.</li> <li>Be open to different perspectives, as contributors may have different viewpoints, experiences, and expertise levels.</li> <li>Contribute to a positive and welcoming community atmosphere.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#822-managing-issues-and-pull-requests","title":"8.2.2 Managing Issues and Pull Requests","text":"<p>Our team is committed to managing issues and pull requests related to this document in a transparent and efficient manner to ensure that all feedback is addressed promptly and effectively. Here's how we manage issues and pull requests to set the right expectations:</p> <ul> <li>Issue Management: When an issue is submitted, our team will review and prioritise it based on its relevance and impact. We'll keep you informed of the status of your issue and provide updates as it progresses. Once resolved, we'll close the issue and incorporate any necessary changes into the document.</li> <li>Pull Request Management: If you submit a pull request with proposed changes or improvements to the document, our team will review it carefully and provide feedback and suggestions for refinement. We'll work collaboratively with you to ensure that your contribution aligns with our document's objectives and maintains consistency and quality. Once approved, we'll merge your changes into the document and acknowledge your contribution.</li> </ul> <p>Your feedback and contributions are essential in helping us maintain the quality and relevance of this document. We value your participation and strive to create a collaborative environment where everyone's contributions are valued and recognised.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#83-document-versioning","title":"8.3 Document Versioning","text":"<p>To avoid interoperability issues and changes to the ARF going unnoticed, a version control system and the following semantic versioning scheme (https://semver.org) will be used for the ARF.</p> <p>The ARF document will be published under a standardised release versioning format, MAJOR.MINOR.PATCH, where:</p> <p>MAJOR version is incremented (i.e., new version), when the ARF document has *undergone significant changes, for example introducing some breaking changes in *the architecture,</p> <p>MINOR version is incremented when new information has been added to the *document or information has been removed from the document, and</p> <p>PATCH version is incremented when minor changes have been made (e.g., fixing *typos).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#9-references","title":"9 References","text":"<p>For undated references, the latest version available applies.</p> Item Reference Standard name/details [2015/1505] COMMISSION IMPLEMENTING DECISION (EU) 2015/1505 of 8 September 2015 laying down technical specifications and formats relating to trusted lists pursuant to Article 22(5) of Regulation (EU) No 910/2014 of the European Parliament and of the Council on electronic identification and trust services for electronic transactions in the internal market. [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [Risk Register] Regulation (EU) 2024/2981, Annex I of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and the Council as regards the certification of European Digital Identity Wallets [CIR 2024/2977] Commission Implementing Regulation 2024/2977 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards person identification data and electronic attestations of attributes issued to European Digital Identity Wallets [CIR 2024/2979] Commission Implementing Regulation 2024/2979 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the integrity and core functionalities of European Digital Identity Wallets [CIR 2024/2980] Commission Implementing Regulation 2024/2980 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards notifications to the Commission concerning the European Digital Identity Wallet ecosystem [CIR 2024/2981] Regulation (EU) 2024/2981 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and the Council as regards the certification of European Digital Identity Wallets [CIR 2024/2982] Commission Implementing Regulation 2024/2982 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards protocols and interfaces to be supported by the European Digital Identity Framework [ISO/IEC 18013-5] ISO/IEC 18013-5, Personal identification --- ISO-compliant driving licence - Part 5: Mobile driving licence (mDL) application [ISO/IEC 18013-7] ISO/IEC 18013-7, Personal identification --- ISO-compliant driving licence - Part 7: Mobile driving licence (mDL) add-on functions [ISO 3166-1] ISO 3166-1: Codes for the representation of names of countries and their subdivisions -- Part 1: Country codes: alpha-2 country [ISO 3166-2] ISO 3166-2:2020: Codes for the representation of names of countries and their subdivisions --- Part 2: Country subdivision code [ETSI TS 119 612] Electronic Signatures and Infrastructures (ESI); Trusted Lists [ETSI TS 119 431-1] ETSI TS 119 431-1 - Electronic Signatures and Infrastructures (ESI); Policy and security requirements for trust service providers; Part 1: TSP service components operating a remote QSCD / SCDev. [ETSI TS 119 431-2] ETSI TS 119 431-2 - Electronic Signatures and Infrastructures (ESI); Policy and security requirements for trust service providers; Part 2: TSP service components supporting AdES digital signature creation [ETSI TS 119 432] ETSI TS 119 432 - Electronic Signatures and Infrastructures (ESI); Protocols for remote digital signature creation [ETSI EN 319 132-1] ETSI EN 319 132-1 - Electronic Signatures and Infrastructures (ESI); XAdES digital signatures; Part 1: Building blocks and XAdES baseline signatures (XAdES) [ETSI TS 119 182-1] ETSI TS 119 182-1 - Electronic Signatures and Infrastructures (ESI); JAdES digital signatures; Part 1: Building blocks and JAdES baseline signatures [ETSI EN 319 122-1] ETSI EN 319 122-1 - Electronic Signatures and Infrastructures (ESI); CAdES digital signatures; Part 1: Building blocks and CAdES baseline signatures [ETSI EN 319 162-1] ETSI EN 319 162-1 - Electronic Signatures and Infrastructures (ESI); Associated Signature Containers (ASiC); Part 1: Building blocks and ASiC baseline containers [ETSI EN 319 142] ETSI EN 319 142 - Electronic Signatures and Infrastructures (ESI); PAdES digital signatures; Part 1: Building blocks and PAdES baseline signatures [CEN EN 419 241-1] CEN EN 419 241-1 -- Trustworthy Systems Supporting Server Signing - Part 1: General System Security Requirements [SD-JWT VC] SD-JWT-based Verifiable Credentials (SD-JWT VC). Retrievable from: https://datatracker.ietf.org/doc/draft-ietf-oauth-sd-jwt-vc/ [RFC 2119] RFC 2119 - Key words for use in RFCs to Indicate Requirement Levels. S. Bradner, March 1997. [RFC 3339] RFC 3339 - Date and Time on the Internet: Timestamps, G. Klyne et al., July 2002 [RFC 4122] RFC 4122 - A Universally Unique Identifier (UUID) URN Namespace, P. Leach et al., July 2005 [RFC 5280] RFC 5280 - Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile, D. Kooper et al., May 2008 [RFC 3647] RFC 3647 - Internet X.509 Public Key Infrastructure Certificate Policy and Certification Practices Framework, S. Chokhani et al., November 2003 [RFC 8259] RFC 8259 - The JavaScript Object Notation (JSON) Data Interchange Format, T. Bray, Ed., December 2017 [RFC 8610] RFC 8610 - Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures, H. Birkholz et al., June 2019 [RFC 8943] RFC 8943 - Concise Binary Object Representation (CBOR) Tags for Date, M. Jones et al., November 2020 [RFC 8949] RFC 8949 - Concise Binary Object Representation (CBOR), C. Bormann et al., December 2020 [GP OMAPI] GPD_SPE_075 Open Mobile API Specification, v3.3, July 2018, GlobalPlatform [GP CS] GPC_SPE_034 Card Specification, v2.3.1, March 2018, GlobalPlatform [GSMA SAM] GSMA Secured Applications for Mobile, v1.1, 03 November 2023, GSM Association [W3C VCDM v1.1] Sporny, M., Longley, D. and D. Chadwick, \"Verifiable Credentials Data Model 1.1\", W3C Recommendation, 03 March 2022 [W3C VCDM v2.0] Sporny, M. et al, \"Verifiable Credentials Data Model v2.0\", W3C Candidate Recommendations Draft, 16 April 2024 [W3C Digital Credentials API] Caceres, M., Cappalli, T., Goto, S. et al, \"Digital Credentials API\" [W3C WebAuthn] Web Authentication, An API for accessing Public Key Credentials Level 2, W3C Recommendation [CTAP] Client to Authenticator Protocol (CTAP) Review Draft, March 21, 2023. Available: https://fidoalliance.org/specs/fido-v2.2-rd-20230321/fido-client-to-authenticator-protocol-v2.2-rd-20230321.html [OpenID4VCI] Lodderstedt, T. et al., \"OpenID for Verifiable Credential Issuance\", OpenID Foundation. Available: https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html [OpenID4VP] Terbu, O. et al., \"OpenID Connect for Verifiable Presentations\", OpenID Foundation. Available: https://openid.net/specs/openid-4-verifiable-presentations-1_0.html [HAIP] Yasuda, K. et al, \"OpenID4VC High Assurance Interoperability Profile\", OpenId Foundation. Available: https://openid.net/specs/openid4vc-high-assurance-interoperability-profile-1_0.html [Topic 6] Annex 2 - Relying Party authentication and User approval [Topic 7] Annex 2 - Attestation revocation and revocation checking [Topic 9] Annex 2 - Wallet Unit Attestation [Topic 10] Annex 2 -Issuing a PID or attestation to a Wallet Unit [Topic 11] Annex 2 - Pseudonyms [Topic 12] Annex 2 - Attestation Rulebooks [Topic 16] Annex 2 - Signing documents with a Wallet Unit [Topic 18] Annex 2 - Combined presentations of attributes [Topic 19] Annex 2 - User Navigation requirements (Dashboard logs for transparency) [Topic 23] Annex 2 - PID issuance and (Q)EAA issuance [Topic 25] Annex 2 - Unified definition and controlled vocabularies for attributes [Topic 26] Annex 2 - Catalogue of attestations [Topic 27] Annex 2 - Registration of PID Providers, Providers of QEAAs, PuB-EAAs, and (non-qualified) EAAs, and Relying Parties [Topic 30] Annex 2 - Interaction between Wallet Units [Topic 31] Annex 2 - PID Provider, Wallet Provider, Attestation Provider, and Access Certificate Authority notification and publication [Topic 33] Annex 2 - Wallet Unit backup and restore [Topic 34] Annex 2 - Migrate to a different Wallet solution [Topic 37] Annex 2 - QES -- Remote Signing - Technical Requirements [Topic 38] Annex 2 - Wallet Unit revocation [Topic 42] Annex 2 - Requirements for QTSPs to access Authentic Sources [Topic 43] Annex 2 - Embedded disclosure policies [Topic 44] Annex 2 - Relying Party registration certificates [Topic 48] Annex 2 - Blueprint for requesting data deletion to Relying Parties [Topic 50] Annex 2 - Blueprint to report unlawful or suspicious request of data [Topic 51] Annex 2 - PID or attestation deletion [Topic 52] Annex 2 - Relying Party intermediaries"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#10-annexes","title":"10 Annexes","text":"<ul> <li>Annex 1 - Definitions</li> <li>Annex 2 - High Level Requirements</li> <li>Annex 3 - Rulebooks:<ul> <li>Annex 3.1 - PID rulebook</li> <li>Annex 3.2 - mDL rulebook</li> </ul> </li> <li>Annex 4 - Service Blueprints:<ul> <li>Annex 4.1 - Blueprint Initialisation and activation</li> <li>Annex 4.2 - Blueprint Online identification and authentication</li> <li>Annex 4.3 - Blueprint Issuing mDL</li> <li>Annex 4.4 - Blueprint Presenting mDL (proximity-supervised)</li> <li>Annex 4.5 - Blueprint Presenting mDL (proximity-unsupervised)</li> <li>Annex 4.6 - Blueprint Remote QES -- Creating a signature for authentication / authorisation</li> <li>Annex 4.7 - Blueprint Remote QES - Enrolment</li> <li>Annex 4.8 - Blueprint Remote QES - Creating a signature channelled by a Wallet Unit</li> <li>Annex 4.9 - Blueprint Remote QES - Creating a signature channelled by Relying Party</li> <li>Annex 4.10 - Blueprint QES -- View history of signatures</li> <li>Annex 4.11 - Blueprint Local QES - Enrolment</li> <li>Annex 4.12 - Blueprint Local QES -- Creating a signature.</li> </ul> </li> <li>Annex 5 - Design guides:<ul> <li>Annex 5.1 - Wallet Unit design guide</li> <li>Annex 5.2 - Wallet Unit design guide -- data sharing scenarios</li> </ul> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/","title":"Annex 1 definitions","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / annexes / annex-1 / annex-1-definitions</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/#annex-1-definitions","title":"ANNEX 1 - Definitions","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/#a1-introduction","title":"A.1 Introduction","text":"<p>In the Architecture Reference Framework (ARF), v1.5.0, many terms are used that need a precise definition. This Annex to ARF 1.5.0 contains the definitions of these terms. In fact, there are three sources for these definitions:</p> <ul> <li>In the first place, the [European Digital Identity Regulation] defines several of these terms. For convenience, these definitions are listed in Table 1.</li> <li>Secondly, the adopted Commission Implementing Regulations CIR 2024/2977, CIR 2024/2979, CIR 2024/2980, CIR 2024/2981, and CIR 2024/2982 also contain a list of definitions. Again for convenience, these definitions are included in [Table 2]</li> <li>Thirdly, in writing the ARF, additional technical terms and corresponding definitions are used. These are listed in Table 3.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/#a2-definitions-from-the-european-digital-identity-regulation","title":"A.2 Definitions from the [European Digital Identity Regulation]","text":"<p>The following terms are defined in the [European Digital Identity Regulation] and used in the ARF.</p> Term Definition in [European Digital Identity Regulation] Electronic attestation of attributes (EAA) An attestation in electronic form that allows attributes to be authenticated. Attribute A characteristic, quality, right or permission of a natural or legal person or of an object. Authentic Source A repository or system, held under the responsibility of a public sector body or private entity, that contains and provides attributes about a natural or legal person or object and that is considered to be a primary source of that information or recognised as authentic in accordance with Union law or national law, including administrative practice. Authentication An electronic process that enables the confirmation of the electronic identification of a natural or legal person or the confirmation of the origin and integrity of data in electronic form. Conformity Assessment Body (CAB) A conformity assessment body as defined in Article 2, point 13, of Regulation (EC) No 765/2008, which is accredited in accordance with that Regulation as competent to carry out conformity assessment of a qualified trust service provider and the qualified trust services it provides, or as competent to carry out certification of European Digital Identity Wallets or electronic identification means. Electronic attestation of attributes issued by or on behalf of a public sector body (PuB-EAA) An electronic attestation of attributes issued by a public sector body that is responsible for an authentic source or by a public sector body that is designated by the Member State to issue such attestations of attributes on behalf of the public sector bodies responsible for authentic sources in accordance with Article 45f and with Annex VII. Electronic identification scheme A system for electronic identification under which electronic identification means are issued to natural or legal persons or natural persons representing other natural persons or legal persons. (Electronic) signature Data in electronic form which is attached to or logically associated with other data in electronic form and which is used by the signatory to sign. (Electronic) seal Data in electronic form which is attached to or logically associated with other data in electronic form to ensure the latter\u2019s origin and integrity User A natural or legal person, or a natural person representing another natural person or a legal person, that uses trust services or electronic identification means provided in accordance with the [European Digital Identity Regulation]. Person Identification Data (PID) A set of data that is issued in accordance with Union or national law and that enables the establishment of the identity of a natural or legal person, or of a natural person representing another natural person or a legal person. Qualified Electronic Attestation of Attributes (QEAA) An electronic attestation of attributes which is issued by a qualified trust service provider and meets the requirements laid down in Annex V. Qualified Electronic Signature (QES) An advanced electronic signature that is created by a qualified electronic signature creation device, and which is based on a qualified certificate for electronic signatures. Qualified Electronic Signature Creation Device (QSCD) Configured software or hardware used to create an electronic signature that meets the requirements laid down in Annex II of the [European Digital Identity Regulation]. Qualified Trust Service Provider (QTSP) Qualified Trust Service Provider means a trust service provider who provides one or more qualified trust services and is granted the qualified status by the supervisory body. Relying Party A natural or legal person that relies upon electronic identification, European Digital Identity Wallets or other electronic identification means, or upon a trust service Public Sector Body A state, regional or local authority, a body governed by public law or an association formed by one or several such authorities or one or several such bodies governed by public law, or a private entity mandated by at least one of those authorities, bodies or associations to provide public services, when acting under such a mandate. <p>Table 1: Definition of terms used in the ARF originating from the [European Digital Identity Regulation]</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/#a3-definitions-from-the-adopted-commission-implementing-regulations","title":"A.3 Definitions from the adopted Commission Implementing Regulations","text":"<p>The following terms are defined in the adopted Commission Implementing Regulations and used in the ARF. Note that small differences exist in the way in which terms are written, for example regarding capitalisation. The table contains the term as used in the ARF.</p> Term Definition (Wallet) User A user who is in control of the Wallet Unit Wallet Unit A unique configuration of a Wallet Solution that includes Wallet instances, Wallet Secure Cryptographic Applications and Wallet Secure Cryptographic Devices provided by a Wallet Provider to an individual Wallet User Wallet Solution A combination of software, hardware, services, settings, and configurations, including Wallet Instances, one or more Wallet Secure Cryptographic Applications and one or more Wallet Secure Cryptographic Devices Provider of person identification data (PID Provider) A natural or legal person responsible for issuing and revoking the person identification data and ensuring that the person identification data of a user is cryptographically bound to a Wallet Unit Wallet Unit Attestation (WUA) A data object that describes the components of the Wallet Unit or allows authentication and validation of those components; Embedded disclosure policy A set of rules, embedded in an electronic attestation of attributes by its provider, that indicates the conditions that a wallet-relying party has to meet to access the electronic attestation of attributes Registrar (of wallet-relying parties) The body responsible for establishing and maintaining the list of registered wallet-relying parties established in their territory who has been designated by a Member State Wallet Instance The application installed and configured on a Wallet User\u2019s device or environment, which is part of a Wallet Unit, and that the Wallet User uses to interact with the Wallet Unit Wallet Secure Cryptographic Application (WCSCA) An application that manages critical assets by being linked to and using the cryptographic and non-cryptographic functions provided by the Wallet Secure Cryptographic Device Wallet Secure Cryptographic Device (WSCD) A tamper-resistant device that provides an environment that is linked to and used by the Wallet Secure Cryptographic Application to protect critical assets and provide cryptographic functions for the secure execution of critical operations Wallet Provider A natural or legal person who provides Wallet Solutions critical assets Assets within or in relation to a Wallet Unit of such extraordinary importance that where their availability, confidentiality or integrity are compromised, this would have a very serious, debilitating effect on the ability to rely on the Wallet Unit (Wallet-) Relying Party A Relying Party that intends to rely upon Wallet Units for the provision of public or private services by means of digital interaction (Wallet-relying party) access certificate A certificate for electronic seals or signatures authenticating and validating the (Wallet-) Relying Party, issued by a provider of wallet-relying party access certificates Provider of wallet-relying party access certificates (Access Certificate Authority, Access CA) A natural or legal person mandated by a Member State to issue Relying Party access certificates to (Wallet-) Relying Parties registered in that Member State. (Wallet-relying party) registration certificate A data object that indicates the attributes the Relying Party has registered to intend to request from Users"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/#a4-additional-definitions-used-in-the-arf-v150","title":"A.4 Additional definitions used in the ARF v1.5.0","text":"<p>Note: The technical terms and definitions in Table 3 below are intended to be defined in such a way that they are aligned with the definitions used in the [European Digital Identity Regulation] and the Commission Implementing Regulations in Tables 1 and 2, and should be interpreted as such. In case any definition in Table 3 contradicts a definition from the [European Digital Identity Regulation] or the Commission Implementing Regulations, the latter take precedence.</p> <p>In some cases, a term has its origin in the context of a specific Topic in Annex 2. In such a case, the topic number appears in brackets following the definition. If the definition relies on an external source, such as a standard or a formal publication, that source is mentioned.</p> Term Definition Attestation When not further qualified, a collective term for a QEEA, PuB-EAA, or (non-qualified) EAA. Attestation Provider When not further qualified, a collective term for QEAA Provider, PuB-EAA Provider, or (non-qualified) EAA Provider. Attestation Revocation List A mechanism provided by a PID Provider or an Attestation Provider (or a trusted party acting on its behalf) for communicating the revocation status of PIDs and attestations, by publishing a list of identifiers of revoked PIDs or attestations; and used by a Relying Party to verify the status. [Topic 7] Attestation Rulebook A document describing the attestation type, namespace(s), and other features for a specific attestation type. [Topic 12] Attestation Status List A mechanism provided by a PID Provider or an Attestation Provider (or a trusted party acting on its behalf) for communicating the revocation status of PIDs and attestations, by publishing status information (Valid or Invalid) for all PIDs and attestations that are valid at the time of publication. [Topic 7] Attestation type An identifier for a type of attestation, unique within the context of the EUDI Wallet ecosystem [Topic 12] Certificate Authority (CA) An entity which is trusted by one or more parties in the EUDI Wallet ecosystem to create and seal certificates. Certificate Policy (CP) A named set of rules that indicates the applicability of a certificate to a particular community and/or class of application with common security requirements. Namespace A specification of the attribute identifier, syntax and semantics of attributes that can be used in an attestation, having an identifier that is unique within the context of the EUDI Wallet ecosystem. [Topic 12] National Accreditation Bodies (NAB) A body that performs accreditation with authority derived from a Member State under Regulation (EC) No 765/2008. Notification The act of transferring information to the European Commission. [Topics 31] Pseudonym Data uniquely representing a user which in itself does not allow to infer any user's attribute or person identification data, without the use of additional information that is kept separately by the issuer of the data uniquely representing the user. Public Key Infrastructure (PKI) Systems, software, and communication protocols that are used by EUDI Wallet ecosystem components to distribute, manage, and control public keys. A PKI publishes public keys and establishes trust within an environment by validating and verifying the public keys mapping to an entity. Qualified Electronic Signature Remote Creation Service Provider A natural or a legal person that offers services related to the remote creation, validation, and management of qualified electronic signatures that meet eIDAS regulation legal requirements and standards to be considered as legally equivalent to handwritten signatures. Relying Party Instance A software and/or hardware module with the capability to interact with a Wallet Unit and to perform Relying Party authentication, that is controlled by a Relying Party. Selective Disclosure The capability enabling the User to present a subset of the attributes included in a PID or attestation. Trust Anchor An authoritative entity represented by a public key and associated data. (Based on RFC 5194) Trusted List Repository of information about authoritative entities in a particular legal or contractual context which provides information about their current and historical status."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/","title":"Annex 2 high level requirements","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / annexes / annex-2 / annex-2-high-level-requirements</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#annex-2-high-level-requirements","title":"ANNEX 2 - High-Level Requirements","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2-high-level-requirements","title":"A.2 High-level requirements","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a21-introduction","title":"A.2.1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a211-overview","title":"A.2.1.1 Overview","text":"<p>This annex to the ARF 1.5.0 includes high-level requirements (HLRs) related to the EUDI Wallet ecosystem. The requirements define the responsible actor that should implement each requirement. There are no requirements imposed on the Users.</p> <p>All requirements in this Annex only apply in the context of the EUDI Wallet ecosystem. Attestations that are not bound to Wallet Units, as described in section 6.6.3.8 of the ARF, are not included in the scope of this Annex.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a212-key-words","title":"A.2.1.2 Key words","text":"<p>This Annex uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this annex.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, i.e., a requirement that is not mandated by this document, but, for instance, by an external standard or specification. The word 'can' indicates a capability, whereas other words, such as 'will', and 'is' or 'are', are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a22-structure-and-order-of-presentation-of-the-hlrs","title":"A.2.2 Structure and order of presentation of the HLRs","text":"<p>Topics presented in Section A.2.3 are ordered by a Topic number.</p> <p>Each Topic includes a short description, followed by the High-Level Requirements (HLRs), identified by a unique identifier. The identifier includes a prefix which signifies the context of the HLRs (e.g. ISSU for issuance), an underscore and a numerator, e.g. ISSU_10.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a23-high-level-requirements","title":"A.2.3 High-Level Requirements","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a231-topic-1-accessing-public-and-private-online-services-with-a-wallet-unit","title":"A.2.3.1 Topic 1 - Accessing Public and Private Online Services with a Wallet Unit","text":"<p>Short description</p> <p>The primary purpose of the EUDI Wallet ecosystem is to enable Users to access online services and to enable Relying Parties offering such services to identify and authenticate Users with a high level of assurance. This essential functionality ensures that Relying Parties can confidently verify that they are interacting with the correct User.</p> <p>In this use case, a User is using their Wallet Unit to present attributes related to their identity. The User accesses online services that require authentication. The User is concerned about sharing Person Identification Data (PID) during online interactions. Their objectives include identifying themselves with services requiring User identification and maintaining control over personal data sharing.</p> <p>This Topic contains high-level requirements related to online identification and authentication of a User using their Wallet Unit.</p> <p>HLRs</p> Index Requirement specification OIA_01 A Wallet Unit SHALL support technical specifications to respond to person identification data (PID) and attestation presentation requests by Relying Parties. OIA_02 A Wallet Unit SHALL support proving cryptographic binding between a WSCA included in the Wallet Unit and a PID or attestation, in accordance with [SD-JWT VC] or [ISO/IEC 18013-5]. Note: Such a mechanism is called device binding in [ISO/IEC 18013-5] and key binding in [SD-JWT VC]. OIA_03 The Commission SHALL adopt the technical specifications for the PID or attestation presentation request-response protocol and for the device binding mechanism, according to the protocols and interfaces specified in [OpenID4VP] for remote flows, and [ISO 18013-5] for proximity flows. OIA_03a Wallet Providers SHALL ensure that their Wallet Solution supports the protocol specified in 'OpenID for Verifiable Presentations', see [OpenID4VP], with additions and changes as documented in this Annex and in future technical specifications created by or on behalf of the Commission. OIA_03b For remote presentation flows, when the format of the requested attestation complies with [ISO/IEC 18013-5], Relying Parties and Wallet Units SHALL comply with the requirements in the profile for OpenID4VP specified [ISO/IEC 18013-7] Annex B. OIA_03c For remote presentation flows, when the format of the requested attestation complies with [SD-JWT VC], Relying Parties and Wallet Units SHALL comply with the requirements in the OpenID4VP profile for [SD-JWT VC] specified in [HAIP]. OIA_04 A Wallet Unit SHALL verify and process PID or attestation presentation requests from Relying Parties in accordance with the protocols and interfaces specified in [OpenID4VP] for remote flows. OIA_05 After verifying and processing a PID or attestation request, the Wallet Unit SHALL display to the User the identity of the requesting Relying Party and the requested attributes. OIA_06 A Wallet Unit SHALL transmit the requested attributes only after having received the User's authorisation. See also OIA_07. OIA_07 A Wallet Unit SHALL support selective disclosure of attributes from PIDs and attestations to be released to the requesting Relying Parties. OIA_08 Empty OIA_09 Empty OIA_10 For both proximity and remote presentation flows, if a Wallet Unit contains two PIDs having the same encoding (e.g. ISO/IEC 18013-5 or SD-JWT VC-compliant) and a Relying Party requests a PID, the Wallet Unit SHALL ask the User which of these PIDs they want to release, unless the Wallet Unit can decide from context. OIA_11 For both proximity and remote presentation flows, if a Wallet Unit contains two attestations having the same encoding (e.g. ISO/IEC 18013-5 or SD-JWT VC-compliant) and the same attestation type, and a Relying Party requests an attestation of that type and encoding, the Wallet Unit SHALL ask the User which of these attestations they want to release, unless the Wallet Unit can decide from context. Note: Attestation types are explained in [Topic 12]. OIA_12 For both proximity and remote presentation flows, a Relying Party SHALL validate the signature of a PID using a trust anchor provided in a PID Provider Trusted List made available in accordance with [Topic 31]. OIA_13 For both proximity and remote presentation flows, a Relying Party SHALL validate the qualified signature of a QEAA in accordance with Art.32 of the [European Digital Identity Regulation]. For the verification, the Relying Party SHALL use a trust anchor provided in a QEAA Provider Trusted List made available in accordance with Art. 22 of the [European Digital Identity Regulation]. OIA_14 For both proximity and remote presentation flows, a Relying Party SHALL validate the qualified signature of a PuB-EAA in accordance with Art.32 of the [European Digital Identity Regulation]. For that verification, the Relying Party SHALL use the public key provided in the qualified certificate of the QTSP supporting the qualified signature. The Relying Party SHALL also validate the qualified certificate of the QTSP using a trust anchor provided in a Trusted List made available in accordance with Art. 22 of the [European Digital Identity Regulation]. The Relying Party SHALL also verify the certified attributes of the qualified certificate, as specified in Article 45f. OIA_15 For both proximity and remote presentation flows, a Relying Party SHALL validate the signature of a (non-qualified) EAA using a trust anchor provided according to the mechanism(s) specified in the applicable Rulebook, see [Topic 12]. Notes: - OIA_12 \u2013 OIA_15 imply that a Relying Party Instance must know if the attestation it is requesting from a Wallet Instance is a PID, a QEAA, a PuB-EAA, or a non-qualified EAA. These requirements also imply that the Relying Party Instance must store trust anchors in such a way that, at the time of verification, it is able to distinguish between trust anchors usable either for PIDs, for QEAAs, for PuB-EAAs, or for non-qualified EAAs. - PID Providers, QEAA Providers, and PuB-EAA Providers are trusted by other actors in the EUDI Wallet ecosystem to not fraudulently issue attestations (or PIDs) that they are not legally allowed to issue. This trust is warranted since these kinds of providers operate within a regulated framework and are regularly audited. However, non-qualified EAA Providers are unregulated and may not be completely trustworthy. Therefore, when it receives an non-qualified attestation, a Relying Party Instance may have to verify that the non-qualified EAA Provider is authorised or registered to issue this type of attestation, in addition to verifying the signature over the attestation using the EAA Provider's trust anchor. Mechanisms allowing to do this should be defined in the applicable Rulebook, see ARB_26."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a232-topic-2-mobile-driving-licence-within-the-eudi-wallet-ecoystem","title":"A.2.3.2 Topic 2 - Mobile Driving Licence within the EUDI Wallet ecoystem","text":"<p>Short description</p> <p>A User can obtain their mobile Driver's Licence (mDL) from an mDL Provider and store it in an Wallet Unit. The User can then present the mDL to a Relying Party upon request to prove their driving rights conveniently, securely, and in compliance with the Driving Licences Directive, once it is adopted.</p> <p>This Topic contains high-level requirements related to a User presenting a mobile Driver's Licence (mDL) to a Relying Party in a supervised or unsupervised scenario, and also in an unsupervised scenario, in proximity mode.</p> <p>HLRs</p> <p>No high-level requirements are identified for this Topic, as the mDL is an attestation that must comply with all relevant requirements in other Topics.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a233-topic-3-pid-rulebook","title":"A.2.3.3 Topic 3 - PID Rulebook","text":"<p>Short description</p> <p>The Person Identification Data (PID) Rulebook contains requirements specific to the PID within the EUDI Wallet ecosystem.</p> <p>The PID Rule Book contains the following main topics:</p> <ol> <li>The PID attribute schema: This describes the structure, the type, the entity identifiers, and the logical organisation of the mandatory and optional attributes and metadata of the PID, as specified in Commission Implementing Regulation (EU) 2024/2977. It also describes how Member States can specify any possible national attributes. Two encodings for these attributes are specified, one compliant with [ISO/IEC 18013-5], the other compliant with [SD-JWT VC]. 2.The trust infrastructure necessary for PIDs, for both ISO/IEC 18013-5-compliant and SD-JWT VC-compliant encodings.</li> </ol> <p>For more information, see Annex 3 - [PID Rulebook].</p> <p>HLRs</p> Index Requirement specification PID_01 PIDs and PID Providers SHALL comply with all requirements in [PID Rulebook]."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a234-topic-4-mdl-rulebook","title":"A.2.3.4 Topic 4 - mDL Rulebook","text":"<p>Short description</p> <p>The mobile driving licence (mDL) Rulebook contains requirements specific to the mDL use case within the EUDI Wallet ecosystem.</p> <p>Mobile driving licences are legally specified in the proposed EC Regulation 2023_127 (4<sup>th</sup> Driving Licence Regulation). This Regulation specifies that mDLs must comply with the ISO/IEC 18013-5 standard. It does not mention any other standards, in particular not [SD-JWT VC]. Consequently, mDLs issued to a Wallet Unit will not be implemented as [SD JWT VC]- compliant documents. The mDL Rulebook therefore specifies only an ISO/IEC 18013-5 compliant encoding.</p> <p>For more information, see Annex 3 - [mDL Rulebook].</p> <p>HLRs</p> Index Requirement specification mDL_01 mDLs and mDL Providers SHALL comply with all requirements in [mDL Rulebook]."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a235-topic-5-wallet-unit-design-guide","title":"A.2.3.5 Topic 5 - Wallet Unit Design Guide","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a236-topic-6-relying-party-authentication-and-user-approval","title":"A.2.3.6 Topic 6 - Relying Party authentication and User approval","text":"<p>Short description</p> <p>Relying Party authentication is a process whereby a Relying Party proves its identity to a Wallet Unit, in the context of a transaction in which the Relying Party requests the Wallet Unit to release some attributes.</p> <p>To perform Relying Party authentication, the Wallet Unit verifies a Relying Party Instance access certificate offered by the entity with which it communicates, which is called a \"Relying Party Instance\". Note that there could be multiple Relying Party Instances for each Relying Party.</p> <p>The Wallet Unit communicates the outcome of Relying Party authentication to the User when it requests the User for approval to present the requested attributes. High-level requirements for User approval are also included in this Topic. The Wallet Unit also communicates the outcome of the verification of the Relying Party registration certificate, see Topic 44, and the outcome of the evaluation of an embedded disclosure policy, if present, see Topic 43.</p> <p>HLRs</p> <p>A.  Relying Party authentication</p> Index Requirement specification RPA_01 The Wallet Unit used by a User, as well as the Relying Party Instance used by the Relying Party, SHALL implement a mechanism for Relying Party authentication. This mechanism SHALL: - enable the Wallet Unit to identify and authenticate the Relying Party, - enable the Wallet Unit to verify that the request from the Relying Party was not copied and replayed, - use Relying Party Instance access certificates issued in accordance with [Topic 27]. RPA_02 The Commission SHALL ensure that technical specifications for the Relying Party authentication mechanism mentioned in RPA_01 are created both for Wallet Units complying with [ISO/IEC 18013-5] and for Wallet Units complying with [OpenID4VP]. These specifications SHALL comply with applicable requirements in these standards. RPA_03 A Wallet Unit and a Relying Party Instance SHALL perform Relying Party authentication in all use cases, whether proximity or remote, using a Relying Party Instance access certificate. Note: The actions both entities perform differ. For example, while the Relying Party creates a signature over some data in the request, the Wallet Unit validates that signature. RPA_04 For the verification of Relying Party Instance access certificates, a Wallet Unit SHALL accept the trust anchors in the Trusted List(s) of Relying Party Access Certificate Authorities of all Member States. Note: For more information about Relying Party Access Certificate Authorities, please see [Topic 31]. RPA_05 If Relying Party authentication fails for any reason, the Wallet Instance SHALL inform the User that the identity of the Relying Party could not be verified and that therefore the request is not trustworthy. RPA_06 If Relying Party authentication succeeds, the Wallet Instance SHALL display to the User the name of the Relying Party as included in the Relying Party registration certificate (see Topic 44), together with the attributes requested by the Relying Party. The Wallet Instance SHALL do so when asking the User for approval according to RPA_07. RPA_06a If the registration certificate indicates that the Relying Party is using the services of an intermediary, as described in Topic 52, the Wallet Unit SHALL verify that the name and the unique identifier of the intermediary included in the registration certificate are identical to the name and unique identifier included in the Relying Party Instance access certificate. If this verification fails, the Wallet Unit SHALL treat this as a Relying Party authentication failure. If this verification succeeds, the Wallet Instance SHALL display to the User the name of the intermediary. RPA_06b If Relying Party authentication fails for any reason, the Wallet Unit SHALL either not present the requested attributes to the Relying Party, or give the User the choice to present the requested attributes or not. Note: It is up to the Wallet Provider to make a choice for one of the two options above. <p>B.  User approval</p> Index Requirement specification RPA_07 A Wallet Unit SHALL ensure the User approved the release of any attribute(s) in the Wallet Unit to a Relying Party, prior to releasing these attribute. A Wallet Unit SHALL always allow the User to refuse releasing an attribute requested by the Relying Party. RPA_08 A Wallet Unit SHALL ensure that (one of) its WSCA(s) has authenticated the User before allowing the User to give or refuse approval for releasing any attributes. Note: See [Topic 09] for information about the WSCA. RPA_09 A Relying Party SHOULD communicate in the request which attributes are needed for which purpose (use case, service), if this is supported by the protocol used for communication with the Wallet Unit. Notes: - This could be done, for instance, by grouping the attributes and describing the use case, service, or purpose of each group. - The purpose of this recommendation is that a Relying Party makes clear to the User what the intended use, the service being accessed, or the specific purpose is of each requested attribute. For example, a service may legally require attributes for age verification (e.g., birthdate), but the Relying Party may additionally want a User address (e.g., street, location, PObox, country) in order to offer added-value services. Age verification attributes and address attributes should be grouped separately, and the purposes should be clearly distinguished. This allows the User to be better informed about the request, and also allows them to approve one purpose but deny the other; see RPA_10. RPA_10 If a Wallet Unit receives a request indicating one or more purposes (use cases, services) for requesting attributes, the Wallet Instance SHOULD show these to the User when asking for User approval. Moreover, the Wallet Unit SHOULD ensure that for each purpose, the User gives approval either to release all attributes requested for that purpose, or none of them. Note: This means that a User should either approve the release of all attributes in a given group or to deny the entire group. The Wallet Unit should not allow partial approval within a group. Partial approval would mean that the Relying Party cannot deliver the service, but nevertheless receives some User attributes. This would be a violation of the User's privacy."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a237-topic-7-attestation-revocation-and-revocation-checking","title":"A.2.3.7 Topic 7 - Attestation revocation and revocation checking","text":"<p>Short description</p> <p>This Topic contains the high-level requirements (HLRs) relating to the (possible) revocation of PIDs, QEAAs, PuB-EAAs, non-qualified EEAs and WUAs by their providers. It also contains HLRs relating to the (possible) checking of the revocations status of a PID or attestation by a Relying Party.</p> <p>Note: This Topic does not pertain to access certificates for Relying Parties, PID Providers or Attestation Providers as discussed in [Topic 31]. Neither does it apply to any intermediate certificates establishing trust between these certificates and the respective trust anchors. These certificates are part of a Public Key Infrastructure (or a similar trust framework), and rules for revoking these certificates will be established within the respective PKI or trust framework.</p> <p>HLRs</p> Index Requirement specification VCR_01 A PID Provider, QEAA Provider, PuB-EAA Provider, or Wallet Provider SHALL use one of the following methods for revocation of a PID, QEAA, PuB-EAA, or WUA: Only issue short-lived attestations having a validity period of 24 hours or less, such that revocation will never be necessary,Use an Attestation Status List mechanism specified per VCR_11, orUse an Attestation Revocation List mechanism specified per VCR_11. Note: The 24-hour period originates from  ETSI EN 319 411-1 V1.4.1, requirement REV-6.2.4-03A. This requires that the process of revocation must take at most 24 hours. Consequently, revocation may make no sense if the attestation is valid for less than 24 hours, because it may reach the end of its validity period before it is revoked. VCR_02 For non-qualified EAAs, the relevant Rulebook SHALL specify whether that type of EAA must be revocable. If a non-qualified EAA type must be revocable, the relevant Rulebook SHALL determine which of the methods mentioned in VCR_01 must be implemented by the relevant EAA Providers for the revocation of such an EAA. VCR_03 If a PID or attestation is revocable, the PID Provider of a given PID, or the Attestation Provider of a given attestation, SHALL be the only party in the EUDI Wallet ecosystem responsible for executing the revocation of that PID or attestation. Similarly, if a WUA is revocable, the Wallet Provider of a given WUA SHALL be the only party in the EUDI Wallet ecosystem responsible for executing the revocation of that WUA. Note: A PID Provider, Attestation Provider or Wallet Provider MAY outsource the operation of the revocation process to a third party. VCR_04 A PID Provider, Attestation Provider or Wallet Provider that revoked a PID or attestation SHALL NOT reverse the revocation. VCR_05 If a PID, attestation, or WUA is revocable, the PID Provider, Attestation Provider, or Wallet Provider SHALL have a policy specifying under which conditions a PID, attestation, or WUA it issued will be revoked. VCR_06 If a PID, attestation, or WUA is revocable, the PID Provider, Attestation Provider, or Wallet Provider SHALL revoke a PID, attestation, or WUA when its security has been compromised. VCR_07 If a WUA is revocable, the Wallet Provider SHALL revoke that WUA upon the explicit request of the User to revoke their Wallet Unit. VCR_07a If a PID or attestation is revocable, the PID Provider or Attestation Provider SHOULD revoke that PID or attestation upon the explicit request of the subject of the PID or the attestation. VCR_07b If a PID or attestation is revocable, the PID Provider or Attestation Provider SHOULD revoke that PID if the Wallet Unit on which it resides is revoked, in compliance with requirement WU_Revocation 18 in Topic 38. VCR_08 If a PID is revocable, the PID Provider SHALL revoke a PID upon the death of the natural person who is the subject of the PID, or the cease of activity of the legal person who is the subject of the PID. VCR_09 If a PID, attestation, or WUA is revocable, the PID Provider, Attestation Provider or Wallet Provider SHALL revoke a PID, attestation, or WUA if the value of one or more attributes in the PID, attestation, or WUA was changed and it is still valid for at least 24 hours. In this situation, the PID Provider, Attestation Provider, or Wallet Provider SHALL immediately issue a new PID, attestation, or WUA with the correct value for the changed attribute. Notes: - If the value of the attributes is determined by a party different from the Provider, such as an Authentic Source, the Provider is responsible for ensuring that this third party notifies them about such changes. - The topic of re-issuance of PIDs and attestations will be discussed with Member States for ARF 2.0. VCR_10 Wallet Providers SHALL implement the attestation revocation mechanisms specified per VCR_11 in their Wallet Solution(s). VCR_11 The Commission SHALL create or reference technical specifications providing all necessary details for PID Providers, Attestation Providers, and Wallet Providers to implement an Attestation Status List mechanism or an Attestation Revocation List mechanism for the PIDs, attestations, and WUAs they issue. These technical specifications SHALL also contain all details necessary for Relying Party Instances, Relying Parties and Wallet Units interacting with other Wallet Units to use these mechanisms to verify the revocation status of PIDs, attestations, and WUAs. Note: 'Attestation Status List' and 'Attestation Revocation List' are specific mechanisms, defined in Annex 1. Attestation Revocation Lists are sometimes referred to as 'Identifier Lists'. VCR_12 If a Relying Party decides it needs to verify the revocation status of a PID, or attestation, it SHALL support both the Attestation Status List mechanism and the Attestation Revocation List mechanism specified per VCR_11. Note: Per VCR_13, it is not mandatory for a Relying Party to verify whether a PID, or attestation is revoked. VCR_13 A Relying Party SHOULD verify the revocation status of a PID, attestation, or WUA upon obtaining it from a Wallet Unit, following the steps specified per VCR_11. VCR_14 When no reliable information regarding the revocation status of a PID, attestation or WUA is available, a Relying Party SHOULD perform a risk analysis considering all relevant factors for the use case, before taking a decision to accept or refuse the PID, attestation or WUA."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a238-topic-8-design-solutions-on-data-sharing-scenarios","title":"A.2.3.8 Topic 8 - Design Solutions on Data Sharing scenarios","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a239-topic-9-wallet-unit-attestation","title":"A.2.3.9 Topic 9 - Wallet Unit Attestation","text":"<p>Note to this Topic in version 1.5.0: The Commission received many comments on the ideas described in this Topic, particularly relating to key association. In response, the Commission decided to add the Wallet Unit Attestation to the list of open topics that need further discussion before publication of ARF 2.0. In these discussions, also the topic of key association will be discussed. In anticipation of the outcome of these discussions, nothing was changed in this Topic apart from some clarifications. In addition, changes were made to align the text with the Implemented Acts. In particular, the terms 'WTE' and 'WIA' were replaced by 'WUA'. Some further changes were needed to avoid creating contradictions, for instance, in places where 'WTE' and 'WIA' were both mentioned in a single sentence. Also, some changes were made to explain that the WUA fulfills two separate roles, namely the old WTE role and the old WIA role.</p> <p>Short description</p> <p>When a PID Provider or Attestation Provider receives a request from a User to issue a PID or attestation to the User's Wallet Unit, the PID Provider or Attestation Provider needs to decide whether it can comply with this request. To determine this, the PID Provider or Attestation Provider needs to know (among other things) if the Wallet Unit offers the functional capabilities required by the PID Provider or Attestation Provider in its PID or attestation issuing policy. In addition, the PID Provider or Attestation Provider needs to know if the Wallet Secure Cryptographic Application(s) (WSCA) and the corresponding Wallet Secure Cryptographic Device(s) (WSCD) that are part of the Wallet Unit offer the required level of security. Therefore, the PID Provider or Attestation Provider needs to receive trustworthy information about these capabilities and security posture.</p> <p>This Topic introduces an information object that contains the necessary information. This object is called the Wallet Unit Attestation (WUA). The WUA also contains a public key. By including this public key in the WUA, the Wallet Provider attests that the corresponding private key is protected by a certified WSCA/WSCD that has the properties and security posture described in the WUA. Note that the information about the Wallet Unit and the WSCA(s) is selectively disclosable, meaning that the Wallet Unit can release the WUA either with or without this information.</p> <p>The PID Provider or Attestation Provider then asks that WSCA to create a key pair for its new PID or attestation, and to prove that this new key is associated with the key in the WUA. Key association primarily means that the PID or attestation private key is protected by the same WSCA as the WUA private key. Therefore, the PID Provider or Attestation Provider can be sure that the security level of the new PID or attestation key is the same as the security level of the WUA key.\u00a0At the moment of writing this version of the ARF, it is not fully clear how many WSCDs will support the cryptographic functionalities necessary to generate a proof of association. Therefore, the creation of a proof of association in a WSCA is recommended (SHOULD), not required (SHALL). In this way, once a Wallet Unit includes a WSCD/WSCA that supports the required cryptographic functionalities, proofs of association can be used as described in this Topic.</p> <p>Please note that the scope of this Topic is limited to the question of how the WUA is issued during Wallet Unit activation and how it is used during attestation issuance. The role played by the WUA during the release of an attestation to a Relying Party is discussed in [Topic 18] (Combined presentation of attributes).</p> <p>HLRs</p> <p>A.  Creating the WUA during Wallet Unit activation</p> Index Requirement specification WUA_01 A Wallet Provider SHALL activate a new Wallet Unit before a User can use it to obtain an attestation. WUA_02 A WSCA SHALL authenticate the User before performing any cryptographic operation involving a private or secret key of a Wallet Unit (i.e., a WUA key) or of a PID or an attestation in a Wallet Unit. For a PID key (which is part of the EUDI Wallet eID means), this WSCA SHALL be certified to be compliant with applicable requirements for level of assurance \"high\" in Commission Implementing Regulation (EU) 2015/1502 section 2.2.1. Note: Many actions of the Wallet Unit, such as processing a Relying Party request and presenting an attestation, require multiple cryptographic operations, for example ephemeral key generation followed by key agreement and message encryption. This requirement does not imply that separate User authentication is necessary before each of these. Rather, a successful User authentication will be valid for all cryptographic operations necessary for a Wallet Unit action. It is up to the Wallet Provider to determine what constitutes a 'Wallet Unit action', finding a balance between security (more User authentications) and User convenience (fewer User authentications). During certification of the Wallet Solution, it will be verified that the solution provides an adequate level of security. WUA_03 A Wallet Unit SHALL authenticate the User before performing any operation excluding cryptographic operations. The Wallet Unit MAY rely on a WSCA to do so, per WUA_02, but MAY also rely on a User authentication method implemented in the Wallet Instance. However, if implemented by the Wallet Instance, the User authentication mechanism SHALL be Wallet Instance-specific, meaning it SHALL be independent from any general User authentication mechanism for the User device, such as a lock screen. Notes:The goal of this requirement is to prevent any User interaction without User authentication, including, for example, using the user interface to see which attestations are present in the Wallet Unit or what are the values of specific User attributes.Cryptographic operations can only be performed by the WSCA after User authentication by the WSCA, according to WUA_02. WUA_03b For User authentication according to WUA_03, a Wallet Unit SHALL implement an idle timeout of at most 5 minutes, after which User authentication SHALL again be required. The Wallet Unit SHOULD provide the User with the option to set the idle timeout to a duration shorter than 5 minutes. WUA_04 Empty WUA_05 Empty WUA_06 A Wallet Provider SHALL only activate a new Wallet Unit if it has verified that: - The Wallet Unit includes at least one WSCA that is certified to be compliant with applicable requirements in this Topic, for level of assurance \"high\". In addition, the Wallet Unit MAY include one or more other WSCAs. - The private key corresponding to the public key in the WUA (see WUA_07) is protected by the respective WSCA. WUA_07 During the activation of a new Wallet Unit, a Wallet Provider SHALL create and sign at least one Wallet Unit Attestation and issue it to the Wallet Unit. WUA_08 The Commission SHALL take measures to ensure that the contents, format and encoding of the Wallet Unit Attestation is specified in a technical specification. This technical specification SHALL be a Rulebook complying with all requirements in Topic 12. Each WUA SHALL describe the Wallet Unit and a certified WSCA included in that Wallet Unit, in such a way that a PID Provider or Attestation Provider processing the WUA is able to take a well-grounded decision on whether to issue an attestation to that Wallet Unit. Note: In general, a PID Provider or Attestation Provider will also need information about the User. Such information is not contained in the WUA. WUA_09 A Wallet Provider SHALL consider all relevant factors, including the risk of a WUA public key becoming a vector to track the User, when deciding on the validity period of a WUA. A Wallet Provider MAY use short-lived WUAs to mitigate such risks. WUA_10 A WSCA SHALL generate a new key pair for a new WUA on request of the Wallet Provider via the Wallet Instance. The WSCA SHALL register the new key as a WUA key in an internal registry. The WSCA SHALL register the WUA key as an independent (i.e., non-associated) key in an internal registry. Note: A WUA key can be associated later with a PID or attestation key when that PID or attestation key is created, see WUA_13. WUA_11 A WUA SHALL contain a public key, and the corresponding private key SHALL be generated by the WSCA described in the WUA. Note: A WUA key pair is generated as per WUA_10. WUA_12 In case the Wallet Provider must update the WUA because the information in the WUA is outdated, the Wallet Provider SHALL ensure that the Wallet Unit only releases the latest version of a WUA to an Attestation Provider. <p>B.  Using the WUA during issuance of an attestation</p> Index Requirement specification WUA_13 During PID or attestation issuance, a WSCA SHALL generate a new key pair for a new PID or attestation, on request of the PID Provider or Attestation Provider via the Wallet Instance. The PID Provider or Attestation Provider SHALL indicate a single WUA public key (see WUA_10) with which the new PID or attestation key must be associated. This indication can either be direct, by providing the WUA public key value, or indirect, by providing a public key value that has been associated with the WUA key previously. In the latter case, the WSCA SHALL look up the associated WUA key in its internal registry. The WSCA SHALL register the new key in an internal registry as an attestation key. The WSCA SHALL register the association between the new private key and the WUA private key in an internal registry. Notes: Direct indication of the WUA is used in case a PID Provider or Attestation Provider indicates during issuing that the new PID or attestation must be associated with a WUA public key, see WUA_15 and WUA_16.Indirect indication of the WUA key is used in case an Attestation Provider indicates during issuing that the new attestation must be associated with an existing PID or attestation, see WUA_16.In case of re-issuance of an existing (short-lived) PID or attestation, or in case of synchronous issuing in a remote HSM architecture, re-use of an existing key pair for the new PID or attestation may be acceptable and it may not be necessary to generate a new key pair for each new PID or attestation. Requirements regarding re-issuance processes will be added in a future version of this document. WUA_14 During PID or attestation issuance, a WSCA SHALL prove possession of the private key corresponding to the new PID or attestation public key, on request of the PID Provider or Attestation Provider via the Wallet Instance, for example by signing a challenge with that private key. WUA_15 A PID Provider SHALL indicate to a WSCA (via the Wallet Instance) the public key to which the new PID must be associated. This SHALL be a WUA public key. WUA_16 An Attestation Provider SHALL indicate to a WSCA (via the Wallet Instance) the public key to which the new attestation must be associated. This SHALL be either a WUA public key or the public key of a PID or attestation that already exists in the Wallet Unit. Note: if the Attestation Provider indicates a PID or attestation public key, this is an indirect indication of a WUA key, see WUA_13. WUA_17 During PID or attestation issuance, a WSCA SHALL prove possession of the private key corresponding to a WUA public key on request of a PID Provider or Attestation Provider via the Wallet Instance, for example by signing a challenge with that private key. WUA_18 During PID or attestation issuance, a WSCA SHOULD generate a proof of association for two or more public keys on request of the PID Provider or Attestation Provider. The WSCA SHALL generate this proof only if the corresponding private keys are protected by the same WSCA and the WSCA has internally registered an association between these private keys. Notes: - It is possible that some private keys in a WSCA are not associated with each other, even though they are managed within the same WSCA. - If two keys are associated, this implies that they are both associated with the same WUA key. WUA_19 During PID or attestation issuance, the PID Provider or Attestation Provider SHALL verify that the WSCA described in the WUA received from the Wallet Unit has proven possession of the private key corresponding to the public key in the WUA (see WUA_17).  The PID Provider or Attestation Provider SHALL also verify that the WSCA has proven possession of the new PID or attestation private key (see WUA_14). In addition, the PID Provider or Attestation Provider SHOULD verify that the WSCA has proven association (see WUA_18) between the new PID or attestation public key and the public key requested by the PID Provider or Attestation Provider according to WUA_15 or WUA_16. Notes: - See also WUA_13. - These three proofs MAY be implemented as a single cryptographic proof. WUA_20 During PID or attestation issuance, a Wallet Unit SHALL provide the PID Provider or Attestation Provider with information on all WSCAs it is able to use for private key management and that comply with the PID Provider's or Attestation Provider's requirements. WUA_21 During PID or attestation issuance, a Wallet Unit SHALL provide the PID Provider or Attestation Provider with the WUA describing the properties of the WSCA that generated the new PID or attestation private key and protects it. WUA_22 If a Wallet Unit contains multiple WSCAs, it SHALL register which PIDs and attestations are bound to each of these WSCAs. <p>C.  Miscellaneous</p> Index Requirement specification WUA_23 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a Wallet Unit to transfer a WUA to a PID Provider or Attestation Provider. WUA_24 A Wallet Unit SHALL release data related to the User device in a WUA only to a PID Provider or Attestation Provider, and not to a Relying Party or any other party. Note: The reason for this requirement is that the Relying Party does not need to know anything about the User's device. Therefore, such data must not be released to Relying Parties, as doing so might violate User privacy. WUA_25 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a Wallet Unit to transfer the proofs of association and possession mentioned in WUA_19 to a PID Provider or Attestation Provider. Note: These three proofs MAY be implemented as a single cryptographic proof. WUA_26 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a Wallet Unit to transfer a public key to a PID Provider or Attestation Provider, to be included in the new PID or attestation. WUA_27 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a PID Provider or Attestation Provider to indicate in the Token Response: the WSCA to which the new PID or attestation key must be bound, for example by referring to a WSCA identifier listed in the WUA,or, alternatively, the existing PID or attestation public key with which the new attestation key must be associated. <p>D.  Overview: Requirements for a WSCA</p> <p>The technical requirements above imply the following requirements for a WSCA.</p> Index Requirement specification WUA_28 A WSCA SHALL be able to verify the authentication factors of a User, in accordance with the requirements in Commission Implementing Regulation (EU) 2015/1502 section 2.2.1. WUA_29 A WSCA SHALL be able to generate a new key pair on request of the Wallet Instance. WUA_30 A WSCA SHALL be able to prove possession of the private key corresponding to a public key on request of a Wallet Instance, for example by signing a challenge with that private key. WUA_31 A WSCA SHALL register each newly generated key pair as either a WUA key or an attestation key, depending on information provided by the Wallet Instance in the key generation request. The internal registry used by the WSCA for this purpose SHALL be protected against modification by external parties. WUA_32 A WSCA SHALL protect a private key it generated during the entire lifetime of the key. This protection SHALL at least imply that the WSCA prevents the private key from being extracted in the clear. If a WSCA is able to export a private key in encrypted format, the key used for key encryption SHALL be properly protected, for example as multiple key shares controlled by multiple key custodians. WUA_33 A WSCA SHALL associate each newly generated attestation key with a WUA key indicated by the Wallet Instance. The WSCA SHALL record the association between these keys in an internal registry, which SHALL be protected against modification by external parties. WUA_34 For the purposes of WUA_33, a Wallet Instance SHALL indicate the WUA key either directly, by WUA public key value, or indirectly, by value of a public key that is already associated to the intended WUA key. In the latter case, the WSCA SHALL look up the intended WUA key in its registry. WUA_35 A WSCA SHALL consider two keys to be associated if they are associated to a common WUA key. WUA_36 A WSCA SHOULD be able to generate a proof of association for two or more public keys. The WSCA SHALL generate such a proof if and only if the corresponding private keys are protected by that WSCA, and the WSCA has internally registered an association between these private keys."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2310-topic-10-issuing-a-pid-or-attestation-to-a-wallet-unit","title":"A.2.3.10 Topic 10 - Issuing a PID or attestation to a Wallet Unit","text":"<p>Short description</p> <p>PID Providers and Attestation Providers issue PIDs and attestations to Wallet Units. This Topic lists the high-level technical requirements related to PID and attestation issuance.</p> <p>This Topic also contains the high-level requirements for Topic 23.</p> <p>HLRs</p> <p>A - Generic HLRs</p> Index Requirement specification ISSU_01 Wallet Providers SHALL ensure that their Wallet Solution supports the OpenID4VCI protocol specified in [OpenID4VCI], with additions and changes as documented in this Annex (see e.g. this Topic and [Topic 9]) and in future technical specifications created by or on behalf of the Commission. ISSU_02 Wallet Providers SHALL ensure that their Wallet Solution supports the attestation formats specified in ISO/IEC 18013-5, see [ISO18013-5], and in \"SD-JWT-based Verifiable Credentials (SD-JWT VC)\", see [SD-JWT-VC], with additions and changes as documented in this Annex and in future technical specifications created by or on behalf of the Commission. ISSU_03 Empty ISSU_04 The OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable PID Providers and Attestation Provider to issue to a Wallet Unit a batch of multiple PIDs or attestations that are simultaneously valid and contain the same attributes. ISSU_05 A Wallet Unit SHALL support a process to activate a newly issued PID, in accordance with Commission Implementing Regulation (EU) 2015/1502 Section 2.2.2. The Wallet Unit SHALL NOT allow a User to use a non-activated PID. Notes: - The goal of the activation process is to verify that the PID was delivered into the Wallet Unit and WSCA of the User who is the subject of the PID. - This requirement is not applicable for QEAAs, PuB-EAAs or non-qualified EAAs, since these are not identity means in the sense of Commission Implementing Regulation (EU) 2015/1502. ISSU_06 After a Wallet Unit receives a PID or an attestation from a PID Provider or Attestation Provider, it SHALL verify that the PID or attestation it received matches the PID or attestation requested by the Wallet Unit. ISSU_07 After a Wallet Unit receives a PID from a PID Provider, it SHALL validate the signature of the PID using a trust anchor provided in a PID Provider Trusted List made available in accordance with [Topic 31]. Note: This signature validation may not be useful in architectures where the Wallet Provider is also the PID Provider and the validation of the PID signature would be done by the same component (namely, a remote HSM) that created the signature. However, in such a situation, additional measures SHALL be taken to ensure that any errors in the PID issuance process will be detected. ISSU_08 After a Wallet Unit receives a QEAA from a QEAA Provider, it SHALL validate the qualified signature of the QEAA in accordance with Art.32 of the [European Digital Identity Regulation]. For the verification, the Wallet Unit SHALL use a trust anchor provided in a QEAA Provider Trusted List made available in accordance with Art. 22 of the [European Digital Identity Regulation]. ISSU_09 After a Wallet Unit receives a PuB-EAA from a PUB-EAA Provider, it SHALL validate the qualified signature of the PuB-EAA in accordance with Art.32 of the [European Digital Identity Regulation]. For that verification, the Wallet Unit SHALL use the public key provided in the qualified certificate of the QTSP supporting the qualified signature. The Wallet Unit SHALL also validate the qualified certificate of the QTSP using a trust anchor provided in a Trusted List made available in accordance with Art. 22 of the [European Digital Identity Regulation]. Finally, the Wallet Unit SHALL also verify the certified attributes of the qualified certificate, as specified in Article 45f. ISSU_10 After a Wallet Unit receives a non-qualified EAA from an EAA Provider, it SHALL validate the signature of the EAA using a trust anchor provided according to the mechanism(s) specified in the applicable Rulebook, see [Topic 12]. Notes: - Requirements ISSU_07 to ISSU_10 are equivalent to requirements OIA_12 to OIA_15 in [Topic 1]. These requirements imply that a Wallet Instance must be aware whether the attestation it is requesting from an issuer is a PID, a QEAA, a PuB-EAA, or a non-qualified EAA. These requirements also imply that the Wallet Unit must store trust anchors in such a way that, when it receives an issued attestation, it is able to distinguish between trust anchors usable either for PIDs, for QEAAs, for PuB-EAAs, or for non-qualified EAAs. - PID Providers, QEAA Providers, and PuB-EAA Providers are trusted by other actors in the EUDI Wallet ecosystem to not fraudulently issue attestations (or PIDs) that they are not legally allowed to issue. This trust is warranted since these kinds of providers operate within a regulated framework and are regularly audited. However, non-qualified EAA Providers are unregulated and may not be completely trustworthy. Therefore, before requesting an non-qualified attestation, a Wallet Unit may need to verify that the non-qualified EAA Provider is authorised or registered to issue this type of attestation. Mechanisms allowing to do this may be defined in the applicable Rulebook, see ARB_26. ISSU_11 A Wallet Unit SHALL request the User's approval before storing a PID or attestation obtained from a PID Provider or Attestation Provider. When requesting approval, the Wallet Instance SHALL display the contents of the PID or attestation to the User. The Wallet Instance SHALL also inform the User about the identity of the PID Provider or Attestation Provider, using the subject information in the PID Provider's or Attestation Provider's access certificate. ISSU_11b In case one or more of the verifications in ISSU_06 \u2013 ISSU_11 fail, the Wallet Unit SHALL immediately delete the PID or attestation it received. The Wallet Instance SHALL notify the User about the fact that issuance of the PID or attestation was not successful, including the reason for this failure. ISSU_12 A PID Provider or Attestation Provider SHALL offer its PIDs or attestations in all formats required in the PID Rulebook or the applicable Attestation Rulebook, see [Topic 12]. Note: Examples include the mdoc format specified in [ISO/IEC 18013-5] and the SD-JWT VC-format specified in [SD-JWT VC]. ISSU_12a A Wallet Provider SHALL ensure that, when a User instructs their Wallet Unit to request a PID or attestation from a PID Provider or Attestation Provider, the Wallet Unit requests that PID or attestation in all formats offered by the PID Provider or Attestation Provider. Note: Examples include the mdoc format specified in [ISO/IEC 18013-5] and the SD-JWT VC-format specified in [SD-JWT VC]. <p>B - HLRs for PID issuance</p> Index Requirement specification ISSU_13 A Wallet Provider SHALL ensure that at least one PID Provider is willing to issue a PID complying with [PID Rulebook] to Users of the Wallet Units it provides. ISSU_14 A PID Provider SHALL ensure that all PIDs it issues to Wallet Units comply with the requirements specified in [PID Rulebook]. ISSU_15 A PID Provider SHALL support the OpenID4VCI protocol referenced in ISSU_01 for issuing PIDs. ISSU_16 Empty ISSU_17 A PID Provider SHALL implement device binding for all PIDs it issues, meaning it SHALL ensure that a PID is cryptographically bound to a WSCA included in the Wallet Unit, as specified in requirement WUA_13 in [Topic 09]. Note: Device binding is called 'mdoc authentication' in [ISO/IEC 18013-5] and 'key binding' in [SD-JWT-VC]. ISSU_18 A PID Provider SHALL verify the identity of the subject of the PID in compliance with Level of Assurance (LoA) High requirements. Note: These requirements will be determined by the relevant eID scheme. Note to ARF 1.5.0: In most cases, the subject of the PID is the same person as the User. However, it has not yet been ruled out that a Wallet Unit may contain multiple PIDs, for example in the case of a parent having their children's PIDs in their Wallet Unit. Another example is a natural person representing a legal person, who may hold a legal-person PID in their Wallet Unit next to their own natural-person PID. These topics will be further discussed with Member States. ISSU_18a A PID Provider SHALL ensure that the attributes attested in the PID issued are valid for the identified PID subject at any point of time of PID validity. ISSU_19 For the verification of a WUA, a PID Provider SHALL accept the trust anchors in the Wallet Provider Trusted List it needs. Notes: The Wallet Provider Trusted List are explained in [Topic 31].It is not mandatory for a PID Provider to accept all Wallet Provider Trusted Lists, if there are multiple. This is because it is not mandatory for a PID Provider to accept all certified Wallet Solutions in the EUDI Wallet ecosystem. Each PID Provider will choose which Trusted Lists they need to subscribe to. ISSU_19a A PID Provider SHALL support at least one Wallet Solution, meaning that it is willing and able to issue a PID to a Wallet Unit on request of the User. ISSU_20 To inform its potential PID subjects about the Wallet Solution(s) they can use for requesting a PID, a PID Provider SHALL publish a list of supported Wallet Solutions in such a way that it can be easily found, for example on the PID Provider's website. ISSU_21 Before issuing a PID, a PID Provider SHALL verify that the Wallet Provider mentioned in the Wallet Unit's WUA is present in a Wallet Provider Trusted List. The PID Provider SHALL also authenticate and validate the WUA using the trust anchor(s) registered for the Wallet Provider in the Wallet Provider Trusted List. Moreover, it SHALL verify that the Wallet Units's WUA is not revoked. Notes: - For the WUA, see [Topic 9] and [Topic 38]. - CIR 2024/2977, Article 3 (9), also allows \"another authentication mechanism in accordance with an electronic identity scheme notified at assurance level high.\" However, the ARF does not further specify such other authentication mechanisms, which means that in general they will not be interoperable. ISSU_22 A PID Provider SHALL include its PID Provider access certificate in its Issuer metadata used in the common OpenID4VCI protocol referenced in ISSU_01. ISSU_22a A PID Provider SHALL sign its metadata (as defined in OpenID4VCI) using the private key corresponding to its PID Provider access certificate. ISSU_23 For the verification of PID Provider access certificates, a Wallet Unit SHALL accept the trust anchors in the Trusted List(s) of PID Provider Access Certificate Authorities it needs. Notes: - PID Provider Access Certificate Authority Trusted Lists are explained in [Topic 27]. -It is not mandatory for a Wallet Unit to accept all PID Provider Access Certificate Authority Trusted Lists, if there are multiple. Wallet Providers will choose which Trusted Lists they need to subscribe to, for example depending on the Member State(s) they are operating in. ISSU_23a A Wallet Provider SHALL support at least one PID Provider, meaning that its Wallet Units SHALL be capable of requesting the issuance of a PID from these PID Provider(s), and that the Wallet Provider has agreed with the PID Provider(s) that the PID Provider(s) will process such a request according to the agreed rules and procedures. ISSU_23b Prior to or during installation of a Wallet Instance, the Wallet Provider SHALL notify the User about the PID Provider(s) that are supported by the Wallet Unit. ISSU_24 A Wallet Unit SHALL authenticate and validate the PID Provider access certificate before requesting the issuance of a PID. The Wallet Unit SHALL verify at least that the access certificate indicates that its subject is a PID Provider, that the access certificate is authentic and is valid at the time of validation, and that the issuer of the access certificate is a CA that is in a PID Provider Access Certificate Authority Trusted List. Note: The PID Provider Access Certificate Authority Trusted List is not the same as the PID Provider Trusted List mentioned in [Topic 31]. <p>C - HLRs for Attestation Issuance</p> Index Requirement specification ISSU_25 An Attestation Provider SHALL ensure all attestations issued to Wallet Units comply with the requirements specified in the applicable Rulebook, as described in [Topic 12]. ISSU_26 An Attestation Provider SHALL support the OpenID4VCI protocol referenced in ISSU_01 for issuing attestations. ISSU_27 An Attestation Provider SHALL implement device binding for all attestations it issues, meaning it SHALL ensure that an attestation is cryptographically bound to a WSCA included in the Wallet Unit, as specified in requirement WUA_13 in [Topic 9]. Note that device binding is called mdoc authentication in [ISO/IEC 18013-5] and key binding in [SD-JWT-VC]. ISSU_27a If applicable, an Attestation Provider SHALL verify the identity of the subject of the attestation in compliance with applicable requirements, in accordance with relevant standards or Implementing Regulations. Note: Not every attestation has a subject. For example, a holiday voucher may be valid for any User that can present it to a Relying Party. This is comparable to the concept of a 'bearer token'. ISSU_27b If applicable, an Attestation Provider SHALL ensure that the attributes attested in the attestation issued are valid for the identified attestation subject. ISSU_28 For the verification of a WUA, an Attestation Provider SHALL accept the trust anchors in the Wallet Provider Trusted List. Note: The Wallet Provider Trusted List is explained in [Topic 31]. ISSU_29 An Attestation Provider SHALL support all Wallet Solutions, meaning that they SHALL NOT discriminate between Wallet Solutions when processing a request for the issuance of an attestation. ISSU_30 Before issuing an attestation, an Attestation Provider SHALL: - verify that the Wallet Provider mentioned in the Wallet Unit's WUA is present in the Wallet Provider Trusted List. - authenticate and validate the WUA using the trust anchor(s) registered for the Wallet Provider in the Wallet Provider Trusted List. - verify that the Wallet Unit's WUA is not revoked. Note: For the WUA, see [Topic 9] and [Topic 38]. ISSU_31 Empty ISSU_32 An Attestation Provider SHALL include its Attestation Provider access certificate in its Issuer metadata used in the common OpenID4VCI protocol referenced in ISSU_01. ISSU_32a An Attestation Provider SHALL sign its metadata (as defined in OpenID4VCI) using the private key corresponding to its Attestation Provider access certificate. ISSU_33 For the verification of Attestation Provider access certificates, a Wallet Unit SHALL accept the trust anchors in all Attestation Provider Access Certificate Authority Trusted List(s). Note: Attestation Provider Access Certificate Authority Trusted Lists are explained in [Topic 27]. There may be separate Access Certificate Authority Trusted Lists for QEAA Providers, PuB-EAA Providers, and EAA Providers. ISSU_33a A Wallet Provider SHALL support all Attestation Providers, meaning that its Wallet Units SHALL be capable of requesting the issuance of a QEAA, PuB-EAA, or non-qualified EAA from these Providers at the User's request. ISSU_34 A Wallet Unit SHALL authenticate and validate the Attestation Provider access certificate before requesting the issuance of an attestation. The Wallet Unit SHALL verify at least that the access certificate indicates that its subject is a QEAA Provider, Pub-EAA Provider, or EAA Provider, that the access certificate is authentic and is valid at the time of validation, and that the issuer of the access certificate is a CA that is in the Attestation Provider Access Certificate Authority Trusted List, as documented in [Topic 27]. Note: PID Providers, QEAA Providers, and PuB-EAA Providers are trusted by other actors in the EUDI Wallet ecosystem to not fraudulently issue attestations (or PIDs) that they are not legally allowed to issue. This trust is warranted since these kinds of providers operate within a regulated framework and are regularly audited. However, non-qualified EAA Providers are unregulated and may not be completely trustworthy. Therefore, before requesting an EAA from a non-qualified EAA Provider, a Wallet Unit may need to verify that that EAA Provider is authorised or registered to issue the type of EAA the Wallet Unit is requesting. Such verification requirements, as well as the mechanisms allowing to do this, may be defined in the applicable Rulebook."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2311-topic-11-pseudonyms","title":"A.2.3.11 Topic 11 - Pseudonyms","text":"<p>Short description</p> <p>Wallet Units will support generating pseudonyms for Users in compliance with the W3C WebAuthn API specification, [W3C WebAuthn]. On a high level, this means that the WSCD in the Wallet Unit will be able to create key pairs. The public keys of these pairs function as pseudonyms for the User. Only the User can use these pseudonyms, since the WSCD authenticates the User before allowing a pseudonym to be used, see requirement WUA_02. The Wallet Unit will keep an internal structure to associate each pseudonym (public key) with a specific Relying Party, based on the Relying Party unique identifier in the Relying Party Instance access certificate mentioned in requirement Reg_32.</p> <p>Note to this Topic in version 1.5.0: The Commission received many comments on the Pseudonym Rulebook. In response, it decided to not publish the latest version of this Rulebook on the public GitHub repository for ARF 1.4.0. For ARF version 1.5.0, the Commission decided to drop the Pseudonym Rulebook and remove all references to it.</p> <p>Moreover, pseudonyms were added to the list of topics to be discussed for ARF 2.0. These discussions will include the use cases for which Wallet Units must support pseudonyms and the way in which this support will be technically implemented. This Topic will be updated in ARF 2.0.</p> <p>HLRs</p> Index Requirement specification PA_01 A Wallet Unit SHALL be able to generate pseudonyms for its User, in compliance with the W3C WebAuthn API specification [W3C WebAuthn]."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2312-topic-12-attestation-rulebooks","title":"A.2.3.12 Topic 12 - Attestation Rulebooks","text":"<p>Short description</p> <p>Article 45e of the [European Digital Identity Regulation] sets up the legal basis for the Commission to \"where necessary, establish specifications and procedures for the catalogue of attributes and schemes for the attestation of attributes and verification procedures for qualified electronic attestations of attributes\". As described in section 5.6 of [ARF], these 'schemes for the attestation of attributes' will be described in so-called Attestation Rulebooks. A separate Rulebook will be created for each type of attestation. This Topic describes the high-level requirements for the Attestation Rulebooks that will specify the details of new types of attestations.</p> <p>Attestation Rulebooks will be written by Attribute Schema Providers, a role which can be assumed by different types of organisation. The goal of this Topic is to ensure that all Rulebooks that will be written in the future will contain the same type of information and the same level of detail, such that all attestations are interoperable.</p> <p>Attestation Rulebooks may be registered and published in a publicly accessible catalogue, as described in Topic 25.  </p> <p>HLRs</p> <p>A.  Requirements regarding attestation formats</p> Index Requirement specification ARB_01 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL specify that one or more of the following two common format(s) must be used for these attestations: - The format specified in ISO/IEC 18013-5, see [ISO18013-5]. - The format specified in \"SD-JWT-based Verifiable Credentials (SD-JWT VC)\", see [SD-JWT-VC]. ARB_01a The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHALL specify that one or more of the following three common format(s) must be used for these attestations: - The format specified in ISO/IEC 18013-5, see [ISO18013-5]. - The format specified in \"SD-JWT-based Verifiable Credentials (SD-JWT VC)\", see [SD-JWT-VC]. - The format specified in \u201cW3C Verifiable Credentials Data Model\u201d, see [W3C VCDM v1.1] or [W3C VCDM v2.0]. ARB_02 The Schema Provider for an Attestation Rulebook SHALL analyse whether it must be possible for a User to present that type of attestation when the Wallet Unit and the Relying Party are in proximity and attestations are presented without using the internet. If so, the Attestation Rulebook SHALL specify that the attestations must be issued in the ISO/IEC 18013-5-compliant mdoc format. Note: In theory, it is possible to use SD-JWT VC-compliant attestations in proximity use cases. In practice, however, the only protocol available to request and release SD-JWT VC-compliant attestations between a Wallet Unit and a Relying Party Instance is OpenID4VP. That protocol cannot be used without internet connectivity. ARB_03 The Schema Provider for an Attestation Rulebook MAY specify in the Attestation Rulebook that that type of attestation must be issued in the [SD-JWT VC]-compliant format, provided the [SD-JWT VC] specification has been approved by an EU standardisation body or by the European Digital Identity Cooperation Group established pursuant to Article 46e(1) of the [European Digital Identity Regulation]. ARB_04 If an Attestation Rulebook specifies that a type of attestation can be issued in a format compliant with [W3C VCDM v1.1] or [W3C VCDM v2.0], the Schema Provider for that Attestation Rulebook SHALL ensure the Rulebook references one or more documents specifying in detail how a Relying Party can request attributes from a such an attestation, and how a User can selectively disclose attributes from such an attestation. Moreover, these referenced documents SHALL be approved by an EU standardisation body or by the European Digital Identity Cooperation Group established pursuant to Article 46e(1) of the [European Digital Identity Regulation]. <p>B.  Requirements regarding attestation types</p> Index Requirement specification ARB_05 The Schema Provider for an Attestation Rulebook SHALL specify a value for the attestation type, which SHALL be unique within the scope of the EUDI Wallet ecosystem. Notes:In ISO/IEC 18013-5, the attestation type is called \u2018document type\u2019 and is included as a \u201cdocType\u201d key-value pair in both the mdoc request and the mdoc response. Also, a method for generating unique attestation type values is recommended.In OpenID4VP, the attestation type is included in the \u201cid\u201d property of an Input Descriptor in a Presentation Request.In [SD-JWT VC], the attestation type is called \u2018SD-JWT VC type\u2019 and is included as a \u2018vct\u2019 claim in the SD-JWT. <p>C.  Requirements regarding attestation attribute schemas</p> Index Requirement specification ARB_06 The Schema Provider for an Attestation Rulebook SHALL define all attributes that an attestation of that type may contain. This definition SHALL first describe the semantics of each attribute in an encoding-independent manner and SHALL subsequently for each attribute specify an ISO/IEC 18013-5-compliant format, an SD-JWT VC-compliant format, or both, as needed given the choices made according to ARB_01 - ARB_04. ARB_06a For ISO/IEC 1803-5-compliant attestations, the Attestation Rulebook SHALL define each attribute within an attribute namespace. An attribute namespace SHALL fully define the identifier, the syntax, and the semantics of each attribute within that namespace. An attribute namespace SHALL have an identifier that is unique within the scope of the EUDI Wallet ecosystem, and each attribute identifier SHALL be unique within that namespace. Note: In ISO/IEC 18013-5, namespaces are discussed and a method for generating unique namespace identifiers is recommended. ARB_06b For [SD-JWT VC]-compliant attestations, the Schema Provider for the Attestation Rulebook SHALL ensure that each claim name is either included in the IANA registry for JWT claims, or is a Public Name as defined in RFC 7519. Note: [SD-JWT VC] does not discuss how to avoid conflicting claim names. Since SD-JWTs are a special kind of JWTs, the methods specified in RFC 7519 are applicable. ARB_07 When determining the attributes to be included in a new attestation type, the Schema Provider for the applicable Attestation Rulebook SHOULD consider referring to attributes that are already included in the catalogue specified in Topic 25 + 26, rather than unnecessarily re-defining all attributes within a new namespace. ARB_08 The Schema Provider for an Attestation Rulebook SHOULD, when specifying a new attribute, take into consideration existing conventions for attribute identifier values and attribute syntaxes. These conventions MAY depend on the format of the attestation, i.e., CBOR for ISO/IEC 18013-5-compliant attestations or JSON for SD-JWT VC-compliant attestations. ARB_09 The Schema Provider for an Attestation Rulebook SHALL specify, for each attribute in the attestation, whether the presence of that attribute is mandatory, optional, or conditional. ARB_10 The Schema Provider for an Attestation Rulebook for an ISO/IEC 18013-5 compliant attestation MAY define a domestic namespace to specify attributes that are specific to that Rulebook and are not included in the applicable EU-wide or sectoral namespace. All requirements for namespaces in this Topic also apply for domestic namespaces ARB_11 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL include in the Rulebook an attribute as meant in Annex V point a) and Annex VII point a) of the [European Digital Identity Regulation]. This  attribute SHALL reference the technical specification meant in ARB_25. ARB_12 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHOULD include an attribute in the Rulebook indicating that the attestation in an EAA.\u00a0This attribute SHALL reference the technical specification meant in ARB_25. ARB_13 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA SHALL include in the Rulebook one or more attributes or metadata representing the set of data meant in Annex V point b) of the [European Digital Identity Regulation]. ARB_14 The Schema Provider for an attestation Rulebook describing a type of attestation that is a PuB-EAA SHALL include in the Rulebook one or more attributes or metadata representing the set of data meant in Annex VII point b) of the [European Digital Identity Regulation]. ARB_15 The Schema Provider for an Attestation Rulebook describing  a type of attestation that is a non-qualified EAA SHOULD include in the Rulebook one or more attributes or metadata representing the set of data meant in Annex V point b) of the [European Digital Identity Regulation]. ARB_16 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL  include in the Rulebook one or more attributes representing the set of data meant in Annex V point c) or Annex VII point c) of the [European Digital Identity Regulation]. ARB_17 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHOULD include in the Rulebook one or more attributes representing the set of data meant in Annex V point c) of the [European Digital Identity Regulation]. ARB_18 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL  include in the Rulebook one or more attributes or metadata representing the set of data meant in Annex V point e) or Annex VII point e) of the [European Digital Identity Regulation]. ARB_19 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHOULD include in the Rulebook one or more attributes representing the set of data meant in Annex V point e) of the [European Digital Identity Regulation]. ARB_20 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL include in the Rulebook one or more attributes or metadata representing the location meant in Annex V point h) or Annex VII point h) of the [European Digital Identity Regulation]. For a QEAA, this location SHALL indicate at least the URL at which a machine-readable version of the  trust anchor to be used for verifying the QEAA can be found or looked up. For a Pub-EAA, this location SHALL indicate at least the URL at which a machine-readable version of the qualified certificate that signed the PuB-EAA can be found or looked up. ARB_21 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHOULD include in the Rulebook one or more attributes or metadata representing the location at which a machine-readable version of the trust anchor to be used for verifying the EAA can be found or looked up.Note: What this location indicates precisely is dependent on the nature of the mechanism used for distributing trust anchors; see requirement ARB_26. <p>D.  Miscellaneous requirements</p> Index Requirement specification ARB_22 The Schema Provider for an Attestation Rulebook SHALL specify all technical details necessary to ensure interoperability, security, and privacy (including, possibly, an embedded disclosure policy as defined in Topic 43), of that attestation. Note: An Attestation Rulebook may also specify requirements regarding how the Wallet Unit must display the attestation and the attributes in it to the User. ARB_23 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL specify which of the revocation mechanisms specified in Topic 7 SHALL be supported by that attestation. ARB_24 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHALL specify whether that type of EAA must be revocable. If an EAA type must be revocable, the relevant Rulebook SHALL determine which of the revocation mechanisms specified in Topic 7 SHALL be supported by that attestation. ARB_25 The Commission SHALL take measures to ensure that the following information is included in a technical specification: - The identifier of the attribute containing the indication meant in Annex V point a) and Annex VII point a). - The syntax and semantics of this attribute in case the attestation is a QEAA, in case it is PuB-EAA, and in case it is a non-qualified EAA. ARB_26 The Schema Provider for an Attestation Rulebook describing a type of attestation that is an non-qualified EAA SHOULD define in the Rulebook: - mechanisms allowing a Wallet Unit to verify that the EAA Provider is authorised or registered to issue this type of EAA. - mechanisms allowing a Relying Party to obtain, in a trustworthy manner, the trust anchor(s) of the EAA Providers issuing this type of EAA. ARB_27 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA, PuB-EAA, or non-qualified EAA SHOULD specify in the Rulebook whether a Relying Party receiving the attestation must request and verify a PID. Note: Relying Parties can only do so in a trustworthy manner if there is a proof of association between the attestation and the PID, in accordance with the requirements in Topic 18."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2313-topic-13-developing-a-wallet-unit-architecture-based-on-secure-element","title":"A.2.3.13 Topic 13 - Developing a Wallet Unit architecture based on Secure Element","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2314-topic-14-developing-a-wallet-unit-architecture-based-on-external-token","title":"A.2.3.14 Topic 14 - Developing a Wallet Unit architecture based on External Token","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2315-topic-15-developing-a-wallet-unit-architecture-based-on-remote-hsm","title":"A.2.3.15 Topic 15 - Developing a Wallet Unit architecture based on Remote HSM","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2316-topic-16-signing-documents-with-a-wallet-unit","title":"A.2.3.16 Topic 16 - Signing documents with a Wallet Unit","text":"<p>Short description</p> <p>A Wallet Unit SHALL enable its User to create qualified electronic signatures or seals. This goal can be reached by using signature or seal creation capabilities of the Wallet Unit as a part of a local QSCD, or by using a remote QSCD managed by a QTSP.</p> <p>This Topic contains high-level requirements related to the creation of Qualified Electronic Signatures using a Wallet Unit.</p> <p>HLRs</p> <p>A.  Requirement for Wallet Providers</p> Index Requirement specification QES_01 Wallet Providers SHALL ensure that each User has the possibility to receive a qualified certificate for Qualified Electronic Signatures, bound to a QSCD, that is either local, external, or remotely managed in relation to the Wallet Instance. QES_02 Wallet Providers SHALL ensure that each User who is a natural person has, at least for non-professional purposes, free-of-charge access to a Signature Creation Application which allows the creation of free-of-charge Qualified Electronic Signatures using the certificates referred to in QES_01.  Wallet Providers SHALL ensure that: - The Signature Creation Application SHALL, as a minimum, be capable of signing or sealing User-provided data and Relying Party-provided data. - The Signature Creation Application SHALL be implemented as part of a Wallet Solution or external to it (by providers of trust services or by Relying Parties). - The Signature Creation Application SHALL be able to generate signatures or seals in formats compliant with at least the mandatory formats referred to in QES_08. *Notes: - Signature Creation Application (SCA): see definition in the ETSI TS 119 432 standard. -If the SCA is external to the Wallet Solution, it may be for example a separate mobile application, or be hosted remotely, for instance by the QTSP or by a Relying Party. QES_03 For the use of the qualified certificate referred to in QES_01, Wallet Providers SHALL ensure that a Wallet Unit implements secure authentication of the User, as well as signature or seal invocation capabilities, as a part of a local, external or remote QSCD. QES_04 Wallet Providers SHALL enable their Wallet Units to interface with QSCDs using protocols and interfaces necessary for the implementation of secure User authentication and signature or seal functionality. Note: In a Relying Party-centric flow, the remote QTSP will likely be selected by the Relying Party, which implies the QSCD is managed by the remote QTSP. In a Wallet Unit-driven flow, the User should be able to choose the QSCD. QES_05 Wallet Providers SHALL enable their Wallet Units to be used for User enrolment to a remote QES Provider (i.e., a QTSP offering remote QES), except where the Wallet Unit interfaces with local or external QSCDs. QES_06 Wallet Providers SHALL ensure that their Wallet Solution supports at least one of the following options for remote QES signature creation: - remote QES creation through secure authentication to a QTSP signature web portal, - remote QES creation channelled by the Wallet Unit, - remote QES creation channelled by a Relying Party. QES_07 Wallet Providers SHALL ensure that, where a Signature Creation Application relies on a remote Qualified Signature Creation Device and where it is integrated into a Wallet Instance, it supports the Cloud Signature Consortium API Specification v.2. QES_08 Wallet Providers SHALL ensure that their Wallet Units are able to create signatures or seals in accordance with the mandatory PAdES format as specified in ETSI EN 319 142-1 V1.1.1 (2016-04). In addition, Wallet Providers SHOULD ensure that their Wallet Units are able to create signatures or seals in accordance with the following formats: - XAdES as specified in ETSI EN 319 132-1 V1.2.1 (2022-02), - JAdES as specified in ETSI TS 119 182-1 V1.2.1 (2024-07), - CAdES as specified in ETSI EN 3191 22-1 V1.3.1 (2023-06), and - ASiC as specified in ETSI EN 319 162-1 V1.1.1 (2016-04) and ETSI EN 319 162-2 V1.1.1 (2016-04). QES_09 Empty QES_10 Wallet Providers SHALL ensure that, where the Signature Creation Application is implemented as part of the Wallet Unit, the Wallet Unit presents the document or data to be signed or sealed to the User. QES_11 Wallet Providers SHALL ensure that, where the Signature Creation Application is implemented as part of the Wallet Unit, a Wallet Unit computes the hash or digest of the document or data to be signed through a Signature Create Application component. QES_12 Wallet Providers SHALL ensure that a Wallet Unit is able to create the signature value of the document or data to be signed either using a local or a remote signing application. Note: a local signing application is on-device. It may either be embedded in the Wallet Unit or be an external application. QES_13 Wallet Providers SHALL ensure that a Wallet Unit provides a log of transactions related to qualified electronic signatures generated by or through the Wallet Unit, allowing the User to view the history of previously signed data or documents, according to the requirements in Topic 19. Note: If the signature is generated by a remote Signature Creation Application, the Wallet is at minimum used to authenticate the User to the remote QTSP and to obtain the User's consent for the usage of the private signing key. The logs then record information about these processes. QES_14 Wallet Providers SHALL ensure that the User will be able to explicitly authorise  the creation of a qualified electronic signature or seal through their Wallet Unit. QES_15 Wallet Providers SHALL ensure that a Wallet Unit can verify the registration of Qualified Trust Service Providers providing signatures services (in remote signature creation scenarios). QES_16 Wallet Providers SHOULD ensure that a Wallet Unit supports multiple-signing scenarios where multiple signatories are required to sign the same document or data. QES_17 Wallet Providers SHALL ensure that Wallet Units provide a signature creation confirmation upon the creation of a qualified electronic signature, informing the User about the outcome of the signature creation process. Note: See also QES_17a. QES_17a If the Signature Creation Application is external to the Wallet Unit, after the User authorises the usage of the private signing key, the Signature Creation Application SHALL return the outcome of the signature creation process to the Wallet Unit. QES_18 Wallet Providers SHALL configure at least one default qualified signing service in the Wallet Unit. QES_19 Empty QES_20 Empty QES_21 Empty QES_22 Empty <p>B.  Requirements for QTSPs</p> Index Requirement specification QES_23 QTSPs providing the remote QES part of a Wallet Solution SHALL support: 1. ETSI TS 119 431-1 - Electronic Signatures and Infrastructures (ESI); Policy and security requirements for trust service providers; Part 1: TSP service components operating a remote QSCD / SCDev, 2. ETSI TS 119 431-2 - Electronic Signatures and Infrastructures (ESI); Policy and security requirements for trust service providers; Part 2: TSP service components supporting AdES digital signature creation, 3. ETSI TS 119 432 - Electronic Signatures and Infrastructures (ESI); Protocols for remote digital signature creation. Wallet Providers and QTSPs providing the remote QES part of a Wallet Solution SHALL comply with Sole Control Assurance Level (SCAL) 2 as defined in CEN EN 419 241-1 (Trustworthy Systems Supporting Server Signing - Part 1: General System Security Requirements). QES_24 Empty <p>C.  Requirements for the Commission</p> Index Requirement specification QES_25 Empty QES_26 Empty"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2317-topic-17-identity-matching","title":"A.2.3.17 Topic 17 - Identity matching","text":"<p>Short description</p> <p>Users would like to use their PID in their Wallet Unit to access their existing online account(s), even if their PID attribute values are not exactly the same as those in their account(s). Users regularly need to log in to cross-border services offered by public sector bodies. Identity matching enables them to use their Wallet Unit to do so.</p> <p>HLRs</p> <p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2318-topic-18-combined-presentations-of-attributes","title":"A.2.3.18 Topic 18 - Combined presentations of attributes","text":"<p>Short description</p> <p>This Topic discusses the combined presentation of attributes by a Wallet Instance to a Relying Party. 'Combined presentation' here refers to a transaction in which the Relying Party requests attributes of the same User from multiple attestations (PID and/or (Q)EAAs) in a single request and receives those attributes in a single response. These attestations can have been provided to the Wallet Unit by one or by multiple PID Providers or Attestation Providers.</p> <p>This Topic answers the following questions:</p> <ul> <li>How can a Relying Party request for a combined presentation of attributes?</li> <li>How can a Wallet Unit receiving such a request present the attributes in a combined manner?</li> <li>How can the Relying Party verify the authenticity of all released attributes in a combined response?</li> <li>How can the Relying Party verify whether all released attributes were issued to the same User?</li> </ul> <p>Regarding the last question:</p> <ul> <li>The subject may be either a natural person or a legal person.</li> <li>However, use cases such as delegation or legal representation, where     the Relying Party may request attributes that are originally part of     multiple distinct attestations that were not issued to the same User,     are not combined presentations and are out of scope of this Topic.</li> </ul> <p>Note to version 1.5.0: This Topic refers to a 'proof of association' repeatedly. For this concept, see Topic 9. This concept will be further discussed with Member States. As a result, the requirements mentioning proof of association may change in a future version of this document.</p> <p>HLRs</p> <p>A.  Functional requirements for ecosystem components</p> Index Requirement specification ACP_01 Wallet Units SHALL support the features in [ISO18013-5] and/or [OpenID4VP] (as applicable) that allow requesting and releasing attributes from multiple attestations in a single request and response. ACP_02 Relying Parties SHOULD support the features in [ISO18013-5] and/or [OpenID4VP] (as applicable) that allow requesting and releasing attributes from multiple attestations in a single request and response. ACP_03 Empty ACP_04 If a Wallet Unit determines it must release multiple attestations to a Relying Party in a combined presentation of attributes, it SHALL request a proof of association between the public keys of these attestations from the WSCA. ACP_05 If (as a result of ACP_04), the Wallet Unit receives a proof of association from the WSCA, it SHALL include this proof in the response message containing the combined presentation of attributes and send it to the Relying Party. ACP_06 If a Relying Party receives a combined presentation of attributes including a proof of association, it SHOULD verify this proof to validate that the attestations in this presentation were issued to the same User. <p>B.  Process requirements</p> Index Requirement specification ACP_07 During issuance of a (Q)EAA, an Attestation Provider SHALL be able to request the association of the new (Q)EAA to a PID or another (Q)EAA already existing on the Wallet Unit, provided that the Attestation Provider has verified during the issuance process that the new (Q)EAA indeed belongs to the User of that existing PID or (Q)EAA. Note: Also see requirement WUA_13 in [Epic 09]. ACP_08 When receiving a combined presentation of attributes, a Relying Party SHOULD NOT refuse any attestation solely because a proof of association between these attestations is absent. <p>C.  Miscellaneous</p> Index Requirement specification ACP_09 The common [ISO18013-5] and [OpenID4VP] protocols, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a Wallet Unit to transfer a proof of association to a Relying Party. The Commission SHALL take measures to ensure that this is the case."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2319-topic-19-user-navigation-requirements-dashboard-logs-for-transparency","title":"A.2.3.19 Topic 19 - User navigation requirements (Dashboard logs for transparency)","text":"<p>Short description</p> <p>In this use case, the User is accessing a dashboard of the Wallet Unit, which provides a record of all transactions executed through the Wallet Unit. The User is concerned about data privacy, and thus the function of a dashboard ensures a higher degree of transparency, privacy and control of the User over their personal data.</p> <p>This Topic lists high-level requirements related to the functions of such a dashboard.\u00a0\u00a0</p> <p>HLRs</p> Index Requirement specification DASH_01 A Wallet Provider SHALL enable a User to access a dashboard functionality in their Wallet Unit. DASH_02 The Wallet Unit SHALL log all transactions executed through the Wallet Unit, including any transactions that were not completed successfully. This log SHALL include all types of transaction executed through the Wallet Unit: presentation transactions,signature creation transactions (see Topic 16),attribute deletion requests sent to a Relying Party (see Topic 48),complaints lodged with a Data Protection Authority (see Topic 50). Note: For the data to be logged for an attribute deletion request or a complaint, see Topic 48 and Topic 50, respectively. DASH_02a The Wallet Unit SHALL retain transactions in the log at least for the time period specified in applicable legislation. If the Wallet Unit must delete transactions from the log, for instance because of size limitations, the Wallet Unit SHALL notify the User via the dashboard before doing so and SHALL instruct the User how to export the transactions that are about to be deleted; see DASH_07. DASH_02b The dashboard SHALL include a functionality to display to the User an overview of all transactions in the log. DASH_03 For a presentation transaction executed through the Wallet Unit, the dashboard SHALL display to the User at least: the date and time of the transaction,the corresponding Relying Party or requesting Wallet Unit,the document type(s) requested and/or presented the identifier(s) of the attribute(s) requested and/or presented. DASH_04 For a signature creation transaction executed through the Wallet Unit, the dashboard SHALL display to the User at least: the date and time of the transaction, the document or data signed (where possible) DASH_05 Empty DASH_06 The Wallet Provider SHALL ensure the integrity of all transactions included in the log. DASH_06a Via the dashboard, the Wallet Unit SHALL enable the User to delete any transaction in the log. The Wallet Unit SHALL ensure that no other party can delete transactions from the log, except possibly for the reason mentioned in DASH_02a. DASH_07 The dashboard SHALL allow the User to export the details of one or more transactions in the log to a file. DASH_08 For a natural-person User, a Wallet Instance SHALL provide a User interface. DASH_09 The User interface referred to in DASH_08 SHALL display an EU Digital Identity Wallet Trust Mark complying with technical specifications. Note: The Commission will develop technical specifications for this Trust Mark. DASH_10 Empty DASH_11 A Wallet Unit issued to a legal person SHALL allow the legal person to interact with the Wallet Unit in the appropriate interface provided by the Wallet Provider. DASH_12 The User interface referred to in DASH_08 SHALL enable the User, for each presentation transaction in the dashboard, to easily request the Relying Party to delete any or all attributes presented to it in that transaction, or to lodge a complaint about that particular transaction to a DPA."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2320-topic-20-strong-user-customer-authentication-in-the-context-of-electronic-payments","title":"A.2.3.20 Topic 20 - Strong User (Customer) authentication in the context of electronic payments","text":"<p>Short description</p> <p>This topic deals with the requirement for Strong User (Customer) Authentication (SCA) in the context of authenticating a User as part of electronic payments.\u00a0\u00a0</p> <p>Users would like to be able to authenticate themselves during online payments securely and conveniently using their Wallet Units, so that they can enjoy a seamless and protected shopping/ payment experience.\u00a0\u00a0</p> <p>The goal is to implement Strong Customer Authentication (SCA) for electronic payments, ensuring a high level of security and compliance with Article 97 of the PSD2 (and with the future PSD3/PSR).</p> <p>Commission Delegated Regulation (EU) 2018/389 lays down the requirements for strong customer authentication (SCA), which needs to be complied with when accessing a payment account online and for initiating electronic payments, or carrying out any action through a remote channel which may imply a risk of payment fraud or other abuses. The use of the wallet for SCA will be in full compliance with those requirements.\u00a0\u00a0</p> <p>In the future, a Wallet Unit could also be used for payments with Central Bank Digital Currencies.\u00a0\u00a0</p> <p>HLRs</p> <p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2321-topic-21-diplomas-within-the-eudi-wallet-ecosystem","title":"A.2.3.21 Topic 21 - Diplomas within the EUDI Wallet ecosystem","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2322-topic-22-digital-travel-credentials-within-the-eudi-wallet-ecosystem","title":"A.2.3.22 Topic 22 - Digital Travel Credentials within the EUDI Wallet ecosystem","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2323-topic-23-pid-issuance-and-qeaa-issuance","title":"A.2.3.23 Topic 23 - PID issuance and (Q)EAA issuance","text":"<p>Short description</p> <p>See Topic 10.</p> <p>HLRs</p> <p>See Topic 10.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2324-topic-24-user-identification-in-proximity-scenarios","title":"A.2.3.24 Topic 24 - User identification in proximity scenarios","text":"<p>Short description</p> <p>In this use case, the User is using their Wallet Unit for identification purposes in proximity scenarios. As explained in Section 4.4.1 of [ARF], in a proximity flow, the User and their Wallet Instance are physically near the Relying Part Instance. PIDs and attestations are exchanged using proximity technology (e.g., NFC, Bluetooth) between the Wallet Unit and the Relying Party Instance. Note that this definition does not imply that a Wallet Unit and a Relying Party have to use proximity technologies if they are close together. They are free to use a remote flow (acording to Topic 1). However, there may be situations where either the Wallet Unit or the Relying Party Instance does not have an internet connection. In such cases, they must be able to use a proximity flow, if they are close together.</p> <p>The User is concerned about sharing personal data in proximity, while the User's objectives include identifying themselves to services requiring User identification and maintaining control over their personal data sharing.</p> <p>This topic lists high-level requirements related to User identification in proximity use cases where Users utilise their Wallet Units.</p> <p>HLRs</p> Index Requirement specification ProxId_01 For enable identification using proximity flows, Wallet Units and Relying Party Instances SHALL support device retrieval as specified in ISO/IEC 18013-5 for requesting and presenting PID, attestation, or WUA attributes. ProxId_02 Wallet Solutions, PID Providers, Attestation Providers, Wallet Providers, and Relying Parties SHALL NOT support server retrieval as specified in ISO/IEC 18013-5 for requesting and presenting PID, attestation, or WUA attributes. Note: Using server retrieval, a Relying Party would request User attributes directly from a PID Provider or Attestation Provider, after having received an authentication and/or authorisation token from the User's Wallet Unit. ProxId_03 A Wallet Unit SHALL present the presentation request and the identity of the Relying Party to the User when processing the request. ProxId_04 A Wallet Unit SHALL request its User to approve the presentation of attributes from their Wallet Unit for proximity identification before presenting them to the Relying Party. ProxId_05 A Wallet Unit SHALL transmit the requested User attributes to the requesting Relying Party Instance securely in accordance with ISO/IEC 18013-5 for proximity flows. ProxId_06 Empty"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2325-topic-25-unified-definition-and-controlled-vocabularies-for-attributes","title":"A.2.3.25 Topic 25 - Unified definition and controlled vocabularies for attributes","text":"<p>Short description</p> <p>Topic 12 that describes the high-level requirements (HLR) for the minimal requirements Rulebooks that will specify the details of new types of attestations, including QEAAs, PuB-EAAs, and non-qualified EAAs, has already touched and defined high-level requirements regarding the attestation rulebook catalogue.</p> <p>The following main concepts were defined in Topic 12 and developed in the current version of this Topic:</p> <ul> <li>Attestation Rulebooks for QEAAs and PuB-EAAs used within the EUDI Wallet ecosystem may be registered and published in a publicly accessible catalogue.</li> <li>The Attestation Rulebook catalogue may also include Attestation Rulebooks for non-qualified EAAs.</li> <li>The Commission will take measures to establish and maintain the Attestation Rulebooks catalogue.</li> <li>The Attestation Rulebooks catalogue will enable mainly Relying Parties, but also other actors in the EUDI Wallet ecosystem, to know which attestation types exist, and what is the identifier, syntax, and semantics of each attribute in a type of attestation.</li> </ul> <p>The following points are emphasised:</p> <ul> <li>Registration of an Attestation Rulebook in the attestation catalogue is not mandatory.</li> <li>Registration in the Attestation Rulebook catalogue does not create any obligation of acceptance of the attestation by any Relying Party, nor does it necessarily imply cross-border recognition of that attestation.</li> <li>The Attestation Rulebooks catalogue can be hosted in the same environment as the catalogue of attributes.</li> </ul> <p>HLRs</p> Index Requirement specification CAT_01 The Commission SHALL establish a catalogue of attributes used within the EUDI Wallet ecosystem. Note: The catalogue of attributes does not need to be a separate catalogue, but could be combined with the Attestation Rulebooks catalogue mentioned in CAT_05. CAT_01a The Commission SHALL enable any entity to request the registration in the catalogue of one or more attribute(s) of an attestation used within the EUDI Wallet ecosystem. CAT_01b The Schema Provider for an Attestation Rulebook that is a QEAA or PuB-EAA SHOULD request the registration of all attributes in that QEAA or PuB-EAA in the catalogue of attributes. The Schema Provider for an Attestation Rulebook that is a non-qualified EEA MAY request the registration of the attributes in that EAA in the catalogue. CAT_02 Empty CAT_03 The Commission SHALL make the catalogue of attributes publicly available and machine-readable. Note: The requirement for availability implies setting up the required means for high availability and avoiding a single point of failure. CAT_03b The Commission SHALL consider the following semantic artifacts for inclusion in the catalogue of attributes: Representation Powers and Mandates (RPaM) OntologySEMPER | DE4ASEMIC Core VocabulariesIANA Registry for JSON Web Token Claims (for JSON-based attributes only)ISO/IEC 23220-2 (for CBOR-based attributes only) CAT_04 The Commission SHALL make publicly available the existence and maintenance of the catalogue of attributes mentioned in CAT_01, including processes to propose the registration to public and private parties, allowing to register attributes, and conditions for updating and/or removing attributes. These processes SHALL include archiving and logging changes of the history of the catalogue of attributes in an appropriate way, including versioning. Note: There are layers on top of the attributes that need maintenance as well. So, maintenance in this case is more generic and encompasses more than just the attribute itself."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2326-topic-26-catalogue-of-attestations","title":"A.2.3.26 Topic 26 - Catalogue of attestations","text":"<p>Short description</p> <p>See Topic 25.</p> <p>HLRs</p> Index Requirement specification CAT_05 The Commission SHALL establish a catalogue of Attestation Rulebooks used within the EUDI Wallet ecosystem. Note: For Attestation Rulebooks, see Topic 12. CAT_05a The Commission SHALL enable any entity to register an Attestation Rulebook used within the EUDI Wallet ecosystem. CAT_05b The Schema Provider for an Attestation Rulebook that is a QEAA or PuB-EAA SHOULD register its Rulebook in the catalogue of Attestation Rulebooks. The Schema Provider for an Attestation Rulebook that is a non-qualified EEA MAY register its Rulebook. CAT_06 The Commission SHALL make the catalogue publicly available and machine-readable, by hosting the catalogue, or parts of it, including an e-discovery mechanism and/or by referencing to other catalogues. Note: The requirement for availability implies setting up the required means for high availability and avoiding a single point of failure. CAT_07 The Commission SHALL enable a self-registration process of Attestation Rulebooks, without pre-approval by the registry, for both public and private entities. CAT_08 The Commission SHALL specify and make publicly available three (3) Rulebooks for the following generic types of Attestations -- QEAA, PuB-EAA, and non-qualified EAA. CAT_09 The Commission SHALL make publicly available the existence and maintenance of the Attestation Rulebooks catalogue mentioned in CAT_01, including processes to propose the registration to public and private parties, allowing to register an Attestation Rulebook, and conditions for updating and/or removing Attestation Rulebooks. These processes SHALL include archiving and logging changes of the history of the Attestation Rulebooks catalogue in an appropriate way, including versioning. CAT_10 The body registering an Attestation Rulebook SHALL include a unique reference to this body and the way to contact it, or how to find information for doing so. Notes: Topic 12 describes an option for Member State-specific (i.e., domestic) Rulebooks, extending a EU-wide Rulebook. Rulebooks MAY be shared between interested parties in an out-of-band manner. CAT_11 Empty"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2327-topic-27-registration-of-pid-providers-providers-of-qeaas-pub-eaas-and-non-qualified-eaas-and-relying-parties","title":"A.2.3.27 Topic 27 - Registration of PID Providers, Providers of QEAAs, PuB-EAAs, and (non-qualified) EAAs, and Relying Parties","text":"<p>Short description</p> <p>PID Providers, QEAA Providers, PuB-EAA Providers, (non-qualified) EAA Providers and Relying Parties SHALL register with a Registrar in their Member State. The main goal of the registration process is for the entity to receive an access certificate that Wallet Units can use to authenticate them.</p> <p>This Topic specifies high-level requirements related to the registration of the abovementioned entities.</p> <p>HLRs</p> <p>A.  General requirements for Member State registration processes</p> Index Requirement specification Reg_01 Member States SHALL provide processes and mechanisms for PID Providers, QEAA Providers, PuB-EAA Providers, (non-qualified) EAA Providers, and Relying Parties to register in a registry. Note: Member States may choose to implement a single registry for all these roles, or a separate registry for each of these roles. Reg_02 Member States SHALL make publicly available all necessary details and documentation about the registration processes for their registry. Reg_03 Member States SHALL publish the registry entries online, in a sealed or signed machine-readable common format suitable for automated processing, according to the [European Digital Identity Regulation] Article 5b 5, for the purpose of transparency to Users and other stakeholders. Reg_04 Member States SHALL make the registry available online, in a common human-readable format. Reg_05 The Commission SHALL establish a technical specification for the common formats mentioned in Reg_03 and Reg_04. Reg_06 The Commission SHALL provide specifications for a common API for retrieving registry entries from the Member States registries per Reg_03, defining the minimum requirements for interoperability. Note: Requirements for this API are defined in Reg_08 and Reg_09. Reg_07 The Commission SHALL provide specifications for a common user interface for accessing the Member State registries per Reg_04. Note: Requirements for this user interface are defined in Reg_08 and Reg_09. Reg_08 The API mentioned in Reg_06 and the user interface mentioned in Reg_07 SHALL use a secure channel protecting the authenticity and integrity of the information in the registry during transport. Reg_09 The API mentioned in Reg_06 and the user interface mentioned in Reg_07 SHALL NOT require authentication or prior registration and authorisation of any entity wishing to retrieve the information in the registry. <p>B.  General requirements for the issuance of access certificates</p> Index Requirement specification Reg_10 A Member State SHALL ensure that an Access Certificate Authority notified according to [Topic 31] issues an access certificate to all PID Providers, QEAA Providers, PuB-EAA Providers, (non-qualified) EAA Providers, and Relying Parties registered in one of the Member State's registries. Reg_11 A Member State SHALL ensure that the issuance process of access certificates by their notified Access Certificate Authority(s) complies with a common Certificate Policy for Access Certificate Authoritys. Reg_12 The Commission SHALL provide technical specifications establishing the common Access Certificate Authority Certificate Policy mentioned in Reg_11. Reg_13 The common Certificate Policy mentioned in Reg_12 SHALL require that an Access Certificate Authority logs all issued certificates for Certificate Transparency (CT).Note added to ARF 1.5.0: This requirement is still under discussion and might be changed or removed in a future version of this ARF. Reg_14 The common Certificate Policy mentioned in Reg_12 SHALL require that an Access Certificate Authority provides one or more method(s) to revoke the access certificates it issued. Reg_15 The common Certificate Policy mentioned in Reg_12 SHALL include a policy for revocation, which SHALL require that an Access Certificate Authority revokes an access certificate at least when: the certificate subject which is a Relying Party is de-registered by the respective Registrar,the certificate subject which is a PID Provider, QEAA Provider, PuB-EAA Provider, or (non-qualified) EAA Provider is withdrawn or suspended by the respective Registrar, on request of the certificate subject, or on request of a competent national authority. Reg_16 The common Certificate Policy mentioned in Reg_12 SHALL specify the profile of access certificates in detail. Reg_17 The common Certificate Policy mentioned in Reg_12 SHALL require that an access certificate indicates whether its subject is a PID Provider, a QEAA Provider, a PuB-EAA Provider, a (non-qualified) EAA Provider, or a Relying Party Instance. Reg_18 The common Certificate Policy mentioned in Reg_12 SHALL define the minimum change history information to be stored for resolving possible disputes regarding registration. <p>C.  Requirements for the registration of PID Providers</p> Index Requirement specification Reg_19 A Member State SHALL approve a PID Provider according to a well-defined policy before including it in its PID Provider Registry. To that end, a Member State SHALL define specific vetting processes and rules of acceptance for inclusion of PID Providers in its Registry. Reg_20 A Member State SHALL identify PID Providers at a level of confidence proportionate to the risk arising from the potential harm a fraudulent PID Provider could cause to Users and other stakeholders in the EUDI Wallet ecosystem. Reg_20a A Registrar SHALL provide a method to suspend or withdraw a registered PID Provider. Reg_20b A Registrar SHALL have a policy for the suspension or withdrawal of a registered PID Provider, which SHALL specify that a PID Provider is suspended or withdrawn at least on request of the PID Provider or of a competent national authority. <p>D.  Requirements for the registration of Attestation Providers</p> Index Requirement specification Reg_21 A Member State SHALL approve an Attestation Provider according to a well-defined policy before including it in its Attestation Provider Registry. To that end, a Member State SHALL define specific vetting processes and rules of acceptance for inclusion of Attestation Providers in its Registry. These processes and rules SHOULD consider any relevant differences between QEAA Providers, PuB-EAA Providers and (non-qualified) EAA Providers. Reg_22 A Member State SHALL identify Attestation Providers (i.e., QEAA Providers, PuB-EAA Providers and non-qualified EAA Providers) at a level of confidence proportionate to the risk arising from the potential harm a fraudulent Attestation Provider could cause to Users and other stakeholders in the EUDI Wallet ecosystem. Reg_22a A Registrar SHALL provide a method to suspend or withdraw a registered Attestation Provider. Reg_22b A Registrar SHALL have a policy for the suspension or withdrawal of a registered Attestation Provider, which SHALL specify that an Attestation Provider is suspended or withdrawn at least on request of the PID Provider or of a competent national authority. <p>E.  Requirements for the registration of Relying Parties</p> Index Requirement specification Reg_23 The Commission SHALL establish a technical specification for a common set of Relying Party information to be registered in Member State registries. This set SHALL include at least the information defined in [European Digital Identity Regulation] article 5b 2 \u00a9. Reg_24 A Member State SHALL enable a Relying Party to register remotely, using an API or user interface. Reg_25 A Member State SHALL identify a Relying Party at a level of confidence proportionate to the risk arising from the potential harm a fraudulent Relying Party could cause to Users and other stakeholders in the EUDI Wallet ecosystem. Reg_26 A Member State SHALL enable a Relying Party to update the information registered on it using a process comparable to the original registration process, and using the API or user interface mentioned in Reg_24. Reg_27 Relying Parties SHALL make any updates necessary to ensure the continued correctness of the registered information without undue delay. Reg_28 A Member State's Registry SHALL log all changes made on the information regarding a Relying Party, including at least initial registration, updates, deletion of information, and suspension or withdrawal. Reg_29 A Registrar SHALL have a policy for the withdrawal of a registered Relying Party, which SHALL specify that a Relying Party is withdrawn at least on request of the Relying Party or of a competent national authority. Reg_30 Empty <p>F.  Requirements for the issuance of Relying Party Instance access certificates</p> Index Requirement specification Reg_31 The common Certificate Policy mentioned in Reg_12 SHALL require that a Relying Party Instance access certificate contains a name for the Relying Party, in a format suitable for presenting to a User. Note: A Wallet Unit needs such a name when requesting User approval according to [Topic 6]. Reg_32 The common Certificate Policy mentioned in Reg_12 SHALL require that a Relying Party Instance access certificate contains an EU-wide unique identifier for the Relying Party, and SHALL specify a method for deriving such identifiers. Notes: - The Wallet Instance needs such an identifier at least to lodge a complaint of suspicious Relying Party presentation requests to a data protection authority according to Topic 50. - The EU-wide unique identifier could, for example, be a composition of a unique identifier of the registrar, defined in the policy, and a unique identifier for the Relying Party allocated by this registrar. - This Relying Party identifier is identical in all Relying Party Instance access certificates issued to a given Relying Party."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2328-topic-28-wallet-unit-for-legal-persons","title":"A.2.3.28 Topic 28 - Wallet Unit for legal persons","text":"<p>Note to this Topic in version 1.5.0: Legal-person PIDs and Wallet Units for legal persons were added to the list of topics to be discussed with Member States in the future. In ARF 1.5.0., no changes were made to this Topic.</p> <p>Short description</p> <p>This topic is focused on identifying high-level requirements for a legal-person Wallet Unit. All core capabilities of a Wallet Unit for a natural person are available for a legal person. There are some differences between a natural and legal person that accordingly leads to different requirements for issuing legal-person PIDs and the Wallet Units containing legal-person PIDs.</p> <p>Notes:</p> <ul> <li>A legal-person PID is issued under an eID scheme.</li> <li>A legal-person PID is described in a legal-person PID Rulebook,     which is different from the natural-person PID Rulebook in [PID     Rulebook]. A legal-person PID has a different attestation type than     a natural-person PID, and also contains different attributes. For     example, date of birth or age are not relevant information for legal     persons. Specifying a different Rulebook for legal-person PIDs     allows Relying Parties and other Wallet Units to request     these attributes. \u00a0</li> <li>A legal-person Wallet Solution may be implemented in the same     manner as a natural-person Wallet Solution, meaning chiefly that it     is implemented on a mobile device operated by a single User, who is     a natural person. However, a legal-person Wallet Solution may     also be implemented as a server-based (web-based) application. In     the latter case, a Wallet Unit can be used either by one or more     natural persons appointed by the legal person, or by information     systems of the legal persons that give an Wallet Unit     commands in accordance with rules defined by the legal person.</li> </ul> <p>HLRs</p> Index Requirement specification LP_01 The Commission SHALL develop a Legal-person PID Rulebook to specify the attribute scheme and other technical details applicable for legal-person PIDs. LP_02 The attestation type of a legal-person PID SHALL be different from the attestation type of a natural person PID. Note: See [Topic 12] for an explanation of the concept of attestation type. LP_03 A legal-person PID SHALL comply with all requirements in the Legal-person PID Rulebook mentioned in LP_02."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2329-topic-29-delegation-paradigm","title":"A.2.3.29 Topic 29 - Delegation paradigm","text":"<p>Short description</p> <p>Topic 3 describes requirements for a rulebook of natural-person PIDs. Topic 28 does the same for legal-persons PIDs.</p> <p>Article 5a.5.(f) of the [European Digital Identity Regulation] also mentions the possibility of issuing eIDs that also could attest a natural person representing the natural or legal person.\u00a0\u00a0At current time, this Topic proposes to not describe any requirements for such eID schemes without further Member State input for such eID schemes. The main reason is that there is no cross-border legal framework for mutual recognition of powers and mandates. Powers and mandates are generally legal system-specific and administrative system-specific.</p> <p>Another use case for delegation is where the recognition of the power for a person to represent another person occurs on an ad hoc basis, based on a decision by the represented User and in the context of a specific Relying Party. The basis for such decisions is outside of the scope of eIDAS. Various scenarios can be considered:</p> <ol> <li>Natural person to natural person, based on the will of the     represented person: One individual authorises another individual to     represent them, for example:<ol> <li>Picking up a prescription from the pharmacy or a package from     the post office for a family member.</li> <li>Empowering a person to vote on your behalf.</li> <li>Empowering a notary to sell your house on your behalf to a     certain party for a certain amount.</li> <li>Empowering your employer to apply for a residence permit on your     behalf.</li> </ol> </li> <li>Natural person to natural person, based on some decision by an     authority, or also as a consequence of national, EU or international     law.</li> <li>Legal guardian being able to take decisions on behalf of child,     disabled person, or elderly person.</li> <li>Natural person to legal person: An individual authorising a legal     entity to represent them.<ol> <li>A person empowering a law firm to be the executor of the trust upon their death.</li> <li>A person empowering a bank to invest on their behalf.</li> </ol> </li> </ol> <p>HLRs</p> <p>There are no specific requirements in this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2330-topic-30-interaction-between-wallet-units","title":"A.2.3.30 Topic 30 - Interaction between Wallet Units","text":"<p>Short description</p> <p>A User can request another User to release an attestation of attributes, where both Users use their Wallet Unit. This can be done when their devices are close together (that is, in physical proximity) with internet connectivity for both devices (online), or without internet connectivity for either or both devices (offline).</p> <p>This Topic lists the high-level requirements related to the interaction between two Wallet Units. This topic will be further discussed with Member States.</p> <p>HLRs</p> Index Requirement specification W2W_01 A Wallet Unit SHALL support an interface and protocol for: - Establishing a connection with another Wallet Unit, - Receiving PID and (Q)EAA presentation requests from another Wallet Unit, - Validating such requests, - Responding to such requests in accordance with the technical specifications as defined by [OpenID4VP] and [ISO/IEC 18013-5]. W2W_01a In addition to W2W_01, a Wallet Unit SHALL support an interface and protocol for: - Sending PID and (Q)EAA presentation requests to another Wallet Unit, - Receiving and validating the corresponding presentation response, in accordance with the technical specifications as defined by [OpenID4VP] and [ISO/IEC 18013-5]. W2W_02 The Commission SHALL develop technical specifications for exchanging PIDs and attestations between two Wallet Units in accordance with the technical specifications as defined by [OpenID4VP] and [ISO/IEC 18013-5]. W2W_03 The Requestor Wallet Unit SHALL authenticate its User prior to requesting attestations presentation from another Wallet Unit. W2W_04 The Requestee Wallet Unit SHALL request User approval, as specified in [Topic 6], before presenting requested attestations or attributes to another Wallet Unit. The Wallet Unit SHALL inform the User about the attributes that are being requested, and of the outcome of authentication and validation checks of the request and the requestor. W2W_05 The Requestor Wallet Unit SHOULD have pre-defined a list of attributes of PID or attestations that can be requested from the Requestee Wallet Unit. W2W_06 The Requestee Wallet Unit SHALL authenticate and validate the Requestor Wallet Unit, ensuring the validity of the Requestor Wallet Unit and the attribute request. W2W_07 The Requestor Wallet Unit SHALL display the received attributes to its User."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2331-topic-31-pid-provider-wallet-provider-attestation-provider-and-access-certificate-authority-notification-and-publication","title":"A.2.3.31 Topic 31 - PID Provider, Wallet Provider, Attestation Provider, and Access Certificate Authority notification and publication","text":"<p>Short description</p> <p>PID Providers, PuB-EAA Providers, Wallet Providers and Access Certificate Authorities must be notified by a Member State to the Commission. As part of the notification process, the trust anchors of these parties must be included in a Trusted List. A trust anchor is the combination of a public key and an identifier for the associated entity. Trust anchors are required for the verification of the signatures of PIDs, attestations, WUAs, and access certificates that are issued by these parties.</p> <p>This Topic contains High-Level Requirements for the notification of these parties by Member States, and for the publication of the notified information by the Commission.</p> <p>HLRs</p> <p>A.  Generic requirements for notification</p> Index Requirement specification GenNot_01 The European Commission SHALL establish technical specifications for a common system enabling the notification of PID Providers, PuB-EAA Providers, Wallet Providers, and Access Certificate Authorities by Member States to the Commission.  Note: Notification does not apply to QEAA Providers and (non-qualified) EAA Providers, as explained in Sections D and F below, respectively. GenNot_02 As part of the specifications referred to in GenNot_01, the European Commission SHALL establish standard operating procedures for the notification of a PID Provider, PuB-EAA Provider, Wallet Provider or Access Certificate Authorities to the Commission.  Note: The outcome of the notification procedure is the publication of the information notified by the Member State according to Article 5a (18) in a machine and human readable manner using the common system mentioned in Section H, TLPub_01. GenNot_03 The common system mentioned in GenNot_01 SHALL enable: - A secure notification channel between Member States and the Commission for all notifications. - A notification, verification, and publication process and associated validation steps (with follow-up and monitoring) at the Commission side. - Collected data to be processed, consolidated, signed or sealed, and published in both a machine-processable Trusted List and in a human-readable format, manually and/or automatically using e.g. a web service and/or API. GenNot_04 As regard to GenNot_03, second bullet, the Commission SHALL verify whether the notified data is complete and meets the technical specifications, while the Member States SHALL be responsible for the correctness of the notified information. GenNot_05 As part of the specifications referred to in GenNot_01, the European Commission SHALL establish standard operating procedures for the suspension or withdrawal of a PID Provider, PuB-EAA Provider, Wallet Provider, or Relying Party Access Certificate Authority. These operating procedures SHALL include unambiguous conditions for suspension or withdrawal. As an outcome of the suspension or withdrawal procedure, the status of the suspended or withdrawn PID Provider, PuB-EAA Provider, Wallet Provider, or Relying Party Access Certificate Authority in the Trusted List SHALL be changed to Invalid. <p>B.  Requirements for the notification of PID Providers</p> Index Requirement specification PPNot_01 The European Commission SHALL establish technical specifications for the common set of information to be notified about PID Providers. PPNot_02 The common set of information to be notified about a PID Provider SHALL include: 1. Identification data: i. MS/Country of establishment, ii. Name as registered in an official record, iii. Where applicable: a. A business registration number from an official record, b. Identification data from that official record. 2. PID Provider trust anchors, i.e., public keys and name as per point 1) ii) above, supporting the authentication of PIDs issued by the PID Provider, 3. PID Provider Access Certificate Authority trust anchors, i.e., public keys and CA name, supporting the authentication of the PID Provider by Wallet Units at the service supply point(s) listed per point 4. below. 4. Service supply point(s), i.e., the URL(s) at which a Wallet Unit can start the process of requesting and obtaining a PID. Notes: - Relating to point 3. above: PID Provider Access Certificate Authority trust anchors are notified separately from the Relying Party Access Certificate Authority (see Section G below), since PID Providers are -legally speaking- not Relying Parties. - For the concept of an Access Certificate Authority, see also [Topic 27] and Section 6.3.2 of [ARF]. PPNot_03 PID Providers SHALL ensure that all PIDs they issue can be authenticated using the PID Provider trust anchors notified to the Commission. PPNot_04 PID Providers SHALL ensure that their PID Provider access certificates can be authenticated using the PID Provider Access Certificate Authority trust anchors notified to the Commission. Note: [Topic 6] describes how access certificates will be used. PPNot_05 PID Provider trust anchors SHALL be accepted because of their secure notification by the Member States to the Commission and by their publication in the corresponding Commission-compiled PID Provider Trusted List which is sealed by the Commission. PPNot_06 PID Provider Access Certificate Authority trust anchors SHALL be accepted because of their secure notification by the Member States to the Commission and by their publication in the corresponding Commission-compiled PID Provider Access Certificate Authority Trusted List which is signed or sealed by the Commission. PPNot_07 The format of the PID Provider Trusted List SHALL comply with ETSI TS 119 612 v2.1.1 or with a suitable profile similarly derived from ETSI TS 102 231. <p>C.  Requirements for the notification of Wallet Providers</p> Index Requirement specification WPNot_01 The European Commission SHALL establish technical specifications for the common set of information to be notified about Wallet Providers. WPNot_02 The common set of information to be notified about a Wallet Provider SHALL include: 1. Identification data: i. MS/Country of establishment, ii. Name as registered in an official record, iii. Where applicable: a. Business registration number from an official record, and b. Identification data from the official record. 2. Wallet Provider trust anchors, i.e., public keys and name as per point 1. b. above, supporting the authentication of Wallet Unit Attestations issued by the Wallet Provider. Notes: - See [Topic 9] and [Topic 38] for the definition of the WUA. - A Wallet Provider does not need an access certificate to interact with Wallet Units. WPNot_03 Wallet Providers SHALL ensure that all WUAs they issue can be authenticated using the trust anchors notified to the Commission. WPNot_04 Wallet Provider trust anchors SHALL be accepted because of their secure notification by the Member States to the Commission and by their publication in the corresponding Commission-compiled Wallet Provider Trusted List which is sealed by the Commission. WPNot_05 The format of the Wallet Provider Trusted List SHALL comply with ETSI TS 119 612 v2.1.1 or with a suitable profile similarly derived from ETSI TS 102 231. WPNot_06 If a Wallet Provider is withdrawn (see requirement GenNot_05 above), that Wallet Provider SHALL immediately revoke all of its valid WUAs, in accordance with the requirements in Topic 38. If a Wallet Provider is suspended, that Wallet Provider and the Member State SHALL agree on the necessary precautionary measures that need to be taken, which MAY include the immediate revocation of all or some of its valid WUAs. <p>D.  Requirements for the notification of QEAA Providers</p> <p>There is no notification of QEAA Provider foreseen by the [European Digital Identity Regulation], except for establishing the Art. 22 Trusted List once a qualified status is granted. QTSPs issuing QEAAs to Wallet Units SHALL abide by the Implementing Act to be adopted under Art. 45d(5).</p> <p>E.  Requirements for the notification of PuB-EAA Providers</p> <p>This notification is pursuant to Art.45f(3) and to the implementing acts to be adopted pursuant to Art.45f(7). It should be noted that the purpose of this notification is mainly to the attention of QTSPs issuing qualified certificates for electronic signatures or seals to those public sector bodies referred to in Article 3, point (46), and identified as the issuer in the PuB-EAA. The Trusted List compiled by the Commission is deemed to be a constitutive list of such Art.3(46) bodies recognised for issuing PUB-EAAs. Consequently, QTSPs are expected to verify such lists prior to issuing a qualified certificate to any entity claiming to be a Art.3(46) body.</p> Index Requirement specification PuBPNot_01 The European Commission SHALL establish technical specifications for the common set of information to be notified about PuB-EAA Providers. PuBPNot_02 The common set of information to be notified by Member States about PuB-EAA Providers SHALL include at least: 1. Identification data: i. MS/Country of establishment, ii. Name as registered in an official record, iii. Where applicable: a. Registration number as in official record, and b. Official record identification data. iv. Identification data of the Union or national law under which a. Either the PuB-EAA Provider is established as the responsible body for the Authentic Source based on which the electronic attestation of attributes is issued, or b. The PuB-EAA Provider is the body designated to act on behalf of the responsible body referred to in point 1. iv. a. v.The conformity assessment report issued by a conformity assessment body, confirming that the requirements set out in paragraphs 1, 2 and 6 of Article 45f are met. 2. Service supply point(s), i.e., the URL(s) at which a Wallet Unit can start the process of requesting and obtaining a PuB-EAA from the PuB-EAA Provider. PuBPNot_03 The format of the PuB-EAA Provider Trusted List SHALL comply with ETSI TS 119 612 v2.1.1 or with a suitable profile similarly derived from ETSI TS 102 231. <p>F.  Requirements for the notification of (non-qualified) EAA Providers</p> <p>There is no notification of (non-qualified) EAA Providers foreseen by the [European Digital Identity Regulation]. As stated in [Topic 12], the Schema Provider for an Attestation Rulebook describing a type of attestation that is an EAA defines in the Rulebook the mechanisms allowing a Relying Party to obtain, in a trustworthy manner, the trust anchor(s) of EAA Providers issuing this type of EAA.</p> <p>G.  Requirements for the notification of Access     Certificate Authorities</p> <p>Relying Party Access Certificate Authorities (CA) are TSPs responsible for signing access certificates they issue to Relying Parties. Legally speaking, Relying Parties in this context also include QEAA Providers, PuB-EAA Providers, and (non-qualified) EAA Providers, but for clarity these roles are mentioned separately in the requirements below. Where these requirements use the term 'Access Certificate Authorities' without further qualifications, this includes Access Certificate Authorities for QEAA Providers, PuB-EAA Providers, (non-qualified) EAA Providers, and Relying Parties.</p> <p>For more information about Relying Party Access Certificate Authoritys, see [Topic 27].</p> Index Requirement specification RPACANot_01 The European Commission SHALL establish technical specifications for the common set of information to be notified about Relying Party Access Certificate Authorities, QEAA Provider Access Certificate Authorities, PuB-EAA Provider Access Certificate Authorities, and (non-qualified) EAA Provider Access Certificate Authorities. RPACANot_02 The common set of information to be notified about an Access Certificate Authority SHALL include: 1. Identification data: i) MS/Country of establishment, ii) Name as registered in an official record, iii) Where applicable: - A business registration number from an official record, - Identification data from that official record. 2. Access Certificate Authority trust anchors, i.e., public keys and name as per point 1) ii), supporting the authentication of Relying Parties, QEAA Providers, PuB-EAA Providers, and (non-qualified) EAA Providers by Wallet Units. RPACANot_03 Relying Parties, QEAA Providers, PuB-EAA Providers, and (non-qualified) EAA Providers SHALL ensure that their access certificates can be authenticated using the Access Certificate Authority trust anchors notified to the Commission. RPACANot_04 Access Certificate Authority trust anchors SHALL be accepted because of their secure notification by the Member States to the Commission and by their publication in the corresponding Commission--compiled Access Certificate Authority Trusted List which is signed or sealed by the Commission. RPACANot_05 The format of an Access Certificate Authority Trusted List SHALL comply with ETSI TS 119 612 v2.1.1 or with a suitable profile similarly derived from ETSI TS 102 231. <p>H.  Requirements for the publication of Trusted Lists compiled by the     Commission</p> Index Requirement specification TLPub_01 The European Commission SHALL establish technical specifications for the system enabling the publication by the Commission of the information notified by the Member States regarding PID Providers, Wallet Providers, PuB-EAA Providers, and Relying Party Access Certificate Authorities. TLPub_02 The European Commission SHALL establish technical specifications for the set of information to be published about: PID Providers, Wallet Providers,PuB-EAA Providers, andAccess Certificate Authorities based on the information notified by the Member States. Note: The information to be published MAY be different from the information to be notified per requirements PPNot_01, WPNot_01, PuBPNot_01, and RPACANot_01 above, respectively. TLPub_03 The publication of the information referred to in TLPub_01 SHALL take place over a secure channel protecting the authenticity and integrity of the published information. TLPub_04 The technical system mentioned in TLPub_01 SHALL NOT require authentication or prior registration and authorisation of any entity wishing to retrieve the published information. TLPub_05 The information referred to in TLPub_01 SHALL be published in an electronically signed or sealed form that is suitable for automated processing, and in a human-readable format, e.g., through introspection and display facilities, over an authenticated channel. TLPub_06 The Commission SHALL publish in the OJEU the locations of the Trusted Lists for PID Providers, Wallet Providers, PuB-EAA Providers, and Access Certificate Authorities. TLPub_07 The Commission SHALL publish in the OJEU the trust anchors to be used for verifying the signature or seal mentioned in TLPub_05. TLPub_08 As part of the specifications referred to in TLPub_01, the European Commission SHALL establish technical specifications for ensuring the availability and authenticity of the full history regarding the information notified about PID Providers, Wallet Providers, PuB-EAA Providers, and Access Certificate Authorities."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2332-topic-32-pid-interoperability","title":"A.2.3.32 Topic 32 - PID interoperability","text":"<p>See Topic 12.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2333-topic-33-wallet-unit-backup-and-restore","title":"A.2.3.33 Topic 33 - Wallet Unit backup and restore","text":"<p>Short description</p> <p>Backup and restore functionality is needed in case the User has lost access to their current Wallet Unit, for example in case of loss, theft, or breakdown. It is also needed if the User wants to start using another Wallet Unit, for example because they have bought a new device, need to factory-reset their existing device, or want to migrate to another Wallet Solution. In all of these cases, the User wants to restore the PIDs and attestations in their existing Wallet Unit on their new Wallet Unit, with as minimal an effort as possible.</p> <p>The [European Digital Identity Regulation] does not contain a requirement mandating backup and restore functionality in the Wallet. However, Wallet Providers should implement backup and restore functionality nevertheless, because it will be expected by Users. In fact, the requirements in Topic 34 also ensure the possibility of backup and restore.</p> <p>HLRs</p> <p>There are no specific requirements in this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2334-topic-34-migrate-to-a-different-wallet-solution","title":"A.2.3.34 Topic 34 - Migrate to a different Wallet Solution","text":"<p>Short description Article 5a 4 (g) of the [European Digital Identity Regulation] ensures the User's rights to data portability. Data portability means that a User can migrate to a different Wallet Solution. The User installs an instance of the new Wallet Solution, and then wants to restore the PIDs and attestations in their existing Wallet Unit to their new Wallet Unit. This should be possible with as minimal an effort as possible, and independent of whether the User still has access to their existing Wallet Unit.</p> <p>The solution described in this Topic is to introduce a Migration Object in each Wallet Unit. This object is a list of PIDs and attestations contained in the Wallet Unit, together with the information needed to request (re-)issuance of that PID or attestation. Note that the Migration Object does not contain any private keys associated with the PIDs or attestations. In most security architectures for a Wallet Solution described in Section 4.5 of [ARF], this is impossible, since the WSCA/WSCD that contains these private keys does not allow their extraction under any circumstances. An exception may be architectures in which attestation private keys are managed in a remote HSM and the migration is to a new Wallet Unit of the same Wallet Provider. However, in such cases, restoring functionality of the PIDs and attestations in a new Wallet Unit does not necessitate that private keys must be exported to another HSM. Rather, it implies the User must be able to authenticate towards the existing HSM from the new Wallet Unit, and be recognised as an existing User.</p> <p>The fact that the Migration Object does not contain private keys means that PIDs and attestations cannot be backed up and restored from the object in such a way that they are usable in a new Wallet Unit without involvement of the PID Provider or Attestation Provider. Instead, the User must ask the respective PID Provider(s) or Attestation Provider(s) to re-issue the PID(s) or attestation(s) to the new Wallet Unit. The only function of the Migration Object is to simplify this process by listing the PIDs and attestations present in the existing Wallet Unit, together with the information needed by the new Wallet Unit to start the re-issuance process.</p> <p>The Migration Object does not contain attribute values or attribute identifiers, as that data is considered sensitive and is not useful anyway because of the limitations explained above. Instead, the object only contains a list of attestation types and the related Attestation Providers. However, even this limited information may be considered sensitive in some cases. Therefore, the Migration Object is stored in such a way that its confidentiality is ensured and that it can be used only by the User.</p> <p>HLRs</p> <p>A.  Back-up requirements</p> Index Requirement specification Mig_01 A Wallet Unit SHALL include and keep up-to-date a Migration Object, containing the following information: The contents of the log for all transactions executed through the Wallet Unit, as listed in requirement DASH_02.A list of PIDs and attestations present in the Wallet Unit, according to the requirements in this Topic. Mig_02 The Commission SHALL define a technical specification of the Migration Object. Mig_03 For each PID or attestation that is issued to it, a Wallet Unit SHALL add all data that is necessary to request re-issuance of that PID or attestation to the Migration Object. This SHALL include at least the attestation type and the PID Provider or Attestation Provider that issued the PID or attestation, as well as their service supply points. However, the Migration Object SHALL NOT contain attribute identifiers or attribute values, and SHALL NOT contain any private keys associated with the PID or attestation. Mig_03b If the User deletes a PID or attestation from their Wallet Unit, the Wallet Unit SHALL delete the corresponding entry from the Migration Object. Mig_04 The Wallet Unit SHALL store the Migration Object in an external storage or remote location of the User's choice, in such a way that the User can still retrieve the object from a new Wallet Unit in case the existing Wallet Unit becomes unavailable. Note: The new Wallet Unit may be either an instance of the same Wallet Solution as the old one, or an instance of a different Wallet Unit. Mig_05 The Wallet Unit SHALL store the Migration Object in such a way that its confidentiality is protected and that it is protected against use by others than the User. Note: This could be done, for example, by using password-based cryptography to encrypt the object. <p>B.  Restore Requirements</p> Index Requirement specification Mig_06 Directly after installation of a new Wallet Instance, the Wallet Instance SHALL enable the User to import a Migration Object from an external storage or remote location indicated by the User. Mig_07 For each PID and attestation listed in the Migration Object, the Wallet Unit SHALL enable the User to select that PID or attestation. When selected, the Wallet Unit SHALL request the respective PID Provider or Attestation Provider to re-issue that PID or attestation. If the Migration Object lists a PID, the PID SHALL be the first to be restored. Mig_07a The Wallet Unit SHALL ask the User whether they want to restore the log from the Migration Object. When the User agrees, the Wallet Unit SHALL restore the log, and SHALL append future transactions to this log according to the requirements in Topic 19. Mig_08 Empty Mig_09 Empty Mig_10 Empty Mig_11 The processes and interfaces used for re-issuance of a PID or attestation (as part of a migration process) SHALL be the same as those used for their issuance, as specified in Topic 10. Mig_12 Empty Mig_13 Empty Mig_14 Empty Mig_15 Empty Mig_16 Empty"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2335-topic-35-pid-issuance-service-blueprint","title":"A.2.3.35 Topic 35 - PID issuance service blueprint","text":"<p>Short description</p> <p>This Topic analyses the meaningful User journeys for PID issuance to a Wallet Unit. This Topic focuses on natural persons only and lists high-level requirements related to the PID issuance user journey, covering both remote and proximity use cases.</p> <p>HLRs</p> Index Requirement specification PID_ISS_01 A Wallet Unit SHALL support at least the protocol defined in the technical specifications for PID issuance. A Wallet Unit MAY support additional protocols for PID issuance. The following requirements apply only to the protocol defined in the technical specifications. PID_ISS_02 A Wallet Unit SHALL authenticate and validate the identity of the PID Provider it is communicating with. PID_ISS_03 A PID Provider SHALL verify the authenticity of Wallet Unit's WUA. PID_ISS_04 A Wallet Unit SHALL present the corresponding data to the User, informing the User about the attributes to be issued by the PID Provider. PID_ISS_05 Empty PID_ISS_06 A Wallet Unit SHALL support device binding for PID, enabling the User to prove possession of the bound device. PID_ISS_07 A Wallet Unit SHALL support an activation procedure for PID Providers to verify that a PID is delivered to its subject. PID_ISS_08 A Wallet Unit SHALL support technical specifications for securely delivering the PID from the PID provider to the device controlled by the User. PID_ISS_09 Empty"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2336-topic-36-risk-analysis-of-the-wallet-usage","title":"A.2.3.36 Topic 36 - Risk Analysis of the Wallet usage","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2337-topic-37-qes-remote-signing-technical-requirements","title":"A.2.3.37 Topic 37 - QES -- Remote Signing - Technical Requirements","text":"<p>See Topic 16.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2338-topic-38-wallet-unit-revocation","title":"A.2.3.38 Topic 38 - Wallet Unit revocation","text":"<p>Short description</p> <p>This Topic discusses Wallet Unit revocation. In particular, it answers the following questions:How can a Wallet Provider revoke a Wallet Unit?During issuance of an attestation, how can an Attestation Provider verify whether a Wallet Unit has been revoked?When requesting attributes from an attestation, how can a Relying Party verify whether a Wallet Unit has been revoked?</p> <p>In case of a security issue, Article 5e of the [European Digital Identity Regulation] requires Wallet Providers to first suspend a Wallet Unit and to revoke it only if the issue cannot be solved within three months. However, the suspension of a Wallet Unit is an administrative process, which does not imply that the WUAs of that Wallet Unit need to be suspended, as opposed to being revoked. Instead, if the Wallet Provider administratively suspends a Wallet Unit, it will immediate revoke all corresponding WUAs. If (within three months) the situation is remedied and the Wallet Unit can be re-instated, the Wallet Provider will issue one or more new WUAs to the Wallet Unit.</p> <p>HLRs</p> <p>A.  Issuing a Wallet Unit Attestation</p> Index Requirement specification WURevocation_01 To enable a Relying Party or an Attestation Provider to verify the authenticity and (if necessary, see requirement VCR_01) the revocation status of a Wallet Unit it is interacting with, a Wallet Provider SHALL issue one or more Wallet Unit Attestations to the Wallet Unit, as specified in Topic 9. Note: The first of these WUAs will be issued during the activation phase of a Wallet Unit. During the lifetime of the Wallet Unit, the Wallet Provider will re-issue WUAs as needed. Re-issuance of attestation, including WUAs, will be discussed with Member States for ARF 2.0. WURevocation_02 During the lifetime of the Wallet Unit, the Wallet Provider SHALL ensure that the Wallet Unit at all times is able to respond with a valid WUA to a presentation request from a Relying Party. Note: To comply with WURevocation_04, the validity period of a WUA probably cannot be very long. This implies that the Wallet Provider must regularly issue new WUAs to a Wallet Unit. WURevocation_03 Empty WURevocation_04 The Wallet Provider SHALL manage the issuance processes for WUAs in such a way that the WUAs cannot be misused by colluding Relying Parties (and Attestation Providers) to track a User. *Notes: - See also WUA_09. - The requirements for WUA management in this regard are comparable to those for management of a PID or attestation. WURevocation_05 Empty <p>A.  Revoking a Wallet Unit</p> Index Requirement specification WURevocation_06 Empty WURevocation_07 A Wallet Provider SHALL be able to revoke a Wallet Unit by revoking its WUA(s), as specified in [Topic 7]. Note: Topic 7 also allows the use of short-lived (i.e., valid for less than 24 hours) WUAs that do no need to be revoked. In that case, the Wallet Provider revokes the Wallet Unit by no longer issuing WUAs to it. WURevocation_08 Empty WURevocation_09 During the lifetime of a Wallet Unit, the Wallet Provider SHALL regularly verify that the security of the Wallet Unit is not breached or compromised. If the Wallet Provider detects a security breach or compromise, the Wallet Provider SHALL analyse its cause(s) and impact(s). If the breach or compromise affects the trustworthiness or reliability of the Wallet Unit, the Wallet Provider SHALL administratively revoke or suspend the Wallet Unit and SHALL immediately revoke the corresponding WUA(s) if they have a remaining validity period of 24 hours or longer. The Wallet Provider SHALL do so at least in the following circumstances: If the security of the Wallet Unit, or the security of the mobile device and OS on which the corresponding Wallet Instance is installed, or the security of a WSCA it uses for managing cryptographic keys and sensitive data, is breached or compromised in a manner that affects its trustworthiness or reliability.If the security of the Wallet Solution is breached or compromised in a manner that affects the trustworthiness or reliability of all corresponding Wallet Units.If the security of the common authentication and data protection mechanisms used by the Wallet Unit is breached or compromised in a manner that affects their trustworthiness or reliability.If the security of the electronic identification scheme under which the Wallet Unit is provided is breached or compromised in a manner that affects its trustworthiness or reliability. WURevocation_9b If within three months from an administrative suspension of a Wallet Unit the security breach or compromise is remedied, the Wallet Provider SHALL issue one or more WUAs to the Wallet Unit, such that the User can again use it. WURevocation_10 A Wallet Provider SHALL revoke a Wallet Unit upon the explicit request of the User registered during the Wallet Unit activation process, see Topic 40. To do so, the Wallet Provider SHALL revoke all valid WUA(s) for that Wallet Unit, if they have a remaining validity period of 24 hours or longer. The Wallet Provider SHALL authenticate the User before accepting a request to revoke the Wallet Unit. WURevocation_11 A Wallet Provider SHALL revoke a Wallet Unit upon the explicit request of a PID Provider, in case the natural person using the Wallet Unit has died or the legal person using the Wallet Unit has ceased operations. To do so, the Wallet Provider SHALL revoke all valid WUA(s) for that Wallet Unit, if they have a remaining validity period of 24 hours or longer. To identify the Wallet Unit that is to be revoked, the PID Provider SHALL use the Wallet Unit identifier provided by the Wallet Provider in the WUA during PID issuance. WURevocation_12 Before revoking a Wallet Unit per WURevocation_11, the Wallet Provider SHALL verify that the party requesting revocation is indeed a valid PID Provider listed in the Trusted List of PID Providers. WURevocation_13 Before requesting a Wallet Provider to revoke a Wallet Unit per WURevocation_11, the PID Provider SHALL ensure that the revocation does not harm the interests of any of the stakeholders. The PID Provider SHALL have (and follow) a documented policy to ensure that this is the case. <p>B.  Informing the User</p> Index Requirement specification WURevocation_14 A Wallet Provider SHALL inform a User without delay, and within 24 hours at most, in case the Wallet Provider decided to revoke the User's Wallet Unit. The Wallet Provider SHALL also inform the User about the reason(s) for the revocation. This information SHALL be understandable for the general public. It SHALL include (a reference to) technical details about any security breach if applicable. WURevocation_15 Empty WURevocation_16 To inform a User about the revocation of their Wallet Unit, the Wallet Provider SHALL use a communication channel that is independent of the Wallet Unit. In addition, the Wallet Provider MAY use the Wallet Unit itself to inform the User. <p>C.  Verifying the revocation status of a Wallet Unit</p> Index Requirement specification WURevocation_17 Empty WURevocation_18 A PID Provider or Attestation Provider SHOULD, for each of its valid PIDs or attestations, regularly verify whether the Wallet Provider revoked the Wallet Unit on which that PID or attestation is residing. If it turns out that the Wallet Unit is revoked, the PID Provider or Attestation Provider SHOULD immediately revoke the respective PID or attestation in accordance with all requirements in [Topic 7]. Notes: - How the PID Provider or Attestation Provider can do this verification depends on the details of the WUA and on WUA management. This is a topic that will be discussed for ARF 2.0. - The reverse is not true: When a PID is revoked, this does not imply that the Wallet Unit on which it is residing should also be revoked. Instead, the Wallet Unit moves to the Operational state. See ARF section 4.6.3. WURevocation_19 A Relying Party SHOULD verify the revocation status of the Wallet Unit by requesting and verifying a WUA and subsequently verifying the revocation status of the WUA following the steps specified per VCR_11. WURevocation_19a To safeguard User privacy, a Relying Party Instance SHOULD request only the data from the WUA that is necessary for carrying out a revocation check for the Wallet Unit. Note: The format of the WUA will be discussed with Member States and will be specified in ARF 2.0. However, the WUA contains information about the Wallet Instance and the related WSCD(s) that are only relevant for PID Providers and Attestation Providers, and that a Relying Party should not know. WURevocation_19b To safeguard User privacy, a Wallet Unit SHALL present to a Relying Party only the data in the WUA that is necessary for carrying out a revocation check for the Wallet Unit. Note: See note to requirement WURevocation_19a. In addition, this requirement implies that the format of the WUA must enable the selective disclosure of attributes. WURevocation_20 For the verification of WUAs, a Relying Party SHALL accept the trust anchors in the Wallet Provider Trusted List. Note: The Wallet Provider Trusted List is explained in [Topic 31]. WURevocation_21 When no reliable information regarding the revocation status of a WUA is available, a Relying Party SHOULD perform a risk analysis considering all relevant factors for the use case, before taking a decision to accept or refuse the Wallet Unit."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2339-topic-39-wallet-to-wallet-technical-topic","title":"A.2.3.39 Topic 39 - Wallet to wallet technical Topic","text":"<p>See Topic 30.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2340-topic-40-wallet-instance-installation-and-wallet-unit-activation-and-management","title":"A.2.3.40 Topic 40 - Wallet Instance installation and Wallet Unit activation and management","text":"<p>Short description</p> <p>This Topic discusses requirements related to the installation of a Wallet Instance by the User, the subsequent activation of the Wallet Unit by the User and the Wallet Provider, and the management of the Wallet Unit throughout its lifetime.</p> <p>HLRs</p> <p>Wallet Instance installation</p> Index Requirement specification WIAM_01 To ensure that the User can trust the Wallet Solution, a Wallet Provider SHOULD make its certified Wallet Solution available for installation only via the official app store of the relevant operating system (e.g., Android, iOS). Note: This allows the operating system of the device to perform relevant checks regarding the authenticity of the Wallet Unit. WIAM_02 If a Wallet Provider makes its certified Wallet Solution available for installation through other means than the official OS app store, it SHALL implement a mechanism allowing the User to verify the authenticity of the Wallet Unit. Moreover, it SHALL provide clear instructions to the User on how to install the Wallet Instance, including at least: - instructions on the verification of the authenticity of the Wallet Instance to be installed, - instructions on bypassing of any operating system limitations on side-loading of apps, if applicable, and ensuring that these limitations are restored after the Wallet Instance has been installed. Note: This requirement also applies for the installation of a Wallet Instance on a User device that is not a mobile device, and for which no official operating system app store may exist. <p>Wallet Unit activation</p> Index Requirement specification WIAM_03 A Wallet Provider SHALL ensure that a Wallet Instance starts a process to activate the new Wallet Unit with the Wallet Provider immediately after installation or when the User first opens the Wallet Instance. The Wallet Provider SHALL ensure that the Wallet Instance starts this process only with a secure backend of the Wallet Provider. WIAM_04 During the activation process of a new Wallet Unit, the Wallet Provider SHALL verify that the new Wallet Instance is a genuine instance of its Wallet Solution. WIAM_05 During the activation process of a new Wallet Unit, the Wallet Provider SHALL process information about the User device and the available WSCAs and WSCDs, as far as necessary to issue a Wallet Unit Attestation to the Wallet Unit conform all requirements in Topic 9 section A. The Wallet Provider MAY process additional information necessary for managing the Wallet Unit, but it SHALL NOT process more information than it reasonably needs for legitimate purposes. The Wallet Provider SHALL request User consent (through the Wallet Instance) for all information and data it will process, both during activation and throughout the lifetime of the Wallet Unit. The Wallet Provider SHALL inform the User about the purposes of data processing, in accordance with the General Data Protection Regulation. WIAM_06 The Wallet Provider SHALL request the User, through the new Wallet Instance, to set up a User account at the Wallet Provider. The Wallet Provider SHALL explain to the User that this is necessary to enable the User to request revocation of the Wallet Unit in case of theft or loss. The Wallet Provider SHALL register one or more User authentication methods that the Wallet Provider will use to authenticate the User in the future. These methods SHALL be independent of the Wallet Unit and the User device. The Wallet Provider SHALL allow the User to register using an alias instead of true identity data. The Wallet Provider SHALL NOT use any registered User data for purposes other than User authentication, unless the User gives explicit consent to do so. The Wallet Provider SHALL register the relationship between the Wallet Unit and the corresponding User account. <p>Wallet Unit management</p> Index Requirement specification WIAM_07 During the lifetime of the Wallet Unit, the Wallet Provider SHALL update the Wallet Unit as necessary to ensure its continued security and functionality. WIAM_08 All communication between the Wallet Provider and the Wallet Unit SHALL be mutually authenticated and SHOULD be encrypted. WIAM_09 If the User uninstalls the Wallet Unit, the Wallet Unit SHALL ensure that all cryptographic key material in the WSCA(s) related to the Wallet Unit is securely destroyed. This includes all keys of the WUAs, PIDs and attestations stored in the Wallet Unit. Note: Key deletion is a cryptographic key operation and requires User authentication, as specified in requirement WUA_02."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2341-topic-41-minimum-requirements-on-pub-eaas-rulebooks","title":"A.2.3.41 Topic 41 - Minimum requirements on PuB-EAAs rulebooks","text":"<p>See Topic 12.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2342-topic-42-requirements-for-qtsps-to-access-authentic-sources","title":"A.2.3.42 Topic 42 - Requirements for QTSPs to access Authentic Sources","text":"<p>Short description</p> <p>This Topic discusses the ability of QTSPs issuing electronic attestations of attributes to verify those attributes by electronic means at the request of the User, wherever those attributes rely on Authentic Sources within the public sector.\u00a0\u00a0</p> <p>HLRs</p> Index Requirement specification QTSPAS_01 In accordance with technical specifications referred to in QTSPAS_07, Member States SHALL define: - discovery mechanisms that enable QTSPs to request information about Authentic Sources or designated intermediaries recognised at the national level. This includes information regarding the attributes of a natural or legal person for which the Authentic Source or designated intermediary is considered a primary source, or for which it is recognised as authentic in accordance with Union law or national law, including administrative practices. - procedures for QTSPs to request the verification of attributes from Authentic Sources. QTSPAS_02 An Authentic Source in the public sector, or its designated intermediary, SHALL implement an interface complying with the technical specification mentioned in QTSPAS_07 for receiving verification requests and sending responses. For each received request, the Authentic Source SHALL - identify and authenticate the requestor in such a way that it can subsequently determine whether the requestor is a QTSP issuing qualified electronic attestation of attributes, for example by means of a lookup in the QTSP Trusted List. - authenticate the User and obtain their approval, if it is legally obliged to do so, in addition to the User authentication and approval already performed by the QTSP according to QTSPAS_08. - verify whether the attribute values claimed by the QTSP match the values held by the Authentic Source; and, finally, - respond with one of the following for each attribute: +'match', if the attribute value held for this User by the Authentic Source is identical to the value claimed by the QTSP, + 'no match', if the attribute value held for this User by the Authentic Source is not identical to the value claimed by the QTSP, including if the Authentic Source is the authentic source for this attribute but does not hold a value for this User, +'unknown', if the Authentic Source is not the authentic source for this attribute. QTSPAS_03 An Authentic Source or designated intermediary SHALL respond to a verification request for attributes by any QTSP issuing qualified electronic attestation of attributes. QTSPAS_04 An Authentic Source or designated intermediary SHALL implement the technical specifications mentioned in QTSPAS_01, so that the QTSP will receive the result of the verification of the requested attributes as described in QTSPAS_02. If the verification is deferred, the response to the QTSP SHALL include the maximum time that it will take to verify the requested attributes, and a unique identifier that the QTSP SHALL use to obtain the result of the verification. QTSPAS_05 A QTSP SHALL send an attribute verification request directly to the Authentic Source or designated intermediary recognised at national level, after discovering it using the mechanisms mentioned in QTSPAS_01. QTSPAS_06 Member States SHALL specify the processes and mechanisms to designate the Authentic Sources or intermediaries recognised at national level in accordance with Union or national law, allowing these Authentic Sources or intermediaries to verify the attributes presented to them by QTSPs. QTSPAS_07 The Commission SHALL publish, in cooperation with the European Digital Identity Cooperation Group, a technical specification, referring to applicable standards, specifications and procedures, that will cover at least the attributes specified in Annex VI, wherever those attributes rely on Authentic Sources within the public sector, for which Member States must ensure that measures are taken to allow qualified providers of electronic attestations of attributes to verify by electronic means, at the request of the User, their authenticity against the relevant authentic source. QTSPAS_07a The standards and procedures mentioned in QTSPAS_07 SHOULD, whenever possible, be aligned and compatible with those used for the platforms implementing the Once Only Technical System (OOTS). Note: There is a clear synergy of both of these data exchange approaches. In fact, the national OOTS node would be a candidate for acting as an intermediary between QTSPs issuing QEEAs and the Authentic Sources. QTSPAS_08 A QTSP SHALL obtain approval from the User to verify the authenticity of the attributes, before requesting the verification of those attributes by the relevant Authentic Source or designated intermediary."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2343-topic-43-embedded-disclosure-policies","title":"A.2.3.43 Topic 43 - Embedded disclosure policies","text":"<p>Short description</p> <p>This topic is focused on identifying high-level requirements for disclosure policies which may be embedded in an attestation. Such a policy may be created by the Attestation Provider, and allows the Wallet Unit, using data obtained from the Relying Party, to determine whether the Attestation Provider agrees with releasing specific attributes from the attestation to the Relying Party.</p> <p>Where requirements in this Topic refer to a 'requesting Wallet Unit', what is meant is a Wallet Unit that is used to request attributes from another Wallet Unit, as described in Topic 30.</p> <p>This topic will be further discussed with Member States in the future.</p> <p>HLRs</p> Index Requirement specification EDP_01 A Wallet Unit SHALL enable an Attestation Provider to optionally include an embedded disclosure policy in a QEAA, PuB-EAA, or non-qualified EAA, as defined in the applicable Rulebook. Note: The [European Digital Identity Regulation] does not contain a requirement for PIDs to be able to contain an embedded disclosure policy. EDP_02 The Provider of an attestation that includes an embedded disclosure policy SHALL comply with the applicable Rulebook when including an embedded disclosure policy in the attestation. EDP_03 An embedded disclosure policy created by an Attestation Provider SHALL only refer to information provided in an authenticated manner to the Wallet Unit by the Relying Party or the requesting Wallet Unit. Note: A future version of this ARF will specify a method for the Attestation Provider to ensure that the Relying Party (or requesting Wallet Unit) can provide such authenticated information to the Wallet Instance. A possibility is to use Attribute Certificates as specified in RFC 5755, referencing the Relying Party Instance access certificate. This will be discussed with Member States for ARF 2.0. EDP_04 Empty EDP_05 An embedded disclosure policy SHOULD contain a link to a website of the Attestation Provider explaining the disclosure policy in layman's terms. If this is the case, the Wallet Unit SHALL display the link to the User and allow them to navigate to that website. EDP_06 The Wallet Unit SHALL be capable of evaluating an embedded disclosure policy in conjunction with the information received from the requesting Relying Party or the requesting Wallet Unit, in order to determine if the Relying Party or the requesting Wallet Unit has permission from the Attestation Provider to access the requested attributes. EDP_07 The Wallet Unit SHALL enable the User, based on the outcome of the evaluation of the embedded disclosure policy, to deny or allow the presentation of the requested electronic attestation of attributes to the requesting Relying Party or the requesting Wallet Unit. EDP_08 The Commission SHALL take measures to create a technical specification establishing common mechanisms for the specification of embedded disclosure policies by Attestation Providers, and for the evaluation of such policies by Wallet Instances."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2344-topic-44-relying-party-registration-certificates","title":"A.2.3.44 Topic 44 - Relying Party registration certificates","text":"<p>Short description This topic identifies high-level requirements for Relying Party registration certificates, which were introduced in Commission Implementing Regulation 2024/2982 [2024/2982]. A registration certificate is issued by a Relying Party registrar to a Relying Party during the registration process described in Topic 27. It contains mainly the list of attributes registered by the Relying Party according to Article 5b 2 \u00a9 of the [European Digital Identity Regulation]. A registration certificate is signed by the Registrar.</p> <p>Commission Implementing Regulation 2024/2982 requires a Wallet Unit to authenticate and validate the registration certificate, and to display the information in the certificate to the User, where applicable. This enables Users to verify that the attributes being requested by the Relying Party are within the scope of their registered attributes, providing assurance that the request is legitimate and trustworthy.</p> <p>HLRs</p> <p>A. Issuance of Relying Party registration certificates</p> Index Requirement specification RPRC_01 During the registration process for Relying Parties, as specified in Topic 27, the Member State Registrar SHALL create and sign a registration certificate and issue it to the Relying Party. The registration certificate SHALL comply with the applicable requirements in the technical specification mentioned in RPRC_02. Note: These requirements do not apply in case the Relying Party acts only as an intermediary, see Topic 52. RPRC_02 The Commission SHALL ensure that a technical specification is created, describing at least 1. the contents and format of registration certificates, 2. the signing method(s) used to ensure the authenticity of the registration certificates. 3. the trust infrastructure necessary for signing registration certificates and for verifying these signatures, including, if necessary, the use of Trusted Lists to establish trust in Member States Registrars and to distribute their trust anchors to Wallet Units. 4. the method used for binding each registration certificate to the Relying Party Instance access certificate that will be used during the same transaction. This binding method SHALL enable a Wallet Unit to verify that the registration certificate was in fact issued to the Relying Party that authenticated itself using the access certificate. The binding method SHALL consider situations in which the Relying Party uses the services of an intermediary  (see Topic 52) to connect to the Wallet Unit. 5. whether or not a registration certificate must have a validity period. 6. whether or not a registration certificate must be revocable, and if so, the method to be used for revocation. Moreover, if a registration certificate must be revocable, the technical specification SHALL describe the impact of revocation, especially compared to the impact of revocation of the Relying Party Instance access certificates. RPRC_03 The contents of a registration certificate SHALL include at least 1. the list of attributes registered by the Relying Party, where each attribute is identified by the identifier specified for it in the applicable Attestation Rulebook, as specified in ARB_06a or ARB_06b. 2. the name of the Relying Party, which SHALL be identical to the name meant in Reg_31. 3. the EU-wide unique identifier of the Relying Party, as meant in Reg_32. 4. if the Relying Party uses the services of an intermediary (see Topic 52): the fact that this is the case, plus the name and unique identifier (as meant in Reg_32) of this intermediary. <p>B. Presentation and verification of Relying Party registration certificates</p> Index Requirement specification RPRC_04 In both proximity and remote presentation flows, the Relying Party Instance SHALL transfer a Relying Party registration certificate to the Wallet Unit in the presentation request, according to the applicable standard's extension mentioned in RPRC_05. RPRC_05 The Commission SHALL ensure that extensions are specified for [ISO/IEC 18013-5] and for [OpenID4VP], allowing a Relying Party to transfer a Relying Party registration certificate to a Wallet Unit. These extensions SHALL comply with applicable requirements in these standards. RPRC_06 The Wallet Unit SHALL verify the authenticity and validity of the registration certificate according to the technical specification meant in RPRC_02. If the outcome of the verification is negative, the Wallet Unit SHALL, when asking for User approval according to RPA_07 and subject to the User preference set according to RPRC_08, notify the User that it could not verify whether the Relying Party registered the requested attributes with the competent authorities. RPRC_07 The Wallet Unit SHALL verify that all attributes requested in the presentation request are included in the list of attributes in the registration certificate. If the outcome of the verification is negative, the Wallet Unit SHALL, when asking for User approval according to RPA_07 and subject to the User preference set according to RPRC_08, notify the User about the requested attributes that the Relying Party did not register. RPRC_08 A Wallet Unit SHOULD enable its User to set their preference for showing or hiding the notifications meant in RPRC_06 and RPRC_07. By default, the Wallet Unit SHALL show the notifications."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2345-topic-45-qeaa-rulebook","title":"A.2.3.45 Topic 45 - QEAA Rulebook","text":"<p>See Topic 12.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2346-topic-46-protocols-and-interfaces-for-presentation-of-pid-and-qeaa-with-relying-parties","title":"A.2.3.46 Topic 46 - Protocols and interfaces for Presentation of PID and (Q)EAA with Relying Parties","text":"<p>See Topic 1 and Topic 12 .</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2347-topic-47-protocols-and-interfaces-for-pid-and-qeaa-issuance-and-non-qualified-certificates-issuance","title":"A.2.3.47 Topic 47 - Protocols and interfaces for PID and (Q)EAA issuance, and (non-)qualified certificates issuance","text":"<p>See Topic 10/23.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2348-topic-48-blueprint-for-requesting-data-deletion-to-relying-parties","title":"A.2.3.48 Topic 48 - Blueprint for requesting data deletion to Relying Parties","text":"<p>Short description</p> <p>In this use case, a User requests the deletion of their personal attributes from Relying Parties with which they have interacted through their Wallet Unit.</p> <p>Users are concerned about having control over their personal data, thus the function of requesting data deletion ensures a higher degree of transparency, privacy and control of the Users over their personal data.</p> <p>This Topic lists high-level requirements related to the function of Users requesting the deletion of their personal data from\u00a0Relying Parties through their Wallet Unit.</p> <p>HLRs</p> Index Requirement specification DATA_DLT_01 A Wallet Provider SHALL ensure that its Wallet Units support the technical specifications mentioned in DATA_DLT_02, allowing a User to request from a Relying Party the erasure of their attributes that were presented by that Wallet Unit to that Relying Party, in accordance with Regulation (EU) 2016/679. DATA_DLT_02 The Commission SHALL, in cooperation with the Member States, develop technical specifications for a Wallet Unit interface allowing a Wallet Unit to send attribute deletion requests to Relying Parties with whom it has interacted in the past. DATA_DLT_03 A Wallet Instance SHALL provide a function where the User may select one Relying Party or multiple Relying Parties for which an attribute deletion request must be submitted. DATA_DLT_04 A Wallet Instance SHALL be able to display the attribute deletion requests previously submitted through the Wallet Unit. DATA_DLT_05 A Wallet Unit SHALL include attribute deletion requests in a log so they can be presented to the User via the dashboard (as specified in Topic 19). DATA_DLT_06 The log SHALL include as a minimum: - Date of attribute deletion request, - Relying Party to which the request was made, - Attributes requested to be removed."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2349-topic-49-protocol-and-interfaces-for-requesting-data-deletion-to-relying-parties","title":"A.2.3.49 Topic 49 - Protocol and interfaces for requesting data deletion to relying parties","text":"<p>Deleted.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2350-topic-50-blueprint-to-report-unlawful-or-suspicious-request-of-data","title":"A.2.3.50 Topic 50 - Blueprint to report unlawful or suspicious request of data","text":"<p>Short description</p> <p>In this use case, a User reports a Relying Party to the competent national data protection authority, because the User claims that this Relying Party sent an unlawful or inappropriate request for attribute to the Wallet Unit. Users are concerned about having control over their personal data, and specifically about a Relying Party over-asking for personal information, thus the function of reporting suspicious or inappropriate requests ensures a higher degree of transparency, privacy and control of the Users over their personal data.</p> <p>This topic lists high-level requirements related to the function of Users reporting unlawful or inappropriate attribute requests from Relying Parties.</p> <p>HLRs</p> Index Requirement specification RPT_DPA_01 A Wallet Unit SHALL provide a interface to lodge a complaint of suspicious Relying Party presentation requests to the DPA of the Member State that provided the Wallet Unit. RPT_DPA_02 The User interface enabling a User to start the process of lodging a complaint SHALL be accessible via the Wallet Instance. RPT_DPA_03 A Wallet Provider SHALL implement the interface in compliance with national procedural law and administrative practices. RPT_DPA_04 A Wallet Unit SHALL enable the lodged complaint to be substantiated, including information to identify the Relying Party, their presentation request, and the User's allegation. RPT_DPA_05 A Wallet Unit SHALL keep reports sent to the DPA in a log file so that it can be presented to the User in the dashboard (as specified in Topic 19)."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2351-topic-51-pid-or-attestation-deletion","title":"A.2.3.51 Topic 51 - PID or attestation deletion","text":"<p>Short description</p> <p>This topic lists high-level requirements related to a User deleting a PID or attestation from their Wallet Unit.</p> <p>HLRs</p> Index Requirement specification PAD_01 A Wallet Unit SHALL at any time enable the User to delete any PID or attestation from their Wallet Unit. PAD_02 If the User indicates that a PID or attestation must be deleted, and the Wallet Unit contains multiple PIDs or attestation having the corresponding document type and Provider, a Wallet Unit SHALL delete all of these PIDs and attestations simultaneously. Note: This situation may occur if the PID Provider or Attestation Provider issued a batch of attestations to the Wallet Unit, rather than a single one. PAD_03 If the Wallet Unit deletes a PID or attestation on the User's request, the Wallet Unit SHALL NOT notify the respective PID Provider or Attestation Provider. Note: This is a matter of User privacy. PAD_04 If the Wallet Unit deletes a PID or attestation on the User's request, the Wallet Unit SHALL ensure that all cryptographic key material in the WSCA related to this PID or attestation is securely destroyed. Note: Key deletion is a cryptographic key operation and requires User authentication, as specified in requirement WUA_02."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2352-topic-52-relying-party-intermediaries","title":"A.2.3.52 Topic 52 Relying Party intermediaries","text":"<p>Short description</p> <p>This topic lists high-level requirements regarding so-called intermediaries, which form a special class of Relying Party. Article 5b (10) of the [European Digital Identity Regulation] states \"Intermediaries acting on behalf of relying parties shall be deemed to be relying parties and shall not store data about the content of the transaction.\". Such an intermediary is a party that offers services to Relying Parties to, on their behalf, connect to Wallet Units and request the User attributes that these Relying Parties need. The intermediary then sends the presented attributes to the 'end' Relying Party. This implies that an intermediary performs all tasks assigned to a Relying Party in this ARF on behalf of the 'end' Relying Party.</p> Index Requirement specification RPI_01 An intermediary SHALL register as a Relying Party, in accordance with all requirements in Topic 27. Note: This implies that an intermediary obtains an access certificate containing its own name and unique Relying Party identifier. RPI_02 An intermediary is acting only as an intermediary for other Relying Parties, and not as a Relying Party in its own right, SHALL NOT obtain a registration certificate according to Topic 44, containing its own name and Relying Party identifier. RPI_03 For each of the Relying Parties that uses its services, an intermediary SHALL obtain a registration certificate from a Registrar, according to the requirements in Topic 44. This registration certificate SHALL contain that Relying Party's name and unique identifier, as well as the list of attributes registered for that Relying Party. RPI_04 When issuing a registration certificate for a Relying Party to an intermediary, the Registrar SHALL verify, in a manner to be decided by a Member State, that the Relying Party will indeed use the services of the intermediary to interact with Wallet Units. RPI_05 When issuing a registration certificate for a Relying Party to an intermediary, the Registrar SHALL include in the registration certificate the attribute meant in requirement RPRC_03, point 4, containing the name and identifier of the intermediary. RPI_06 When requested by a Relying Party, an intermediary SHALL request the presentation of attributes from a specific Wallet Unit, using their own access certificate meant in requirement RPI_01, and the registration certificate of the Relying Party meant in RPI_03. RPI_07 In case a Wallet Unit receives a presentation request from an intermediary, on behalf of a Relying Party, it SHALL verify the name of the intermediary during Relying Party authentication and display this name to the User when asking for User approval, as described in requirement RPA_06a. RPI_08 When a Wallet Unit presents any User attributes to an intermediary, the intermediary SHALL forward these attributes only to the Relying Party that requested the intermediary to request these attributes from the Wallet Unit."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/","title":"Annex 3.01 pid rulebook","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / annexes / annex-3 / annex-3.01-pid-rulebook</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#pid-rulebook","title":"PID Rulebook","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#11-document-scope","title":"1.1 Document scope","text":"<p>This document is the natural-person Person Identification Data (PID) Rulebook and is part of the Architecture Reference Framework (ARF) v1.5.0. It specifies how the mandatory and optional person identification data for the natural person, as defined in Tables 1 and 2 in the Annex of the Commission Implementing Regulation on PID and EAA [CIR 2024/2977], as well as the metadata specified in Table 5 of that CIR, will be encoded as a within the EUDI Wallet ecosystem. Additionally, this document specifies further optional PID attributes that are not included in the CIR.</p> <p>This document also specifies how a PID and all attributes in it are encoded if the PID complies with [ISO/IEC 18013-5] and if it complies with [SD-JWT VC].</p> <p>Person identification data for the legal person is out of scope of this document.</p> <p>This PID Rulebook complies with all applicable requirements in Topic 12 (Attestation Rulebooks) in Annex 2 of the Architecture Reference Framework v1.5.0.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#12-document-structure","title":"1.2 Document structure","text":"<p>This PID Rulebook is structured as follows:</p> <ul> <li>Chapter 2 contains generic high-level requirements, which are valid for all PIDs regardless of the encoding used.</li> <li>Chapter 3 describes the PID attributes and metadata on a generic level, regardless of the encoding used for the PID. Most of the content of this chapter is a direct copy of the Annex of Commission Implementing Regulation 2024/2977 on PID and EAA. However, a few additional attributes are specified in this chapter.</li> <li>Chapter 4 specifies how the PID attributes and metadata are encoded in case the PID complies with [ISO/IEC 18013-5].</li> <li>Chapter 5 specifies how the PID attributes and metadata are encoded in case the PID complies with [SD-JWT VC]. In the current version of this PID Rulebook, this chapter is empty; it will be specified after further discussion with Member States.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalized key words 'SHALL', 'SHOULD' and 'MAY' as specified in [RFC 2119], i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalized) is used to indicate an external constraint, i.e., a requirement that is not mandated by this document, but, for instance, by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#14-terminology","title":"1.4 Terminology","text":"<p>This document uses the terminology specified in Annex 1 of the ARF v1.5.0.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#2-generic-high-level-requirements-for-pids","title":"2 Generic High-Level Requirements for PIDs","text":"<p>The requirements in the table below are valid for all PIDs in the EUDI Wallet ecosystem, regardless of the encoding used.</p> Index Requirement specification PID_01 A PID Provider SHALL issue any PID in both the format specified in ISO/IEC 18013-5 [ISO/IEC 18013-5] and the format specified in [SD-JWT VC]. Note: CIR 2024/2977 mentions the W3C Verifiable Credentials Data Model v1.1 [W3C VCDM v1.1] instead of [SD-JWT VC]. However, W3C VCDM is not a complete specification of an attestation format. In particular, it does not specify a specific proof method to be used. Without additional specification, it is therefore impossible to implement a PID based on [W3C VCDM v1.1]. This Rulebook considers [SD-JWT VC] to essentially be such an additional specification. PID_02 PID Providers SHALL use the attestation type \u201ceu.europa.ec.eudi.pid.1\u201d for both ISO/IEC 18013-5-compliant and SD-JWT VC-compliant PIDs. Notes: - This identifier follows uses the general format [Reverse Domain].[Domain Specific Extension]. Since the European Commission controls the domain ec.europa.eu, this attestation type identifier will not collide with any attestation type identifiers defined by other organisations in other Attestation Rulebooks. - The Commission may use the version number \u201c1\u201d in this identifier to distinguish between the first version of the PID, defined in this document, and any future version, which will then have an incremented version number. PID_03 A PID Provider SHALL ensure that all of the mandatory attributes listed in Section 3.2 are present in any PID it issues to a Wallet Unit. *Notes: = When requesting PID attributes from a Wallet Unit, a Relying Party is not necessarily required to request all mandatory attributes.- A User is allowed to refuse to present a mandatory attribute, if it is requested by a Relying Party."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#3-pid-attributes-and-metadata","title":"3 PID attributes and metadata","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#31-introduction","title":"3.1 Introduction","text":"<p>Sections 3.2, 3.3, 3.4 and 3.5 of this chapter lists the mandatory and optional PID attributes and PID metadata defined in CIR 2024/2977, respectively. Section 3.6 lists the optional PID attributes additionally defined in this PID Rulebook.</p> <p>The data identifiers and definitions given in Sections 3.2, 3.3, 3.4, and 3.5 are identical to those in CIR 2024/2977, except where explicitly indicated that some further explanations have been added in this Rulebook.</p> <p>All data identifiers and definitions in this chapter are independent of any encoding used. Consequently,</p> <ul> <li>the data identifiers in these tables are not necessarily the same as the attribute identifiers used for PIDs complying with [ISO/IEC 18013-5]. Chapter 4 specifies the data element identifiers to be used for such PIDs.</li> <li>the data identifiers in these tables are not necessarily the same as the claim names used for PIDs complying with [SD-JWT VC]. Chapter 5 specifies the attribute identifiers to be used for such PIDs.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#32-mandatory-attributes-specified-in-cir-20242977","title":"3.2 Mandatory attributes specified in CIR 2024/2977","text":"Data Identifier Definition family_name Current last name(s) or surname(s) of the user to whom the person identification data relates. given_name Current first name(s), including middle name(s) where applicable, of the user to whom the person identification data relates. birth_date Day, month, and year on which the user to whom the person identification data relates was born. birth_place The country as an alpha-2 country code as specified in ISO 3166-1, or the state, province, district, or local area or the municipality, city, town, or village where the user to whom the person identification data relates was born. nationality One or more alpha-2 country codes as specified in ISO 3166-1, representing the nationality of the user to whom the person identification data relates."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#33-optional-attributes-specified-in-cir-20242977","title":"3.3 Optional attributes specified in CIR 2024/2977","text":"Data Identifier Definition resident_address The full address of the place where the user to whom the person identification data relates currently resides or can be contacted (street name, house number, city etc.). resident_country The country where the user to whom the person identification data relates currently resides, as an alpha-2 country code as specified in ISO 3166-1. resident_state The state, province, district, or local area where the user to whom the person identification data relates currently resides. resident_city The municipality, city, town, or village where the user to whom the person identification data relates currently resides. resident_postal_code The postal code of the place where the user to whom the person identification data relates currently resides. resident_street The name of the street where the user to whom the person identification data relates currently resides. resident_house_number The house number where the user to whom the person identification data relates currently resides, including any affix or suffix. personal_administrative_number A value assigned to the natural person that is unique among all personal administrative numbers issued by the provider of person identification data. Where Member States opt to include this attribute, they shall describe in their electronic identification schemes under which the person identification data is issued, the policy that they apply to the values of this attribute, including, where applicable, specific conditions for the processing of this value. portrait Facial image of the wallet user compliant with ISO 19794-5 or ISO 39794 specifications. family_name_birth Last name(s) or surname(s) of the User to whom the person identification data relates at the time of birth. given_name_birth First name(s), including middle name(s), of the User to whom the person identification data relates at the time of birth. sex Values shall be one of the following: 0 = not known; 1 = male; 2 = female; 3 = other; 4 = inter; 5 = diverse; 6 = open; 9 = not applicable. For values 0, 1, 2 and 9, ISO/IEC 5218 applies. email_address Electronic mail address of the user to whom the person identification data relates, in conformance with [RFC 5322]. mobile_phone_number Mobile telephone number of the User to whom the person identification data relates, starting with the '+' symbol as the international code prefix and the country code, followed by numbers only."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#34-mandatory-metadata-specified-in-cir-20242977","title":"3.4 Mandatory metadata specified in CIR 2024/2977","text":"Data Identifier Definition expiry_date Date (and if possible time) when the person identification data will expire. Further clarification added in this PID Rulebook: This attribute, as well as the optional issuance_date attribute specified in Section 3.6, pertains to the administrative validity period of the PID. It is up to the PID Provider to decide whether a PID has an administrative validity period. However, if present, it in general is different from the technical validity period of a PID. The technical validity period is a mandatory element of all PIDs (and also attestations) in the EUDI Wallet ecosystem. It typically is short, a few days or weeks, to mitigate any challenges regarding tracking of Users by malicious Relying Parties based on the repeated presentation of the same PID. On the other hand, the administrative validity period is typically at least a few years long. During the administrative validity period of a PID, the PID Provider will therefore provide multiple successive PIDs to a User, typically without any actions being expected from the User. However, when the administrative validity period of a PID ends, typically the User has to apply for an entirely new PID. issuing_authority Name of the administrative authority that issued the person identification data, or the ISO 3166 alpha-2 country code of the respective Member State if there is no separate authority entitled to issue person identification data. issuing_country Alpha-2 country code, as specified in ISO 3166-1, of the country or territory of the provider of the person identification data."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#35-optional-metadata-specified-in-cir-20242977","title":"3.5 Optional metadata specified in CIR 2024/2977","text":"Data Identifier Definition document_number A number for the person identification data, assigned by the provider of person identification data. issuing_jurisdiction Country subdivision code of the jurisdiction that issued the person identification data, as specified in ISO 3166-2:2020, Clause 8. The first part of the code shall be the same as the value for the issuing country. location_status The location of validity status information on the person identification data where the providers of person identification data revoke person identification data."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#36-additional-optional-attributes-specified-in-this-rulebook","title":"3.6 Additional optional attributes specified in this Rulebook","text":"Data Identifier Definition issuance_date Date (and if possible time) when the person identification data was issued and/or the administrative validity period of the person identification data began. See also the clarification for expiry_date in Section 3.4. age_over_18 Attesting whether the User to whom the person identification data relates is currently an adult (true) or a minor (false). age_over_NN Attesting whether the User to whom the person identification data relates is at least NN years old. N &lt;&gt; 18. age_in_years The current age of the User to whom the person identification data relates in years. age_birth_year The year when the User to whom the person identification data relates was born. trust_anchor This attribute indicates at least the URL at which a machine-readable version of the trust anchor to be used for verifying the PID can be found or looked up. Note: This attribute corresponds to the location meant in Annex V point h) or Annex VII point h) of the [European Digital Identity Regulation], which is mandatory for QEAAs. This PID Rulebook add this as an optional attribute for PIDs as well, so PID Providers are able to ensure that PIDs can be validated by Relying Parties in the same manner as QEAAs."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#4-isoiec-18013-5-compliant-encoding-of-pid","title":"4 ISO/IEC 18013-5-compliant encoding of PID","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#41-high-level-requirements-for-isoiec-18013-5-compliant-pids","title":"4.1 High-Level Requirements for ISO/IEC 18013-5-compliant PIDs","text":"<p>The requirements in the table below are valid for PIDs in the EUDI Wallet ecosystem that are compliant with [ISO/IEC 18013-5].</p> Index Requirement specification PID_ISO_01 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL use the value \u201ceu.europa.ec.eudi.pid.1\u201d for the identifier of the namespace for the PID attributes specified in Section 4.2. Notes: - The version number \u201c1\u201d allows for future extension(s) or change(s) of the ISO/IEC 18013-5-compliant PID attributes. - This namespace has the same value as the attestation type specified in requirement PID_02. This is allowed according to ISO/IEC 18013-5. PID_ISO_02 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider MAY include attributes that are not defined in this document. If so, these attributes SHALL be defined within a domestic PID namespace as meant in requirement ARB_10 in Annex 2. The PID Provider SHALL generate the identifier for this domestic PID namespace by appending the applicable ISO 3166-1 alpha-2 country code or the ISO 3166-2 region code, separated by a period, to the PID namespace specified in PID_ISO_01, excluding the version number. The PID Provider MAY include a version number in the domestic PID namespace identifier. Note: For example, the identifier of the first domestic PID namespace for Germany could be \u201ceu.europa.ec.eudi.pid.de.1\u201d. PID_ISO_03 A PID Provider that defines a domestic namespace SHALL publish the namespace, including all attribute identifiers, their definition, presence and encoding format, in an Attestation Rulebook complying with all applicable requirements in Annex 2 [Topic 12]. PID_ISO_04 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL include both the attributes and the metadata specified in CIR 2024/799 in the PID as (issuer-signed or device-signed) data elements. Note: This implies that technically speaking, there is no difference between these attributes and metadata. PID_ISO_05 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL encode each attribute or metadata in the PID as specified in the third column of the tables in Section 4.2.1. PID_ISO_06 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL encode each attribute or metadata in the PID in Concise Binary Object Representation (CBOR) according to [RFC 8949]. PID_ISO_07 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL ensure that each PID contains at most one attribute with the same attribute identifier. PID_ISO_08 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL ensure that the value of all attributes and metadata in the PID is valid at the value of the timestamp in the validFrom element in the MSO, see [ISO/IEC 18013-5] clause 9.1.2.4. *Note: The value of the age_over_18, age_over_NN, or age_in_years attributes, if present, changes whenever the User to whom the person identification data relates has a relevant birthday. The value of many other attributes will also change over time. PID_ISO_09 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL ensure that the issuance_date attribute, if present, is not later than the validFrom element in the MSO, see [ISO/IEC 18013-5] clause 9.1.2.4."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#42-encoding-of-pid-attributes-and-metadata","title":"4.2 Encoding of PID attributes and metadata","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#421-overview","title":"4.2.1 Overview","text":"<p>The ISO/IEC 18013-5-compliant encoding of PID attributes and metadata is specified in the table below. The table contains the following information for all attributes:</p> <ul> <li>The first column lists the data identifier specified in Chapter 3 above.</li> <li>The second column lists the corresponding attribute identifier to be used in presentation requests and responses according to [ISO18013-5].</li> <li>The third column indicates the encoding of each attribute. This column uses CDDL representation types defined in [RFC 8610]. The following notes and requirements apply:</li> <li>tstr, uint, bstr, bool and tdate are CDDL representation types defined in [RFC 8610].</li> <li>Regarding type tstr: this document confirms that, as specified in RFC 8949, a tstr SHALL be encoded in UTF-8 and SHALL support the full Unicode range.</li> <li>All attributes having encoding type tstr SHALL have a maximum length of 150 characters.</li> <li>This document specifies full-date as full-date = #6.1004(tstr), where tag 1004 is specified in [RFC 8943].</li> <li>In accordance with [RFC 8949], section 3.4.1, a tdate attribute SHALL contain a date-time string as specified in [RFC 3339]. In accordance with [RFC 8943], a full-date attribute SHALL contain a full-date string as specified in [RFC 3339].</li> <li>The following requirements apply to the representation of dates in attributes, unless otherwise indicated:<ul> <li>Fractions of seconds SHALL NOT be used;</li> <li>A local offset from UTC SHALL NOT be used; the time-offset defined in [RFC 3339] SHALL be to \"Z\".</li> </ul> </li> <li>RFC 8949, section 4.2, describes four rules for canonical CBOR. Three of those rules SHALL be implemented for all CBOR structures in PIDs, as follows:<ul> <li>integers (major types 0 and 1) SHALL be as small as possible;</li> <li>the expression of the length in a bstr, tstr, array or map SHALL be as short as possible;</li> <li>indefinite-length items SHALL be made into definite-length items.</li> </ul> </li> </ul> Data Identifier Attribute identifier Encoding format family_name family_name tstr given_name given_name tstr birth_date birth_date full-date, see Section 4.2.5. birth_place birth_place tstr nationality nationality nationalities, see Section 4.2.2. resident_address resident_address tstr resident_country resident_country tstr resident_state resident_state tstr resident_city resident_city tstr resident_postal_code resident_postal_code tstr resident_street resident_street tstr resident_house_number resident_house_number tstr personal_administrative_number personal_administrative_number tstr portrait portrait bstr, see Section 4.2.3. family_name_birth family_name_birth tstr given_name_birth given_name_birth tstr sex sex uint email_address email_address tstr mobile_phone_number mobile_phone_number tstr expiry_date expiry_date tdate or full-date issuing_authority issuing_authority tstr issuing_country issuing_country tstr document_number document_number tstr issuing_jurisdiction issuing_jurisdiction tstr location_status - See Section 4.2.4. issuance_date issuance_date tdate or full-date age_over_18 age_over_18 bool age_over_NN age_over_NN bool age_in_years age_in_years uint age_birth_year age_birth_year uint trust_anchor trust_anchor tstr"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#422-attribute-nationality","title":"4.2.2 Attribute nationality","text":"<p>The attribute nationality takes as its value an array of Alpha-2 country codes as specified in ISO 3166-1. Using CDDL notation as specified in RFC 8610, the encoding of this data element is:</p> <p>nationalities = [ + CountryCode ]</p> <p>CountryCode = tstr ; Alpha-2 country code specified in ISO 3166-1</p> <p>Note: If the User to whom the person identification data relates has multiple nationalities (and the PID Provider is willing to attest to these multiple nationalities), the PID Provider can include all of the nationalities in the nationalities array. A potential drawback of this solution is that the User cannot selectively disclose only one or these nationalities, since for ISO/IEC 18013-5-compliant attestations, always the entire array will be presented if the User approves the presentation of the nationality attribute. A potential solution to this challenge is for the PID Provider to include only one nationality in the nationality attribute, and for the remaining nationalities use one or more domestic data attributes specified according to requirement PID_ISO_02.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#423-attribute-portrait","title":"4.2.3 Attribute portrait","text":"<p>Commission Implementing Regulation 2024/2977 describes the optional attribute portrait as \u201cFacial image of the wallet user compliant with ISO 19794-5 or ISO 39794 specifications.\u201d</p> <p>In order to ensure a single consistent encoding of the portrait, this PID Rulebook additionally specifies the following:</p> <ul> <li>The attribute portrait SHALL consist of a single portrait image in JPEG format.</li> <li>The portrait image SHALL comply with the requirements for a Full Frontal Image Type in ISO/IEC 19794-5.</li> <li>The image SHALL be encoded as binary data.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#424-attribute-location_status","title":"4.2.4 Attribute location_status","text":"<p>For ISO/IEC 18013-5-compliant PIDs, the attribute location_status SHALL be absent, since revocation information will be added to the MSO.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#425-attribute-birth_date","title":"4.2.5 Attribute birth_date","text":"<p>For PIDs compliant with ISO/IEC 18013-5, dates are encoded as specified in RFC 8943. This encoding does not contain provisions for encoding partial dates. This may cause challenges in case the birth date of a User is not (fully) known. To deal with such cases, a PID Provider could adopt a policy to choose appropriate values for the unknown date elements. However, mandating such a policy is out of scope of this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#5-sd-jwt-vc-based-encoding-of-pid","title":"5 SD-JWT VC-based encoding of PID","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#51-high-level-requirements-for-sd-jwt-vc-compliant-pids","title":"5.1 High-Level Requirements for SD-JWT VC-compliant PIDs","text":"<p>High-level requirements for SD-JWT VC-compliant PIDs will be added to a future version of this PID Rulebook.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#52-encoding-of-pid-attributes","title":"5.2 Encoding of PID attributes","text":"<p>The encoding of PID attributes for SD-JWT VC-compliant PIDs will be added to a future version of this PID Rulebook.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#6-further-requirements","title":"6 Further requirements","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#61-embedded-disclosure-policies","title":"6.1 Embedded disclosure policies","text":"<p>Requirements regarding the inclusion of an embedded disclosure policy into a PID, if any, will be added in a future version of this PID Rulebook.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#62-displaying-the-pid-to-the-user","title":"6.2 Displaying the PID to the User","text":"<p>Requirements regarding how a Wallet Unit should display the PID and the PID attributes to the User, if any, will be added in a future version of this PID Rulebook.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#7-references","title":"7 References","text":"<p>See Chapter 9 of the main ARF 1.5.0 document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/","title":"annex 3.02 mDL rulebook","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / annexes / annex-3 / annex-3.02-mDL-rulebook</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#annex-32-mdl-rulebook","title":"ANNEX 3.2 - mDL Rulebook","text":"<p>This is a working document that holds no legal value and does not reflect any common agreement or position of the co-legislators. It presents a state-of-play of ongoing work of the eIDAS Expert Group. This document is being continuously updated and should not be considered final.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#1-introduction","title":"1 Introduction","text":"<p>This document is the mobile driving licence (mDL) Rulebook. It part of ARF v1.5.0. It contains requirements specific to mDL attestations with the EUDI Wallet ecosystem.</p> <p>This mDL Rulebook contains the following topics:</p> <ul> <li>Chapter 2 specifies the mDL attribute schema. This describes the     structure, the type, the entity identifiers, and the logical     organisation of the mandatory and optional attributes of the mDL. It     also describes how Member States can specify any possible national     attributes.</li> </ul> <p>Further topics will be added if and when they are identified.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#2-mdl-attribute-schema","title":"2 mDL attribute schema","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#21-introduction","title":"2.1 Introduction","text":"<p>This document describes the structure, type, data element identifiers, and logical organisation of the mandatory and optional attributes of the mobile driving licence (mDL) attestation within the EUDI Wallet. It also describes how Member States can specify any possible national attributes.</p> <p>Mobile driving licences are legally specified in the proposed EC Regulation 2023_127 (4<sup>th</sup> Driving Licence Regulation). This Regulation specifies that mDLs shall comply with the ISO/IEC 18013-5 standard. It does not mention any other standards, in particular not [SD-JWT VC]. Consequently, mDLs issued to a Wallet Unit SHALL NOT be implemented as [SD-JWT VC]-compliant attestations. This document therefore specifies only an ISO/IEC 18013-5-compliant encoding.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#22-isoiec-18013-5-compliant-encoding","title":"2.2 ISO/IEC 18013-5 compliant encoding","text":"<p>The data model for ISO/IEC 18013-5-encoded mDLs is fully specified in ISO/IEC 18013-5. No changes need to be made to this data model for an mDL attestation within the EUDI Wallet ecosystem.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#4-references","title":"4 References","text":"<p>See Chapter 9 of the main ARF 1.5.0 document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/","title":"Index","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/#arf-discussion-topics","title":"ARF Discussion topics","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/#introduction","title":"Introduction","text":"<p>The Architecture and Reference Framework (ARF) is in development. To complete the ARF, the commission concluded 24 open items - called topics - need to be addressed and discussed up to end of 2025. This ARF roadmap project provides and overview on these topics, including a planning when they are addressed.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/#focus-of-the-arf-is-to-establishing-high-level-requirements","title":"Focus of the ARF is to establishing high level requirements","text":"<p>The purpose of the ARF is to establish high level requirements for the EUDI Wallet ecosystem, to create uniform conditions for the implementation of the legislative act. The ARF also defines the technical specifications, standards and procedures that the Commission shall reference or develop for the purpose of implementing the eIDAS Regulation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/#process","title":"Process","text":"<p>The process of establishing high level requirements has 5 steps:</p> <ol> <li>The discussion paper on the topic is published on GitHub.</li> <li>The discussion paper on the topic contains a number of questions: each question will have a separate response thread in the discussion area of GitHub.</li> <li>After three weeks the discussion on the topic will be closed. The Commission will not publish any answers to responses on GitHub, but your input will be considered.</li> <li>The Commission will publish a new ARF version on GitHub about seven weeks after publication of the discussion paper, containing an update on the topic.  </li> <li>The published ARF version can be commented on GitHub.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/#topics-iteration-1","title":"Topics - Iteration 1","text":"<ul> <li>A - Privacy risks and mitigation</li> <li>B - Re-issuance and batch issuance of PIDs and Attestations</li> <li>C - Wallet Unit Attestation (WUA) and Key Attestation </li> <li>D - Embedded Disclosure Policies</li> <li>E - Pseudonyms, including User authentication mechanism</li> <li>F - Digital Credential API</li> <li>G - Zero Knowledge Proof</li> <li>V - PID rulebook</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/#topics-iteration-2-and-3","title":"Topics - Iteration 2 and 3","text":"<p>See further the ARF Roadmap</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/","title":"A privacy risks and mitigations","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics / a-privacy-risks-and-mitigations Version 1.0, updated 14 January 2025</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#a-privacy-risks-and-mitigation","title":"A - Privacy risks and mitigation","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for eIDAS Coordination Group regarding Topic A: Privacy risks and mitigation.</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>Starting from the risk registry, review and enhance the privacy requirements related to tracking and tracing. This includes evaluating current mitigations for privacy risks, identifying additional measures to further minimize these risks, and exploring alternative solutions, such as Zero-Knowledge Proofs (ZKP).</p> <p>A section will be added to the ARF to discuss:</p> <ol> <li> <p>the risks for User privacy due to possible collusion and/or data breaches involving Relying Parties and/or Attestation Providers</p> </li> <li> <p>the countermeasures taken in the current version of the ARF</p> </li> <li> <p>the ways in which Attestation Providers can further reduce these     risks, for example by issuing short-lived attestations.</p> </li> <li> <p>the ways in which these risks may be fully mitigated in the future,     e.g. by means of ZKP-based proof mechanisms for attestations.</p> </li> <li> <p>the risks for User privacy related to revocation checking.</p> </li> </ol> <p>In this version of the document, the feedback of Member States during the meetings on 4 and 11 December 2024 was processed, including the comments up until 8 January 2025.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#12-related-risks-in-the-risk-register","title":"1.2 Related risks in the Risk Register","text":"<p>The risk register for European Digital Identity Wallets [RiskRegister] contains the following risks regarding User tracking as a result of collusion between Relying Parties or between a Relying Party and an Attestation Provider or of a data breach of the parties:</p> Risk type\u00a0 Risk ID\u00a0 Related risk titles\u00a0 High-level risks to the wallets R6 Data disclosure High-level risks to the wallets R12 Transaction data disclosure High-level risks to the wallets R14 Surveillance System-related risks SR1\u00a0 Wholesale surveillance\u00a0 <p>Most of the Technical Threats from the [Risk Register] (threats labelled TTX.Y in its section III) are also relevant threats to consider in the context of preventing tracking and tracing. These threats may belong to attack chains leading to the risks expressed in the table above.</p> R6. Data Disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. R12. Transaction data disclosure Transaction data disclosure is defined as the disclosure of information related to information on a transaction between stakeholders. R14. Surveillance Surveillance, or monitoring, is defined as the unauthorised tracking or observation of a wallet user's activities, communication, or data. Surveillance is often related to inference, which is defined as the deduction of sensitive or personal information from seemingly innocuous data. SR1. Wholesale surveillance Wholesale surveillance is defined as the tracking or observation of the activities of many users through their wallet's communication or data. Wholesale surveillance is often associated with surveillance (R14) and inference at a global scale, where information about many users is combined to deduce sensitive or personal data about users or to identify statistical trends that can be used to design further attacks. <p>More specifically, [RiskRegister] describes the following threats to a Wallet:</p> ID Identifier Threat description Description of the identified threat (*) Risk title Related risks TR36 The electronic attestation of attributes about a person that is presented in multiple transactions with a relying party, or across different relying parties, unintentionally allows them to link multiple transactions to the relevant person. Data disclosure (R6) TR39 An attacker can unlawfully trace wallet users using unique/traceable identifiers. Data disclosure (R6) and Surveillance (R14) TR84 A group of colluding relying parties or PID providers can derive the user's identity data beyond data known to them. Surveillance (R14) TR85 An attacker can track and trace a user by using person identification data of the user where identification of the user is not required. Surveillance (R14) <p>Threads related to data breaches including those involving attackers, are also be taken into account. See [Risk Register] on threads TR27, TR28, TR29, TR30, TR31, TR33, TR34, TR35, TR37, TR40, TR50 to TR52, TR54, TR61, TR83, TR102, TR103, TR105, TR107, TR110, TR130.</p> <p>Note that other threats, such as TR25, TR26, TR32, TR53, TR111 to TR117, TR119, TR121, TR127, and TR133 from the [Risk Register] are also relevant for scenarios where the wallet itself is compromised.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalized key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalized) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will' and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#14-document-structure","title":"1.4 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li> <p>Chapter 2 explains in detail the risks for User privacy due to collusion     and/or data breaches involving Relying Parties and/or Attestation Providers.</p> </li> <li> <p>Chapter 3 discusses possible mitigation measures for Relying Party     linkability.</p> </li> <li> <p>Chapter 4 discusses linkability threats related to revocation     checking.</p> </li> <li> <p>Chapter 5 briefly discusses Zero-Knowledge Proofs as an alternative     way to mitigate these risks. This topic will be discussed with the     Cooperation Group later in more detail.</p> </li> <li> <p>Chapter 6 proposes a few High-Level Requirements to be added to the     ARF. These are for discussion.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#2-risks-for-user-privacy-due-to-collusion","title":"2 Risks for User privacy due to collusion","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#21-linkability","title":"2.1 Linkability","text":"<p>This chapter describes in detail how the attestation formats relying on salted hashed attributes for use in the EUDI Wallet ecosystem could be misused for tracking the User's behaviour.</p> <p>The attestation formats required to be supported in the ARF are specified in ISO/IEC 18013-5 [ISO18013-5], \"SD-JWT-based Verifiable Credentials (SD-JWT VC)\" [SD-JWT VC] and \u201cW3C Verifiable Credentials Data Model\u202f1.1 (W3C VCDM 1.1)\u201d [W3C VCDM 1.1]. Selective disclosure of attributes is achievable, in particular by making use of so-called salted-attribute hashes. For more information on this technique, see [ETSI 119476]. In a nutshell, the idea is that an Attestation Provider does not sign the attribute values directly, but instead signs a collection of hash values, where each hash is calculated over the concatenation of an attribute value and a unique salt. This allows the User to present only a single attribute value (plus the associated salt), while enabling the Relying Party to verify the Attestation Provider signature and the fact that the presented attribute value is indeed included in the signature via its hash.</p> <p>A property of these attestation formats is that every attestation that is presented to a Relying Party contains a number of elements having a unique value. These elements include:</p> <ul> <li> <p>The salt of every attribute that is presented,</p> </li> <li> <p>The hash values of all attributes, that were signed by the     Attestation Provider,</p> </li> <li> <p>The attestation identifier or index used for revocation purposes (if     applicable),</p> </li> <li> <p>The attestation public key used for device binding and User binding,</p> </li> <li> <p>The value of the Attestation Provider signature.</p> </li> </ul> <p>In addition, also timestamps, such as the signing or issuing time of the attestation and the 'valid from' and 'valid until' timestamps may be unique, if they are precise enough. For example, if the timestamps include milliseconds, this will almost always be the case.</p> <p>Apart from being unique in the whole EUDI Wallet ecosystem, the values of these elements also are fixed, meaning that when the same attestation is presented again, the Relying Party will receive the same values. This fact enables malicious Relying Parties and Attestation Providers, or, in case of a data breach, any malicious party (including third-parties) with access to the corresponding data, to link attribute values that were presented to different Relying Parties in different transactions. If this happens, the reasonable expectation of Users that their separate activities involving the EUDI Wallet will not be combined into a single profile of their behaviour, is violated.</p> <p>Linkability comes in two varieties, Relying Party linkability and Attestation Provider linkability. These are discussed in the next sections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#22-relying-party-linkability","title":"2.2 Relying Party linkability","text":"<p>Relying Party linkability means that a link can be established between multiple presentations of attestations by the same User to one or more Relying Party. For example, a Relying Party that requests and receives age_over_18 attributes from multiple PIDs may store the salt it receives. By comparing the received salt values, the Relying Party may find matching salt values. It can then conclude that the corresponding attestations must have been the same, and hence that it must have been interacting with the same person.</p> <p>The same principle also works with other elements, for example with one of the hash values in the attestation proof. If the Relying Party uses one of these elements, it will be able to see that it has received the same attestation multiple times even if it requested (and received) different attributes in each of these interactions.</p> <p>The same mechanisms can obviously also be applied by multiple colluding Relying Parties. By collecting and sharing values of unique attestation elements, they will be able to recognize that the same attestation was used at multiple Relying Parties. By combining the attribute values that were presented during each of these interactions, they will be able to build a profile of the User.</p> <p>Also note that linkability of attestations can be a danger to the User's privacy even if Relying Parties are not actively trying to track Users. If a Relying Party (or multiple Relying Parties) is the victim of a data breach by an attacker, and the data breach includes unique attestation values, the attacker may be able to track Users based on these.</p> <p>As will be made clear in the next chapter, an (honest) Attestation Provider can partly or fully prevent Relying Party linkability of the attestations it issues, at the cost of issuing multiple attestations to the same User.</p> <p>In addition, it should be noted that apart from technical and preventive measures, also organisational and repressive measures can be used to discourage Relying Parties from colluding and tracking Users. In particular, Relying Parties found offending can have their access certificate revoked, after which they will not be able to interact with Wallet Units anymore.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#23-attestation-provider-linkability","title":"2.3 Attestation Provider linkability","text":"<p>Attestation Provider linkability happens when a link can be established between the User and their attestation presentations, or several attestation presentations without the User, by combining the data stored by the Attestation Provider, data collected by Relying Parties or other third-parties accessing to data (including in case of a data breach or eavesdropping from one of the legitimate parties). In this scenario, the Attestation Provider stores all of the unique element values (i.e., salts, hashes, public key, signature value) in all attestations it issues, together with the user to which each of these values was issued.</p> <p>Then, after it has received an attestation, a Relying Party notifies the Attestation Provider about the value of any of the unique elements in that attestation. This allows the Attestation Provider to identify the corresponding User, and to track at which Relying Parties the User presents their attestations.</p> <p>Unlike for Relying Party linkability, Attestation Provider linkability cannot be prevented for attestations using salted-attribute hashes. The only way to technically mitigate this risk is by using Zero-Knowledge Proofs instead, as described in section 5. However, as for Relying Party linkability, organisational and repressive measures can be used to discourage Attestation Providers from colluding and tracking Users and to mitigate Attestation Provider linkability. In addition, many Attestation Providers are subject to regular audits, which means that collusion and tracking can more easily be detected. For example, detecting if Attestation Providers may purposely discard certain unique values of an attestation or forget the user for whom it has been issued.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#24-wuas-and-wallet-providers","title":"2.4 WUAs and Wallet Providers","text":"<p>The Wallet Unit Attestation (WUA) is an attestation issued to the Wallet Unit by the Wallet Provider. In the context of this discussion paper, there is no difference between WUAs and other types of attestations (including PIDs). The same risks of linkability apply for all of them, and the mitigation measures for Relying Party linkability described in the next chapter can also be used by Wallet Provider to mitigate the Relying Party linkability risks associated with presenting WUAs.</p> <p>Therefore, in this discussion paper the term 'Attestation Provider' includes Wallet Providers, in their specific responsibilities as issuers of WUAs.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#3-possible-mitigation-measures-for-relying-party-linkability-within-the-current-arf","title":"3 Possible mitigation measures for Relying Party linkability within the current ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#31-introduction","title":"3.1 Introduction","text":"<p>An (honest) Attestation Provider can mitigate Relying Party linkability mitigated partly or fully by the following two measures:</p> <ol> <li> <p>Ensuring that all attestation unique elements discussed in section     2.1 are unique across all attestations issued by the Attestation     Provider (and not only per attestation). This can be achieved, for     example, by ensuring that salt values and attestation identifiers     are pseudo-random numbers generated by a cryptographically secure     pseudo-random number generator (CSPRNG).</p> </li> <li> <p>Limiting the number of times a Wallet Unit may present a single     attestation.</p> </li> </ol> <p>Regarding the second point above: An Attestation Provider can employ and possibly combine  at least four different methods to achieve this:</p> <ul> <li> <p>Method A: Once-only attestations,</p> </li> <li> <p>Method B: Limited-time attestations,</p> </li> <li> <p>Method C: Rotating batches of attestations,</p> </li> <li> <p>Method D: Per-Relying Party attestations.</p> </li> </ul> <p>These methods are discussed in the next sections of this chapter. Based on these discussions and an inventory of the opinion of Member States, Chapter 6 contains a number of changes that will be made to the ARF.</p> <p>Note: other methods were discussed on batch attestations: provide attestations with different validity period within the batch, also including f.i. valid in future. These methods are not included in the High Level Requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#32-method-a-once-only-attestations","title":"3.2 Method A: Once-only attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#321-description","title":"3.2.1 Description","text":"<p>In this approach, the Attestation Provider requires the Wallet Unit to present each attestation only once.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#322-advantages","title":"3.2.2 Advantages","text":"<p>If this approach is used, none of the unique values in the attestation will be presented twice or more times to a Relying Party. Therefore, this method fully mitigates Relying Party linkability.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#323-technical-impacts-on-wallet-unit","title":"3.2.3 Technical impacts on Wallet Unit","text":"<p>If an attestation may be presented only once, in theory the Wallet Unit could request a new attestation as soon as possible after an attestation was presented to a Relying Party. However, this has obvious drawbacks for both operational and privacy reasons. Therefore, the Wallet Unit must store a batch of attestations, such that the User will be able to use their Wallet Unit several times in (quick) succession, without the need for the Wallet Unit to request fresh attestations from the Attestation Provider in between.</p> <p>To prevent the Wallet Unit from running out of unused attestations, it must have a lower limit for the number of unused attestations it holds and request a new batch from the Attestation Provider when the number of unused attestations goes below this limit, as soon as it is able to. This is called the 'saw-tooth model' in inventory management.</p> <p>If this approach is used and the Wallet Unit is offline for a prolonged period of time, the Wallet Unit may run out of unused attestations. To prevent this, the Wallet Unit will warn the User that they should connect their device to the internet, such that new attestations can be issued.</p> <p>If the Wallet Unit is not able to go online even after prompting the User, it will finally run out of unused attestations. This means that the User will no longer be able to present any attributes from that attestation, which may be a much higher risk for the User than the risk of being tracked. To prevent this, the Wallet Unit will use Method B, C or D (if supported, see below) as a fallback. The fallback means that if the Wallet Unit has run out of unused attestations and is not able to request new ones, it will start re-using either a single attestation or a batch of attestations, as described for these methods.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#324-drawbacks","title":"3.2.4 Drawbacks","text":"<p>A drawback of this method is that the number of attestations to be issued depends on the frequency of use. This has two effects:</p> <ol> <li> <p>The Attestation Provider probably gets a fairly accurate idea of how     often the User uses their attestation, including how such usage is     spaced in time. In other words, while this method prevents leakage     of information to Relying Parties, it in fact leaks information on     the use of the attestation to the Attestation Provider.</p> </li> <li> <p>This method may imply unpredictability regarding the load on     the Attestation Provider's systems. If a User uses their attestation     frequently, the Attestation Provider will have to issue many     attestations. On the flipside, if an attestation is seldomly used,     the Attestation Provider will have to issue very few attestations     per year. This is because the validity period of the attestation can     be chosen very long if an attestation is presented at most once     anyway, without negative effects to the User's privacy.</p> </li> </ol> <p>Another drawback of this method is that the Attestation Provider is dependent on the correct implementation by the Wallet Unit to ensure that it is used correctly.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#33-method-b-limited-time-attestations","title":"3.3 Method B: Limited-time attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#331-description","title":"3.3.1 Description","text":"<p>In another approach, a Wallet Unit may present each attestation multiple times, but only as long as it is valid. Moreover, the Wallet Provider limits the length of the attestation validity to such an extent that it is statistically unlikely that any of the unique values in the attestation can be effectively used by colluding Relying Parties to correlate and track the User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#332-advantages","title":"3.3.2 Advantages","text":"<p>The biggest advantages of this method are:</p> <ul> <li> <p>The Wallet Unit does not need to support any dedicated     functionality, like it must for once-only attestations,     rotating-batch attestations, or per-RP attestations. This also     implies that, to implement this method, the Attestation Provider is     not dependent in any way on the Wallet Unit, which may also be seen     as an advantage.</p> </li> <li> <p>This method will result in the issuance of a fixed number of     attestations per year, regardless of usage. This means a predictable     load for the Attestation Provider,</p> </li> <li> <p>Finally, the fixed number of attestations per year also implies that     the Attestation Provider does not get any information about the     frequency of use of their attestations.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#333-technical-impacts-on-wallet-unit","title":"3.3.3 Technical impacts on Wallet Unit","text":"<p>None, as described above.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#334-drawbacks","title":"3.3.4 Drawbacks","text":"<p>The main drawbacks of this method are</p> <ul> <li> <p>The risk of Relying Party linkability is not zero, however short the     attestation validity period is chosen. This may a both a real     (technical) risk and a reputational risk, in the sense that it may     be hard to counter accusations of a lack of privacy.</p> </li> <li> <p>It may be hard to estimate how often the User will present their     attestation, or to determine what an acceptable level of risk to     User privacy is. This is essentially a risk analysis to be done by     the Attestation Provider, considering the average usage of their     attestations.</p> </li> <li> <p>Since the Attestation Provider will not have usage information per     User, it can only use estimated averages. However, there always will     be Users will an above-average attestation usage. These Users will     therefore be subject to a higher level of risk of tracking.</p> </li> <li> <p>The Attestation Provider may have to issue many attestations that     will never get used, especially if the attestation validity period is short.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#34-method-c-rotating-batch-attestations","title":"3.4 Method C: Rotating-batch attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#341-description","title":"3.4.1 Description","text":"<p>Using this method, the Attestation Provider issues attestations in batches to the Wallet Unit, like when using once-only attestations (method A). However, in method C a Wallet Unit uses the attestations from a batch in a random order, until it has used all attestations in the batch once. Then it 'resets' the batch and starts using them again in a random order.</p> <p>A batch may consist, for instance, of 20 attestations. If so, any attestation given will be presented unpredictably in 5% of all transactions between a User and a Relying Party. This makes tracking difficult as long as only a minority of Relying Parties is colluding or breached. The level of privacy can be increased by issuing larger batches, at the expense of having to generate more attestations.</p> <p>In addition, the attestations in the batch have a validity period, and cannot be used after the validity period is over. This means that the Attestation Provider will need to replace the entire batch some time before the validity period ends. By decreasing the length of the validity period, the Attestation Providers increases the level of protection against Relying Party linkability.in a manner that is independent of the batch size.</p> <p>This approach has been used, for example, in Cooperative Intelligent Transport Systems (C-ITS).</p> <p>The OpenID4VCI specification used for attestation issuance in the EUDI Wallet ecosystem supports batch issuance.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#342-advantages","title":"3.4.2 Advantages","text":"<p>If this approach is used, the number of attestations to be issued is constant over time and does not depend on usage. Therefore, like method B, this method does not leak information to the Attestation Provider and ensures a constant and predictable load for the Attestation Provider's systems.</p> <p>Moreover, compared to method B this method increases the level of privacy, especially for attestations that are used quite frequently. Or, to put the same thing in a different way, if a batch of attestations is used in a rotating fashion, the validity period of an attestation can be longer without impacting the User's privacy.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#343-technical-impacts-on-wallet-unit","title":"3.4.3 Technical impacts on Wallet Unit","text":"<p>The Wallet Unit must implement dedicated functionality to support this method, for example to keep track of which attestations are used and unused, and when a batch is fully used and must be reset.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#344-drawbacks","title":"3.4.4 Drawbacks","text":"<p>This method has the following drawbacks:</p> <ul> <li> <p>The risk of Relying Party linkability is not zero, however big the     batch size and however short the attestation validity period is     chosen. This may a both a real (technical) risk and a reputational     risk, in the sense that it may be hard to counter accusations of a     lack of privacy.</p> </li> <li> <p>The Attestation Provider is dependent on the correct implementation     by the Wallet Unit to ensure that this method is used correctly.</p> </li> <li> <p>Also, the Attestation Provider must take a decision regarding batch     size and validity period, balancing User privacy against load on     their systems. Like for method B, this may be a difficult exercise,     and the chosen sizes and validity periods will not fully guarantee     the privacy of all Users.</p> </li> <li> <p>Moreover, every time the attestations expire, the Provider will need     to issue a full batch of attestations, instead of just a single one.     This is regardless of whether all attestations in the batch have     actually been used or not. Therefore, this approach seems suitable     only if the User presents attributes to Relying Parties frequently.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#35-method-d-per-relying-party-attestations","title":"3.5 Method D: Per-Relying Party attestations","text":"<p>When this method is used, the Wallet Unit will present different attestations to different Relying Parties. However, in case a Relying Party requests attributes from this attestation multiple times, the Wallet Unit SHALL present the same attestation to this Relying Party each time.</p> <p>In fact, this method can be seen as a mixture of methods A and B described above: it uses method A for different Relying Parties, and method B for recurring Relying Parties. This implies that all of the respective advantages and disadvantages of these methods apply also for this method. The 'weight' of these advantages and disadvantages will depend on whether the User interacts a few times with a large number of different Relying Parties, or, on the contrary, tends to interact a larger number of times with only a small number of Relying Parties.</p> <p>Regarding the technical impacts on the Wallet Unit, there is one additional requirement compared to the ones listed above for method A. This is that the Wallet Unit must keep track of which attestation it has presented to which Relying Party. It is possible to do so, since according to the ARF, the access certificates used by Relying Party to authenticate themselves to Wallet Units contain a unique identifier of the Relying Party. However, it represents an extra effort for the Wallet Unit, and it may complicate attestation inventory management.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#36-general-note-diminishing-the-costs-of-issuing-multiple-attestations","title":"3.6 General note: Diminishing the costs of issuing multiple attestations","text":"<p>The mitigation measures discussed in this chapter all imply that the Wallet Unit must manage multiple attestations. The operational costs of issuing and managing an attestation are determined to some extent by the requirement that, for security reasons, the Wallet Unit must generate a new cryptographic key pair for each attestation. It stores the private key in its WSCA/WSCD and sends the public key to the Attestation Provider for inclusion in the attestation. Key generation is an expensive operation for many WSCDs, and for some types of WSCD, the number of private keys that can be managed simultaneously is limited.</p> <p>These operational challenges can be lessened in (at least) two ways:</p> <ul> <li> <p>By allowing re-use of existing key pairs (under specific     conditions).</p> </li> <li> <p>By relying on a Hierarchical Deterministic Key (HDK) function as     described in clause 4.4.4.2 of [ETSI 119476]. Using a HDK     function, the Attestation Provider only needs to keep track of a     single public key and use it to derive unique per-attestation public     keys. Each public key is then sent to the Wallet Unit, and the     Wallet Unit can derive the corresponding private key in the     WSCA/WSCD.</p> </li> </ul> <p>These two possibilities will be discussed in Topic B (Re-issuance and batch issuance of PIDs and Attestations) and Topic C (Wallet Unit Attestation (WUA) and key attestation), respectively. They will therefore not be further discussed here.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#37-non-technical-mitigation-measures","title":"3.7 Non-technical mitigation measures","text":"<p>The technical mitigation measures discussed in this chapter aim to fully or partially prevent Relying Parties from linking attestations and thus track Users. However, in addition to preventive measures, it is also important to look at measures that can help to detect any such tracking by Relying Parties and Attestation Providers, to correct it insofar possible, and to repress it by appropriately punishing any party that is found to have broken applicable laws. In fact, this was already mentioned in sections 2.2 and 2.3. However, defining such measures is outside the scope of the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#4-ensuring-user-privacy-when-checking-the-revocation-status-of-attestations","title":"4 Ensuring User privacy when checking the revocation status of attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#41-introduction","title":"4.1 Introduction","text":"<p>For the revocation of PIDs and attestations (including WUAs), the ARF specifies three methods:</p> <ul> <li> <p>Only issue short-lived attestations having a validity period of 24     hours or less, such that revocation will never be necessary,</p> </li> <li> <p>Use an Attestation Status List mechanism specified.</p> </li> <li> <p>Use an Attestation Revocation List mechanism specified.</p> </li> </ul> <p>The latter two methods imply that a Relying Party must regularly download an Attestation Status List or Attestation Revocation List, to be able to verify that the Attestation Provider has not revoked the attestation. When discussing the risk of tracking Users, particular attention should be given to this process.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#42-general-requirements","title":"4.2 General requirements","text":"<p>To the maximum extent feasible given operational constraints, the Attestation Provider should not be able to learn anything about the User's use of an attestation based upon interactions between Relying Parties and the Attestation Provider related to attestation revocation checking.</p> <p>A Relying Party Instance therefore should not request the relevant Attestation Status List or Attestation Revocation List each time an attestation is presented to it by a Wallet Unit. Rather, the Relying Party operating the Relying Party Instance should download each new version of the list once, at a time and from a location unrelated to the presentation of an attestation by a User. The Relying Party should then distribute it to all of its Relying Party Instances using an Relying Party-internal distribution mechanism (1).</p> <p>(1) Note that strict compliance to this recommendation would imply that Relying Party Instances must always have locally available the latest version of the complete ASL. This may not always be technically feasible. Relying Parties must find a balance between User privacy and optimization of resource usage.</p> <p>Downloading an Attestation Status List or Attestation Revocation List SHALL NOT require the Relying Party or Relying Party Instance to authenticate itself in any way.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#43-requirements-specific-for-attestation-status-lists","title":"4.3 Requirements specific for Attestation Status Lists","text":"<p>To ensure User privacy specifically when the Attestation Provider uses Attestation Status Lists to enable revocation checking, this document recommends the following:</p> <ul> <li> <p>To ensure the privacy of the User, the Attestation List Provider     should randomly assign the index for each attestation. Note that     randomly assigning indices within a bitstring or byte array is more     complicated than creating random identifiers (e.g. serial numbers)     for attestations, as is needed to implement an Attestation     Revocation List. This is because duplicate indices and unnecessarily     long bitstrings or byte arrays should be prevented.</p> </li> <li> <p>An Attestation List Provider should represent a sufficiently large     number of attestations on each Attestation Status List to ensure     herd privacy. In this context, herd privacy means that if a Relying     Party requests a particular ASL, the Attestation List Provider is     not able to deduce which attestation (likely) was presented to that     Relying Party.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#5-mitigating-linkability-by-using-zero-knowledge-proofs","title":"5 Mitigating linkability by using Zero-Knowledge Proofs","text":"<p>Zero-Knowledge Proofs (ZKP) offer strong potential as a privacy-enhancing technique. This topic will be revisited in Topic G to determine the foundational requirements needed for its future integration, particularly focusing on defining specific requirements for implementing ZKPs by using any type of WSCD/WSCA.</p> <p>For further details, please see the 'Cryptographers' Feedback on the EU Digital Identity's ARF' (here), and the Commission's response to it here.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#6-additions-to-the-arf","title":"6 Additions to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#61-high-level-requirements-to-be-added-to-annex-2","title":"6.1 High-Level Requirements to be added to Annex 2","text":"<p>The High-Level Requirements in this section will be added to Annex 2 of the ARF v1.7.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#611-requirements-to-be-added-likely-to-topic-1023","title":"6.1.1 Requirements to be added (likely) to Topic 10/23","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-1","title":"REQUIREMENT 1","text":"<p>A PID Provider, Attestation Provider, or Wallet Provider SHALL ensure that all PID, attestation or WUA unique elements, including at least</p> <ul> <li> <p>the salt used for hashing every attribute,</p> </li> <li> <p>the hash values of all attributes,</p> </li> <li> <p>the attestation identifier or index used for revocation purposes         (if applicable),</p> </li> <li> <p>the attestation public key used for device binding and User         binding,</p> </li> <li> <p>the value of the Attestation Provider signature,</p> </li> </ul> <p>have values that are unique across all PIDs, attestations, or WUAs issued by that Provider.</p> <p>Note: This can be achieved, for example, by ensuring that salt values and attestation identifiers are pseudo-random numbers generated by a cryptographically secure pseudo-random number generator (CSPRNG).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-2","title":"REQUIREMENT 2","text":"<p>When issuing PIDs, attestations, or WUAs in a batch to a Wallet Unit, a PID Provider, Attestation Provider or Wallet Provider SHALL ensure that the timestamps in these PIDs, attestations, or WUAs do not enable Relying Parties to conclude that they are part of the same batch (and therefore belong to the same User).</p> <p>Note: This can be done, for example, by ensuring that a sufficiently high number of batches, each issued to a different Wallet Unit, share the same timestamp values (herd privacy).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-3","title":"REQUIREMENT 3","text":"<p>A Wallet Provider SHALL ensure that its Wallet Solution supports the following methods for limiting the number of times a User can present the same attestation to Relying Parties:</p> <ul> <li> <p>Method A: Once-only attestations, as specified in requirement 5     below.</p> </li> <li> <p>Method B: Limited-time attestations, as specified in requirement     6 below.</p> </li> </ul> <p>In addition, a Wallet Provider MAY ensure that its Wallet Solution supports the following methods:</p> <ul> <li> <p>Method C: Rotating-batch attestations, as specified in requirement 7     below.</p> </li> <li> <p>Method D: Per-Relying Party attestations, as specified in     requirement 8 below.</p> </li> </ul> <p>Note: Wallet Solutions, PID Providers, Attestation Providers, and Wallet Providers are free to define and use other methods as well. However, such other methods are out of scope of the ARF. For example, Member States have discussed adding a variation of method B where attestations are issued in a batch, but with overlapping validity periods rather than identical ones. Some of these attestations would then become valid in the future. This could help reduce the risk of a Wallet Unit not having a valid attestation anymore after having been offline for a (long) time. However, it was decided to not add this method.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-4","title":"REQUIREMENT 4","text":"<p>To the maximum extent possible, Wallet Providers, PID Providers, and Attestation Providers SHALL: -   ensure that Users do not notice which of the methods referenced in requirement 3     is used for their PIDs, attestations, or WUAs, -   ensure that no User action is needed for the re-issuance of new attestations.</p> <p>Note: The topic of re-issuance will be further discussed with Member States in Topic B.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-5","title":"REQUIREMENT 5","text":"<p>When using Method A for a given type of PID, attestation, or WUA,</p> <p>a. the Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to issue PIDs, attestations, or WUAs in batches to the Wallet Unit. All PIDs, attestations, or WUAs in a batch SHALL have the same attribute values and the same validity period.</p> <p>b. the Wallet Unit SHALL present each PID or, attestation, or WUA only once to a Relying Party, except when it has fallen back to Method B as specified below, or to another available method.</p> <p>c. the Wallet Unit SHALL have a lower limit for the number of unused PIDs, attestations, or WUAs it holds, and SHALL request the issuance of a new batch when this limit is reached. During the first issuance of a new PID, attestation, or WUA, see requirement 10, the PID Provider, Attestation Provider or Wallet Provider SHALL inform the Wallet Unit about the value of the lower limit and the size of the batch to be requested.</p> <p>d. if the Wallet Unit must request a new batch of PIDs, attestations, or WUAs, but is not able to do so because it is offline, the Wallet Unit SHALL warn the User that they are about to lose the possibility to present this PID or attestation to a Relying Party (or any PID or attestation, in case of the WUA) and request them to connect their device to the internet.</p> <p>e. if the Wallet Unit has run out of unused PIDs, attestations, or WUAs, but is not able to request a new batch because it is offline, it SHALL fall back to method B (see requirement 6), or another available method. This means that, when requested by a Relying Party, the Wallet Unit SHALL again present one of the already used PIDs, attestations of WUAs. The Wallet Unit SHALL return to using method A as soon as it is able to go online and request a new batch of PIDs, attestations or WUAs.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-6","title":"REQUIREMENT 6","text":"<p>When using Method B for a given type of PID, attestation, or WUA,</p> <p>a. the Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to issue a single PID, attestation, or WUA to the Wallet Unit.</p> <p>b. when requested to do so, the Wallet Unit SHALL present that PID, attestation or WUA multiple times to the same Relying Party, or to different Relying Parties.</p> <p>c. the Wallet Unit SHALL request the PID Provider or Attestation Provider to issue a new PID, attestation , or WUA some time before the one existing in the Wallet Unit expires. The PID Provider, Attestation Provider, or Wallet Provider SHALL inform the Wallet Unit about the moment at which the Wallet Unit must request the issuance of a new PID, attestation, or WUA, relative to the expiration date of the existing one.</p> <p>Notes:</p> <ul> <li> <p>If method B is used with a batch instead of a single PID,     attestation, or WUA, it may become method C (see requirement 7)     or Method D (see requirement 8).</p> </li> <li> <p>It is the responsibility of Relying Parties to validate whether a     presented PID, attestation, or WUA is temporally valid. There is no     requirement that a Wallet Unit must not present a PID, attestation,     or WUA if it is no longer valid.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-7","title":"REQUIREMENT 7","text":"<p>When using Method C for a given type of PID, attestation, or WUA,</p> <p>a. The Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to issue PIDs, attestations, or WUAs in batches to the Wallet Unit. All PIDs, attestations, or WUAs in a batch SHALL have the same attribute values and the same validity period.</p> <p>b. When a presentation of attributes is requested by Relying Parties, the Wallet Unit SHALL present each PID, attestation, or WUA in a batch once, in a random order.</p> <p>c. When all PIDs, attestations, or WUAs in a batch have been presented once, the Wallet Unit SHALL reset the batch, and start presenting each PID, attestation, or WUA in the batch again in a random order.</p> <p>d. The Wallet Unit SHALL request the PID Provider, Attestation Provider or Wallet Provider to issue a new batch of PIDs, attestations, or WUAs, some time before the batch in the Wallet Unit expires. The PID Provider, Attestation Provider or Wallet Provider SHALL inform the Wallet Unit about the size of the batch and about the moment at which the Wallet Unit must request the issuance of a new batch, relative to the expiration date of the existing one.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-8","title":"REQUIREMENT 8","text":"<p>When using Method D for a given type of PID, attestation, or WUA,</p> <p>a. The Wallet Unit SHALL present different PIDs, attestations, or WUAs to different Relying Parties upon their request. This means that it SHALL comply with requirement 5 (method A) for such Relying Parties.</p> <p>b. In case a given Relying Party requests attributes from a given type of PID, attestation, or WUA multiple times, the Wallet Unit MAY present the same PID, attestation or WUA to this Relying Party. This means that it SHALL comply with requirement 6 (method B) or requirement 7 (method C) for such a Relying Party.</p> <p>c. The Wallet Unit SHALL keep track of which PID, attestation, or WUA it has presented to which Relying Party, using the unique Relying Party identifier from the Relying Party access certificate.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-9","title":"REQUIREMENT 9","text":"<p>A PID Provider, Attestation Provider or Wallet Provider SHALL have a policy describing which of the methods specified in requirement 3 it will use to limit the number of times a Wallet Unit may present a single PID, attestation, or WUA to relying Parties. For each supported method, the policy SHALL also specify how the values for respective parameters for that method, such as validity period and batch size, will be chosen. The goal of the policy SHALL be to ensure that the risk of Relying Party linkability is mitigated to an acceptable level, given the (expected) usage of the PID, attestation, or WUA by the User. To determine what an acceptable level of risk is, the PID Provider, Attestation Provider, or Wallet Provider SHALL carry out a risk analysis regarding Relying Party linkability.</p> <p>Note: If a PID Provider, Attestation Provider or Wallet Provider issues multiple attestation types, these requirements apply for each type of attestation separately.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-10","title":"REQUIREMENT 10","text":"<p>The Commission SHALL create or reference a profile or extension of the OpenID4VCI specification enabling a PID Provider, Attestation Provider, or Wallet Provider, to indicate in their OpenID4VCI Issuer metadata which of the methods listed in requirement 3 the Wallet Unit must use for the PID, attestation, or WUA issued. Indicated methods SHALL be ordered by preference. This profile or extension SHALL also enable the PID Provider, Attestation Provider, or Wallet Provider to set the value of parameters to be used by the Wallet Unit for each method (if applicable).</p> <p>Note: For example, the parameters to be set for method A include the lower limit for unused attestations and the batch size to be requested (see requirement 5b).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-11","title":"REQUIREMENT 11","text":"<p>PID Providers and Attestation Providers SHALL indicate in their OpenID4VCI Issuer metadata at least that either method A or method B must be used for this type of attestation. PID Providers and Attestation Providers MAY additionally indicate that it prefers using method C and/or method D over method A or method B. In such a case, a Wallet Unit supporting method C and/or method D SHALL use that method, while a Wallet Unit not supporting these methods SHALL use method A or method B, as applicable.</p> <p>Example: An Attestation Provider indicates methods {D, C, A} in their metadata, in that order. A Wallet Unit that supports methods C and D (as well as A and B) then uses method D for this type of attestation. A Wallet Unit supporting methods A, B and C uses method C. A Wallet Unit supporting only methods A and B uses method A.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#612-requirements-to-be-added-likely-to-topic-1","title":"6.1.2 Requirements to be added (likely) to Topic 1","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-12","title":"REQUIREMENT 12","text":"<p>When receiving a PID, attestation, or WUA a Relying Party Instance SHALL discard the values of all unique elements, including at least the ones mentioned in requirement 1 above, as well as any timestamps, as soon as they are no longer needed. The Relying Party Instance SHALL NOT communicate these values to the Relying Party or to any other party inside or outside the EUDI Wallet ecosystem.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#613-requirements-to-be-added-likely-to-topic-7","title":"6.1.3 Requirements to be added (likely) to Topic 7","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-13","title":"REQUIREMENT 13","text":"<p>A Relying Party Instance SHOULD NOT request the relevant Attestation Status List or Attestation Revocation List each time an attestation is presented to it by a Wallet Unit. Rather, the Relying Party operating the Relying Party Instance SHOULD download each new version of the list once, at a time and from a location unrelated to the presentation of a PID or attestation by a User. The Relying Party SHOULD then distribute the list to all of its Relying Party Instances, using an Relying Party-internal distribution mechanism.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-14","title":"REQUIREMENT 14","text":"<p>A PID Provider, Attestation Provider or Wallet Provider SHALL NOT require the Relying Party or Relying Party Instance to authenticate itself before downloading an Attestation Status List or Attestation Revocation List.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-15","title":"REQUIREMENT 15","text":"<p>When using an Attestation Status List for revocation, the Attestation List Provider SHALL randomly assign the index for each PID or attestation, to prevent this index from becoming a correlator.</p> <p>Note: Randomly assigning indices within a bitstring or byte array is more complicated than creating random identifiers (e.g. serial numbers) for attestations, as is needed to implement an Attestation Revocation List. This is because duplicate indices and unnecessarily long bitstrings or byte arrays must be prevented.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-16","title":"REQUIREMENT 16","text":"<p>When using an Attestation Status List for revocation, the Attestation List Provider SHALL represent a sufficiently large number of PIDs, attestations, or WUAs on each Attestation Status List to ensure herd privacy.</p> <p>Note: In this context, herd privacy means that if a Relying Party requests a particular ASL, the Attestation List Provider is not able to deduce which PID or attestation (likely) was presented to that Relying Party.</p> <p>Note: Complying with this requirement may be difficult in case the number of PIDs, attestations, or WUAs to be represented on the list is small. In such a case, as suggested in [RFC_ASL], decoy entries can be added to the list to obfuscate the real number of referenced PIDs, attestations, or WUAs.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#614-requirements-to-be-added-likely-to-topic-10","title":"6.1.4 Requirements to be added (likely) to Topic 10","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-17","title":"REQUIREMENT 17","text":"<p>After issuing a PID, attestation, or WUA a PID provider, Attestation Provider or Wallet Provider SHALL discard the values of all unique elements, including at least the ones mentioned in requirement 1 above, as well as any timestamps, as soon as they are no longer needed. The Provider SHALL NOT communicate these values to any other party inside or outside the EUDI Wallet ecosystem.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#62-high-level-requirements-to-be-deleted","title":"6.2 High-Level Requirements to be deleted","text":"<p>WUA_09: A Wallet Provider SHALL consider all relevant factors, including the risk of a WUA public key becoming a vector to track the User, when deciding on the validity period of a WUA. A Wallet Provider MAY use short-lived WUAs to mitigate such risks.</p> <p>WU_Revocation_04: The Wallet Provider SHALL manage the issuance processes for WUAs in such a way that the WUAs cannot be misused by colluding Relying Parties (and Attestation Providers) to track a User.</p> <p>These two requirements can be deleted if the ones proposed in section 6.1 are added, because the proposed requirements include the Wallet Provider and are much more detailed than the above two requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#63-descriptions-to-be-added-to-the-arf-main-document","title":"6.3 Descriptions to be added to the ARF main document","text":"<p>A summary of the descriptions in chapter 2 will be added to section 6.1.3 of the ARF main document, version 1.7. A summary of the descriptions in chapter 3 will be added to section 6.6.5 of the ARF main document, version 1.7.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#7-references","title":"7 References","text":"Reference Description [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v0.91, final draft [ISO18013-5] ISO/IEC 18013-5, Personal identification \u2014 ISO-compliant driving licence \u2014 Part 5: Mobile driving licence (mDL) application, First edition, 2021-09 [SD-JWT VC] SD-JWT-based Verifiable Credentials (SD-JWT VC),  draft-terbu-sd-jwt-vc-06, O. Terbu et al., 13 November 2024, draft [ETSI 119476] ETSI TR 119 476, Analysis of selective disclosure and zero-knowledge proofs applied to Electronic Attestation of Attributes, v1.2.1, 2024-07 [W3C VCDM 1.1] W3C Verifiable Credentials Data Model\u202f1.1, 2024-07 [RFC_ASL] Token Status List, draft-ietf-oauth-status-list-06, T. Looker et al., 3 December 2024, draft"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/","title":"B re issuance and batch issuance of pids and attestations","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics / b-re-issuance-and-batch-issuance-of-pids-and-attestations Version 0.8, updated 20 January 2025</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#b-re-issuance-and-batch-issuance-of-pids-and-attestations","title":"B - Re-issuance and batch issuance of PIDs and Attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for eIDAS Coordination Group regarding Topic B: Re-issuance and batch issuance of PIDs and Attestations.</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>High-level requirements on re-issuance and batch issuance need to be discussed, as this topic is currently not addressed in the ARF. For example, requirements around authentication of the User and re-use of existing private keys may be different for first-time issuance and re-issuance, batch issuance or synchronous issuance of an attestation</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#12-related-risks-in-the-risk-register","title":"1.2 Related risks in the Risk Register","text":"<p>The risk register for European Digital Identity Wallets [RiskRegister] contains no risks regarding re-issuance. This is because the risk register focuses on risks related to security and privacy, not on operational issues such as the difference between first-time issuance and re-issuance of attestations.</p> <p>However, the risks mentioned in [Topic A] are related to the topic of this  document as well. This is because regular re-issuance of PIDs and attestations  is the main mitigation for the Relying Party linkability risks discussed in [Topic A].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalized key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalized) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#14-definitions","title":"1.4 Definitions","text":"<p>For the purpose of this document, the following definitions apply:</p> <ul> <li> <p>Administrative validity of a document: the date up to which the attributes of  the document are valid, which is represented as one of the attributes in the document. </p> <p>Note: some documents do not have an administrative validity date (e.g., a diploma). </p> </li> <li> <p>Technical validity of attestation: the date upon which the attestation is valid.</p> <p>Note: attestations have a technical validity which is chosen based on risk analyses.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#15-document-structure","title":"1.5 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li> <p>Chapter 2 discusses batch issuance and re-issuance of PIDs and     attestations, as well as how these processes are supported by the     [OpenID4VCI] specification.</p> </li> <li> <p>Chapter 3 discusses some of the reasons for re-issuance.</p> </li> <li> <p>Chapter 4 discusses some of the differences between first-time     issuance and re-issuance, especially regarding User authentication     towards PID Provider and Attestation Provider, regarding User     authentication and key management by WSCAs, and regarding triggers     for the re-issuance process.</p> </li> <li> <p>Chapter 5 lists the additions and changes that will be made to the     ARF as a result of discussing this topic with Member States.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#2-re-issuance-and-batch-issuance-of-pids-and-attestations","title":"2 Re-issuance and batch issuance of PIDs and attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#21-description","title":"2.1 Description","text":"<p>Version 1.5 of the ARF contains a large number of requirements regarding the issuance of PIDs and attestations, primarily in Topic 10/23 and also in Topic 9. These requirements do not distinguish between the first time a PID or attestation is issued and re-issuance of a PID or attestation that is already present in a Wallet Unit. Neither do these requirements explicitly address the topic of batch issuance.</p> <p>Re-issuance means the replacement of a PID or attestation that already exists in a Wallet Unit by a PID or attestation having the same document type. Re-issuance is always performed by the same PID Provider or Attestation Provider that issued the existing PID or attestation. The value of the attributes in the new attestation will typically be the same as in the original attestation. However, this is not required, the PID Provider or Attestation Provider may change one or more attribute values. Re-issuance, as described in this document, is only applied within  the administrative validity of a document. As example, a mobile Driving Licence (mDL)  has attestations which have a technical  validity  shorter than administrative validity of the actual document (i.e., the driving licence):  re-issuance is used for obtaining a \"fresh\" attestation, whereas the administrative process for obtaining a new attestation that corresponds  to a new driving licence is out of scope of this document. </p> <p>Batch issuance means that instead of issuing a single PID or attestation to a Wallet Unit, a PID Provider or Attestation Provider issues a batch of them. All PIDs or attestations in a batch have the same document type, attribute values and validity period. In general, if the original PID or attestation was issued in a batch, then the PID Provider or Attestation Provider will re-issue that PID or attestation in a batch as well.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#22-support-by-openid4vci","title":"2.2 Support by OpenID4VCI","text":"<p>The ARF requires that Wallet Units, PID Providers, and Attestation Providers use the [OpenID4VCI] specification for issuance of PIDs and attestations (ISSU_01). [OpenID4VCI] supports re-issuance of attestations through so-called Refresh Tokens. These are tokens that are optionally issued during the first-time issuance of a PID or attestation, next to the Access Tokens used in OpenID4VCI to protect access to the PID Provider or Attestation Provider. When the Wallet Unit needs to request re-issuance of a PID or attestation, it must start the process by exchanging the Refresh Token for a new Access Token.</p> <p>Given the reasons for re-issuance discussed in the next chapter, it seems reasonable to assume that re-issuance should be possible for any PID or attestation issued to a Wallet Unit. An Attestation Rulebook shall indicate if re-issuance shall be supported for a specific PID or attestation. To this end, the ARF will recommend that during first-time issuance of a PID or  attestation that supports re-issuance, each Access Token shall be accompanied by a corresponding Refresh Token.</p> <p>The [OpenID4VCI] specification also supports batch issuance of attestations, by optionally including multiple public keys and proofs of possession in the proofs parameter in the Credential Request. ARF explicitly requires support for this functionality (ISSU_04)</p> <p>Given the discussions in [Topic A], it seems reasonable to assume that batch issuance is in many cases desirable.  An Attestation Rulebook shall indicate if batch issuance shall be used for a  specific PID or attestation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#3-reasons-for-re-issuance","title":"3 Reasons for re-issuance","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#31-overview","title":"3.1 Overview","text":"<p>There may be different reasons for re-issuing a PID or attestation, for example:</p> <ul> <li> <p>The current PID(s) or attestation(s) are near the end of their     technical validity period, or the Wallet Unit is running out of once-only     attestations. See section 3.2.</p> </li> <li> <p>The value of one or more of the attributes in the PID or attestation     has changed. See section 3.3.</p> </li> <li> <p>The security architecture of the Wallet Solution may use PIDs and/or     attestations that are issued just-in-time, at the moment that PID or     attestation is being requested by a Relying Party. This is sometimes     called synchronous issuing. See section 3.4.</p> </li> </ul> <p>The main reason for batch issuance of PIDs or attestations within the EUDI Wallet ecosystem is to (partly) mitigate Relying Party linkability. For this, see [Topic A].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#32-pid-or-attestation-nearing-its-end-of-technical-validity-or-wallet-unit-running-out-of-pids-or-attestations","title":"3.2 PID or attestation nearing its end of technical validity or Wallet Unit running out of PIDs or attestations","text":"<p>As specified in [ISO/IEC 18013-5] or [SD-JWT VC], each PID or attestation contains metadata indicating its technical validity period. Determining the length of the technical validity period is the responsibility of the PID Provider or the Attestation Provider; neither these standards, nor the ARF, nor the PID Rulebook specify anything about this. The technical validity period chosen by the PID Provider or Attestation Provider will depend on several factors, primarily the security architecture of the Wallet Solution and the strategy chosen to mitigate Relying Party linkability, as discussed in [Topic A].</p> <p>Given the above factors, it can generally be assumed that the technical validity period of a PID or attestations will be much shorter than the administrative  validity of the corresponding document, meaning the period of time that a User wants to keep that PID or attestation in their Wallet Unit. That implies that new PIDs and attestations will need to be issued periodically, to replace the ones that are reaching their end of technical validity.</p> <p>A similar reason for re-issuing PIDs and attestations occurs when the PID Provider or Attestation Provider uses once-only attestations (as defined in [Topic A]), which can be presented only once to a Relying Party. In that case, the Wallet Unit will regularly need new PIDs or attestations, to avoid running out.</p> <p>Re-issuance of PIDs or attestations for these reasons is a purely technical matter. To the maximum extent possible, the User should not notice that a PID or attestation has been re-issued, nor should they have to take any action to ensure that re-issuance happens in time. Nevertheless, re-issuance events should be logged as stated in DASH_02, and  a User should be able to access the this log (DASH_02b).  These conditions are very different from a first-time issuance of a PID or attestation, where the User must take the initiative to request the PID or attestation, and is potentially involved in the process in other ways as well. These aspects are discussed in chapter 4.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#33-a-change-in-attribute-values","title":"3.3 A change in attribute values","text":"<p>During the lifetime of a PID or attestation, the value of some of the attributes may change. For example, at the date of birth of the User, an age attestation attribute (i.e., an attribute indicating whether the User has reached a certain age) may have to be changed from value False to value True. In another example, the User of a mobile driving licence may have passed the examination for a different vehicle category, or, conversely, have lost the right to drive because of medical reasons or severe traffic violations.</p> <p>Re-issuance of a PID or attestation for this reason will have an impact on the User, because they will notice that their attribute values have been changed. In this case Users should consent.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#34-synchronous-issuing","title":"3.4 Synchronous issuing","text":"<p>A third reason for re-issuing a PID or attestation is where the PID Provider or Attestation Provider uses synchronous issuing. In such an architecture, the Wallet Unit requests the issuance of a new PID or attestation after it has received a request for that PID or attestation from a Relying Party. In such an architecture, the PID or attestation is very short-lived and is used only once.</p> <p>Within the scope of this document, this reason for re-issuance is very similar to the reasons discussed in section 3.2. Users should not notice that a PID or attestation is being re-issued, nor should they have to take any action to ensure that re-issuance happens. However, they should be offered the option to receive notifications, as well as to disable this processes. Similarly, re-issuance events should be logged. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#4-differences-between-first-time-issuance-and-re-issuance-or-batch-issuance","title":"4 Differences between first-time issuance and re-issuance or batch issuance","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#41-user-authentication-by-pid-provider-or-attestation-provider","title":"4.1 User authentication by PID Provider or Attestation Provider","text":"<p>In [Topic A] a high-level requirement was established that, to the maximum extent possible, Users will not be involved in managing the re-issuance of new attestations. This is an important principle. Requiring that the User is involved in re-issuance processes would mean that a User is requested to perform actions that they did not initiate, and for which they probably don't understand the reason. This would lead at least to a bad user experience, and most likely also to operational problems, such as Users not cooperating. Users may start to distrust their Wallet Unit if it unexpectedly keeps asking the User to authenticate, or if they are not able to present their PIDs or attestations because they (perhaps unknowingly) blocked a request for re-issuance.</p> <p>The requirement of non-involvement of Users in re-issuance processes has implications for PID Providers and Attestation Providers. One of these implications is that the requirements regarding User authentication will be different for first-time issuance and re-issuance. At least for PID Providers, and for many Attestation Providers as well, it is required to identify and authenticate the User during a first-time issuance process. For PID Providers, it is even required to authenticate the User on Level of Assurance High. However, for re-issuance process, performing User authentication is not possible if the User must not be involved.</p> <p>If the User is not authenticated during re-issuance process, there is a risk that the PID Provider or Attestation Provider issue the new PID or attestation to the wrong person. To prevent this, they will have to implement alternative security mechanisms. One option for this is to require that the Refresh Tokens used by [OpenID4VCI] are bound to the same WSCA to which the existing PID or attestation is bound. This can be done by requiring that OAuth 2.0 Demonstrating Proof of Possession (DPoP) [RFC 9449] is used for these tokens, and that the public key in the DPoP proof matches the public key in (one of) the PID(s) or attestation(s) issued to the Wallet Unit previously.</p> <p>Such a mechanism is common in managing certificate signing requests in Public Key Infrastructures. It means that PID Providers or Attestation Providers can be sure that the new PID or attestation will be bound to the same WSCA, and thus to the same User, as the existing one.</p> <p>For first-time batch issuance of PIDs or attestations, it seems reasonable to require that the User needs to authenticate towards the PID Provider or attestation provider only once, regardless of the size of the batch, i.e., the number of PIDs or attestations issued simultaneously to the Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#42-user-authentication-and-key-management-by-the-wsca","title":"4.2 User authentication and key management by the WSCA","text":"<p>The ARF v1.4 (and v1.5 as well) contains a requirement (WTE_02 / WUA_02) stating that \"a WSCA SHALL authenticate the User before performing any cryptographic operation involving a private or secret key of (...) a PID or an attestation in a Wallet Unit.\"</p> <p>If Users must not be aware of re-issuance processes for their existing PIDs and attestations, this requirement may be problematic. This is because the ARF assumes that each PID or attestation is bound to a key pair that is generated by the WSCA. Therefore, for every new PID or attestation, the WSCA must generate a new key pair. And key pair generation is a cryptographic operation that, per the requirement above, requires User authentication.</p> <p>A solution for this challenge could be sought in several directions:</p> <ol> <li> <p>By changing requirement WUA_02, such that it does not apply to key     generation operations.</p> </li> <li> <p>By allowing re-use of existing key pairs, meaning that the PID     Provider or Attestation uses the same public key in multiple PIDs or     attestations.</p> </li> <li> <p>By relying on a Hierarchical Deterministic Key (HDK) function as     described in clause 4.4.4.2 of [ETSI 119476].      Using a HDK function, the PID Provider or Attestation Provider only      needs to obtain a single public key from the WSCA, along with      non-sensitive metadata required to apply HDK. This happens during      first-time issuance of a first PID or attestation, where the User is involved in      the process anyway and a request to authenticate will not come unexpectedly.      During re-issuance or (batch) issuance of associated PID or attestations,      the PID Provider or Attestation Provider then uses this public      key to derive unique per-attestation public keys from the received public key,     without involvement of the Wallet Unit or the WSCA. These newly derived      public keys are then sent to the Wallet Unit, along with non-sensitive      metadata required to apply HDK, and the WSCA can effectively derive      the corresponding private keys from the existing private      key (i.e. the one generated during first-time issuance). The WSCA then     uses these private keys as normal during a presentation of     attributes.</p> </li> <li> <p>By using WSCA to authenticate Users before using the Wallet Unit.  Requirement WUA_03 states that \"A Wallet Unit SHALL authenticate the User  before performing any operation excluding cryptographic operations. The Wallet  Unit MAY rely on a WSCA to do so (...)\". Therefore, the WSCA may perform the necessary cryptographic operations immediately after authenticating the user on the Wallet Unit behalf. </p> </li> </ol> <p>Option 1 may not count as a good solution. Cryptographic key generation by the WSCA is a sensitive operation, and it seems unwise to allow this to happen without User authentication, if we can avoid that. Also, it is not clear whether all types of WSCA (such a remote HSMs but also embedded secure element) can be made to operate in such a way that they require User authentication before signing and key agreement operations, but not before key generation operations.</p> <p>Option 2 entails multiple risks and should be avoided.</p> <p>Option 3 seems promising, but Hierarchical Deterministic Keys have not been part of the ARF before. If we want to require support from Wallet Units and Attestation Providers for this technology, it needs to be further investigated. High Level Requirements for this option will be provided in a future specification.</p> <p>Option 4 is currently the recommended approach. For this reason WUA_02 and WUA_03 will be merged, and Wallet Units will be required to authenticate Users using WSCA. </p> <p>Requirement WUA_02 may also be problematic for batch issuance, if it means that User authentication is required before generation of an individual key pair. That would mean that for a batch of 20 PIDs or attestations, the User would be required to authenticate 20 times. This is clearly not acceptable from a user experience point of view, especially not since the User is not even aware of the concept of batch issuance, nor of the reasons for it.</p> <p>However, ARF 1.5.0 already contains the following note to requirement WUA_02: \"Many actions of the Wallet Instance, such as processing a Relying Party request and presenting an attestation, require multiple cryptographic operations, for example ephemeral key generation followed by key agreement and message encryption. This requirement does not imply that separate User authentication is necessary before each of these operations. Rather, a successful User authentication will be valid for all cryptographic operations necessary for a Wallet Unit action. It is up to the Wallet Provider to determine what constitutes a 'Wallet Unit action', finding a balance between security (more User authentications) and User convenience (fewer User authentications). During certification of the Wallet Solution, it will be verified that the solution provides an adequate level of security.\"</p> <p>A new requirement has been added related to that (Requirement 6).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#43-triggers-for-the-issuance-process","title":"4.3 Triggers for the issuance process","text":"<p>The process of first-time issuance of a PID or attestation is triggered by the User, who wants to obtain a PID or attestation and triggers the Wallet Unit to start the process specified in [OpenID4VCI]. If we take the requirement that Users are not involved in re-issuance processes absolutely, trusting on the User to trigger re-issuance is not an option. That leaves two parties that could potentially do this: the PID Provider or Attestation Provider, or the Wallet Unit.</p> <p>However, it is not clear how the PID Provider or Attestation Provider can trigger the Wallet Unit to start the re-issuance processes. A Wallet Provider will typically be able to send a push message to a Wallet Unit, which will cause the Wallet Unit to contact the Wallet Provider's backend to look for any updates or other actions. But PID Providers and Attestation Providers are different from Wallet Providers, generally speaking, and will typically not have this option.</p> <p>Therefore, it seems better to require that the Wallet Unit triggers the process of re-issuing a PID or attestation, for example when the existing PID or attestation is near the end of its validity period, or when the Wallet Unit is running out of once-only PIDs or attestations. [Topic A] already contains the appropriate requirements.</p> <p>Note that these requirements do not apply when synchronous issuance is used. In that case, the Wallet Unit triggers the re-issuance of a PID or attestation when attributes from that PID or attestation are requested by a Relying Party.</p> <p>Finally, the situation where re-issuance is necessary because of a change in the value of one or more of the attributes. This is more complicated, because the Wallet Unit does not have a way to know when this happens. There basically seem to be three options:</p> <ol> <li> <p>The Wallet Unit sends at regular intervals a request to the PID     Provider or Attestation Provider, to see if an updated version of     the PID or attestation is available.</p> </li> <li> <p>The PID Provider or Attestation Provider contacts the Wallet     Provider to trigger the Wallet Unit to request re-issuance of the     PID or attestation.</p> </li> <li> <p>The PID Provider or Attestation Provider contacts the User via an     out-of-band communication channel to inform them that they need to     request an update of their PID or attestation.</p> </li> <li> <p>The attestation provider revokes the attestation, if attribute values      are out-of-date. Thus the wallet unit can monitor the revocation status      of the attestation and trigger a re-issuance when it detects that the      attestation is revoked</p> </li> </ol> <p>Option 1 has obvious drawbacks, in particular:</p> <ul> <li> <p>(Potentially) millions of Wallet Units sending such information     requests, in most cases probably for nothing.</p> </li> <li> <p>Moreover, the PID Provider or Attestation would have to determine     the frequency of such requests, which is not trivial. Too low a     frequency may mean that the User does not receive the updated     version of their PID or attestation in time i.e., before the new     values become valid. Too high a frequency increases the load on the     systems of the PID Provider or Attestation Provider unnecessarily.</p> </li> <li> <p>Finally, such a request, and also the PID Provider or Attestation     Provider endpoint to which it can be addressed, have not been     specified yet. Option 4 is probably a solution to that. </p> </li> </ul> <p>Option 2 requires direct communication between the Wallet Provider and the PID Provider or Attestation Provider. The ARF v1.5 does not foresee such communication, primarily since it means that the Wallet Provider gets information about the PIDs and attestations present on each of their Wallet Units. From an architecture point of view, this would therefore be a major change. Furthermore, this option introduces privacy risks. On the other hand, the Commission has received feedback several times stating that in the long run, when the EUDI Wallet ecosystem is successful and a PID Provider or Attestation Provider will have millions of subscribers, the current issuance model will be unsustainable anyway. This is because remotely issuing and managing millions of attestations, residing on mobile devices that are controlled by their User, requires specialized knowledge and a dedicated infrastructure that will not be easy to deploy for many PID Providers or Attestation Providers. If true, this would mean that these Providers will outsource this task to the Wallet Providers. They will send the PIDs or attestations containing the new attribute values to the Wallet Provider, and the Wallet Provider would be responsible for delivering these PIDs or attestations to the respective Wallet Unit in time. Obviously, the attribute values would be encrypted, such that the Wallet Provider cannot read them. In conclusion this option should not yet be considered. It should be re-examined if such an interface is defined.</p> <p>Option 3 violates the principle that the User is not involved in the re-issuance of PIDs or attestations. In this case, however, that is defensible, since the User will (have to) note the changed attribute value anyway. This approach nevertheless has some drawbacks as well:</p> <ul> <li> <p>It is only usable if during the first-time issuance of the PID or     attestation, the PID Provider or Attestation Provider captured     contact information of the User, such as a telephone number or     e-mail address. This may not be the case for all attestations.</p> </li> <li> <p>The User may have objections to the update of their PID or     attestations. Section 3.3 already gave the example of a User having     lost the right to drive because of medical reasons or severe traffic     violations. Such a User may refuse to trigger the re-issuance     process because they want to continue using their existing PID or     attestation with the 'old' values. Obviously, the PID Provider or     Attestation Provider can (and should) revoke the existing PID or     attestation. But this implies that they should have a policy     determining how they will deal with situations like this.</p> </li> </ul> <p>The use of this option, as long as it does not involve the Wallet Unit for delivering such a notification is left as an implementation choice. </p> <p>Option 4 should be the recommended approach. Option 4 is similar to Option 1 but it does not suffer by the lack of a PID Provider or Attestation Provider endpoint. However, depending on the revocation reason, re-issuance of an attestation may not succeed: Wallet Solutions should be able to handle this condition. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#44-handling-existing-pids-or-attestations-after-re-issuance-of-new-ones","title":"4.4 Handling existing PIDs or attestations after re-issuance of new ones","text":"<p>In general, re-issuance of a PID or attestation will take place when the existing PID or  attestation is still valid. If that were not the case, there would be a time window where  User does not have any valid PIDs or attestations that they can present to Relying Parties.</p> <p>After successful re-issuance of a PID or attestation, the Wallet Unit must delete the  existing PID or attestation, meaning the one that the re-issued PID or attestation  intends to replace. This is for a simple reason: the value of some of the attributes  in the new PID or attestation may be different from the value in the existing one.  And obviously, the Wallet Unit must not present attestations containing attribute  values that the Wallet Provider no longer wants to attest to.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#5-additions-and-changes-to-the-arf","title":"5 Additions and changes to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#51-high-level-requirements-to-be-added-to-annex-2","title":"5.1 High-Level Requirements to be added to Annex 2","text":"<p>The following High-Level Requirements will be added to Annex 2 of the ARF v1.8.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#511-requirements-to-be-added-likely-to-topic-1023","title":"5.1.1 Requirements to be added (likely) to Topic 10/23","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-1","title":"Requirement 1","text":"<p>In case a PID Provider or Attestation Provider must change an attribute in an issued PID or  attestation, it SHALL revoke the PID or attestation and notify the User about this. The Wallet  Unit SHALL enable the User to request re-issuance of that PID or attestation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-2","title":"Requirement 2","text":"<p>A Wallet Provider SHALL ensure that its Wallet Solution supports PID or attestation  first-time batch issuance with at most one User authentication.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-3","title":"Requirement 3","text":"<p>A Wallet Provider SHALL ensure that a Wallet Unit, after successful re-issuance of a PID  or attestation, deletes the pre-existing PIDor attestation, meaning the one that  the re-issued PID or attestation intends to replace.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#52-high-level-requirements-to-be-changed","title":"5.2 High-Level Requirements to be changed","text":"<p>A future version of this document will analyse the requirements on issuance in v1.5 of the ARF and determine whether they need to be changed (and if so, how) in the light of the conclusions reached for this Discussion Paper;</p> <p>Requirement DASH_02 will be extended to include to re-issuance transactions.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#53-descriptions-to-be-added-to-the-arf-main-document","title":"5.3 Descriptions to be added to the ARF main document","text":"<p>A summary of the descriptions in chapter 2 will be added to section 6.6.2 of the ARF main document, version 1.8. A summary of the descriptions  in chapter 3 will be added in the description of possible states of a PID or  attestation included in section 4.6.5 of the ARF main document, version 1.8. A summary of the descriptions  in chapter 4 related to batch issuance will be  added in section 6.6.2 of the ARF main document, version 1.8.  A summary of the descriptions  in chapter 4 related to re-issuance will  be included in a new section that be will be  added after 6.6.2 of the ARF main document, version 1.8. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#6-references","title":"6 References","text":"Reference Description [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v0.91, final draft [ISO18013] ISO/IEC 18013-5, Personal identification \u2014 ISO-compliant driving licence \u2014 Part 5: Mobile driving licence (mDL) application, First edition, 2021-09 [SD-JWT VC] SD-JWT-based Verifiable Credentials (SD-JWT VC) draft-terbu-sd-jwt-vc-06, O. Terbu et al., 13 November 2024, draft [OpenID4VCI] Lodderstedt, T. et al., \"OpenID for Verifiable Credential Issuance\", OpenID Foundation. Available at : https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html [RFC 9449] OAuth 2.0 Demonstrating Proof of Possession (DPoP), D. Fett et al., September 2023 [Topic A] Topic A: Privacy risks and mitigations - eIDAS Cooperation Group Discussion Paper"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/","title":"C wallet unit attestation","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics / c-wallet-unit-attestation Version 0.1, updated 3 Feruary 2025</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#c-wallet-unit-attestation-wua-and-key-attestation","title":"C - Wallet Unit Attestation (WUA) and Key Attestation","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper Topic Description","text":"<p>This document is the Discussion Paper for eIDAS Coordination Group regarding Topic C: Wallet Unit Attestation (WUA) and key attestation. The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>Define high-level requirements for WUA as defined in the IAs of article 5a, and for the key attestation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#12-key-words","title":"1.2 Key Words","text":"<p>This document uses the capitalized key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document. In addition, 'must' (non-capitalized) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#13-document-structure","title":"1.3 Document Structure","text":"<p>The document is structured as follows:</p> <ul> <li> <p>Chapter 2 presents the legal requirements for functionality related to wallet unit attestation and key attestation.</p> </li> <li> <p>Chapter 3 discusses the high level purpose wallet unit attestation as well as lists open questions related to this topic.</p> </li> <li> <p>Chapter 4 discussed the current HLRs related to WUA.</p> </li> <li> <p>Chapter 5 relates the topic to other topics being discussed and previously identified risks.</p> </li> <li> <p>Chapter 6 presents the additions and changes that will be made to the ARF as a result of discussing this topic with Member States. </p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#2-legal-requirements-for-wallet-unit-attestation","title":"2 Legal Requirements for Wallet Unit Attestation","text":"<p>Multiple legal texts impose direct requirements Wallet Unit Attestation and impose requirement that are solved using Wallet Unit Attestation: [CIR.2024.2977], [CIR.2024.2979], [CIR.2024.2982] and [eiDAS 2.0]. Below we recap the respective legal requirements from these sources.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#21-eidas-20-about-wallet-unit-attestation","title":"2.1 [eIDAS 2.0] about Wallet Unit Attestation","text":"<p>[eIDAS 2.0] does not directly address the need for Wallet Unit Attestations. Rather, it requires that it should be possible to verify the authenticity and validity of an EUDI Wallet. </p> <p>Below are the actual excerpts from the law including the recitals that establish these requirements.</p> <p>Recital (34)</p> <p>The use of European Digital Identity Wallets as well as the discontinuation of their use should be the exclusive right and choice of users. Member States should develop simple and secure procedures for the users to request immediate revocation of validity of European Digital Identity Wallets, including in the case of loss or theft. Upon the death of the user or the cessation of activity by a legal person, a mechanism should be established to enable the authority responsible for settling the succession of the natural person or assets of the legal person to request the immediate revocation of European Digital Identity Wallets.</p> <p>Article 5a European Digital Identity Wallets</p> <p>... 4.  European Digital Identity Wallets shall, in particular: ... (a) support common protocols and interfaces: ... (viii) for relying parties to verify the authenticity and validity of European Digital Identity Wallets; ... ... 8. Member States shall provide validation mechanisms free-of-charge, in order to: (a) ensure that the authenticity and validity of European Digital Identity Wallets can be verified; ... ...9. Member States shall ensure that the validity of the European Digital Identity Wallet can be revoked in the following circumstances: ...</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#22-cir20242977-about-wallet-unit-attestation","title":"2.2 [CIR.2024.2977] about Wallet Unit Attestation","text":"<p>[CIR.2024.2977] specifies three main requirements related to Wallet Unit Attestation: 1. PID issuers must ensure their data is cryptographically bound to the wallet unit during issuance. 2. PID issuers must verify that wallet unit belongs to a trusted wallet solution. 3. Wallet unit attestation must support revocation.</p> <p>Below are the actual excerpts from the law including the recitals that establish these requirements.</p> <p>Recital (10)</p> <p>To protect the data of wallet users and to ensure the authenticity of electronic attestations of attributes, mechanisms for the authentication of providers of electronic attestations of attributes, and for the verification of the authenticity and validity of wallet units by that provider should apply prior to the issuance of the attestations to wallet units.</p> <p>Article 3</p> <p>5. Providers of person identification data shall ensure that person identification data that they issue is cryptographically bound to the wallet unit to which it is issued. 9. Before issuing person identification data to a wallet unit, providers of person identification data shall authenticate and validate the wallet unit attestation of the wallet unit and verify that the wallet unit belongs to a wallet solution the provider of person identification data accepts or use another authentication mechanism in accordance with an electronic identity scheme notified at assurance level high.</p> <p>Article 5</p> <p>4. Where providers of person identification data revoke person identification data issued to wallet units, they shall do so in each of the following circumstances: ... (b) where the wallet unit attestation to which the person identification data was issued to has been revoked;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#23-cir20242979-about-wallet-unit-attestation","title":"2.3 [CIR.2024.2979] about Wallet Unit Attestation","text":"<p>[CIR.2024.2979] specifies six main requirements related to Wallet Unit Attestation: 1. Wallet unit providers must ensure the wallet unit contains a wallet unit attestation. 2. The WUA must contain a public key, where the corresponding private key is protected by a WSCD. 3. The WUA must be revocable only by the wallet provider that provided the WUA. 4. The wallet provider have certain responsibilities in relation to revocation of WUA. 5. The WUA must contain information as to where revocation information can be found. This information must be made available in a privacy preserving manner.  6. Relevant information contained in the WUA may be logged.</p> <p>Below are the actual excerpts from the law including the recitals that establish these requirements.</p> <p>Recital (7)</p> <p>Wallet units are to enable providers of person identification data or electronic attestations of attributes to verify that they are issuing this data or attestations to genuine wallet units of the wallet user.</p> <p>Recital (8)</p> <p>To ensure data protection by design and by default, the wallets should be provided with available state-of-the-art privacy enhancing techniques. These features should provide the possibility that wallets can be used without the wallet user being trackable across different wallet-relying parties, if applicable in the usage scenario. For instance, wallet providers should consider state-of-the-art privacy mitigating measures in relation to wallet unit attestations, such as using ephemeral wallet unit attestations or batch issuance. In addition, embedded disclosure policies should warn the wallet users against inappropriate or illegal disclosure of attributes from electronic attestations of attributes.</p> <p>Recital (9)</p> <p>Wallet unit attestations should make it possible for wallet-relying parties which request attributes from wallet units, to verify the validity status of the wallet unit that they are communicating with, as wallet unit attestations are to be revoked when a wallet unit is no longer considered valid. The information regarding the validity status of the wallet units should be made available in an interoperable manner, to ensure that it can be used by all wallet-relying parties. Moreover, for cases where wallet users lost their wallet units or no longer have control over it, wallet providers should enable wallet users to request the revocation of their wallet unit. To ensure the privacy and unlinkability, Member States should employ privacy preserving techniques also for the wallet unit attestation. This may include the usage of multiple wallet unit attestations for different purposes, disclosing only the minimally relevant information about the wallet necessary for a transaction, or to limit the lifetime of the wallet unit attestation as an alternative to the use of revocation identifiers.</p> <p>Article 6</p> <p>1. Wallet providers shall ensure that each wallet unit contains wallet unit attestations. 2. Wallet providers shall ensure that the wallet unit attestations referred to in paragraph 1 contain public keys and that the corresponding private keys are protected by a wallet secure cryptographic device. 3. Wallet providers shall: ( c ) ensure wallet users have the right to request revocation of their wallet unit attestations, using the authentication mechanisms referred to in point (b).</p> <p>Article 7</p> <p>1. Wallet providers shall be the only entities capable of revoking wallet unit attestations for wallet units that they have provided. 2. Wallet providers shall establish a publicly available policy specifying the conditions and the timeframe for the revocation of wallet unit attestations. 3. Where wallet providers have revoked wallet unit attestations, they shall inform affected wallet users within 24 hours of the revocation of their wallet units, including the reason for the revocation and the consequences for the wallet user. This information shall be provided in a manner that is concise, easily accessible and using clear and plain language. 4. Where wallet providers have revoked wallet unit attestations, they shall make publicly available the validity status of the wallet unit attestation in a privacy preserving manner and describe the location of that information in the wallet unit attestation.</p> <p>Article 9</p> <p>2. The logged information shall at least contain: \u2026 (b) the name, contact details, and the unique identifier of the corresponding wallet-relying party and the Member State in which that wallet-relying party is established, or in case of other wallet units, relevant information from the wallet unit attestation;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#23-cir20242982-about-wallet-unit-attestation","title":"2.3 [CIR.2024.2982] about Wallet Unit Attestation","text":"<p>[CIR.2024.2982] specifies four main requirements related to Wallet Unit Attestation: 1. Wallet units must validate WUA when interacting with other wallet units. 2. WUA information must be displayed to users in certain cases. 3. Wallet units must provide WUA to wallet-relying parties or wallet units upon request. 4. Wallet units must provide WUA to PID or attestation providers upon request.</p> <p>Recital (5)</p> <p>In order to ensure transparency and trustworthiness of wallet-relying parties towards wallet users, the protocols and interfaces used by the wallet solutions should provide wallet users with a reliable mechanism to authenticate wallet- relying parties and other wallet units. Inversely, wallet providers should provide a mechanism to authenticate and validate wallet units so that relying parties can receive assurances with respect to trustworthiness and authenticity of the wallet units. Further, the technical infrastructure of the wallets should also be designed to ensure that only the minimal necessary amount of data is transferred only to the authorized relying parties, while keeping unlinkability between the different transactions. In order to facilitate the issuance of person identification data and electronic attestations of attributes, all wallet solutions should support a minimum set of protocols and interfaces.</p> <p>Article 3</p> <p>Regarding the protocols and interfaces referred to in Articles 4 and 5, wallet providers shall ensure that wallet units: (2) authenticate and validate the wallet unit attestations of other wallet units where interacting with other wallet units; (3) authenticate and validate requests made using wallet-relying party access certificates or wallet unit attestations from other wallet units, where applicable; (5) display to wallet users information contained in the wallet-relying party access certificates or in the wallet unit attestations; (8) present wallet unit attestations of the wallet unit to wallet-relying parties or wallet units that request it;</p> <p>Article 4</p> <p>3. In relation to the issuance of person identification data and electronic attestations of attributes to a wallet unit, wallet providers shall ensure that the following requirements are complied with: ... (b) where wallet users use their wallet unit to interact with providers of person identification data or electronic attestations of attributes, wallet units shall enable authentication and validation of the wallet unit components by presenting the wallet unit attestations to those providers upon their request;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#3-purpose-of-wua","title":"3 Purpose of WUA","text":"<p>The legal requirements of Chapter 2 address different aspects related to Wallet Unit Attestation. The aspects cover interaction with the user (i.e. requirements in relation to the user interface), interaction with other parties (i.e. what WUA should be used for) and the WUA itself (i.e. essential information that should be contained in the WUA). This document will not go into requirements on the user interface, etc., but will focus on how WUA may be used in connection with other parties.</p> <p>Furthermore, this document is ONLY intended to clarify the high level requirements related to WUA. The technical specifications related to WUA is to be developed by the Commission at a later point in time.</p> <p>The legal requirements in relation to the functional requirements of WUA can be summarized as the following functionality:</p> <ol> <li>WUA information must allow relying parties, PID and attestation providers and other Wallet Units to validate the authenticity and revocation status of a Wallet Unit.</li> <li>Wallet Providers must be able to revoke a Wallet Unit.</li> <li>Only the Wallet Providers of a Wallet Unit must be able to revoke that Wallet Unit.</li> <li>It is the Wallets Providers responsibility to create the WUA.</li> <li>PID issuers must be able to ensure their data is cryptographically bound to the wallet unit during issuance.</li> </ol> <p>Based on the funtional requirement, the following requirements with regard to the WUA itself can derived: 1. The WUA must contain a public key, where the corresponding private key is protected by a WSCD.  2. The WUA must contain information, allowing parties to check if a Wallet Unit has been revoked. 3. The WUA must contain information, allowing parties to verify the validity of the Wallet Unit, i.e. the WUA must contain a signature from the Wallet Provider.</p> <p>All of this can be achieved as a (revocable) attestation on a public key, issues by the Wallet Provider. Additionally the WUA should contain relevant information on the Wallet Unit capabilities, such as the WSCD/WSCA. These must also be attested by the Wallet Provider and may be used to provide additional trust in the Wallet Unit.</p> <p>Question: Are there any missing requirements?</p> <p>We have identified two requirements in relation to WUA that warrant further discussion:</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#cryptographically-binding","title":"Cryptographically binding","text":"<p>[CIR.2024.2977] Article 3 states that:</p> <p>5. Providers of person identification data shall ensure that person identification data that they issue is cryptographically bound to the wallet unit to which it is issued.</p> <p>The wording, cryptographically bound, may be interpreted in different ways. While this interpretation, and the consequences of the interpretation, is relevant for the EUDI Wallet as a whole, it is essentially not a an issue to be addressed in the WUA. The WUA is only intended to provide a base of trust, i.e. an attestation on a public key and the capabilities of the wallet unit. This approach will provide a trusted foundation, on which more advanced features, such as proof of association can be built upon. At the same time, this allows the WUA to be treated as \"any other attestation\". </p> <p>Question: Do we prevent PID and Attestation providers from achieving \"cryptographically bound\" (such as by proof of association), by limiting the WUA to contain only a signed public key and a set of supported capabilities/operations?</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#revocation","title":"Revocation","text":"<p>[CIR.2024.2977] Article 5 states that:</p> <p>4. Where providers of person identification data revoke person identification data issued to wallet units, they shall do so in each of the following circumstances: ... (b) where the wallet unit attestation to which the person identification data was issued to has been revoked;</p> <p>The text states that providers of PID are obligated to revoke PID issued to a Wallet Unit, if that Wallet Unit is revoked. Depending on how the WUA is constructed and how the above mentioned cryptographic binding is done, it may be possible (e.g. using Zero-Knowledge proofs) to make a revocation of the Wallet Unit automatically revoke any issued PID. Alternatively the providers of PID are obliged to maintain a record of Wallet Units that have been issued PID and periodically monitor the revocation status of these Wallet Units. In general there are two approaches as to how revocation can be done:</p> <ul> <li> <p>Approach A: All attestations (PID, Attestations, Pseudonyms) are somehow cryptographically connected to the WUA, e.g. the PID will contain a reference to the WUA of the Wallet Instance it was issued to. During presentation of an attestation, both the attestation and the WUA (or parts hereof) are presented to the Relying Party, which verifies both the revocation status of the WUA and the validity (including revocation status) of the attestation. If the Wallet Instance is revoked, the connected attestations all automatically become invalidated and the PID and attestation providers will not need to take action.</p> </li> <li> <p>Approach B: Attestations (PID, Attestations, Pseudonyms) are not linked with the WUA. During presentation, only the attestation is sent to the Relying Party, which verifies the validity (including revocation status). In order for this to work, PID and Attestations providers must monitor the revocation status of all Wallet Instances that have been issued PID or Attestations. Once a revoked WUA is detected by the PID or Attestation provider, the provider can perform their own revocation of the issued PID or attestation.</p> </li> </ul> <p>[Topic A] discusses privacy risks related to the usage of attestations, which also apply to the WUA. Using Approach A, will involve the WUA in nearly all activity of the Wallet Unit, hence the drawbacks mentioned in [Topic A] may become overwhelming.</p> <p>Question: Which approach should be taken?</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#4-current-hlrs","title":"4 Current HLRs","text":"<p>Currently the ARF, Annex 2, Topic 9, contains a number of High Level Requirements related to \"Wallet Trust Evidence\" and \"Wallet Instance Attestation\". These requirements cover multiple aspects of WUA and complicates the topic. As some of these HLRs relate more to the usage of WUA and the surrounding processes, rather than the WUA itself, it is proposed that these are moved to other content, e.g. it is important for the Wallet Provider to verify the capabilities of the WSCA before issuing the WUA (and the WUA may include a list of these capabilities), however this should not be a HLR of the WUA. The existing HLRs are listed in the tables below along with a proposal to keep or remove the HLR. </p> <p>Note: The remaining HLRs will have their text updated to the new definitions (e.g. WUA rather than WTE/WIA).   </p> Index Requirement Proposal WTE_01 A Wallet Provider SHALL have to activate a new Wallet Instance before a User can use it to obtain an attestation. Move - Genereal requirement on Wallet Instance functionality WTE_02 A WSCA SHALL authenticate the User before performing any cryptographic operation involving a private or secret key of a Wallet Instance (i.e., a WTE key) or of an attestation in a Wallet Instance. Move - General requirement on Wallet Instance functionality WTE_03 A Wallet Instance SHALL authenticate the User before performing any operation excluding cryptographic operations. The Wallet Instance MAY rely on a WSCA certified to be compliant with applicable requirements for level of assurance \"high\" to do so, but MAY also rely on other components. <p>Note: Cryptographic operations can only be performed by the WSCA after User authentication according to WTE_02. Move - General requirement on WI functionality WTE_04 For a Wallet Instance containing a natural-person PID, the User mentioned in WTE_02 and WTE_03 SHALL be the natural person who is the subject of that PID. Move - Legal/Procedural requirement for the Wallet Provider WTE_05 For a Wallet Instance containing a legal-person PID, the User mentioned in WTE_02 and WTE_03 SHALL be a natural person appointed by the legal person who is the subject of that PID. <p>Note: This requirement does not imply that the actions of a legal-person Wallet Instance cannot be automated, or that the person(s) controlling the Wallet Instance must authenticate every time the Wallet Instance presents an attestation or creates a seal. The intent is that every operation performed by the legal-person Wallet Instance is performed under the responsibility of a natural person. Move - Legal/Procedural requirement for the Wallet Provider WTE_06 A Wallet Provider SHALL only activate a new Wallet Instance if it has verified that: <ul><li>The Wallet Instance has access to at least one WSCA that is certified to be compliant with applicable requirements in this Topic, for level of assurance \"high\". In addition, the Wallet Instance MAY have access to one or more other WSCAs.</li><li>The private key corresponding to the public key in the WTE (see WTE_07) is protected by the respective WSCA.</li></ul> Keep WTE_07 During the activation of a new Wallet Instance, a Wallet Provider SHALL sign at least one Wallet Trust Evidence (WTE) and issue it to the Wallet Instance. Keep WTE_08 The Commission SHALL take measures to ensure that the contents, format and encoding of the Wallet Trust Evidence is specified in a technical specification. Each WTE SHALL describe the Wallet Instance and a certified WSCA available to that Wallet Instance, in such a way that a PID Provider or Attestation Provider processing the WTE is able to take a well-grounded decision on whether to issue an attestation to that Wallet Instance and WSCA. Notes: <ul><li>In general, a PID Provider or Attestation Provider will also need information about the User. Such information is not contained in the WTE.</li><li>The WTE does not contain information allowing a PID Provider or Attestation Provider to verify whether the WTE (and by extension the Wallet Instance) is revoked. Revocation information for the Wallet Instance is instead included in the WIA defined in [Topic 38].</li></ul> Keep WTE_09 A Wallet Provider SHALL consider all relevant factors, including the risk of a WTE public key becoming a vector to track the User, when deciding on the validity period of a WTE. A Wallet Provider MAY use short-lived WTEs to mitigate such risks. Keep - possibly refer to general requirements on attestations WTE_10 A WSCA SHALL generate a new key pair for a new WTE on request of the Wallet Provider via the Wallet Instance. The WSCA SHALL register the new key as a WTE key in an internal registry. The WSCA SHALL register the WTE key as an independent (i.e., non-associated) key in an internal registry. <p>Note: A WTE key can be associated later with a PID or attestation key when that PID or attestation key is created, see WTE_13. Keep - possibly move to functional requirement on WSCA WTE_11 A WTE SHALL contain a public key, and the corresponding private key SHALL be generated by the WSCA described in the WTE. <p>Note: A WTE key pair is generated as per WTE_10. Keep WTE_12 In case the Wallet Provider must update the WTE because the information in the WTE is outdated, the Wallet Provider SHALL ensure that the Wallet Instance only releases the latest version of a WTE to an Attestation Provider. Keep <p>B.  Using the WTE during issuance of an attestation </p> <p>The entire B section if focused on verifications needed to be performed during issuance. This section should be moved to another document or section of Annex 2, e.g. Topic 10 : \"Issuing a PID or Attestation to the EUDI Wallet\" </p> <p>Question: Should section B be moved elsewhere (and if so where?)</p> Index Requirement Proposal WTE_13 During PID or attestation issuance, a WSCA SHALL generate a new key pair for a new PID or attestation, on request of the PID Provider or Attestation Provider via the Wallet Instance. The PID Provider or Attestation Provider SHALL indicate a single WTE public key (see WTE_10) with which the new PID or attestation key must be associated. This indication can either be direct, by providing the WTE public key value, or indirect, by providing a public key value that has been associated with the WTE key previously. In the latter case, the WSCA SHALL look up the associated WTE key in its internal registry. The WSCA SHALL register the new key in an internal registry as an attestation key. The WSCA SHALL register the association between the new private key and the WTE private key in an internal registry. Notes: <ul><li>Direct indication of the WTE is used in case a PID Provider or Attestation Provider indicates during issuing that the new PID or attestation must be associated with a WTE public key, see WTE_15 and WTE_16.</li><li>Indirect indication of the WTE key is used in case an Attestation Provider indicates during issuing that the new attestation must be associated with an existing PID or attestation, see WTE_16.</li></ul> Keep WTE_14 During PID or attestation issuance, a WSCA SHALL prove possession of the private key corresponding to the new PID or attestation public key, on request of the PID Provider or Attestation Provider via the Wallet Instance, for example by signing a challenge with that private key. Keep WTE_15 A PID Provider SHALL indicate to a WSCA (via the Wallet Instance) the public key to which the new PID must be associated. This SHALL be a WTE public key. Keep WTE_16 An Attestation Provider SHALL indicate to a WSCA (via the Wallet Instance) the public key to which the new attestation must be associated. This SHALL be either a WTE public key or the public key of a PID or attestation that already exists in the Wallet Instance. <p>Note: if the Attestation Provider indicates a PID or attestation public key, this is an indirect indication of a WTE key, see WTE_13. Keep WTE_17 During PID or attestation issuance, a WSCA SHALL prove possession of the private key corresponding to a WTE public key on request of a PID Provider or Attestation Provider via the Wallet Instance, for example by signing a challenge with that private key. Keep WTE_18 During PID or attestation issuance, a WSCA SHOULD generate a proof of association for two or more public keys, if and only if the corresponding private keys are protected by the same WSCA and the WSCA has internally registered an association between these private keys. Notes: <ul><li>It is possible that some private keys in a WSCA are not associated with each other, even though they are managed within the same WSCA.</li><li>If two keys are associated, this implies that they are both associated with the same WTE key. The concept of associated keys is explained in the forthcoming White Paper on Wallet Trust Evidence.</li></ul> Keep WTE_19 During PID or attestation issuance, the PID Provider or Attestation Provider SHALL verify that: <ul><li>The WSCA described in the WTE received from the Wallet Instance has proven possession of the private key corresponding to the public key in the WTE (see WTE_17),</li><li>The WSCA has proven possession of the new PID or attestation private key (see WTE_14)</li></ul> In addition, the PID Provider or Attestation Provider SHOULD verify that: <ul><li>The WSCA has proven association (see WTE_18) between the new PID or attestation public key and the public key requested by the PID Provider or Attestation Provider according to WTE_15 or WTE_16.</li></ul> Notes: <ul><li>See also WTE_13.</li><li>These three proofs MAY be implemented as a single cryptographic proof.</li></ul> Keep WTE_20 During PID or attestation issuance, a Wallet Instance SHALL provide the PID Provider or Attestation Provider with information on all WSCAs it is able to use for private key management and that comply with the PID Provider's or Attestation Provider's requirements. Keep WTE_21 During PID or attestation issuance, a Wallet Instance SHALL provide the PID Provider or Attestation Provider with the WTE describing the properties of the WSCA that generated the new PID or attestation private key and protects it. Keep WTE_22 If a Wallet Instance has access to multiple WSCAs, it SHALL register which PIDs and attestations are bound to each of these WSCAs. Keep <p>C.  Miscellaneous </p> Index Requirement Proposal WTE_23 The common OpenID4VCI protocol defined in requirement ISSU_01 SHALL enable a Wallet Instance to transfer a WTE to a PID Provider or Attestation Provider. Keep - Ensure that format of WUA is compatible WTE_24 A Wallet Instance SHALL release a WTE only to a PID Provider or Attestation Provider, and not to a Relying Party or any other party. Depends on outcome of revocation discussion - Introduce selective disclosure and only reveal relevant WUA information to PID Provider, Attestation Provider, Relying Party or any other party. WTE_25 The common OpenID4VCI protocol SHALL enable a Wallet Instance to transfer the proofs of association and possession mentioned in WTE_19 to a PID Provider or Attestation Provider. <p>Note: These three proofs MAY be implemented as a single cryptographic proof. Remove - doesn't involve content of WUA WTE_26 The common OpenID4VCI protocol SHALL enable a Wallet Instance to transfer a public key to a PID Provider or Attestation Provider, to be included in the new PID or attestation. Uncertain - doesn't not appear to involve content of WUA, but OpenId4VCI protocol may impose requirements on the public key contained in WUA? WTE_27 The common OpenID4VCI protocol SHALL enable a PID Provider or Attestation Provider to indicate in the Token Response: <ul><li>the WSCA to which the new PID or attestation key must be bound, for example by referring to a WSCA identifier listed in the WTE</li><li>or, alternatively, the existing PID or attestation public key with which the new credential key must be associated.</li></ul> Keep - Imposes requirement to content of WUA (WSCA identifiers or PID or attestation public keys) <p>D.  Overview: Requirements for a WSCA</p> <p>The technical requirements above imply the following requirements for a WSCA.</p> <p>The WSCA requirements need to be updated according to outcome of above discussion points. Furthermore, mandatory (SHALL) requirements could be moved to a separate deliverable on minimum requirements for WSCA. This deliverable would be used by Wallet Providers before issuing WUA. WTE_36 describes a capability that could be included in the WUA.</p> <p>Question: Should Section D be moved to a separate deliverable   </p> Index Requirement WTE_28 A WSCA SHALL be able to verify the authentication factors of a User, in accordance with the requirements in Commission Implementing Regulation (EU) 2015/1502 Section 2.2.1. WTE_29 A WSCA SHALL be able to generate a new key pair on request of the Wallet Instance. WTE_30 A WSCA SHALL be able to prove possession of the private key corresponding to a public key on request of a Wallet Instance, for example by signing a challenge with that private key. WTE_31 A WSCA SHALL register each newly generated key pair as either a WTE key or an attestation key, depending on information provided by the Wallet Instance in the key generation request. The internal registry used by the WSCA for this purpose SHALL be protected against modification by external parties. WTE_32 A WSCA SHALL protect a private key it generated during the entire lifetime of the key. This protection SHALL at least imply that the WSCA prevents the private key from being extracted in the clear. If a WSCA is able to export a private key in encrypted format, the key used for key encryption SHALL be properly protected, for example as multiple key shares controlled by multiple key custodians. WTE_33 A WSCA SHALL associate each newly generated attestation key with a WTE key indicated by the Wallet Instance. The WSCA SHALL record the association between these keys in an internal registry, which SHALL be protected against modification by external parties. WTE_34 For the purposes of WTE_33, a Wallet Instance SHALL indicate the WTE key either directly, by WTE public key value, or indirectly, by value of a public key that is already associated to the intended WTE key. In the latter case, the WSCA SHALL look up the intended WTE key in its registry. WTE_35 A WSCA SHALL consider two keys to be associated if they are associated to a common WTE key. WTE_36 A WSCA SHOULD be able to generate a proof of association for two or more public keys. The WSCA SHALL generate such a proof if and only if the corresponding private keys are protected by that WSCA, and the WSCA has internally registered an association between these private keys. <p>Annex 2, Topic 38 contains HLRs on revocation of Wallet Units. This section will need to be updated to contain WUA rather than WIA. Furthermore the discussion on revocation may also trigger some minor changes.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#5-relation-to-other-topics","title":"5 Relation to Other Topics","text":"<p>Below we discuss how wallet unit attestations relate to the other topics being discussed.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#51-privacy-risks-and-mitigations","title":"5.1 Privacy Risks and Mitigations","text":"<p>[Topic A - Privacy Risks and Mitigations] highlight that WUA functions like any other attestation and therefore the risks and mitigations are the same: - PID and Attestation providers may assume the role of Relying Party with regard to RP-linkability: When presenting a WUA to a Relying Party (in this case this includes PID and Attestation providers), the Relying Party may record attribute values and use these to track the user. - The Wallet Provider may assume the role of Attestation Provider with regard to AP-linkability: If the Wallet Provider colludes with Relying Parties (PID and Attestation providers), user behaviour may be tracked. - Using one of the one-time, limited-time, rotating batch or per-relying part attestations will all work with WUA. Note that the use pattern of WUA (it is only intended for PID and Attestation providers during issuance), it will most likely only be used a few times with a few Relying Parties (i.e. PID and attestation providers).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#52-relation-to-risk-register","title":"5.2 Relation to Risk Register","text":"<p>The purpose of WUA is to allow parties interacting with the Wallet Unit, to ensure they are interacting with a legitimate Wallet Unit. Therefore WUA has impact on several of the risks listed in the risk register for European Digital Identity Wallets [RiskRegister]:</p> Risk type  Risk ID  Related risk titles  High-level risks to the wallets R1 Creation or use of an existing electronic identity High-level risks to the wallets R2 Creation or use of a fake electronic identity High-level risks to the wallets R3 Creation or use of fake attributes High-level risks to the wallets R4 Identify theft High-level risks to the wallets R6 Data disclosure High-level risks to the wallets R7 Data manipulation High-level risks to the wallets R9 Unauthorised transaction High-level risks to the wallets R14 Surveillance <p>The use of WUA is a mitigating mechanism with regard to some of the Technical Threats from the [Risk Register] (threats labelled TTX.Y in its section III). This is primarily TT2. Errors and misconfigurations, TT3. Use of unreliable resources and TT5.Malicious actions. In relation to these threats, WUA is used to assure that the Wallet Unit is not compromised.</p> R1. Creation or use of an existing electronic identity Creation or use of an existing electronic identity is defined as the creation of an electronic identity in a wallet that exists in the real world and is assigned to another user. By essence, this risk leads to the risks of Identity theft (R4), and Unauthorised transactions (R9). R2. Creation or use of a fake electronic identity Creation or use of a fake electronic identity is defined as the creation of an electronic identity in a wallet that does not exist in the real world. R3. Creation or use of fake attributes Creation or use of fake attributes is defined as the creation or use of attributes that cannot be validated to be issued by the claimed provider and cannot be trusted. R4. Identity theft Identity theft is defined as the unauthorised acquisition of the wallet unit or loss of authentication factors enabling to impersonate a person. R6. Data disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. R7. Data manipulation Data manipulation is defined as the unauthorised alteration of data. R9. Unauthorised transaction Unauthorised transactions are defined as operational activities conducted without the permission or knowledge of the wallet user. In many cases, an unauthorised transaction can lead to Identity theft (R4) or Data disclosure (R6). It is also related to unauthorised transactions, such as the misuse of cryptographic keys. R14. Surveillance Surveillance, or monitoring, is defined as the unauthorised tracking or observation of a wallet user's activities, communication, or data. Surveillance is often related to inference, which is defined as the deduction of sensitive or personal information from seemingly innocuous data. SR1. Wholesale surveillance Wholesale surveillance is defined as the tracking or observation of the activities of many users through their wallet's communication or data. Wholesale surveillance is often associated with surveillance (R14) and inference at a global scale, where information about many users is combined to deduce sensitive or personal data about users or to identify statistical trends that can be used to design further attacks. <p>More specifically, [RiskRegister] describes the following threats in relation to wallet unit attestations:</p> ID Identifier Threat description Description of the identified threat (*) Risk title Related risks TR10 An attacker can activate a new wallet on an invalid WSCD. Creation or use of an existing electronic identity (R1) / Creation or use of a fake electronic identity (R2)  TR12 An attacker can circumvent the verification by the PID provider that the wallet is controlled by the user and have a PID issued into a compromised wallet under the attacker\u2019s control. Creation or use of an existing electronic identity (R1) / Identify theft (R4) / Unauthorised transaction (R9) TR13      An attacker can get a valid PID into an invalid wallet uni      Creation or use of an existing electronic identity (R1) / Identify theft (R4) / Unauthorised transaction (R9) TR22 An attacker can circumvent the verification by the (Q)EAA provider that the wallet is in control of the user and have a (Q)EAA issued into a compromised wallet under the attacker\u2019s control. Creation or use of fake attributes (R3) TR39 An attacker can unlawfully trace wallet users using unique/traceable identifiers.  Data disclosure (R6) / Surveillance (R14) TR46 An attacker can bypass or subvert the performance of checks by the wallet that verify whether the PID has been revoked by the PID provider to always return success. Data manipulation (R7) TR56 An attacker can propose an application that mimics a specific legitimate wallet to users. Identity theft (R4) TR84 A group of colluding relying parties or PID providers can derive the user\u2019s identity data beyond data known to them. Surveillance (R14) TR85 An attacker can track and trace a user by using person identification data of the user where identification of the user is not required. Surveillance (R14) TR107 An attacker can steal information from a user by spoofing a wallet.      Effect on various risks TR112 An attacker can modify a legitimate wallet instance and propose it to users as a legitimate one. Effect on various risks <p>R14, SR1, TR39, TR84, TR85 are particularly relevant to consider given the discussion in Chapter 5.1, namely linkability of WUA. <p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#6-additions-and-changes-to-the-arf","title":"6 Additions and Changes to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#7-references","title":"7 References","text":"Reference Description [WebAuthN] Web Authentication: An API for accessing Public Key Credentials Level 2 W3C Recommendation, 8 April 2021, https://www.w3.org/TR/webauthn-2/ [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v1,0. [Topic A] Topic A - Privacy Risks and Mitigations [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [eIDAS 2.0] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [CIR.2024.2977] Commission Implementing Regulation (EU) 2024/2977 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards person identification data and electronic attestations of attributes issued to European Digital Identity Wallets [CIR.2024.2979] Commission Implementing Regulation (EU) 2024/2979 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the integrity and core functionalities of European Digital Identity Wallets [CIR.2024.2982] Commission Implementing Regulation (EU) 2024/2982 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards protocols and interfaces to be supported by the European Digital Identity Framework"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/","title":"D embedded disclosure policies","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics / d-embedded-disclosure-policies</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#d-embedded-disclosure-policies","title":"D - Embedded disclosure policies","text":"<p>Placeholder file</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/","title":"E pseudonyms including user authentication mechanism","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics / e-pseudonyms-including-user-authentication-mechanism Version 0.4, updated 4 February 2025</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#e-pseudonyms-including-user-authentication-mechanism","title":"E - Pseudonyms, including User authentication mechanism","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper Topic Description","text":"<p>This document is the Discussion Paper for eIDAS Coordination Group regarding Topic E: Pseudonyms, including User authentication mechanism. The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>High-level requirements for pseudonyms in the ARF need to be further detailed, including specifying the use cases where pseudonyms should be applied.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#12-key-words","title":"1.2 Key Words","text":"<p>This document uses the capitalized key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document. In addition, 'must' (non-capitalized) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#13-document-structure","title":"1.3 Document Structure","text":"<p>The document is structured as follows:</p> <ul> <li> <p>Chapter 2 presents the legal requirements for functionality related to pseudonyms.</p> </li> <li> <p>Chapter 3 explains two identified use cases for pseudonyms as well as lists open questions related to these use cases.</p> </li> <li> <p>Chapter 4 presents the technical approach to pseudonyms as well as highlights its challenges.</p> </li> <li> <p>Chapter 5 relates the topic to other topics being discussed and previously identified risks.</p> </li> <li> <p>Chapter 6 presents the additions and changes that will be made to the ARF as a result of discussing this topic with Member States.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#2-legal-requirements-for-pseudonyms","title":"2 Legal Requirements for Pseudonyms","text":"<p>There are two legal texts that impose direct requirements on the pseudonym functionality of the Wallet Units: [CIR.2024.2979] and [eiDAS 2.0]. Below we recap the respective legal requirements from these sources.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#21-eidas-20-about-pseudonyms","title":"2.1 [eIDAS 2.0] about Pseudonyms","text":"<p>There are two main requirements in [eIDAS 2.0] about Pseudonyms in relation to Wallet Units: 1. Wallet Units must be able to generate pseudonyms and store them encrypted. 2. Relying Parties must accept identification via pseudonyms when there are no legal requirements for identification.</p> <p>Below are the actual excerpts from the law including the recitals that establish these requirements.</p> <p>Recital (19)</p> <p>... Reliance on the legal identity should not hinder European Digital Identity Wallet users to access services under a pseudonym, where there is no legal requirement for legal identity for authentication. ...</p> <p>Recital (22)</p> <p>European Digital Identity Wallets should include a functionality to generate user-chosen and managed pseudonyms, to authenticate when accessing online services.</p> <p>Recital (57)</p> <p>Where very large online platforms within the meaning of Article 33(1) of Regulation (EU) 2022/2065 of the European Parliament and of the Council require users to be authenticated in order to access online services, those platforms should be required to accept the use of European Digital Identity Wallets upon the voluntary request of the user. Users should be under no obligation to use a European Digital Identity Wallet to access private services and should not be restricted or hindered in their access to services on the grounds that they do not use a European Digital Identity Wallet. However, if users wish to do so, very large online platforms should accept them for that purpose, while respecting the principle of data minimisation and the right of the users to use freely chosen pseudonyms. ...</p> <p>Recital (60)</p> <p>Unless specific rules of Union or national law require users to identify themselves, accessing services by using a pseudonym should not be prohibited.</p> <p>Article 5 Pseudonyms in electronic transaction</p> <p>Without prejudice to specific rules of Union or national law requiring users to identify themselves or to the legal effect given to pseudonyms under national law, the use of pseudonyms that are chosen by the user shall not be prohibited.</p> <p>Article 5a European Digital Identity Wallets</p> <p>... 4.  European Digital Identity Wallets shall enable the user, in a manner that is user-friendly, transparent, and traceable by the user, to: ... (b) generate pseudonyms and store them encrypted and locally within the European Digital Identity Wallet; ...</p> <p>Article 5b European Digital Identity Wallet-Relying Parties</p> <p>9. ... Relying parties shall not refuse the use of pseudonyms, where the identification of the user is not required by Union or national law. ...</p> <p>Additionally, pseudonyms are mentioned in Article 32 and Annex IV about the validation of qualified electronic signatures and certificates. Note that the use of pseudonyms in this article is orthogonal to the notion of pseudonyms used for authentication as discussed in this discussion paper.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#22-cir20242979-about-pseudonyms","title":"2.2 [CIR.2024.2979] about Pseudonyms","text":"<p>[CIR.2024.2979] specifies three main requirements for pseudonyms: 1. [WebAuthn] defines the technical specification for pseudonyms. 2. The pseudonyms the wallet generates must be unique for each Relying Party. 3. The pseudonyms can be used either stand alone or in combination with other attested attributes.</p> <p>Below are the actual excerpts from the law including the recitals that establish these requirements.</p> <p>Recital (14)</p> <p>The generation of wallet-relying party specific pseudonyms should enable wallet users to authenticate themselves without providing wallet-relying parties with unnecessary information. As set out in Regulation (EU) No 910/2014, wallet users are not to be hindered from accessing services under a pseudonym, where there is no legal requirement for legal identity for authentication. Therefore, the wallets are to include a functionality to generate user-chosen and managed pseudonyms, to authenticate when accessing online services. The implementation of the specifications set out in Annex V should enable these functionalities accordingly. Further, wallet-relying parties are not to request users to provide any data other than those indicated for the intended use of wallets in the relying party register. Wallet users should be enabled to verify the registration data of relying parties at any point in time.</p> <p>Article 14</p> <p>1. Wallet units shall support the generation of pseudonyms for wallet users in compliance with the technical specifications set out in Annex V. 2. Wallet units shall support the generation, upon the request of a wallet-relying party, of a pseudonym which is specific and unique to that wallet-relying party and provide this pseudonym to the wallet-relying party, either standalone or in combination with any person identification data or electronic attribute attestation requested by that wallet-relying party.</p> <p>Annex V:</p> <p>TECHNICAL SPECIFICATIONS FOR PSEUDONYM GENERATION REFERRED TO IN ARTICLE 14  Technical specifications:  \u2014 WebAuthn \u2013 W3C Recommendation, 8 April 2021, Level 2, https://www.w3.org/TR/2021/REC-webauthn-2-20210408/.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#3-use-cases","title":"3 Use Cases","text":"<p>Below, we elaborate on the use cases inferred from the above legal requirements. The distinction between the two use cases follows from Article 14 2. [CIR.2024.2979].</p> <p>Both use cases are described in an online non-proximity-based setting where the pseudonyms are presented towards services over the internet.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#31-use-case-a-pseudonymous-authentication","title":"3.1 Use Case A: Pseudonymous Authentication","text":"<p>Pseudonyms can be used to authenticate a user when it is not necessary for a Relying Party to learn the identity of a user.</p> <p>Concretely, the use case is as follows: 1. A user registers a pseudonym at a Relying Party using their Wallet Unit. 2. The user can afterwards do a series of interactions with this Relying Party. 3. If the user at a later point wishes to build upon previous interactions with this Relying Party they should then be able to authenticate with the pseudonym used for registering. Thereby, the user \"logs in\" to the same account at the Relying Party. The user uses their Wallet Unit to perform this authentication.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#32-use-case-b-presentation-of-attributes-with-subsequent-authentication-using-pseudonyms","title":"3.2 Use Case B: Presentation of Attributes with Subsequent Authentication using Pseudonyms","text":"<p>Similarly, to above a user wishes to create an account with an associated pseudonym that can be used for subsequent authentication at later sessions. However, in this scenario the user would like to register verifiable attributes in the form of either Person Identification Data (PID), Qualified Electronic Attestation of Attributes (QEAAs), or Electronic Attestation of Attributes (EAAs) while registering.</p> <p>Concretely, the use case goes as follows: 1. A user registers a pseudonym and presents PID or (Q)EAAs to a Relying Party using their Wallet Unit. 2. The user can afterward do a series of interactions with this Relying Party. 3. If the user at a later point wishes to build upon previous interactions with this Relying Party they should then be able to authenticate with the pseudonym used for registering. Thereby, the user \"logs in\" to the same account at the Relying Party. The user uses their Wallet Unit to perform this authentication.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#33-questions-related-to-use-cases","title":"3.3 Questions Related to Use Cases","text":"<p>Below, we list open questions that must still be clarified related to the above two use cases.</p> <p>Question 1: Should any other use cases be supported?</p> <p>Question 2: For both use cases: Should both cross-device and same-device flows be supported? I.e., should registration and authentication with pseudonyms be possible both when a user initiates the interactions with the Relying Party from the same device and with a device different from the one hosting the Wallet Unit? The answer to this question will impose requirements on the interfaces between the Wallet Unit and the client a user initiates the interaction with.</p> <p>Question 3: For Use Case A: Should a single user be able to use their Wallet Unit to present several different pseudonyms to a single Relying Party? High-Level Requirements must be defined that enforces the answer to this question.</p> <p>Question 4: For both use cases: What assurances must be given to the Relying Party? Such possible assurance exists on at least three levels:</p> <ol> <li>No assurances are given to the Relying Party. I.e., the Relying Party is not even guaranteed that it is interacting with the Wallet Unit.</li> <li>The Relying Party is assured that the private key corresponding to the pseudonym being stored/authenticated was originally stored in a Wallet Unit.</li> <li>The Relying Party is assured that the private key corresponding to the pseudonym being stored/authenticated is stored in a non-revoked Wallet Unit.</li> <li>For use case B: The Relying Party is assured that the private key corresponding to the pseudonym used to authenticate is stored on the same Wallet Unit as originally presented PID/(Q)EA.</li> </ol> <p>Note that, because the technical implementation of pseudonyms must rely on [WebAuthn], the possibility for achieving such assurances is to use attestations (for an explanation of this see Chapter 4). Therefore, higher assurances comes with a trade-off in terms of surveillance risks. For a further discussion of these risks see Chapter 5.1.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#4-high-level-approach-to-pseudonyms","title":"4 High-Level Approach to Pseudonyms","text":"<p>As specified in [CIR.2024.2979], [WebAuthn] defines the technical specification for pseudonyms.</p> <p>Passkeys are a widely used type of credential which are created and asserted using the [WebAuthn] API.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#41-introduction-to-passkeys","title":"4.1 Introduction to Passkeys","text":"<p>Passkeys are to be seen as an alternative to passwords. The idea is that a user, when registering a user account at a service generates a public-private key pair, registers the public key at the service, and can then subsequently use the private key to authenticate towards the service at later points in time. In a bit more detail, the flow for using such passkeys follows the following blueprint.</p> <p>Registration: 1. The user generates a public-private keypair and stores both public and private keys at their secure device (referred to as an authenticator). 2. The user registers the public key at the desired service.</p> <p>Authentication: 1. When a user wishes to authenticate towards a service, the service will send them a challenge consisting of a random value. 2. The user uses the private key stored on their secure device to sign the challenge and sends this back to the service. 3. The service verifies that the signature on the challenge verifies using the preregistered public key. If the signature verifies and the origin matches as expected, the user is considered authenticated and thereby granted access to the service.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#42-overview-of-webauthn","title":"4.2 Overview of [WebAuthn]","text":"<p>[WebAuthn] defines an API for the creation and use of passkeys. Conceptually, in addition to the user, there are four different logical components in this specification:</p> <ul> <li>Relying Party Server: The Relying Party that wishes to offer a service based on authentication using passkeys.</li> <li>Relying Party Client: The program provided by the Relying Party that runs in the client of the user and communicates with the Relying Party Server.</li> <li>Client: The client that the user uses to interact with the Relying Party's server and their Authenticator.</li> <li>Authenticator: The device controlled by the user to create, store, and use the passkeys.</li> </ul> <p>[WebAuthn] defines a model dividing the responsibilities between these different entities and defines an interface between the Relying Party Client and the Client. Additionally, it defines a challenge/response protocol to authenticate with passkeys. The interface is referred to as the WebAuthn API. However, [WebAuthn] does not specify how the Authenticator and the Client must communicate. We briefly discuss the relation to Topic F in Chapter 5.</p> <p>The Wallet Unit will act as an Authenticator in this setting.</p> <p>Note that the Relying Party Client and the Client are two programs that are executed on the same physical machine.</p> <p>[WebAuthn] relies on several different types of identifiers including:</p> <ul> <li>Relying Party ID: An identifier unique to the Relying Party which must be a valid domain string. This what the user will identify the Relying Party by and let the Authenticator learn which Relying Party is asking for registration/authentication.</li> <li>Credential ID: A unique identifier chosen by the Authenticator for each passkey.</li> <li>User ID: An identifier unique to each user that is assigned by the Relying Party. This will be provided to the Authenticator when registering a new passkey and subsequently provided by the Authenticator when authenticating towards Relying Party. The Authenticator will keep track of which passkeys are available for which User IDs and Relying Party IDs. The Relying Party keeps track of a User Name for each User ID.</li> <li>User Name: An alias that may be chosen by the user or the Relying Party and assigned to a specific passkey on the Authenticator. This allows the user to easily distinguish and select which passkey they want to authenticate with if several are present.</li> </ul> <p>Below we elaborate on how the different components work together to allow the registration and subsequent authentication using passkeys.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#421-registration","title":"4.2.1 Registration","text":"<p>The flow for registering a passkey in [WebAuthn] is the following:</p> <ol> <li>The Relying Party Server creates a challenge and sends this along with the User ID, the Relying Party ID, and the User Name to the Relying Party Client.</li> <li>The Relying Party Client forwards the information to the Client using the WebAuthnAPI.</li> <li>The Client checks that the Relying Party ID is consistent with the caller's origin and forwards the information to the Authenticator along with other contextual data.</li> <li>The Authenticator authenticates the user (for example using a PIN or via biometrics). It then generates a new key pair with a new Credential ID and set the scope of this to the specific Relying Party ID and User ID. Finally, the Authenticator generates and \"attestation\" (explained below) and sends this as well as the public key and its Credential ID to the Client</li> <li>The Client then forwards the information to the Relying Party Client that again forwards it to the Relying Party Server.</li> <li>The Relying Party Server verifies the attestation and registers the received public key for this User ID.</li> </ol> <p>Note that Authenticator stores the public key pair in a way such that it is scoped uniquely to a specific Relying Party aligning with the requirements of [CIR.2024.2979], Article 14 2, which states that the pseudonyms must be unique to each Relying Party.</p> <p>The term attestation is here used differently than elsewhere in the ARF. In this context, the attestation is not about attributes of the user, but rather about attributes of the Authenticator and is to ensure the Relying Party that they are talking with an Authenticator with certain attributes. The attestation often takes the form of a signature on the challenge as well as some other contextual data.</p> <p>In [WebAuthn], four different types of attestations are mentioned:</p> <ul> <li> <p>Basic Attestation: The Authenticator has a single master public/private key stored. This is used to sign all attestations and a certificate on the public key is included in the attestation data to allow the Relying Party to verify the signature.</p> </li> <li> <p>Attestation CA: Similar to the above in the sense that the Authenticator has a single master public/private key stored. However, instead of using this to attest pass keys, they use this to authenticate towards a Certificate Authority (CA), which is then configured to issue certificates to the Authenticator on multiple attestation key pairs.</p> </li> <li> <p>Anonymization CA: Similar to the above except that it is explicit that the Authenticator requests a certificate for a new attestation key pair per generated passkey.</p> </li> <li> <p>Self Attestation: The attestation is signed with the private key of the newly generated key pair in the passkey.   Note that this does not give any guarantees for the Relying Party about which authenticator they are interacting with.</p> </li> <li> <p>No Attestation Statement: No attestation is given.   Note that this does not give any guarantees for the Relying Party about which authenticator they are interacting with.</p> </li> </ul> <p>We note that Article 5a 5 a viii of [eIDAS 2.0] states  \"European Digital Identity Wallets shall, in particular support common protocols and interfaces: ... for relying parties to verify the authenticity and validity of European Digital Identity Wallets;...\". The latter two forms of attestation do not align with this requirement.</p> <p>In Chapter 5.1, we discuss how the other relates to previously identified privacy risks about user surveillance (see also Topic A).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#422-authentication","title":"4.2.2 Authentication","text":"<p>The flow for authenticating using a passkey following [WebAuthn] is:</p> <ol> <li>The Relying Party Server creates a challenge and sends this along with its Relying Party ID to the Relying Party Client.</li> <li>The Relying Party Client Client forwards the information to the browser using the WebAuthnAPI.</li> <li>The Client checks that the Relying Party ID is consistent with the caller's origin and forwards the information to the Authenticator along with other contextual data.</li> <li>The Authenticator authenticates the user (for example using a PIN or via biometrics).    It then prompts the user to select one of the passkeys scoped to this Relying Party ID. For this step the User Name can be presented to the user.    Finally, the private key of the chosen key pair is used to sign the challenge as well as some contextual data including the User ID, Credential ID, and the Relying Party ID.    This is then sent to the Client.</li> <li>The Client then forwards the information to the Relying Party Client that again forwards it to the Relying Party Server.</li> <li>The Relying Party Server verifies the signature with its stored public key for this User ID and Credential ID and depending on the outcome of this verification considers the user authenticated.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#43-challenges","title":"4.3 Challenges","text":"<p>Below we list challenges related to the use of [WebAuthn] as the technical specification for pseudonyms.</p> <ul> <li>Attestations may be linkable (see discussion in Chapter 5.1 and also Topic A) depending on the chosen type of attestation.</li> <li>The information about the Relying Party is verified only by the Client and not by the Authenticator itself.   This may be a problem as in Article 5a 5 a vii [eIDAS 2.0] it is stated that \"European Digital Identity Wallets shall, in particular ... ensure that the relying parties can be authenticated and identified by implementing authentication mechanisms in accordance with Article 5b;...\".</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#5-relation-to-other-topics","title":"5 Relation to Other Topics","text":"<p>Below we discuss how pseudonyms relate to the other topics being discussed.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#51-privacy-risks-and-mitigations","title":"5.1 Privacy Risks and Mitigations","text":"<p>Topic A - Privacy Risks and Mitigations discusses surveillance risks related to presenting Person Identification Data (PID) and (Qualified) Electronic Attestations of Attributes (Q)EAA. Similar, concerns are relevant for the pseudonyms functionality defined by the [WebAuthn] specification. In fact, from a linkability perspective, there are only minor differences between the attestations present in the registration flow of [WebAuthn] and other attestations such as PID and (Q)EAAs.</p> <p>In Chapter 5.3 we discuss how this relates to the risks and threats identified in the [RiskRegister].</p> <p>Below we consider two different types of linkability concerns for the attestation types summarized in Chapter 4.2.1 namely Relying Party Linkability and CA Linkability. The latter form of linkability is similar to what is dubbed Attestation Provider Linkability in the discussion Paper for Topic A, but there is a mismatch between the use of the word \"attestation\" in the broader ARF framework and in [WebAuthn] and to avoid confusion we, therefore, use a different wording here.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#511-relying-party-linkability","title":"5.1.1 Relying Party Linkability","text":"<p>Relying Party Linkability is the ability for Relying Parties to link together multiple authentications performed by a user using a Wallet Unit. Note that it is inherent for the use cases that the same Relying Party must be able to link together multiple presentations of a pseudonym as it must be unique per Relying Party. However, two or more Relying Parties should not be able to infer any information about whether they have interacted with one or multiple users by comparing multiple authentications using pseudonyms.</p> <p>To prevent this, it is necessary to ensure there are no unique (per Wallet Unit) presented to multiple different Relying Parties. Depending on the attestation form used for Registration (see Chapter 4.2.1) this may or may not be the case for [WebAuthn].</p> <p>If Basic Attestations are used where each wallet unit holds only one attestation key pair and corresponding certificate, the public key of this attestation key pair may be exactly such unique value that is presented to multiple Relying Parties. In [WebAuthn] it is suggested to ensure that multiple different Authenticators hold the same attestation key pair thereby no longer making it a unique value for correlation. We note that letting several different units share the same private key is against best practices, as it increases the risk of keys being compromised.</p> <p>If an Attestation CA is used to issue certificates on multiple attestation keys, the degree to which Relying Parties can correlate the different certificates can be reduced. However, as long as attestation keys are used more than once, the Relying Parties can still deduce some information by correlating registrations of Pseudonyms. The mitigation is similar to the proposals of Method B and Method C (Limited-time Attestations and Rotating-batch Attestations) from the discussion paper on topic A.</p> <p>If an Anonymization CA is used to issue certificates on single-use-only attestation keys, Relying Parties are not able to correlate information about multiple presentations. We refer to this as being Relying Party unlinkable.</p> <p>Neither Self Attestation nor No Attestation allows Relying Parties to correlate information about multiple presentations of pseudonyms. That is they are Relying Party unlinkable.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#512-ca-linkability","title":"5.1.2 CA Linkability","text":"<p>Certificate Authority (CA) linkability is the ability to track a user's interactions at several different Relying Parties by combining the information from those Relying Parties with information from CAs (in case such exists).</p> <p>Note that all the attestation types that are Relying Party linkable also are CA linkable by definition as the information available to CAs and Relying Parties is a superset of the information available only to multiple Relying Parties.</p> <p>Both the types Attestation CA and Anonymization CA are CA linkable as CAs can store which public key that issue certificates to and share with which Wallet Unit. By correlating this with the information available at the Relying Parties it is possible to track how the different Wallet Unit uses the pseudonym functionality.</p> <p>Neither Self Attestation nor No Attestation includes any information from a CA and Relying Parties are not able to correlate information about multiple presentations of pseudonyms with this form of attestation type. That is they are both also CA unlinkable.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#513-drawbacks-of-different-attestation-types","title":"5.1.3 Drawbacks of Different Attestation Types","text":"<p>In the table below we summarize information from previous chapters w.r.t. drawbacks of the different attestation types.</p> Attestation Type Drawbacks Basic Attestations Relying Party and CA linkable Attestation CA CA linkable and to some degree still Relying Party linkable Anonymization CA CA linkable Self Attestation No assurances for Relying Parties No Attestation No assurances for Relying Parties"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#52-wallet-unit-attestations","title":"5.2 Wallet Unit Attestations","text":"<p>Note that Topic C - Wallet Unit Attestation has not yet been drafted and the following is based on assumptions on content</p> <p>Topic C - Wallet Unit Attestations (WUA) And Key Attestations discusses how the Wallet Unit can document its functional and security capabilities, e.g., support for secure hardware, revocation status, etc.</p> <p>Certain WUA elements are somewhat sensitive, as they may allow for linkability, and are only intended for PID and Attestation Providers, when performing issuance. Other parts of the WUA is used to prove that the Wallet Unit has not been revoked. This information is less sensitive and is intended for Relying Parties.</p> <p>When a Wallet Unit and Relying Party performs registration of a pseudonym, key material will be stored on the Wallet Unit. This can be seen as a special case of issuance, in which the Relying Party acts the issuer and will be interested in what security guarantees the Wallet Unit can provide. Topic C should distinguish between a Relying Party acting as a Relying Party and Pseudonym issuer.</p> <p>There are two main areas of Topic C that are particularly relevant in relation to Pseudonyms:</p> <ul> <li> <p>Wallet Trust Evidence: Part of the WUA contains information on functional and cryptographic capabilities of the Wallet Unit (currently known as WTE). HRL WTE_24 A Wallet Instance SHALL release a WTE only to a PID Provider or Attestation Provider, and not to a Relying Party or any other party. states that an RP must not receive WTE information from the WU, however this prohibits a number of the HRLs related to issuance. Essentially, only the Self Attestation and No Attestation attestation types mentioned in Chapter 4.2.1 can be supported without access to WTE.</p> </li> <li> <p>Revocation: Pseudonyms are local to each Relying Party, which makes revocation somewhat easy: The Relying Party can simply invalidate the pseudonym locally and the Wallet Unit will no longer be able to access that Relying Party. This revocation will not affect other functionality of the Wallet Unit, e.g., other Pseudonyms, PID and attestations will remain valid. In addition to local revocation, it may be desireable for the Relying Party to be able to revoke the entire Wallet Unit. If this functionality is to be supported, there must be some kind of attestation (see Chapter 4.2.1) in place.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#521-questions-related-to-wallet-unit-attestation","title":"5.2.1 Questions Related to Wallet Unit Attestation","text":"<p>Below, we list open questions that must still be clarified related to the interaction with WUA.</p> <p>Question 1: Should a Relying Party be able to revoke more than just local pseudonyms?</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#53-digital-credential-api","title":"5.3 Digital Credential API","text":"<p>As stated in Chapter 4, [WebAuthn] does not specify the interface between the Wallet Units (i.e., Authenticators) and the Client used by the user to initiate the usage of the pseudonyms. Discussion Topic F must also take into account providing a seamless integration for the use of pseudonyms.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#54-relation-to-risk-register","title":"5.4 Relation to Risk Register","text":"<p>As pseudonyms may be used to provide authentication, a large number of the risks listed in the risk register for European Digital Identity Wallets [RiskRegister] are (at least indirectly) related to the use of pseudonyms:</p> Risk type\u00a0 Risk ID\u00a0 Related risk titles\u00a0 High-level risks to the wallets R2 Creation or use of a fake electronic identity High-level risks to the wallets R4 Identify theft High-level risks to the wallets R5 Data theft High-level risks to the wallets R6 Data disclosure High-level risks to the wallets R9 Unauthorised transaction High-level risks to the wallets R10 Transaction manipulation High-level risks to the wallets R14 Surveillance <p>Some of the Technical Threats from the [Risk Register] (threats labelled TTX.Y in its section III) are also relevant threats to consider in the context of pseudonyms. This is primarily TT5. Malicious actions, in which threats, such as TT5.1 Interception of information or TT5.3 Replay of messages, may lead to the risks expressed in the table above.</p> R2. Creation or use of a fake electronic identity Creation or use of a fake electronic identity is defined as the creation of an electronic identity in a wallet that does not exist in the real world. R4. Identity theft Identity theft is defined as the unauthorised acquisition of the wallet unit or loss of authentication factors enabling to impersonate a person. R5. Data theft Data theft is defined as the unauthorised extraction of data. Data theft is also associated to threats, such as data interception (unauthorised capture of data in transit) and data decryption (unauthorised decoding of encrypted data), which are likely to lead in some cases to Data disclosure (R6). R6. Data Disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. R9. Unauthorised transaction Unauthorised transactions are defined as operational activities conducted without the permission or knowledge of the wallet user. In many cases, an unauthorised transaction can lead to Identity theft (R4) or Data disclosure (R6). It is also related to unauthorised transactions, such as the misuse of cryptographic keys. R10. Transaction manipulation Transaction manipulation is defined as the unauthorised alteration of operations in the wallet. Transaction manipulation is an attack on integrity, and it is related to a data integrity breach. R14. Surveillance Surveillance, or monitoring, is defined as the unauthorised tracking or observation of a wallet user's activities, communication, or data. Surveillance is often related to inference, which is defined as the deduction of sensitive or personal information from seemingly innocuous data. SR1. Wholesale surveillance Wholesale surveillance is defined as the tracking or observation of the activities of many users through their wallet's communication or data. Wholesale surveillance is often associated with surveillance (R14) and inference at a global scale, where information about many users is combined to deduce sensitive or personal data about users or to identify statistical trends that can be used to design further attacks. <p>More specifically, [RiskRegister] describes the following threats in relation to pseudonyms:</p> ID Identifier Threat description Description of the identified threat (*) Risk title Related risks TR1 An attacker can revoke pseudonyms without justified reason. Creation or use of a fake electronic identity (R2)  TR26 PID, (Q)EAAs or pseudonyms can be presented to a wrong relying party. Data disclosure (R6) TR39 An attacker can unlawfully trace wallet users using unique/traceable identifiers. Data disclosure (R6) and Surveillance (R14) TR51 An attacker can convince a user to share personal data (i.e. PID, EAA-s, pseudonyms, electronic signatures, logs and other data) with the attacker or with a third party that the user did not intend to do so. Data theft (R5) / Data disclosure (R6) TR55 An attacker can bypass the user authentication method to use a pseudonym generated by a wallet unit.  Identity theft (R4) TR84 A group of colluding relying parties or PID providers can derive the user's identity data beyond data known to them. Surveillance (R14) TR85 An attacker can track and trace a user by using person identification data of the user where identification of the user is not required. Surveillance (R14) TR91 A relying party can replay elements from a previous session in another session. Transaction manipulation (R10) TR102 An attacker can impersonate relying parties during the connection to relying parties. Unauthorised transaction (R9) / Data disclosure (R6) TR105 An attacker can perform man-in-the-middle attacks. Unauthorised transaction (R9) / Data disclosure (R6) / Surveillance (R14) <p>Note that there is no threat corresponding to TR68-71 (Attacker can revoke without consent/reason) in relation to pseudonyms.</p> <p>R14, SR1, TR39, and TR84 are particularly relevant to consider given the discussion in Chapter 5.1, namely linkability of attestations in [WebAuthn].</p> <p>TR26, TR102, and TR105 are particularly relevant for the challenge described in Chapter 4.3, namely that the Relying Party is only authenticated by the Client and not by the Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#6-additions-and-changes-to-the-arf","title":"6 Additions and Changes to the ARF","text":"<p>Pseudonyms can be used to support many different functionalities. In particular, at least:  1. User authentication via. a pseudonym as envisioned in Use Case A and B.  2. Pseudonyms with attested attributes that can be presented to Relying Parties, using the attributes. This can further come in at least two variants namely self-attested attributes and third-party attested attributes each being useful in different settings.</p> <p>Below we propose changes and additions to the ARF both related to High Level Requirements (HRLs) for the topic and for the ARF main document only to ensure user authentication via pseudonyms. There are no hindrances for member states or other actors to define for example additional attestation types that can be used to support for example pseudonyms with attested attributes.  The below is merely a proposal for the minimal HRLs that must be fulfilled by all actors in the EUDI Wallet ecosystem related to the pseudonym and user authentication functionality.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#61-additions-and-changes-to-hlrs","title":"6.1 Additions and Changes to HLRs","text":"<p>The below HRLs will be added to the Annex II, Topic 11 of the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#611-hrls-related-to-use-cases","title":"6.1.1 HRLs related to Use Cases","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-1","title":"Requirement 1","text":"<p>A Wallet Instance SHALL allow a User to generate a Pseudonym and register this at a Relying Party.</p> <p>Rationale: This is necessary to support Use Case A and B.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-2","title":"Requirement 2","text":"<p>A Wallet Instance SHALL allow a User to authenticate with a Pseudonym towards a Relying Party if the Wallet Instance was used to previously register a Pseudonym for the same Relying Party.</p> <p>Rationale: This is necessary to support Use Case A and B.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-3","title":"Requirement 3","text":"<p>A Wallet Instance SHALL be able to perform the actions specified in the above two requirements independently of whether the interaction with the Relying Party is initiated on the same device as the Wallet Instance or on a device different from the Wallet Instance.</p> <p>Rationale: Both cross device and same-device flows must be possible.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-4","title":"Requirement 4","text":"<p>A Wallet Instance SHALL allow the User to register multiple different Pseudonyms at a given Relying Party.</p> <p>Rationale: It should be possible for a User to use their EUDIW both in a work and personal context and more Pseudonyms should therefore be possible.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-5","title":"Requirement 5","text":"<p>Wallet Instance SHALL enable the User to freely choose a User alias for each Pseudonym registered at a Relying Party. An alias SHALL be a text string. Setting an alias SHALL be optional for the User. The User SHALL be able to change the alias for any Pseudonym.</p> <p>Rationale: Setting an alias helps the User to recognize and distinguish Pseudonyms, which otherwise may be meaningless sequences of symbols.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-6","title":"Requirement 6","text":"<p>A Wallet Instance SHALL allow a User to choose which Pseudonym to authenticate with towards a Relying Party if multiple Pseudonyms are registered for this Relying Party. The user shall be presented with the alias of their of Pseudonyms if assigned when this choice must be made.</p> <p>Rationale: A User should be able to freely choose which Pseudonym to use if multiple are available.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-7","title":"Requirement 7","text":"<p>A Wallet Instance SHALL allow a User to delete a Pseudonym in which case it shall not be possible to recover.</p> <p>Rationale: A User should be allowed to choose if they no longer wishes to have a Pseudonym associated with their Wallet Instance.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#612-hrls-related-to-relying-parties","title":"6.1.2 HRLs related to Relying Parties","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-8","title":"Requirement 8","text":"<p>A Relying Party SHALL be able to verify that a User is registering a Pseudonym using a non-revoked Wallet Instance.</p> <p>Rationale: A Relying Party should be able to achieve a high level of trust in authentication performed using this Pseudonym when this is a requirement.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-9","title":"Requirement 9","text":"<p>A Relying Party SHALL be able to verify that a User is authenticating with a Pseudonym using a non-revoked Wallet Instance.</p> <p>Rationale: A Relying Party should be able to achieve a high level of trust in authentication performed using this Pseudonym when this is a requirement.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-10","title":"Requirement 10","text":"<p>If Wallet Instance is used to register a Pseudonym at a Relying Party and afterwards PID/(Q)EAAs are presented to the same Relying Party in the same session, then this Relying Party SHALL be able to verify that the same Wallet Instance have been used to perform both actions.</p> <p>Rationale: A Relying Party should be able to be assured that they can trust subsequent authentications with the Pseudonym to have the properties as presented int he PID/(Q)EAAs.</p> <p>Note: The above only states the high-level requirement. Later technical specifications will define how this is enabled.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#613-hrls-related-to-privacy","title":"6.1.3 HRLs related to Privacy","text":"<p>Note that the requirements WTE_03 and WTE_04 from Topic 9 ensures that a Wallet Instance must authenticate a User before Pseudonyms are, viewed, created or used to authenticate towards Relying Parties. We therefore do not think it is necessary to add further requirements realted to this. </p> <p>The placement of these HRLs will be discussed in Topic C.</p> <p>Further, note that RPA_01 and RPA_03 from Topic 6 ensures that Wallet Instances SHALL authenticate Relying Parties also in the Pseudonym use case. It is therefore not necessary to specify further HRLs related to this.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-11","title":"Requirement 11","text":"<p>A Wallet Instance SHALL store the information necessary for authenticating with a Pseudonym encrypted in their WSCD.</p> <p>Rationale: It is made explicit in Article 5a 4. b of [eiDAS 2.0] that the Pseudonyms must be stored encrypted.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-12","title":"Requirement 12","text":"<p>A Relying Party SHALL NOT be able to derive the User\u2019s true identity, or any data identifying the User, from the Pseudonym value received by the Relying Party.</p> <p>Rationale: This is what makes a Pseudonym a Pseudonym, as opposed to an identifier.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-13","title":"Requirement 13","text":"<p>A Wallet Instance SHALL always release a different value for the Pseudonym of a given User to different Relying Parties.</p> <p>Rationale: This is important to ensure that colluding Relying Parties cannot use the Pseudonyms  to track the User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-14","title":"Requirement 14","text":"<p>It SHALL NOT be possible to correlate Pseudonyms based on their values nor on the actions performed by the Wallet Instance during registration and authentication, meaning that colluding Relying Parties SHALL NOT able to conclude that Pseudonyms released by a User to different Relying Parties belong to the same User.</p> <p>Rationale: If this was possible, it would defeat the purpose of using different Pseudonyms and would allow colluding Relying Parties to track the User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-15","title":"Requirement 15","text":"<p>The Wallet Instance SHALL ensure that Pseudonyms contain sufficient entropy to make the chance of colliding Pseudonyms (meaning two Users having the same Pseudonym value for the same Relying Party) negligible.</p> <p>Rationale: If Pseudonym collision could occur in practice, User recognition by the Relying Party would fail, because the wrong User would be matched to another account and thereby the Relying Party could reveal sensitive information to a wrong User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-16","title":"Requirement 16","text":"<p>A Wallet Instance MUST NOT share the user's optionally assigned Pseudonym aliases with any Relying Party.</p> <p>Rationale: The aliases are a convenience thing for users and they should be allowed to choose them as they like without having to consider whether it contains sensitive data or not.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#613-hrls-for-interoperability","title":"6.1.3 HRLs for Interoperability","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-17","title":"Requirement 17","text":"<p>The Commission SHALL create or reference a profile or extension of the WebAuthn specification compliant with the HRLs for this topic.</p> <p>Rationale: It must be ensured that the HRLs are conformed to an in an interoperable manner.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-18","title":"Requirement 18","text":"<p>Wallet Providers SHALL ensure that their Wallet Solution supports WebAuthn with additions and changes as documented in this document and future technical specifications created by or on behalf of the Commission.</p> <p>Rationale: This ensures that Relying Parties can implement a uniform interface to let any User register and authenticate with Pseudonyms if they have an EUDIW.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#615-hrls-to-be-removed","title":"6.1.5 HRLs to be Removed","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-pa_01-from-topic-11","title":"Requirement PA_01 from Topic 11","text":"<p>PA_01 states:</p> <p>Pseudonym Providers, Pseudonym attestations, and Wallet Instances SHALL comply with all applicable requirements in [Pseudonym Rulebook].</p> <p>Rationale for removal: Pseudonym providers are no longer used for the Pseudonyms functionality.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#62-additions-and-changes-to-be-added-to-the-arf-main-document","title":"6.2 Additions and Changes to be added to the ARF Main Document","text":"<p>To be added once agreement on HRLs have been reached.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#7-references","title":"7 References","text":"Reference Description [WebAuthn] Web Authentication: An API for accessing Public Key Credentials Level 2 W3C Recommendation, 8 April 2021, https://www.w3.org/TR/webauthn-2/ [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v1,0. [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [eIDAS 2.0] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [CIR.2024.2979] Commission Implementing Regulation (EU) 2024/2979 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the integrity and core functionalities of European Digital Identity Wallets"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/","title":"F digital credential api","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics / f-digital-credential-api</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#f-digital-credentials-api","title":"F - Digital Credentials API","text":"<p>Version 1.0, updated 27 January 2025</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#1-introduction","title":"1. Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for eIDAS Coordination Group regarding Topic F: Digital Credential API (former known as browser API).</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>Define high-level requirements for the interface between the wallet and browsers and/or the operating system. These requirements are currently under discussion and being standardized through the Digital Credential API at W3C. The protocols to be used with this API, including message structures and contents, are being standardized by ISO and the OpenID Foundation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#12-related-risks-in-the-risk-register","title":"1.2 Related risks in the Risk Register","text":"<p>The risk register for European Digital Identity Wallets [RiskRegister] contains the following risks that are related to the use of the Digital Credentials API:</p> Risk type Risk id Related risk titles High-level risks to the wallets R5 Data theft High-level risks to the wallets R6 Data disclosure High-level risks to the wallets R9 Unauthorised transaction High-level risks to the wallets R10 Transaction manipulation High-level risks to the wallets R13 Service disruption High-level risks to the wallets R14 Surveillance System-related risks SR3 Legal non-compliance R5 Data theft Data theft is defined as the unauthorised extraction of data. Data theft is also associated to threats, such as data interception (unauthorised capture of data in transit) and data decryption (unauthorised decoding of encrypted data), which are likely to lead in some cases to Data disclosure (R6). R6 Data disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. R9 Unauthorised transaction Unauthorised transactions are defined as operational activities conducted without the permission or knowledge of the wallet user. In many cases, an unauthorised transaction can lead to Identity theft (R4) or Data disclosure (R6). It is also related to unauthorised transactions, such as the misuse of cryptographic keys. R10 Transaction manipulation Transaction manipulation is defined as the unauthorised alteration of operations in the wallet. Transaction manipulation is an attack on integrity, and it is related to a data integrity breach. R13 Service disruption Service disruption is defined as an interruption or degradation in the normal operation of the wallet. A specific kind of service disruption is user lock-out, defined as the inability of a user to access their account or their wallet. R14 Surveillance Surveillance, or monitoring, is defined as the unauthorised tracking or observation of a wallet user's activities, communication, or data. Surveillance is often related to inference, which is defined as the deduction of sensitive or personal information from seemingly innocuous data. SR3 Legal non-compliance Legal non-compliance is defined as a situation when relevant laws, regulations or standards cannot be adhered to. In the context of the wallet, as security and privacy of the solution are legal requirements, all threats are likely to lead to some kind of legal non-compliance. <p>More specifically, [RiskRegister]  describes the following threats to a Wallet:</p> ID Threat description Related risks TR25 The wallet can present attributes to a relying party without the approval of a user. Data disclosure (R6) TR28 An attacker can get a user into wrongfully approving a request for electronic attestations of attributes (phishing or other). Data disclosure (R6) TR29 An attacker can leak attributes from the wallet and identify the wallet user where identification is not required/allowed. Data disclosure (R6) TR31 A request can be leaked to an attacker. Data disclosure (R6) TR34 An attacker can know whether a wallet is installed on the same device he is using, or on another one, and get information on it. Data disclosure (R6) TR50 An attacker can eavesdrop during the connection from the wallet to relying parties. Data theft (R5) / Data disclosure (R6) TR50 An attacker can convince a user to share personal data (i.e. PID, EAA-s, pseudonyms, electronic signatures, logs and other data) with the attacker or with a third party that the user did not intend to do so. Data theft (R5) / Data disclosure (R6) TR76 A relying party can send multiple invalid requests. Service disruption (R13) TR80 An attacker can block transactions by relying parties, users and/or PID provider. Service disruption (R13) TR88 Attackers can make changes to a request's metadata (service name, usages, etc.). Transaction manipulation (R10) TR93 An attacker can replace or modify the PID during its transfer from the wallet unit to the online relying party. Transaction manipulation (R10) TR103 The user behind the relying party - browser connection can be different from the user behind the relying party - wallet connection. Unauthorised transaction (R9) / Data disclosure (R6) / Identity theft (R4) TR105 An attacker can perform man-in-the-middle attacks Unauthorised transaction (R9) / Data disclosure (R6) / Surveillance (R14)"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalized key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalized) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will' and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#14-document-structure","title":"1.4 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li>Chapter 2 introduces the Digital Credentials API</li> <li>Chapter 3 presents the functionality expected by the Digital Credentials API when used in the context of ARF. </li> <li>Chapter 4 lists the additions and changes that will be made to the ARF  as a result of discussing this topic with Member States.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#2-digital-credentials-api","title":"2. Digital Credentials API","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#21-overview","title":"2.1 Overview","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#problem-statement","title":"Problem Statement","text":"<p>Remote transaction flows are use cases in which the Relying Party Instance  is remote from the User and the User device. The Relying Party Instance accesses  the Wallet Instance over the internet, using a browser. These use cases can be  further distinguished in same-device flows, in which the browser is running on  the same device as the Wallet Unit, and cross-device flows, where the browser is  on a different device.</p> <p>Remote presentation flows come with a number of challenges:</p> <ul> <li>1. Secure Cross-Device Flows: Cross-device flows are vulnerable to  phishing and relay attacks, necessitating enhanced security measures. </li> <li>2. Wallet Unit Selection and Invocation:  In remote flows, where interactions do  not originate from the Wallet Unit, Users may encounter difficulties in selecting and  invoking the appropriate Wallet Instance to fulfill a specific presentation request,  particularly when multiple Wallet Units are present on the device.</li> <li>3. Invocation Mechanism: Establishing a communication channel between the Wallet Unit and the remote Relying Party Instance presents challenges due to inconsistent invocation methods.  One approach considered by standardization bodies involves using custom URI schemes, such as \"mdoc://\"  or \"openid4vp://\". In this approach, the mobile operating system would trigger the Wallet Unit  when the Relying Party Instance requests a connection via a custom URI. However, relying on custom  URI schemes introduces variability in user experiences across different browsers and operating systems,  resulting in operational inefficiencies and potential security risks. </li> <li>4. Clear Origin Verification: Protecting against relay attacks requires precise  identification of the Relying Party Instance's origin.</li> <li>5. Session binding: When presenting a PID or attestation to a remote Relying Party, users have to switch contexts. Existing protocols may enable attacks where the contexts are not \"bound\" to each other resulting in session \"hijacking\".</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#proposed-solution","title":"Proposed solution","text":"<p>Digital Credentials API [Cred_API] is a possible solution to the identified  challenges. Digital Credentials API has the potential to enhance usability, scalability,  and security while providing a consistent and reliable user experience. </p> <p>Digital Credentials API is a Draft Community Group report of the Web Platform Incubator Community Group (WICG) that builds upon Credential Management Level 1 API W3C Working Draft [Cred_Man]. The goal of the Digital Credentials API is to enable user agents (i.e., browsers) to mediate access to, and presentation of attestations. Currently, attestation issuance is not in the scope of this API, but future versions will consider it. The Digital Credentials API can be used, for example, by a Relying Party website to request a PID or (Q)EEA stored in a Wallet Unit through the User's browser. The browser and the Wallet Unit may be in the same device (same-device flow) or in separate devices but in proximity (cross-device flow).</p> <p>The Digital Credentials API can address the challenges related to remote presentation flows as follows:</p> <ul> <li>1. Secure Cross-Device Flows: The Digital Credentials API enables  a secure transport with  proximity checks for cross-device requests</li> <li>2. Wallet Unit Selection and Invocation: The Digital Credentials API enables a unified interface  provided by the web browser and the mobile operating system, which can streamline this  process, offering a seamless and intuitive user experience.</li> <li>3. Invocation Mechanism: The Digital Credentials API removes the need for custom URL schemes  for invoking a Wallet Unit.</li> <li>4. Clear Origin Verification: The Digital Credential API enables including the origin  information, such as the website domain or app package name, within the presentation request  ensuring the authenticity of the request and enhancing trust for both Wallet Units and Users.</li> <li>5. Session binding: The Digital Credentials API allows information about a session to be embedded in a presentation request. At the same time the browser and the operating system handle context switching preventing session hijacking. </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#22-relying-party-wallet-unit-interaction","title":"2.2 Relying Party - Wallet Unit interaction","text":"<p>Using the Digital Credentials API, a Relying Party can interact with a Wallet Unit using a website and through a browser.</p> <p>The current version of Digital Credentials API extends Credential Management Level 1 API (the same API used by Passkey/WebAuthN) to allow websites to request an attestation. This is achieved by providing a sequence of <code>presentation requests</code>,  where each presentation request includes an <code>exchange protocol</code> and <code>request data</code>. The format of the request data are specific to the exchange protocol. The Digital Credentials API specifications will include a registry of supported protocols.</p> <p>As a next step, the browser sends the request to the operating system which searches matching attestations in installed Wallet Units. The cross-device  flow can be used to search for matching attestations in Wallet Units installed  in a different device, located in close proximity to the browser. If more than  one matching attestation is found, the browser prompts the User to select one.  As a next step, request data is sent to the corresponding Wallet Unit. Then, the Wallet Unit asks user consent and generates a presentation based on the selected exchange protocol. The presentation is relayed back to the Relying Party's website.</p> <p>As of January 2025, Digital Credentials API support is provided only by the Chrome browser and the Android mobile operating system. In this experimental implementation there exists a method for Wallet Units to indicate to a component, which is part of the Wallet Solution and it is referred to as the \"matcher\" in the current Android-specific implementation, the availability of attestations and, optionally, attributes included in the attestation. An example can be found here.. This Android-specific documentation mentions that the information provided by the Wallet Unit is used by the Android operating system to render a selector, allowing Users to make an informed choice about which attestation to proceed with. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#221-same-device-flow","title":"2.2.1 Same-device flow","text":"<p>As of January 2025, the same-device flow is  implemented using the following steps:</p> <ul> <li>The User visits the website of the Relying Party and indicates that they want to present some attributes from installed Wallet Units</li> <li>The browser asks permission from the User to allow Digital Credentials API invocation from this particular website. </li> <li>The Relying Party  indicates to the browser which attributes they want to request by creating a <code>presentation request</code>.</li> <li>The operating system searches for attestations that satisfy the requested attributes.</li> <li>The browser presents to the User a selector that includes a list of potentially suitable attestations. </li> <li>The User selects an attestation. The operating system invokes the Wallet Unit providing as input the selected attestation and the request data</li> <li>The Wallet Unit processes the request according to the relevant specification (e.g., OpenID4VP) and returns the requested  attributes through the browser, provided that the Wallet Unit contains the attributes, all required verifications pass and the User consents</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#222-cross-device-flow","title":"2.2.2 Cross-device flow","text":"<p>The cross-device flow is implemented using the following steps:</p> <ul> <li>The User visits the website of the Relying Party and indicates that they want to present some attributes from installed Wallet Units</li> <li>The browser asks permission from the User to allow Digital Credentials API invocation from this particular website. </li> <li>The Relying Party  indicates to the browser which attributes they want to request by  creating a <code>presentation request</code>.</li> <li>The browser uses CTAP 2.2 hybrid flow (section 11.5 of [Ctap]) to establish a tunnel between the  browser and the device where the Wallet Unit is installed (this is the same flow used by Passkey).  From a high level this is implemented as follows: (i) The browser presents a QR code which  includes information about the tunnel endpoint and keys that can be used for establishing  a secure session, (ii) the user scans the QR code using the device camera, (iii) the device  where the Wallet Unit is installed emits a BLE advertisement which is received by the  browser. The advertisement includes in an encrypted form information required for  establishing the secure tunnel. This advertisement is used as a proximity check,  (iv) The tunnel is established.</li> </ul> <p> - The presentation request is transferred through the tunnel to the device operating system - The device operating system presents to the User a selector that includes a list of potentially suitable attestations.</p> <p></p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#3-expectations-from-the-digital-credentials-api","title":"3. Expectations from the Digital Credentials API","text":"<p>In this section expectations from the Digital Credentials API when used in the  context of ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#31-expected-functionality","title":"3.1 Expected functionality","text":"<ol> <li> <p>Wallet Selection and Invocation for attestation presentation: The Digital Credentials API should  enable a browser or OS to search for Wallet Units containing attestations   that potentially match the request of the Relying Party, addressing user   experience and scaling concerns caused custom URI-based or universal link (a.k.a. app link)-based approaches.\u200b</p> </li> <li> <p>Wallet Selection and Invocation for attestation issuance: The Digital Credentials API should  enable a browser or OS to search for Wallet Units that can handle an attestation offer  from a specific Attestation Provider, addressing user   experience and scaling concerns caused custom URI-based or universal link (a.k.a. app link)-based approaches.\u200b\u200b</p> </li> <li> <p>Secure Cross-Device Flows: The Digital Credentials API should enable  APIs and protocols (e.g., CTAP2) that ensure secure cross-device engagement, mitigating threats such as phishing and relay attacks.</p> </li> <li> <p>Protocol support: The Digital Credentials API should support the protocols  specified in the Implementing Acts as remote presentation protocols for attestations and attestation issuance.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#32-responsibilities","title":"3.2 Responsibilities","text":"<p>The Digital Credentials API should operate as a secure transport layer, allowing all parties to fulfill their requirements as specified in Annex 2  of ARF. Browsers and operating systems facilitating remote transaction flows should not act on behalf of Attestation Providers,Relying Parties or Wallet  Units. Particularly:</p> <ol> <li> <p>Consent:  Wallet Units and Relying Parties should handle user consent for attribute requests and presentations. The Digital Credentials API should not add an additional consent layer to the workflow for presenting attributes stored in a Wallet Unit.</p> </li> <li> <p>Relying Party Authentication: Wallets Units are responsible for authenticating Relying Parties before delivering  attribute payloads. The Digital Credentials API should provide sufficient information to Wallet Units about the presentation request origin and other necessary context information, allowing Wallet Units to  identify and authenticate Relying Parties, as well as to verify that the request from the Relying Party  was not copied and replayed.</p> </li> <li> <p>Attestation Provider and Relying Party Authorization: Although browsers and operating systems implementing the Digital Credentials API should verify the web origin of Attestation Providers and Relying Parties, as well as that the credential offers and presentation requests are transferred over TLS from the Attestation Provider or  the Relying Party to the browser, they should not decide which Attestation Providers or Relying Parties are authorized to  issue attestations or request attributes as this responsibility lies with national issuers and regulators, including Relying Parties registrars.</p> </li> <li> <p>Wallet Unit sovereignty. When the Digital Credentials API is used, the operating  system should not override or remove control from the Wallet Unit. The User's Wallet Unit should retain full authority over attestation management, including issuance, storage, and  presentation. This ensures that the Wallet Unit remains the trusted component for safeguarding  user data and interactions. The operating system and browser should not disrupt the Wallet Unit's  security functions.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#33-technological-neutrality-and-cross-platform-interoperability","title":"3.3 Technological Neutrality and Cross-Platform Interoperability","text":"<p>The Digital Credentials API should preserve technological neutrality and avoid  any reliance on vendor-specific extensions. Particularly:</p> <ol> <li> <p>Attestation format neutrality: The Digital Credentials API should be neutral  and open with respect to the format of attestations to be used. For example, if a  \"Registry of Protocols for Requesting Digital Credentials\" is utilized, adding or  removing protocols to the registry should follow established criteria and processes,  and involve multiple stakeholders.</p> </li> <li> <p>Cross-platform interoperability. The use of the Digital Credentials API  should provide cross-platform interoperability, ensuring users are not locked into  a specific vendor's browser or operating system.</p> </li> <li> <p>Wallet Solution neutrality.  Any approved Wallet Solution should be able  to use the Digital Credentials API. Usage of the API should not require additional  vetting processes by vendors or impose constraints on Wallet Providers other than  those required by the EU.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#34-privacy-preservation","title":"3.4 Privacy preservation","text":"<p>The use of the Digital Credentials API should not compromise User privacy. In more details. </p> <ol> <li> <p>Privacy preserving searching: Wallet Units may have to \"indicate\" to the Digital Credentials  API framework the availability of attestations, to facilitate their discovery and use.  However, this process should be designed and implemented in a way that it does not introduce  privacy threats, such as exposing attribute values to any other party, including the OS/browser  vendor, other applications on the same device, other users of the same device, or Relying Parties.</p> </li> <li> <p>Privacy preserving attestation relay:  The use of a browser as an intermediary in the attestation  issuance and presentation process should not create privacy risks, such as those arising from malicious add-ons  or unauthorized tracking mechanisms. Browsers should maintain strict privacy controls to ensure  that attestation-related data is neither exposed nor accessible to unauthorized third parties.  This principle also extends to any tunneling services used to facilitate cross-device flow.</p> </li> <li> <p>Protection against data theft: Browsers and operating systems providing support for  the Digital Credentials API should minimize the threat of data theft and disclosure through  eavesdropping the communication between the Wallet Unit and the Attestation Provider or  Relaying Party's website</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#35-availability-preservation","title":"3.5 Availability preservation","text":"<p>The use of the Digital Credentials API should not enable Denial-of-Service  attacks against Wallet Units. Particularly:</p> <ol> <li>DoS protection. The use of the Digital Credentials API should not facilitate Attestation Provider or Relying  Parties to perform Denial of Service attacks against Wallet Units, e.g., by enabling an Attestation Provider or Relying Party  to send multiple invalid requests. Similarly, the use of the Digital Credentials API should not enable  attackers to block transactions by Relying Parties and Wallet Units</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#4-additions-and-changes-to-the-arf","title":"4 Additions and changes to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#41-high-level-requirements-to-be-added-to-annex-2","title":"4.1 High-Level Requirements to be added to Annex 2","text":"<p>The following High-Level Requirements will be added to Annex 2 of the ARF v1.9:</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#411-requirements-to-be-added-likely-to-topic-1","title":"4.1.1 Requirements to be added (likely) to Topic 1","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#requirement-1","title":"REQUIREMENT 1","text":"<p>A Wallet Unit and a Relying Party Instance receiving an attestation from the Wallet  Unit SHALL ensure that the attributes included in the presented attestation are  accessible only to the Relying Party, by encrypting the presentation response.  This SHALL include preventing decryption of the presentation response or Man-in-the-Middle  attacks by the browser, the operating system, or other components between the Wallet  Unit and the Relying Party.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#conditional-requirements","title":"Conditional Requirements","text":"<p>Providing that the expectations set in chapter 3 with respect to  attestation presentation are met, the following two High-Level Requirements will be added (likely) to Topic 1:</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#requirement-2-conditional","title":"REQUIREMENT 2 (conditional)","text":"<p>Wallet Units and Relying Party Instances SHALL support the Digital Credentials API for remote presentation flows. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#requirement-3-conditional","title":"REQUIREMENT 3 (conditional)","text":"<p>A Wallet Unit SHALL disclose the presence of all stored attestations to the Digital  Credential API framework, but SHALL NOT disclose the value of the attributes in  these attestations. \u200b</p> <p>\u200bNote: This restriction applies even if such disclosure would enhance the services  provided by the operating system to the Wallet Unit, for example, attestation selection  in the context of the Digital Credential API.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#412-requirements-to-be-added-likely-to-topic-1023","title":"4.1.2 Requirements to be added (likely) to Topic 10/23","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#conditional-requirements_1","title":"Conditional Requirements","text":"<p>Providing that the expectations set in chapter 3 with respect to  attestation issuance are met, the following High-Level Requirement will be added t(likely) to Topic 10/23:</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#requirement-4-conditional","title":"REQUIREMENT 4  (conditional)","text":"<p>Wallet Units and Relying Party Instances SHALL support the Digital Credentials API for attestation issuance.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#42-high-level-requirements-to-be-changed","title":"4.2 High-Level Requirements to be changed","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#rpa_01","title":"RPA_01","text":"<p>The following text will be appended to RPA_01 \"The Wallet Unit SHALL retain full authority over  this process, for example, this process SHALL NOT be handled by a third party, including the  browser and the operating system.\"</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#rpa_07","title":"RPA_07","text":"<p>The following text will be appended to RPA_07 \"The Wallet Unit SHALL retain full authority over  this process, for example, this process SHALL NOT be handled by a third party, including the  browser and the operating system.\"</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#6-references","title":"6 References","text":"Reference Description [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v1.0, final [Cred_API] Digital Credentials, Draft Community Group Report, 05 December 2024, available at https://wicg.github.io/digital-credentials/ [Cred_Man] Credential Management Level 1, 13 August 2024, available at https://www.w3.org/TR/credential-management-1/ [Ctap] Client to Authenticator Protocol (CTAP) Review Draft, March 21, 2023, available at https://fidoalliance.org/specs/fido-v2.2-rd-20230321/fido-client-to-authenticator-protocol-v2.2-rd-20230321.html"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/","title":"G zero knowledge proof","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics / g-zero-knowledge-proof</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#g-zero-knowledge-proof","title":"G - Zero Knowledge Proof","text":"<p>Placeholder file</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/","title":"V pid rulebook","text":"<p>Home / eudi-doc-architecture-and-reference-framework / docs / discussion-topics / v-pid-rulebook</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#v-pid-rulebook","title":"V - PID rulebook","text":"<p>Placeholder file</p>"},{"location":"eudi-web-booking-service-demo/","title":"Index","text":"<p>Home / eudi-web-booking-service-demo</p>"},{"location":"eudi-web-booking-service-demo/#booking-service-demo-web-app","title":"Booking Service Demo Web App","text":"<p>:heavy_exclamation_mark: Important! Before you proceed, please read the EUDI Wallet Reference Implementation project description</p> <p></p>"},{"location":"eudi-web-booking-service-demo/#table-of-contents","title":"Table of contents","text":"<ul> <li>Overview</li> <li>Disclaimer</li> <li>Getting Started</li> <li>Licence</li> </ul>"},{"location":"eudi-web-booking-service-demo/#overview","title":"Overview","text":"<p>A web application that implements a pseudo booking service to demonstrate the presentation and issuance capabilities of EUDI ecosystem</p>"},{"location":"eudi-web-booking-service-demo/#disclaimer","title":"Disclaimer","text":"<p>The released software is an initial development release version: -  The initial development release is an early endeavor reflecting the efforts of a short timeboxed period, and by no means can be considered as the final product. -  The initial development release may be changed substantially over time, might introduce new features but also may change or remove existing ones, potentially breaking compatibility with your existing code. -  The initial development release is limited in functional scope. -  The initial development release may contain errors or design flaws and other problems that could cause system or other failures and data loss. -  The initial development release has reduced security, privacy, availability, and reliability standards relative to future releases. This could make the software slower, less reliable, or more vulnerable to attacks than mature software. -  The initial development release is not yet comprehensively documented. -  Users of the software must perform sufficient engineering and additional testing in order to properly evaluate their application and determine whether any of the open-sourced components is suitable for use in that application. -  We strongly recommend to not put this version of the software into production use. -  Only the latest version of the software will be supported</p>"},{"location":"eudi-web-booking-service-demo/#getting-started","title":"Getting Started","text":"<p>First, run the development server:</p> <pre><code>npm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n</code></pre> <p>Open http://localhost:3000 with your browser to see the result.</p> <p>You can start editing the page by modifying <code>app/page.tsx</code>. The page auto-updates as you edit the file.</p> <p>This project uses <code>next/font</code> to automatically optimize and load Inter, a custom Google Font.</p>"},{"location":"eudi-web-booking-service-demo/#license","title":"License","text":""},{"location":"eudi-web-booking-service-demo/#license-details","title":"License details","text":"<p>Copyright \u00a9 2023 European Commission</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <pre><code>http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home / eudi-web-booking-service-demo / CODE_OF_CONDUCT</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home / eudi-web-booking-service-demo / CONTRIBUTING</p>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-lib-android-wallet-core/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core</p>"},{"location":"eudi-lib-android-wallet-core/#eudi-wallet-core-library-for-android","title":"EUDI Wallet Core library for Android","text":"<p>Important! Before you proceed, please read the EUDI Wallet Reference Implementation project description</p>"},{"location":"eudi-lib-android-wallet-core/#overview","title":"Overview","text":"<p>This repository contains the EUDI Wallet Core library for Android. The library is a part of the EUDI Wallet Reference Implementation project.</p> <p>This library acts as a coordinator by orchestrating the various components that are required to implement the EUDI Wallet functionality. On top of that, it provides a simplified API that can be used by the application to implement the EUDI Wallet functionality.</p> <pre><code>graph TD\n;\n    A[eudi-lib-android-wallet-core]\n    B[eudi-lib-android-wallet-document-manager] --&gt;|DocumentManager| A\n    C[eudi-lib-android-iso18013-data-transfer] --&gt;|TransferManager| A\n    D[eudi-lib-jvm-openid4vci-kt] --&gt;|OpenId4VciManager| A\n    E[eudi-lib-jvm-siop-openid4vp-kt] --&gt;|OpenId4VpManager| A\n    F[com.android.identity] --&gt;|SecureArea,StorageEngine| B\n    H[eudi-lib-jvm-presentation-exchange] --&gt; E\n    G[identity-credential-android] --&gt; A\n    B --&gt;|DocumentManager| C\n    F --&gt;|SecureArea,StorageEngine| A\n</code></pre> <p>The library provides the following functionality:</p> <ul> <li>Document management<ul> <li> Documents' Key creation and management with Android Keystore by default</li> <li> Support for custom SecureArea implementations</li> <li> Support for multiple SecureArea implementations</li> </ul> </li> <li>Document issuance<ul> <li> Support for OpenId4VCI Draft 14 document issuance<ul> <li> Authorization Code Flow</li> <li> Pre-authorization Code Flow</li> <li> Support for mso_mdoc format</li> </ul> </li> <li> Support for sd-jwt-vc format<ul> <li> Support credential offer</li> <li> Support for DPoP JWT in authorization</li> </ul> </li> <li> Support for JWT proof types</li> <li> Support for deferred issuing</li> </ul> </li> <li>Proximity document presentation<ul> <li> Support for ISO-18013-5 device retrieval<ul> <li> QR device engagement</li> <li> NFC device engagement</li> <li> BLE data transfer</li> <li> NFC data transfer</li> <li> Wifi-Aware data transfer</li> </ul> </li> </ul> </li> <li>Remote document presentation<ul> <li> OpenId4VP document transfer<ul> <li> For pre-registered verifiers</li> <li> Dynamic registration of verifiers</li> </ul> </li> </ul> </li> </ul> <p>The library is written in Kotlin and is compatible with Java. It is distributed as a Maven package and can be included in any Android project that uses Android 8 (API level 26) or higher.</p>"},{"location":"eudi-lib-android-wallet-core/#disclaimer","title":"Disclaimer","text":"<p>The released software is a initial development release version:</p> <ul> <li>The initial development release is an early endeavor reflecting the efforts of a short timeboxed   period, and by no means can be considered as the final product.</li> <li>The initial development release may be changed substantially over time, might introduce new   features but also may change or remove existing ones, potentially breaking compatibility with your   existing code.</li> <li>The initial development release is limited in functional scope.</li> <li>The initial development release may contain errors or design flaws and other problems that could   cause system or other failures and data loss.</li> <li>The initial development release has reduced security, privacy, availability, and reliability   standards relative to future releases. This could make the software slower, less reliable, or more   vulnerable to attacks than mature software.</li> <li>The initial development release is not yet comprehensively documented.</li> <li>Users of the software must perform sufficient engineering and additional testing in order to   properly evaluate their application and determine whether any of the open-sourced components is   suitable for use in that application.</li> <li>We strongly recommend not putting this version of the software into production use.</li> <li>Only the latest version of the software will be supported</li> </ul>"},{"location":"eudi-lib-android-wallet-core/#requirements","title":"Requirements","text":"<ul> <li>Android 8 (API level 26) or higher</li> </ul>"},{"location":"eudi-lib-android-wallet-core/#dependencies","title":"Dependencies","text":"<p>To use snapshot versions add the following to your project's settings.gradle file:</p> <pre><code>dependencyResolutionManagement {\n    repositories {\n        // ...\n        maven {\n            url = uri(\"https://s01.oss.sonatype.org/content/repositories/snapshots/\")\n            mavenContent { snapshotsOnly() }\n        }\n        // ...\n    }\n}\n</code></pre> <p>To include the library in your project, add the following dependencies to your app's build.gradle file.</p> <pre><code>dependencies {\n    implementation \"eu.europa.ec.eudi:eudi-lib-android-wallet-core:0.14.0\"\n    // required when using the built-in AndroidKeystoreSecureArea implementation provided by the library\n    // for user authentication with biometrics\n    implementation \"androidx.biometric:biometric-ktx:1.2.0-alpha05\"\n}\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/#how-to-use","title":"How to Use","text":""},{"location":"eudi-lib-android-wallet-core/#initialize-the-library","title":"Initialize the library","text":"<p>To instantiate a <code>EudiWallet</code> use the <code>EudiWallet.Builder</code> class or the <code>EudiWallet.invoke</code> method, from the EudiWallet companion object.</p> <p>The minimum requirements to initialize the library is to provide a <code>EudiWalletConfit</code> object that will be used to configure the library's built-in components.</p> <p>The built-in components are:</p> <ul> <li><code>AndroidKeystoreSecureArea</code> for storing and managing the documents' keys</li> <li><code>AndroidStorageEngine</code> for storing the documents' data</li> <li><code>ReaderTrustStore</code> implementation for validating the reader's certificates</li> <li><code>PresentationManager</code> implementation for managing both proximity and remote presentation of   documents</li> <li><code>Logger</code> implementation for logging</li> </ul> <p>The following example demonstrates how to initialize the library for using the built-in components:</p> <pre><code>// configuring the wallet\nval config = EudiWalletConfig()\n    // configure the document storage\n    // the noBackupFilesDir is used to store the documents by default\n    .configureDocumentManager(context.noBackupFilesDir)\n    // configure the built-in logger\n    .configureLogging(\n        // set log level to info\n        level = Logger.LEVEL_INFO\n    )\n    // configure the built-in key creation settings\n    .configureDocumentKeyCreation(\n        // set userAuthenticationRequired to true to require user authentication\n        userAuthenticationRequired = true,\n        // set userAuthenticationTimeout to 30 seconds\n        userAuthenticationTimeout = 30_000L,\n        // set useStrongBoxForKeys to true to use the the device's StrongBox if available\n        // to store the keys\n        useStrongBoxForKeys = true\n    )\n    .configureReaderTrustStore(\n        // set the reader trusted certificates for the reader trust store\n        listOf(readerCertificate)\n    )\n    // mandatory configuration for OpenId4Vci if you want to issue documents\n    .configureOpenId4Vci {\n        withIssuerUrl(\"https://issuer.com\")\n        withClientId(\"client-id\")\n        withAuthFlowRedirectionURI(\"eudi-openid4ci://authorize\")\n    }\n    // configuration for proximity presentation\n    // the values below are the default values\n    .configureProximityPresentation(\n        // ble mode: peripheral and/or central\n        enableBlePeripheralMode = true,\n        enableBleCentralMode = false,\n        clearBleCache = true,\n        // registered application service for handling NFC device engagement\n        nfcEngagementServiceClass = MyNfcEngagementService::class.java\n    )\n    // mandatory configuration for OpenId4Vp if you want to enable\n    // remote presentation of documents with OpenId4Vp\n    .configureOpenId4Vp {\n        withEncryptionAlgorithms(\n            EncryptionAlgorithm.ECDH_ES\n        )\n        withEncryptionMethods(\n            EncryptionMethod.A128CBC_HS256,\n            EncryptionMethod.A256GCM\n        )\n        withClientIdSchemes(\n            ClientIdScheme.X509SanDns\n        )\n        withSchemes(\n            \"openid4vp\",\n            \"eudi-openid4vp\",\n            \"mdoc-openid4vp\"\n        )\n        withFormats(\n            Format.MsoMdoc, \n            Format.SdJwtVc.ES256\n        )\n    }\n\nval wallet = EudiWallet(context, config)\n</code></pre> <p><code>EuidWallet.Builder</code> allows to configure the library with custom implementations of the built-in components.</p> <p>The following example demonstrates how to initialize the library with custom implementations for StorageEngine, SecureArea, ReaderTrustStore, and Logger:</p> <pre><code>val wallet = EudiWallet(context, config) {\n    // custom StorageEngine to store documents' data\n    withStorageEngine(myStorageEngine)\n    // a list of SecureArea implementations to be used\n    withSecureAreas(listOf(deviceSecureArea, cloudSecureArea))\n    // ReaderTrustStore to be used for reader authentication\n    withReaderTrustStore(myReaderTrustStore)\n    // custom logger to be used\n    withLogger(myLogger)\n}\n</code></pre> <p>See the CustomizeSecureArea.md for more information on how to use the wallet-core library with custom SecureArea implementations.</p>"},{"location":"eudi-lib-android-wallet-core/#manage-documents","title":"Manage documents","text":"<p>The library provides a set of methods to work with documents.</p> <pre><code>val documents = wallet.getDocuments()\n</code></pre> <p>You can also retrieve documents based on a predicate. The following snippet shows how to retrieve documents of mso_mdoc format of a specific docType:</p> <pre><code>val documents = wallet.getDocuments { document -&gt;\n    (document.format as MsoMdocFormat).docType == \"eu.europa.ec.eudi.pid.1\"\n}\n</code></pre> <p>The following snippet shows how to retrieve a document by its id:</p> <pre><code>val documentId = \"some_document_id\"\nval document: Document? = wallet.getDocumentById(documentId)\n</code></pre> <p>To delete a document, use the following code snippet:</p> <pre><code>try {\n    val documentId = \"some_document_id\"\n    val deleteResult = wallet.deleteDocumentById(documentId)\n    deleteResult.getOrThrow()\n} catch (e: Throwable) {\n    // Handle the exception\n}\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/#creating-and-storing-a-new-document","title":"Creating and storing a new document","text":"<p>Adding a new document to the wallet is a two-step process. First, a new document must be created using the <code>createDocument</code> method. The method returns an <code>UnsignedDocument</code> object that contains the keys that will be used for signing the proof of possession for the issuer. Creating a new document requires the document format and the create key settings. The create key settings can be used to specify the way the keys are created.</p> <p>When using the built-in <code>AndroidKeystoreSecureArea</code> implementation of the library, the <code>wallet.getDefaultCreateDocumentSettings()</code> extension can be used to create an instance of the appropriate <code>CreateDocumentSettings</code> class.</p> <p>After the document is created, the user must retrieve the document's data from the issuer and store it in the wallet using the storeIssuedDocument method.</p> <p>The following snippet demonstrates how to create a new document for the mso_mdoc format, using library's default implementation of CreateDocumentSettings.</p> <pre><code>try {\n    // create a new document\n    // Construct the CreateDocumentSettings object\n    val createSettings = wallet.getDefaultCreateDocumentSettings()\n\n    val createDocumentResult = wallet.createDocument(\n        format = MsoMdocFormat(docType = \"eu.europa.ec.eudi.pid.1\"),\n        createSettings = createSettings\n    )\n    val unsignedDocument = createDocumentResult.getOrThrow()\n    val publicKeyBytes = unsignedDocument.publicKeyCoseBytes\n\n    // prepare keyUnlockData to unlock the key\n    // here we use the default key unlock data for the document\n    // provided by the library\n    val keyUnlockData = unsignedDocument.DefaultKeyUnlockData\n    // proof of key possession\n    // Sign the documents public key with the private key\n    // before sending it to the issuer\n    val signatureResult =\n        unsignedDocument.sign(publicKeyBytes, keyUnlockData = keyUnlockData)\n    val signature = signatureResult.getOrThrow().toCoseEncoded()\n\n    // send the public key and the signature to the issuer\n    // and get the document data\n    val documentData = sendToIssuer(\n        publicKeyCoseBytes = publicKeyBytes,\n        signatureCoseBytes = signature\n    )\n\n    // store the issued document with the document data received from the issuer\n    val storeResult =\n        wallet.storeIssuedDocument(unsignedDocument, documentData)\n\n    // get the issued document\n    val issuedDocument = storeResult.getOrThrow()\n} catch (e: Throwable) {\n    // Handle the exception\n}\n\n// ...\n\nfun sendToIssuer(publicKeyCoseBytes: ByteArray, signatureCoseBytes: ByteArray): ByteArray {\n    TODO(\"Send publicKey and proof of possession signature to issuer and retrieve document's data\")\n}\n</code></pre> <p>Important!: In the case of <code>DocumentFormat.MsoMdoc</code>, <code>DocumentManager.storeIssuedDocument()</code> method expects document's data to be in CBOR bytes and have the IssuerSigned structure according to ISO 23220-4.</p> <p>Currently, the library does not support IssuerSigned structure without the <code>nameSpaces</code> field.</p> <p>The following CDDL schema describes the structure of the IssuerSigned structure:</p> <pre><code>IssuerSigned = {\n ?\"nameSpaces\" : IssuerNameSpaces, ; Returned data elements\n \"issuerAuth\" : IssuerAuth ; Contains the mobile security object (MSO) for issuer data authentication\n}\nIssuerNameSpaces = { ; Returned data elements for each namespace\n + NameSpace =&gt; [ + IssuerSignedItemBytes ]\n}\nIssuerSignedItemBytes = #6.24(bstr .cbor IssuerSignedItem)\nIssuerSignedItem = {\n \"digestID\" : uint, ; Digest ID for issuer data authentication\n \"random\" : bstr, ; Random value for issuer data authentication\n \"elementIdentifier\" : DataElementIdentifier, ; Data element identifier\n \"elementValue\" : DataElementValue ; Data element value\n}\nIssuerAuth = COSE_Sign1 ; The payload is MobileSecurityObjectBytes\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/#working-with-sample-documents","title":"Working with sample documents","text":"<p>The wallet-core library provides a method to load sample documents easily. This feature is useful for demonstration or testing purposes.</p> <p>Currently, the library supports loading sample documents in MsoMdoc format.</p> <p>The following code snippet shows how to load sample documents:</p> <pre><code>val sampleMdocDocuments: ByteArray = readFileWithSampleData()\n\nval createSettings = wallet.getDefaultCreateDocumentSettings()\nval loadResult = wallet.loadMdocSampleDocuments(\n    sampleData = sampleMdocDocuments,\n    createSettings = createSettings,\n    documentNamesMap = mapOf(\n        \"eu.europa.ec.eudi.pid.1\" to \"EU PID\",\n        \"org.iso.18013.5.1.mDL\" to \"mDL\"\n    )\n)\n\nval documentIds: List&lt;DocumentId&gt; = loadResult.getOrThrow()\n\n// ...\n\nfun readFileWithSampleData(): ByteArray = TODO(\"Reads the bytes from file with sample documents\")\n</code></pre> <p>Sample documents must be in CBOR format with the following structure:</p> <pre><code>Data = {\n \"documents\" : [+Document] ; Sample documents\n}\nDocument = {\n \"docType\" : DocType, ; Document type returned\n \"issuerSigned\" : IssuerSigned ; Data elements\n}\nIssuerSigned = {\n \"nameSpaces\" : IssuerNameSpaces, ; Returned data elements\n}\nIssuerNameSpaces = { ; Returned data elements for each namespace\n + NameSpace =&gt; [ + IssuerSignedItemBytes ]\n}\nIssuerSignedItem = {\n \"digestID\" : uint, ; Digest ID for issuer data authentication\n \"random\" : bstr, ; Random value for issuer data authentication\n \"elementIdentifier\" : DataElementIdentifier, ; Data element identifier\n \"elementValue\" : DataElementValue ; Data element value\n}\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/#issue-document-using-openid4vci","title":"Issue document using OpenID4VCI","text":"<p>The library provides issuing documents using OpenID4VCI protocol. To issue a document using this functionality, EudiWallet must be initialized with the <code>openId4VciConfig</code> configuration, during configuration. See the Initialize the library section.</p>"},{"location":"eudi-lib-android-wallet-core/#resolving-credential-offer","title":"Resolving Credential offer","text":"<p>First, you need an instance of the <code>OpenId4VciManager</code> class. You can create an instance of the class by calling the <code>EudiWallet.createOpenId4VciManager</code> method.</p> <p>The library provides the <code>OpenId4VciManager.resolveDocumentOffer</code> method that resolves the credential offer URI. The method returns the resolved  <code>Offer</code> object that contains the offer's data. The offer's data can be displayed to the user.</p> <p>The following example shows how to resolve a credential offer:</p> <pre><code>val offerUri = \"https://issuer.com/?credential_offer=...\"\n// Create an instance of OpenId4VciManager\nval openId4VciManager = wallet.createOpenId4VciManager()\nopenId4VciManager.resolveDocumentOffer(offerUri) { result -&gt;\n\n    when (result) {\n        is OfferResult.Success -&gt; {\n            val offer: Offer = result.offer\n            // display the offer's data to the user\n            val issuerName = offer.issuerName\n            val offeredDocuments: List&lt;OfferedDocument&gt; = offer.offeredDocuments\n            val txCodeSpec: Offer.TxCodeSpec? =\n                offer.txCodeSpec // information about pre-authorized flow\n            // ...\n        }\n        is OfferResult.Failure -&gt; {\n            val error = result.cause\n            // handle error while resolving the offer\n        }\n    }\n}\n</code></pre> <p>There is also the availability for the <code>OpenId4VciManager.resolveDocumentOffer</code> method to specify the executor in which the onResolvedOffer callback is executed, by assigning the <code>executor</code> parameter. If the <code>executor</code> parameter is null, the callback will be executed on the main thread.</p> <pre><code>val executor = Executors.newSingleThreadExecutor()\nopenId4VciManager.resolveDocumentOffer(offerUri, executor) { result -&gt;\n    // ...\n}\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/#issuing-a-document","title":"Issuing a document","text":"<p>First, you need an instance of the <code>OpenId4VciManager</code> class. You can create an instance of the class by calling the <code>EudiWallet.createOpenId4VciManager</code> method.</p> <p>There are two ways to issue a document using OpenID4VCI:</p> <ol> <li>Using the <code>OpenId4VciManager.issueDocumentByFormat</code> method, when the document's format is    known. In case of MsoMdoc format, the docType is required. In case of SdJwtVc format, vct is    required.</li> <li>Using the <code>OpenId4VciManager.issueDocumentByOffer</code> or <code>OpenId4VciManager.issueDocumentByOfferUri</code>    methods, when an OpenId4VCI offer is given.</li> <li>Using the <code>issueDocumentByConfigurationIdentifier</code> method, when the document's configuration    identifier is known. The configuration identifiers can be retrieved from the issuer's metadata,    using the <code>getIssuerMetadata</code> method.</li> </ol> <p>Important note:</p> <ul> <li>Currently, only the ES256 algorithm is supported for signing OpenId4CVI proof of possession of the   publicKey.</li> <li>See   the CustomizeSecureArea.md   for more information on how to use the wallet-core library and OpenId4VCI with custom SecureArea   implementations.</li> </ul> <p>The following example shows how to issue a document using OpenID4VCI:</p> <pre><code>val onIssueEvent = OnIssueEvent { event -&gt;\n    when (event) {\n        is IssueEvent.Started -&gt; {\n            // indicates that OpenId4VCI process is started\n            // and holds the total number of documents to be issued\n            val numberOfDocumentsToBeIssued: Int = event.total\n        }\n\n        is IssueEvent.Finished -&gt; {\n            // triggered when the OpenId4VCI process is finished\n            // and holds the documentIds of the issued documents\n            val issuedDocumentIds: List&lt;String&gt; = event.issuedDocuments\n        }\n\n        is IssueEvent.Failure -&gt; {\n            // triggered when an error occurs during the OpenId4VCI process\n            // and holds the error\n            val cause = event.cause\n        }\n\n        is IssueEvent.DocumentIssued -&gt; {\n            // triggered each time a document is issued\n            // and holds information about the issued document\n            val documentId: String = event.documentId\n            val documentName: String = event.name\n            val docType: String = event.docType\n        }\n\n        is IssueEvent.DocumentFailed -&gt; {\n            // triggered when an error occurs during the issuance of a document\n            // and holds the error and information about the failed to issue document\n            val documentName: String = event.name\n            val docType: String = event.docType\n            val cause: Throwable = event.cause\n        }\n\n        is IssueEvent.DocumentRequiresUserAuth -&gt; {\n            // triggered when user authentication is required to issue a document\n            // Holds the document object that requires user authentication\n            // and the algorithm that is going to be used for signing the proof of possession,\n            // as well as methods for resuming the issuance process or canceling it\n            val signingAlgorithm = event.signingAlgorithm\n            val document = event.document\n            // create the keyUnlockData to unlock the key. Here we use the default key unlock data\n            // provided by the library\n            val keyUnlockData = document.DefaultKeyUnlockData\n            // use the keyUnlockData to get the crypto object for authenticating\n            // the user using bio-metrics or any other method\n            val cryptoObject = keyUnlockData.getCryptoObjectForSigning(signingAlgorithm)\n\n            // to resume the issuance process, after authenticating user,  call\n            // resume with the keyUnlockData\n            event.resume(keyUnlockData)\n\n            // or cancel the issuance process by calling cancel method\n            event.cancel(\"User canceled the issuance process\")\n        }\n\n        is IssueEvent.DocumentDeferred -&gt; {\n            // triggered when the document issuance is deferred\n            // and holds the documentId of the deferred document\n            val documentId: String = event.documentId\n            val documentName: String = event.name\n            val docType: String = event.docType\n        }\n\n        is IssueEvent.DocumentRequiresCreateSettings -&gt; {\n            // triggered when creating a document for a given offered document\n            val offeredDocument = event.offeredDocument\n            // create the createSettings for the document\n            // Here we use the default create settings provided by the library\n            val createSettings = wallet.getDefaultCreateDocumentSettings()\n            // resume the issuance process with the createSettings\n            event.resume(createSettings)\n            // or cancel the issuance process\n            event.cancel(\"User canceled the issuance process\")\n        }\n    }\n}\n// Create an instance of OpenId4VciManager\nval openId4VciManager = wallet.createOpenId4VciManager()\n\nopenId4VciManager.issueDocumentByDocType(\n    docType = \"eu.europa.ec.eudi.pid.1\",\n    txCode = \"&lt;Transaction Code for Pre-authorized flow&gt;\", // if transaction code is provided\n    onIssueEvent = onIssueEvent\n)\n// or\nopenId4VciManager.issueDocumentByOfferUri(\n    offerUri = \"https://issuer.com/?credential_offer=...\",\n    txCode = \"&lt;Transaction Code for Pre-authorized flow&gt;\", // if transaction code is provided\n    onIssueEvent = onIssueEvent\n)\n// or given a resolved offer object\nopenId4VciManager.issueDocumentByOffer(\n    offer = offer,\n    txCode = \"&lt;Transaction Code for Pre-authorized flow&gt;\", // if transaction code is provided\n    onIssueEvent = onIssueEvent\n)\n</code></pre> <p>There's also available for <code>issueDocumentByDocType</code>, <code>issueDocumentByOfferUri</code> and <code>issueDocumentByOffer</code> methods to specify the executor in which the onIssueEvent callback is executed, by assigning the <code>executor</code> parameter. If the <code>executor</code> parameter is null, the callback will be executed on the main thread.</p> <pre><code>// Create an instance of OpenId4VciManager\nval openId4VciManager = wallet.createOpenId4VciManager()\n\nval executor = Executors.newSingleThreadExecutor()\nopenId4VciManager.issueDocumentByDocType(\n    docType = \"eu.europa.ec.eudi.pid.1\",\n    executor = executor\n) { event -&gt;\n    // ...\n}\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/#authorization-code-flow","title":"Authorization code flow","text":"<p>For the authorization code flow to work, the application must handle the redirect URI. The redirect URI is the URI that the Issuer will redirect the user to after the user has authenticated and authorized. The redirect URI must be handled by the application and resume the issuance process by calling the <code>OpenId4VciManager.resumeWithAuthorization</code>. Also, the redirect uri declared in the OpenId4VCI configuration must be declared in the application's manifest file.</p> <p>Important note: The <code>resumeWithAuthorization</code> method must be called from the same OpenId4VciManager instance that was used to start the issuance process. You will need to keep the reference of the <code>OpenId4VciManager</code> instance that was used for calling the <code>issueDocumentByDocType</code>, <code>issueDocumentByOfferUri</code> or <code>issueDocumentByOffer</code> method and use this same instance to call the <code>resumeWithAuthorization</code> method.</p> <pre><code>&lt;!-- AndroidManifest.xml --&gt;\n&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;application&gt;\n        &lt;!-- rest of manifest --&gt;\n        &lt;activity android:name=\".MainActivity\" android:exported=\"true\"&gt;\n            &lt;!-- rest of activity --&gt;\n            &lt;intent-filter&gt;\n                &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\n\n                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\n                &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\n\n                &lt;data android:scheme=\"eudi-openid4ci\" android:host=\"authorize\" /&gt;\n            &lt;/intent-filter&gt;\n        &lt;/activity&gt;\n    &lt;/application&gt;\n&lt;/manifest&gt;\n</code></pre> <pre><code> // ...\nEudiWalletConfig()\n    // ... \n    .configureOpenId4Vci {\n        // ...\n        withAuthFlowRedirectionURI(\"eudi-openid4ci://authorize\")\n        // ...\n    }\n//...\n</code></pre> <pre><code>import javax.management.openmbean.OpenMBeanInfo\n\nclass SomeActivity : AppCompatActivity() {\n\n    val openId4VciManager: OpenId4VciManager\n        get() {\n            // get the OpenId4VciManager instance that was created during the issuance process\n            // ...\n        }\n\n    // ...\n    override fun onResume() {\n        super.onResume()\n        // check if intent is from the redirect uri to resume the issuance process\n        // ...\n        // then call\n        intent.data?.let { uri -&gt; openId4VciManager.resumeWithAuthorization(uri) }\n    }\n    // ...\n}\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/#pre-authorization-code-flow","title":"Pre-Authorization code flow","text":"<p>When Issuer supports the pre-authorization code flow, the resolved offer will also contain the corresponding information. Specifically, the <code>txCodeSpec</code> field in the <code>Offer</code> object will contain:</p> <ul> <li>The input mode, whether it is NUMERIC or TEXT</li> <li>The expected length of the input</li> <li>The description of the input</li> </ul> <p>From the user's perspective, the application must provide a way to input the transaction code.</p> <p>When the transaction code is provided, the issuance process can be resumed by calling any of the following methods:</p> <ul> <li><code>EudiWallet.issueDocumentByConfigurationIdentifier</code></li> <li><code>EudiWallet.issueDocumentByFormat</code></li> <li><code>EudiWallet.issueDocumentByOfferUri</code></li> <li><code>EudiWallet.issueDocumentByOffer</code></li> </ul> <p>passing the transaction code as in the <code>txCode</code> parameter.</p>"},{"location":"eudi-lib-android-wallet-core/#deferred-issuance","title":"Deferred Issuance","text":"<p>When the document issuance is deferred, the <code>IssueEvent.DocumentDeferred</code> event is triggered. The deferred document can be issued later by calling the <code>OpenId4VciManager.issueDeferredDocument</code> method.</p> <pre><code>// given a deferred document, for example:\nval deferredDocumentId: DocumentId = \"deferred-document-id\"\nval deferredDocument = wallet.getDocumentById(deferredDocumentId) as DeferredDocument\n\nval openId4VciManager: OpenId4VciManager = wallet.createOpenId4VciManager()\n\nopenId4VciManager.issueDeferredDocument(deferredDocument) { result -&gt;\n    when (result) {\n        is DeferredIssueResult.DocumentIssued -&gt; {\n            // document issued\n        }\n        is DeferredIssueResult.DocumentFailed -&gt; {\n            // error\n            val cause = result.cause\n        }\n        is DeferredIssueResult.DocumentNotReady -&gt; {\n            // The document is not issued yet\n        }\n        is DeferredIssueResult.DocumentExpired -&gt; {\n            // The document is expired and cannot be issued\n        }\n    }\n}\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/#transfer-documents","title":"Transfer documents","text":"<p>The library supports the following 3 ways to transfer documents:</p> <ol> <li>Offline document transfer between devices over BLE, according to the ISO 18013-5 specification<ul> <li>Device engagement using QR code</li> <li>NFC device engagement</li> </ul> </li> <li>Document retrieval to a website according to the ISO 18013-7 specification<ul> <li>RestAPI using app link</li> </ul> </li> <li>Document retrieval using OpenID4VP</li> </ol> <p>Transfer process is asynchronous. During the transfer, events are emitted that indicate the current state of the transfer. The following events are emitted:</p> <ol> <li><code>TransferEvent.QrEngagementReady</code>: The QR code is ready to be displayed. Get the QR code from    <code>event.qrCode</code>.</li> <li><code>TransferEvent.Connecting</code>: The devices are connecting. Use this event to display a progress    indicator.</li> <li><code>TransferEvent.Connected</code>: The devices are connected.</li> <li><code>TransferEvent.RequestReceived</code>: A request is received. Get the parsed request from    <code>event.requestedDocumentData</code>    and the initial request as received by the verifier from <code>event.request</code>.</li> <li><code>TransferEvent.ResponseSent</code>: A response is sent.</li> <li><code>TransferEvent.Redirect</code>: This event prompts to redirect the user to the given Redirect URI.    Get the Redirect URI from <code>event.redirectUri</code>. This event maybe be returned when OpenId4Vp is    used as a transmission channel.</li> <li><code>TransferEvent.Disconnected</code>: The devices are disconnected.</li> <li><code>TransferEvent.Error</code>: An error occurred. Get the <code>Throwable</code> error from <code>event.error</code>.</li> </ol>"},{"location":"eudi-lib-android-wallet-core/#attaching-a-transfereventlistener","title":"Attaching a TransferEvent.Listener","text":"<p>To receive events from the <code>EudiWallet</code>, you must attach a <code>TransferEvent.Listener</code> to it:</p> <p>The following example demonstrates how to implement a <code>TransferEvent.Listener</code> and attach it to the <code>EudiWallet</code> object.</p> <pre><code>wallet.addTransferEventListener { event -&gt;\n    when (event) {\n        is TransferEvent.QrEngagementReady -&gt; {\n            // Qr code is ready to be displayed\n            val qrCodeBitmap = event.qrCode.asBitmap(size = 800)\n            // or\n            val qrCodeView = event.qrCode.asView(context, size = 800)\n        }\n\n        TransferEvent.Connecting -&gt; {\n            // Informational event that devices are connecting\n        }\n\n        TransferEvent.Connected -&gt; {\n            // Informational event that the transfer has been connected\n        }\n\n        is TransferEvent.RequestReceived -&gt; try {\n            // get the processed request\n            val processedRequest = event.processedRequest.getOrThrow()\n            // the request has been received and processed\n\n            // the request processing was successful\n            // requested documents can be shown in the application\n            val requestedDocuments = processedRequest.requestedDocuments\n            // ...\n            // application must create the DisclosedDocuments object\n            val disclosedDocuments = DisclosedDocuments(\n                // assume that the document is in mso_mdoc format\n                DisclosedDocument(\n                    documentId = \"document-id\",\n                    disclosedItems = listOf(\n                        MsoMdocItem(\n                            namespace = \"eu.europa.ec.eudi.pid.1\",\n                            elementIdentifier = \"first_name\"\n                        ),\n                    ),\n                    // keyUnlockData is required if needed to unlock the key\n                    // in order to sign the response\n                    keyUnlockData = wallet.getDefaultKeyUnlockData(\"document-id\")\n                ),\n                // ... rest of the disclosed documents\n            )\n            // generate the response\n            val response = processedRequest.generateResponse(\n                disclosedDocuments = disclosedDocuments,\n                signatureAlgorithm = Algorithm.ES256\n            ).getOrThrow()\n\n            wallet.sendResponse(response)\n\n        } catch (e: Throwable) {\n            // An error occurred\n            // handle the error\n        }\n\n        TransferEvent.ResponseSent -&gt; {\n            // Informational event that the response has been sent\n        }\n\n        is TransferEvent.Redirect -&gt; {\n            // A redirect is needed. Used mainly for the OpenId4VP implementation\n            // This is triggered when Relaying Party (RP) has accepted the response and\n            // the RP is redirecting the user to the given redirect URI\n            // If this event is triggered, then the TransferEvent.ResponseSent event will not be triggered\n            val redirectUri = event.redirectUri // the redirect URI\n        }\n\n        TransferEvent.Disconnected -&gt; {\n            // Informational event that device has been disconnected\n            // stop the proximity presentation\n            wallet.stopProximityPresentation()\n        }\n\n        is TransferEvent.Error -&gt; {\n            // An error occurred\n            val cause = event.error\n            // stop the proximity presentation\n            wallet.stopProximityPresentation()\n        }\n    }\n}\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/#initiating-transfer","title":"Initiating transfer","text":"<ol> <li>BLE transfer using QR Engagement</li> </ol> <p>Once a transfer event listener is attached, use the <code>EudiWallet.startProximityPresentation()</code>    method to start the QR code engagement.</p> <pre><code>```kotlin\nwallet.startProximityPresentation()\n\n//... other code\n\n// in event listener when the qr code is ready to be displayed\nwhen (event) {\n    is TransferEvent.QrEngagementReady -&gt; {\n        // show the qr code to the user\n        val qrCode: QrCode = event.qrCode\n        val qrBitmap = qrCode.asBitmap(size = 512) // get the qr code as bitmap\n        // - or -\n        val qrView = qrCode.asView(context, size = 512) // get the qr code as view\n    }\n    // ... rest of the event types\n    else -&gt; {}\n}\n```\n</code></pre> <ol> <li>BLE transfer using NFC Engagement</li> </ol> <p>To use NFC for engagement, you must implement a service that extends the abstract class    <code>NfcEngagementService</code> and register it in your application's manifest file, like shown below:</p> <pre><code>```xml\n\n&lt;application&gt;\n    &lt;!-- rest of manifest --&gt;\n    &lt;service android:exported=\"true\" android:label=\"@string/nfc_engagement_service_desc\"\n            android:name=\"com.example.app.MyNfcEngagementService\"\n            android:permission=\"android.permission.BIND_NFC_SERVICE\"&gt;\n        &lt;intent-filter&gt;\n            &lt;action android:name=\"android.nfc.action.NDEF_DISCOVERED\" /&gt;\n            &lt;action android:name=\"android.nfc.cardemulation.action.HOST_APDU_SERVICE\" /&gt;\n        &lt;/intent-filter&gt;\n\n        &lt;!-- the following \"@xml/nfc_engagement_apdu_service\" in meta-data is provided by the library --&gt;\n        &lt;meta-data android:name=\"android.nfc.cardemulation.host_apdu_service\"\n                android:resource=\"@xml/nfc_engagement_apdu_service\" /&gt;\n    &lt;/service&gt;\n\n&lt;/application&gt;\n```\n</code></pre> <p>Then the service class must be also declared during wallet configuration using the    <code>EudiWalletConfig.configureProximityPresentation</code> method. For example    see Initialize the library section.</p> <p>In your application you can enable or disable the NFC engagement in your app by calling the    <code>wallet.enableNFCEngagement(ComponentActivity)</code> and    <code>wallet.disableNFCEngagement(ComponentActivity)</code>    methods.</p> <p>In the example below, the NFC engagement is enabled when activity is resumed and disabled    when the activity is paused.</p> <pre><code>```kotlin\nimport androidx.appcompat.app.AppCompatActivity\n\nclass MainActivity : AppCompatActivity() {\n\n    lateinit var wallet: EudiWallet\n\n    override fun onResume() {\n        super.onResume()\n        wallet.enableNFCEngagement(this)\n    }\n\n    override fun onPause() {\n        super.onPause()\n        wallet.disableNFCEngagement(this)\n    }\n}\n```\n</code></pre> <ol> <li>RestAPI using app link</li> </ol> <p>To enable ISO 18013-7 REST API functionality, declare to your app's manifest file    (AndroidManifest.xml) an Intent Filter for your MainActivity:</p> <pre><code>```xml\n&lt;intent-filter&gt;\n    &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\n    &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\n    &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\n    &lt;data android:scheme=\"mdoc\" android:host=\"*\" /&gt;\n&lt;/intent-filter&gt;\n```\n</code></pre> <p>and set <code>launchMode=\"singleTask\"</code> for this activity.</p> <p>To initiate the transfer using an app link (reverse engagement), use the    <code>wallet.startRemotePresentation(Uri)</code> method. See the example below:</p> <pre><code>```kotlin\nclass MainActivity : AppCompatActivity() {\n\n    lateinit var wallet: EudiWallet\n    // ... rest of activity code\n\n    override fun onResume() {\n        super.onResume()\n        wallet.startRemotePresentation(intent.data!!)\n    }\n\n    override fun onNewIntent(intent: Intent) {\n        super.onNewIntent(intent)\n        wallet.startRemotePresentation(intent.data!!)\n    }\n}\n```\n</code></pre> <ol> <li>OpenID4VP</li> </ol> <p>To use the OpenID4VP functionality, the configuration that is used to initialize the library    must contain the <code>openId4VpConfig</code>. See the Initialize the library    section.</p> <p>Then, declare to your app's manifest file (AndroidManifest.xml) the following Intent Filters for    your MainActivity, for the scheme:</p> <pre><code>```xml\n&lt;intent-filter&gt;\n   &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\n   &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\n   &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\n   &lt;data android:scheme=\"mdoc-openid4vp\" android:host=\"*\" /&gt;\n&lt;/intent-filter&gt; \n```\n</code></pre> <p>Also set <code>launchMode=\"singleTask\"</code> for this activity.</p> <pre><code>```kotlin\nclass MainActivity : AppCompatActivity() {\n\n    lateinit var wallet: EudiWallet\n    // ... rest of activity code\n\n\n    override fun onResume() {\n        super.onResume()\n        handleOpenId4VpIntent(intent)\n    }\n\n    override fun onNewIntent(intent: Intent) {\n        super.onNewIntent(intent)\n        setIntent(null)\n        handleOpenId4VpIntent(intent)\n    }\n\n    private fun handleOpenId4VpIntent(intent: Intent) {\n        val uri = intent.data!!\n        wallet.startRemotePresentation(uri)\n    }\n}\n```\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/#receiving-a-request-and-sending-a-response","title":"Receiving a request and sending a response","text":"<p>When a <code>TransferEvent.RequestReceived</code> event is triggered, the processed request can be obtained by calling <code>event.processedRequest</code>. If the request is successfully processed, the requested documents are extracted from the <code>processedRequest</code> object.</p> <p>The application then show the requested documents to the user and later create a <code>DisclosedDocuments</code> object, which includes the documents to be disclosed in the response. Each <code>DisclosedDocument</code> must contain the <code>documentId</code> of the disclosed document, a list of <code>DocItem</code> objects representing the disclosed items, and <code>keyUnlockData</code> if needed to unlock the key for signing the response.</p> <p>After creating the <code>DisclosedDocuments</code> object, a response can be generated using the <code>processedRequest.generateResponse</code> method, specifying the disclosed documents and the signature algorithm (<code>Algorithm.ES256</code>). The generated response is then sent using the <code>wallet.sendResponse</code> method.</p> <pre><code>val transferEventListener = TransferEvent.Listener { event -&gt;\n    when (event) {\n\n        is TransferEvent.RequestReceived -&gt; try {\n            // get the processed request\n            val processedRequest = event.processedRequest.getOrThrow()\n            // the request has been received and processed\n\n            // the request processing was successful\n            // requested documents can be shown in the application\n            val requestedDocuments = processedRequest.requestedDocuments\n            // ...\n            // application must create the DisclosedDocuments object\n            // Here for simplicity we assume that the first document is the only requested document\n            // and we disclose only the first name\n\n            // get the first document by id\n            val firstDocumentId = requestedDocuments.first().documentId\n\n            val firstDocument = wallet.getDocumentById(firstDocumentId) as IssuedDocument\n            // We also assume that it requires user authentication\n            // so we create the keyUnlockData to unlock the key\n            val keyUnlockData = firstDocument.DefaultKeyUnlockData\n            val cryptoObject = keyUnlockData.getCryptoObjectForSigning(Algorithm.ES256)\n            // authenticate the user using the cryptoObject\n            // ...\n\n            val disclosedDocuments = DisclosedDocuments(\n                DisclosedDocument(\n                    documentId = firstDocumentId,\n                    disclosedItems = listOf(\n                        MsoMdocItem(\n                            namespace = \"eu.europa.ec.eudi.pid.1\",\n                            elementIdentifier = \"first_name\"\n                        ),\n                    ),\n                    // keyUnlockData is required if needed to unlock the key\n                    // in order to sign the response\n                    keyUnlockData = keyUnlockData\n                ),\n                // ... rest of the disclosed documents\n            )\n            // generate the response\n            val response = processedRequest.generateResponse(\n                disclosedDocuments = disclosedDocuments,\n                signatureAlgorithm = Algorithm.ES256\n            ).getOrThrow()\n\n            wallet.sendResponse(response)\n\n        } catch (e: Throwable) {\n            // An error occurred\n            // handle the error\n        }\n        // handle other events\n        else -&gt; {}\n    }\n}\n</code></pre> <p>See also, the CustomizeSecureArea.md for more information on how to use the wallet-core library for presentation with custom SecureArea implementations.</p>"},{"location":"eudi-lib-android-wallet-core/#how-to-contribute","title":"How to contribute","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, follow the guidelines found in CONTRIBUTING.md.</p>"},{"location":"eudi-lib-android-wallet-core/#license","title":"License","text":""},{"location":"eudi-lib-android-wallet-core/#third-party-component-licenses","title":"Third-party component licenses","text":"<p>See licenses.md for details.</p>"},{"location":"eudi-lib-android-wallet-core/#license-details","title":"License details","text":"<p>Copyright \u00a9 2023 European Commission</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <pre><code>http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home / eudi-lib-android-wallet-core / CODE_OF_CONDUCT</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home / eudi-lib-android-wallet-core / CONTRIBUTING</p>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/","title":"CustomizeSecureArea","text":"<p>Home / eudi-lib-android-wallet-core / CustomizeSecureArea</p>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#use-wallet-core-library-with-custom-key-management","title":"Use wallet core library with custom Key management","text":"<p>The Wallet Core Library supports custom key management through the implementation of SecureArea interfaces. This document details the process of integrating custom key management with the library.</p>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#interfaces-and-classes-for-custom-key-management","title":"Interfaces and classes for custom key management","text":"<p>To enable custom key management, you must implement the following interfaces and classes:</p> <ol> <li>The <code>com.android.identity.securearea.SecureArea</code> interface abstracts the underlying secure area    responsible for creating key material and other security-related objects used in identity    documents. Authentication may be required to access a key, which is managed through the    <code>com.android.identity.securearea.KeyLockedException</code> and    <code>com.android.identity.securearea.KeyUnlockData</code> types. Applications must implement    SecureArea-specific mechanisms to handle the necessary authentication.</li> <li>The <code>com.android.identity.securearea.CreateKeySettings</code> class serves as the base for key creation    settings. It is compatible with any SecureArea implementation, though most implementations will    provide their own versions with additional, specific settings.</li> <li>The <code>com.android.identity.securearea.KeyUnlockData</code> interface provides the information necessary    to operate on a key that requires unlocking.</li> <li>The <code>com.android.identity.securearea.KeyInfo</code> class contains details about a key. Specific    SecureArea implementations may extend this class to include additional implementation-specific    key information.</li> </ol>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#using-eudiwallet-with-custom-key-management","title":"Using EudiWallet with custom key management","text":"<p>Using a custom SecureArea implementation involves focusing on three key areas:</p> <ol> <li>Configuring the wallet instance to integrate the custom SecureArea implementation.</li> <li>Managing events during the issuance of documents with OpenId4VCI, where key creation and    unlocking are necessary.</li> <li>Managing events during document presentation with OpenId4VP or proximity presentation via BLE,    where key unlocking is needed.</li> </ol> <p>For the purposes of this document and the examples provided, we will refer to the following custom SecureArea implementations:</p> <ol> <li><code>MySecureArea</code> class implementing the <code>SecureArea</code> interface.</li> <li><code>MyCreateKeySettings</code> class extending the <code>CreateKeySettings</code> class.</li> <li><code>MyKeyUnlockData</code> class implementing the <code>KeyUnlockData</code> interface.</li> <li><code>MyKeyInfo</code> class extending the <code>KeyInfo</code> class.</li> </ol>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#configure-eudiwallet-to-use-custom-key-management","title":"Configure EudiWallet to use custom key management","text":"<p>To register the <code>MySecureArea</code> implementation with the Wallet Core Library, you must configure the wallet instance as shown below:</p> <pre><code>val walletConfig = EudiWalletConfig()\n    .configureOpenId4Vci {\n        // Configuration for OpenId4VCI\n    }\n    .configureOpenId4Vp {\n        // Configuration for OpenId4VP\n    }\nval wallet = EudiWallet(context, walletConfig) {\n    withSecureAreas(\n        listOf(\n            MySecureArea()\n        )\n    )\n}\n</code></pre> <p>For detailed information on EudiWallet configuration, please refer to the EudiWallet documentation</p> <p>Note:If the <code>MySecureArea</code> instance is required, it can be retrieved from the wallet instance using the following code:</p> <pre><code>val mySecureArea = wallet.secureAreaRepository.implementations\n    .filterIsInstance&lt;MySecureArea&gt;()\n    .first()\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#how-to-use-custom-key-management-with-openid4vci","title":"How to use custom key management with OpenId4VCI","text":"<p>When issuing a document with OpenId4VCI, the Wallet Core Library triggers events that require custom key management. There are two key events that necessitate this:</p> <ol> <li> <p><code>IssueEvent.DocumentRequiresCreateSettings</code>: This event occurs when creating a document for a    specific offered document that requires a key. In the case of custom key management, you must    create the corresponding <code>CreateDocumentSettings</code> object to accompany the <code>SecureArea</code>    implementation. This object defines in which <code>SecureArea</code> and how the key should be created.    The <code>createDocumentSettings</code> is then used to resume the issuance process.</p> </li> <li> <p><code>IssueEvent.DocumentRequiresUserAuth</code>: This event is triggered when key unlocking is needed    to sign the proof of possession for the document's key, which is required to issue the document.    To unlock the key, you must create the appropriate <code>KeyUnlockData</code> object that corresponds to the    <code>SecureArea</code> implementation. This object specifies how the key should be unlocked (e.g., via    password, biometric data, or authorization tokens). The <code>keyUnlockData</code> is then used to resume    the issuance process.</p> </li> </ol> <p>The following code snippet demonstrates how to handle these events with custom key management using the custom <code>MySecureArea</code> implementation:</p> <pre><code>val onIssueEvent = OnIssueEvent { event -&gt;\n    when (event) {\n        is IssueEvent.DocumentRequiresCreateSettings -&gt; {\n            // triggered when creating a document for a given offered document\n            val offeredDocument = event.offeredDocument\n            // create the createDocumentSettings for the document\n            // using custom implementation MySecureArea for keys\n            val mySecureArea = wallet.secureAreaRepository.implementations\n                .filterIsInstance&lt;MySecureArea&gt;()\n                .first()\n            val createDocumentSettings = CreateDocumentSettings(\n                // set the identifier of the desired secure area\n                secureAreaIdentifier = mySecureArea.identifier,\n                // set the CreateKeySettings for the key based on the secure area\n                createKeySettings = MyCreateKeySettings(\n                    // set custom settings for creating the key\n                    // with MySecureArea implementation\n                )\n            )\n            // resume the issuance process with the createDocumentSettings\n            event.resume(createDocumentSettings)\n            // or cancel the issuance process\n            event.cancel(\"User canceled the issuance process\")\n        }\n        is IssueEvent.DocumentRequiresUserAuth -&gt; {\n            // triggered when user authentication is required to issue a document\n            // Holds the document object that requires user authentication\n            // and the algorithm that is going to be used for signing the proof of possession,\n            // as well as methods for resuming the issuance process or canceling it\n\n            // Document and signing algorithm are provided \n            // to use if required for creating the keyUnlockData\n            val signingAlgorithm = event.signingAlgorithm\n            val document = event.document\n\n            //\n            // --&gt; show prompt if needed to unlock the key &lt;--\n            //\n\n            // create the keyUnlockData to unlock the key.\n            val keyUnlockData = MyKeyUnlockData(\n                // set the extra information for the key unlock data\n                // e.g. password, biometric data, authorization tokens etc.\n            )\n            // to resume the issuance process, after authenticating user,  call\n            // resume with the keyUnlockData\n            event.resume(keyUnlockData)\n\n            // or cancel the issuance process by calling cancel method\n            event.cancel(\"User canceled the issuance process\")\n        }\n        else -&gt; {\n            // handling rest of issuing events\n        }\n    }\n}\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#how-to-use-custom-key-management-with-presentation","title":"How to use custom key management with Presentation","text":"<p>When presenting a document using OpenId4VP or through proximity presentation with BLE, a <code>TransferEvent.RequestReceived</code> event is triggered upon receiving a request. The request contains the documents and items to be disclosed. To disclose the requested documents, you must unlock the keys associated with those documents. To do this, you need to create the appropriate <code>KeyUnlockData</code> object, which corresponds to the <code>SecureArea</code> implementation. This object specifies how the key should be unlocked (e.g., using a password, biometric data, authorization tokens, etc.). The <code>keyUnlockData</code> is then used to generate the response.</p> <p>The following code snippet illustrates how to handle the <code>TransferEvent.RequestReceived</code> event and disclose the requested documents with custom key management using a custom <code>SecureArea</code> implementation when key unlocking is required:</p> <pre><code>/**\n * Keeps the processed request to be used later for generating the response\n */\nlateinit var processedRequest: RequestProcessor.ProcessedRequest.Success\n\n/**\n * Example function that demonstrates how to get information about the requested documents\n * and show them to the user. The function should be called when the request is received.\n */\nfun showRequestedDocuments() {\n    // shows requested documents to user\n\n    processedRequest.requestedDocuments.forEach { requestedDocument -&gt;\n        // get document if needed to show more information such as document's name and docType\n        val document =\n            wallet.getDocumentById(requestedDocument.documentId) as? IssuedDocument\n        val documentName = document?.name\n        val docType = (document?.format as? MsoMdocFormat)?.docType\n\n        // show requested fields for this document\n        val docItems =\n            requestedDocument.requestedItems.forEach { (docItem, intentToRetain) -&gt;\n                val nameSpace = docItem.namespace\n                val elementIdentifier = docItem.elementIdentifier\n            }\n    }\n}\n\n/**\n * Example function that demonstrates how to generate and send a response based on the\n * selected documents. The function should be called after the user has selected the\n * documents to disclose.\n *\n * @param selectedDocuments A map of selected documents and the selected items to disclose\n */\nfun discloseDocuments(selectedDocuments: Map&lt;IssuedDocument, List&lt;DocItem&gt;&gt;) {\n    val disclosedDocuments = DisclosedDocuments(\n        selectedDocuments.map { (document, docItems) -&gt;\n\n            // should block until the user has unlock the key to sign the response\n\n            // One can use information from document to determine how to\n            // create the MyKeyUnlockData object, such as:\n\n            val secureArea = document.secureArea as MySecureArea\n            val keyAlias = document.keyAlias\n            val keyInfo = document.keyInfo as MyKeyInfo\n\n            //\n            // --&gt; show prompt if needed to unlock the key &lt;--\n            //\n\n            // create and return the keyUnlockData to unlock the key of the document\n            val keyUnlockData = MyKeyUnlockData(\n                // set the extra information for the key unlock data\n                // e.g. password, biometric data, authorization tokens etc.\n            )\n\n            DisclosedDocument(\n                documentId = document.id,\n                disclosedItems = docItems,\n                keyUnlockData = keyUnlockData\n            )\n        })\n\n    val response = processedRequest.generateResponse(disclosedDocuments).getOrThrow()\n    wallet.sendResponse(response)\n}\n\n/**\n * Example transfer event listener that demonstrates how to handle the request received event\n * and show the requested documents to the user.\n */\nval transferEventListener = TransferEvent.Listener { event -&gt;\n    when (event) {\n\n        is TransferEvent.RequestReceived -&gt; try {\n            // get the processed request\n            processedRequest = event.processedRequest.getOrThrow()\n            // the request has been received and processed\n\n            showRequestedDocuments()\n\n        } catch (e: Throwable) {\n            // An error occurred\n            // handle the error\n        }\n        // handle other events\n        else -&gt; {}\n    }\n}\n\n// Add the transfer event listener to the wallet\nwallet.addTransferEventListener(transferEventListener)\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/SECURITY/","title":"SECURITY","text":"<p>Home / eudi-lib-android-wallet-core / SECURITY</p>"},{"location":"eudi-lib-android-wallet-core/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-lib-android-wallet-core/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-lib-android-wallet-core/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-lib-android-wallet-core/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-lib-android-wallet-core/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/","title":"Changelog","text":"<p>Home / eudi-lib-android-wallet-core / changelog</p>"},{"location":"eudi-lib-android-wallet-core/changelog/#changelog","title":"Changelog","text":"<p>See release notes in project's github repository.</p>"},{"location":"eudi-lib-android-wallet-core/changelog/#0110-snapshot","title":"[0.11.0-SNAPSHOT]","text":"<p>__ 25 Jul 2024__</p> <ul> <li>Deprecate OpenId4Vci methods through EudiWallet object</li> <li>Add Eudi.createOpenId4VciManager method to create OpenId4VciManager object</li> <li>Bumb eudi-lib-andorid-wallet-document-manager to v0.4.2</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#0103-snapshot","title":"[0.10.3-SNAPSHOT]","text":"<p>__ 23 Jul 2024__</p> <ul> <li>Support custom logger for OpenId4VCI and OpenId4VP via OpenId4VCIConfig</li> <li>Fix OpenId4VCI resume authorization</li> <li>Return DocumentExpired data class from issueDeferredDocument method when the document is expired</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#0102","title":"[0.10.2]","text":"<p>__ 17 Jul 2024__</p> <ul> <li>Release version 0.10.2</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#0102-snapshot","title":"[0.10.2-SNAPSHOT]","text":"<p>15 Jul 2024</p> <ul> <li>Fix overriding KtorHttpClientFactory for OpenId4VCI and OpenId4VP</li> <li>Fix Deferred Issuance for OpenId4VCI by not deleting the deferred document after issuance failure</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#0101-snapshot","title":"[0.10.1-SNAPSHOT]","text":"<p>3 Jul 2024</p> <ul> <li>Bump eudi-lib-android-wallet-document-manager to v0.4.1-SNAPSHOT</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#0100-snapshot","title":"[0.10.0-SNAPSHOT]","text":"<p>27 Jun 2024</p> <ul> <li>Bump eudi-lib-jvm-openid4vci-kt to v0.3.2</li> <li>Bump eudi-lib-android-wallet-document-manager to v0.4.0-SNAPSHOT</li> <li>Support for OpenId4VCI pre-authorization flow</li> <li>Support for OpenId4VCI deferred issuance</li> <li>Extensive logging for OpenId4VCI and OpenId4VP</li> <li>Allow overriding ktor client for OpenId4VCI and OpenId4VP</li> <li>Bug fixes in OpenId4VCI</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#095-snapshot","title":"[0.9.5-SNAPSHOT]","text":"<p>14 Jun 2024</p> <ul> <li>Bump eudi-lib-jvm-openid4vci-kt to v0.3.1</li> <li>Configurable debug logging with level support for OpenId4VCI</li> <li>Support for overriding ktor client for OpenId4VCI</li> <li>Bug fixes in OpenId4VCI</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#094-snapshot","title":"[0.9.4-SNAPSHOT]","text":"<p>10 Jun 2024</p> <ul> <li>Security improvements for dPoP Signer for OpendI4VCI</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#093-snapshot","title":"[0.9.3-SNAPSHOT]","text":"<p>10 Jun 2024</p> <ul> <li>Bump eudi-lib-jvm-openid4vci-kt to v0.3.0</li> <li>Support CWT proofs for OpenId4VCI</li> <li>Configure the usage of PAR for OpendId4VCI</li> <li>Improvements for proof type selection</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#092-snapshot","title":"[0.9.2-SNAPSHOT]","text":"<p>04 Jun 2024</p> <ul> <li>Support multiple URL schemes for OpenId4Vp</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#091-snapshot","title":"[0.9.1-SNAPSHOT]","text":"<p>31 May 2024</p> <ul> <li>Bump eudi-lib-jvm-siop-openid4vp-kt to v0.4.2</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#090-snapshot","title":"[0.9.0-SNAPSHOT]","text":"<p>28 May 2024</p> <ul> <li>Bump eu.europa.ec.eudi:eudi-lib-android-wallet-document-manager to 0.3.0-SNAPSHOT</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#080-snapshot","title":"[0.8.0-SNAPSHOT]","text":"<p>24 May 2024</p> <ul> <li>DPoP support for OpenId4VCI</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#071-snapshot","title":"[0.7.1-SNAPSHOT]","text":"<p>24 May 2024</p> <ul> <li>Bump eudi-lib-jvm-siop-openid4vp-kt to v0.4.0</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#070-snapshot","title":"[0.7.0-SNAPSHOT]","text":"<p>23 May 2024</p> <ul> <li>Bump eudi-lib-jvm-siop-openid4vp-kt to v0.3.5</li> <li>Added support to provide the Legal Name of Preregistered Verifiers in Openid4vp Configuration</li> <li>Use the Legal Name provided by the the eudi-lib-jvm-siop-openid4vp-kt library in the ReaderAuth result</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#060-snapshot","title":"[0.6.0-SNAPSHOT]","text":"<p>22 May 2024</p> <ul> <li>Support credential offer OpenId4VCI draft 13</li> <li>Update eudi-lib-jvm-openid4vci-kt library to 0.2.2</li> <li>Improvement on handling OpenId4VCI authorization code flow</li> <li>Allow to configure the usage of StrongBox for storing the document's keys</li> </ul>"},{"location":"eudi-lib-android-wallet-core/licenses/","title":"Licenses","text":"<p>Home / eudi-lib-android-wallet-core / licenses</p>"},{"location":"eudi-lib-android-wallet-core/licenses/#eudi-wallet-core-library-for-android","title":"EUDI Wallet Core library for Android","text":""},{"location":"eudi-lib-android-wallet-core/licenses/#dependency-license-report","title":"Dependency License Report","text":"<p>2025-01-29 16:49:21 EET</p>"},{"location":"eudi-lib-android-wallet-core/licenses/#apache-license-version-20","title":"Apache License, Version 2.0","text":"<p>1 Group: <code>androidx.appcompat</code> Name: <code>appcompat</code> Version: <code>1.7.0</code> </p> <ul> <li>POM Project URL: https://developer.android.com/jetpack/androidx/releases/appcompat#1.7.0</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>2 Group: <code>co.nstant.in</code> Name: <code>cbor</code> Version: <code>0.9</code> </p> <ul> <li>POM Project URL: https://github.com/c-rack/cbor-java</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>3 Group: <code>com.android.identity</code> Name: <code>identity-android</code> Version: <code>202408.1</code> </p> <ul> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>4 Group: <code>com.nimbusds</code> Name: <code>oauth2-oidc-sdk</code> Version: <code>11.20.1</code> </p> <ul> <li>Project URL: https://bitbucket.org/connect2id/oauth-2.0-sdk-with-openid-connect-extensions</li> <li>Manifest License: Apache License, Version 2.0 (Not Packaged)</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>5 Group: <code>io.ktor</code> Name: <code>ktor-client-logging</code> Version: <code>3.0.1</code> </p> <ul> <li>POM Project URL: https://github.com/ktorio/ktor</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>6 Group: <code>io.ktor</code> Name: <code>ktor-client-android</code> Version: <code>3.0.1</code> </p> <ul> <li>POM Project URL: https://github.com/ktorio/ktor</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>7 Group: <code>org.jetbrains.kotlin</code> Name: <code>kotlin-parcelize-runtime</code> Version: <code>2.0.21</code> </p> <ul> <li>POM Project URL: https://kotlinlang.org/</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>8 Group: <code>org.jetbrains.kotlin</code> Name: <code>kotlin-stdlib</code> Version: <code>2.0.21</code> </p> <ul> <li>POM Project URL: https://kotlinlang.org/</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>9 Group: <code>org.jetbrains.kotlinx</code> Name: <code>kotlinx-datetime</code> Version: <code>0.6.0</code> </p> <ul> <li>POM Project URL: https://github.com/Kotlin/kotlinx-datetime</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>10 Group: <code>org.jetbrains.kotlinx</code> Name: <code>kotlinx-io-bytestring</code> Version: <code>0.5.4</code> </p> <ul> <li>POM Project URL: https://github.com/Kotlin/kotlinx-io</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>11 Group: <code>org.jetbrains.kotlinx</code> Name: <code>kotlinx-io-core</code> Version: <code>0.5.4</code> </p> <ul> <li>POM Project URL: https://github.com/Kotlin/kotlinx-io</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul>"},{"location":"eudi-lib-android-wallet-core/licenses/#bsd3","title":"BSD3","text":"<p>12 Group: <code>com.augustcellars.cose</code> Name: <code>cose-java</code> Version: <code>1.1.0</code> </p> <ul> <li>POM Project URL: https://github.com/cose-wg/cose-java</li> <li>POM License: BSD3 - https://github.com/jimsch/COSE-JAVA/blob/master/LICENSE</li> </ul>"},{"location":"eudi-lib-android-wallet-core/licenses/#bouncy-castle-licence","title":"Bouncy Castle Licence","text":"<p>13 Group: <code>org.bouncycastle</code> Name: <code>bcpkix-jdk18on</code> Version: <code>1.78.1</code> </p> <ul> <li>POM Project URL: https://www.bouncycastle.org/java.html</li> <li>POM License: Bouncy Castle Licence - https://www.bouncycastle.org/licence.html</li> </ul> <p>14 Group: <code>org.bouncycastle</code> Name: <code>bcprov-jdk18on</code> Version: <code>1.78.1</code> </p> <ul> <li>POM Project URL: https://www.bouncycastle.org/java.html</li> <li>POM License: Bouncy Castle Licence - https://www.bouncycastle.org/licence.html</li> </ul>"},{"location":"eudi-lib-android-wallet-core/licenses/#creative-commons-legal-code","title":"Creative Commons Legal Code","text":"<p>15 Group: <code>com.upokecenter</code> Name: <code>cbor</code> Version: <code>4.5.2</code> </p> <ul> <li>POM Project URL: https://github.com/peteroupc/CBOR-Java</li> <li>POM License: Creative Commons Legal Code - https://creativecommons.org/publicdomain/zero/1.0/legalcode</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs //wallet-core</p>"},{"location":"eudi-lib-android-wallet-core/docs/#wallet-core","title":"wallet-core","text":""},{"location":"eudi-lib-android-wallet-core/docs/#packages","title":"Packages","text":"Name eu.europa.ec.eudi.wallet eu.europa.ec.eudi.wallet.document eu.europa.ec.eudi.wallet.issue.openid4vci eu.europa.ec.eudi.wallet.issue.openid4vci.transformations eu.europa.ec.eudi.wallet.logging eu.europa.ec.eudi.wallet.presentation eu.europa.ec.eudi.wallet.transfer.openId4vp eu.europa.ec.eudi.wallet.util"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet //wallet-core/eu.europa.ec.eudi.wallet</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/#types","title":"Types","text":"Name Summary EudiWallet [androidJvm]interface EudiWallet : SampleDocumentManager, PresentationManagerThe main entry point for interacting with the wallet EudiWalletConfig [androidJvm]class EudiWalletConfigEudi wallet config. This config is used to configure the default settings of the Eudi wallet. EudiWalletImpl [androidJvm]class EudiWalletImpl : EudiWallet, DocumentManager, PresentationManager, SampleDocumentManagerImplementation of EudiWallet"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/#eudiwallet","title":"EudiWallet","text":"<p>interface EudiWallet : SampleDocumentManager, PresentationManager</p> <p>The main entry point for interacting with the wallet</p> <p>To create an instance of EudiWallet, use the EudiWallet.invoke method or the Builder class.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/#see-also","title":"See also","text":"EudiWallet.Builder EudiWallet.Companion.invoke"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/#inheritors","title":"Inheritors","text":"EudiWalletImpl"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/#types","title":"Types","text":"Name Summary Builder [androidJvm]class Builder(context: Context, val config: EudiWalletConfig)Builder class to create an instance of EudiWallet Companion [androidJvm]object Companion"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/#properties","title":"Properties","text":"Name Summary config [androidJvm]abstract val config: EudiWalletConfigthe configuration object documentManager [androidJvm]abstract val documentManager: DocumentManagerthe document manager identifier [androidJvm]abstract val identifier: String logger [androidJvm]abstract val logger: Loggerthe logger nfcEngagementServiceClass [androidJvm]abstract val nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? presentationManager [androidJvm]abstract val presentationManager: PresentationManagerthe presentation manager for both proximity and remote presentation readerTrustStore [androidJvm]abstract var readerTrustStore: ReaderTrustStore? secureAreaRepository [androidJvm]abstract val secureAreaRepository: SecureAreaRepository storageEngine [androidJvm]abstract val storageEngine: StorageEngine transferManager [androidJvm]abstract val transferManager: TransferManagerthe transfer manager for proximity presentation"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/#functions","title":"Functions","text":"Name Summary addTransferEventListener [androidJvm]abstract fun addTransferEventListener(listener: TransferEvent.Listener): TransferEvent.Listenable createDocument [androidJvm]abstract fun createDocument(format: DocumentFormat, createSettings: CreateDocumentSettings, documentMetaData: DocumentMetaData?): Outcome&lt;UnsignedDocument&gt; createOpenId4VciManager [androidJvm]abstract fun createOpenId4VciManager(): OpenId4VciManagerCreate an instance of OpenId4VciManager for the wallet to interact with the OpenId4Vci service deleteDocumentById [androidJvm]abstract fun deleteDocumentById(documentId: DocumentId): Outcome&lt;ProofOfDeletion?&gt; disableNFCEngagement [androidJvm]abstract fun disableNFCEngagement(activity: ComponentActivity): PresentationManagerDisable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onPause method. enableNFCEngagement [androidJvm]abstract fun enableNFCEngagement(activity: ComponentActivity): PresentationManagerEnable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onResume method. enumerateSecureAreas [androidJvm]open fun enumerateSecureAreas(): List&lt;String&gt;Enumerate the secure areas available in the wallet getDefaultCreateDocumentSettings [androidJvm]@JvmName(name = \"getDefaultCreateDocumentSettings\")@JvmOverloads@JvmStaticfun EudiWallet.getDefaultCreateDocumentSettings(attestationChallenge: ByteArray? = null, configure: AndroidKeystoreCreateKeySettings.Builder.() -&gt; Unit? = null): CreateDocumentSettingsReturns the default CreateDocumentSettings for the EudiWallet instance. The default settings are based on the EudiWalletConfig and the first available AndroidKeystoreSecureArea implementation. The attestationChallenge is generated using a SecureRandom instance. The configure lambda can be used to further customize the AndroidKeystoreCreateKeySettings. The first available AndroidKeystoreSecureArea implementation is used. getDefaultKeyUnlockData [androidJvm]@JvmName(name = \"getDefaultKeyUnlockData\")@JvmStaticfun EudiWallet.getDefaultKeyUnlockData(documentId: DocumentId): AndroidKeystoreKeyUnlockData?Returns the default AndroidKeystoreKeyUnlockData for the given DocumentId. The default key unlock data is based on the Document.keyAlias. getDocumentById [androidJvm]abstract fun getDocumentById(documentId: DocumentId): Document? getDocuments [androidJvm]abstract fun getDocuments(predicate: (Document) -&gt; Boolean?): List&lt;Document&gt; loadMdocSampleDocuments [androidJvm]abstract fun loadMdocSampleDocuments(sampleData: ByteArray, createSettings: CreateDocumentSettings, documentNamesMap: Map&lt;DocType, String&gt;?): Outcome&lt;List&lt;DocumentId&gt;&gt; removeAllTransferEventListeners [androidJvm]abstract fun removeAllTransferEventListeners(): TransferEvent.Listenable removeTransferEventListener [androidJvm]abstract fun removeTransferEventListener(listener: TransferEvent.Listener): TransferEvent.Listenable sendResponse [androidJvm]abstract fun sendResponse(response: Response)Send a response to verifier setReaderTrustStore [androidJvm]abstract fun setReaderTrustStore(readerTrustStore: ReaderTrustStore): EudiWalletSets the reader trust store with the given ReaderTrustStore. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime. setTrustedReaderCertificates [androidJvm]abstract fun setTrustedReaderCertificates(@RawResvararg rawRes: Int): EudiWalletSets the reader trust store with the given list of raw resource IDs. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.[androidJvm]abstract fun setTrustedReaderCertificates(trustedReaderCertificates: List&lt;X509Certificate&gt;): EudiWalletSets the reader trust store with the given list of X509Certificate. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime. startProximityPresentation [androidJvm]abstract fun startProximityPresentation()Starts the proximity presentation. The QR code is available through the TransferEvent.QrEngagementReady event which is triggered almost immediately after calling this method. The wallet should display the QR code to the verifier in order to start the proximity presentation. startRemotePresentation [androidJvm]abstract fun startRemotePresentation(uri: Uri)Start a remote presentation with the given URI The URI could be either stopProximityPresentation [androidJvm]abstract fun stopProximityPresentation(flags: Int = SEND_SESSION_TERMINATION_MESSAGE)Stops the proximity presentation. Method receives flags that can be used to control the session termination. The available flags are: storeDeferredDocument [androidJvm]abstract fun storeDeferredDocument(unsignedDocument: UnsignedDocument, relatedData: ByteArray): Outcome&lt;DeferredDocument&gt; storeIssuedDocument [androidJvm]abstract fun storeIssuedDocument(unsignedDocument: UnsignedDocument, issuerProvidedData: ByteArray): Outcome&lt;IssuedDocument&gt;"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/config/","title":"Config","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / config //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/config/#config","title":"config","text":"<p>[androidJvm] abstract val config: EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/create-open-id4-vci-manager/","title":"Create open id4 vci manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / create-open-id4-vci-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/createOpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/create-open-id4-vci-manager/#createopenid4vcimanager","title":"createOpenId4VciManager","text":"<p>[androidJvm] abstract fun createOpenId4VciManager(): OpenId4VciManager</p> <p>Create an instance of OpenId4VciManager for the wallet to interact with the OpenId4Vci service</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/create-open-id4-vci-manager/#return","title":"Return","text":"<p>an instance of OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/document-manager/","title":"Document manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / document-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/documentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/document-manager/#documentmanager","title":"documentManager","text":"<p>[androidJvm] abstract val documentManager: DocumentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/enumerate-secure-areas/","title":"Enumerate secure areas","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / enumerate-secure-areas //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/enumerateSecureAreas</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/enumerate-secure-areas/#enumeratesecureareas","title":"enumerateSecureAreas","text":"<p>[androidJvm] open fun enumerateSecureAreas(): List&lt;String&gt;</p> <p>Enumerate the secure areas available in the wallet</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/enumerate-secure-areas/#return","title":"Return","text":"<p>a list of secure area identifiers</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/logger/","title":"Logger","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / logger //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/logger/#logger","title":"logger","text":"<p>[androidJvm] abstract val logger: Logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/presentation-manager/","title":"Presentation manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / presentation-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/presentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/presentation-manager/#presentationmanager","title":"presentationManager","text":"<p>[androidJvm] abstract val presentationManager: PresentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-reader-trust-store/","title":"Set reader trust store","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / set-reader-trust-store //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/setReaderTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-reader-trust-store/#setreadertruststore","title":"setReaderTrustStore","text":"<p>[androidJvm] abstract fun setReaderTrustStore(readerTrustStore: ReaderTrustStore): EudiWallet</p> <p>Sets the reader trust store with the given ReaderTrustStore. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-reader-trust-store/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-reader-trust-store/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerTrustStore the reader trust store"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/","title":"Set trusted reader certificates","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / set-trusted-reader-certificates //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/setTrustedReaderCertificates</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/#settrustedreadercertificates","title":"setTrustedReaderCertificates","text":"<p>[androidJvm] abstract fun setTrustedReaderCertificates(trustedReaderCertificates: List&lt;X509Certificate&gt;): EudiWallet</p> <p>Sets the reader trust store with the given list of X509Certificate. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerCertificates the list of reader certificates <p>[androidJvm] abstract fun setTrustedReaderCertificates(@RawResvararg rawRes: Int): EudiWallet</p> <p>Sets the reader trust store with the given list of raw resource IDs. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/#return_1","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> rawRes the list of raw resource IDs"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/transfer-manager/","title":"Transfer manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / transfer-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/transferManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/transfer-manager/#transfermanager","title":"transferManager","text":"<p>[androidJvm] abstract val transferManager: TransferManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/#builder","title":"Builder","text":"<p>class Builder(context: Context, val config: EudiWalletConfig)</p> <p>Builder class to create an instance of EudiWallet</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/#parameters","title":"Parameters","text":"<p>androidJvm</p> context application context config the configuration object"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/#constructors","title":"Constructors","text":"Builder [androidJvm]constructor(context: Context, config: EudiWalletConfig)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/#properties","title":"Properties","text":"Name Summary config [androidJvm]val config: EudiWalletConfigthe configuration object documentManager [androidJvm]var documentManager: DocumentManager?the document manager to use if you want to provide a custom implementation ktorHttpClientFactory [androidJvm]var ktorHttpClientFactory: () -&gt; HttpClient?the Ktor HTTP client factory to use if you want to provide a custom implementation logger [androidJvm]var logger: Logger?the logger to use if you want to provide a custom implementation presentationManager [androidJvm]var presentationManager: PresentationManager?the presentation manager to use if you want to provide a custom implementation readerTrustStore [androidJvm]var readerTrustStore: ReaderTrustStore?the reader trust store to use if you want to provide a custom implementation secureAreas [androidJvm]var secureAreas: List&lt;SecureArea&gt;?the secure areas to use for documents' keys management if you want to provide a different implementation storageEngine [androidJvm]var storageEngine: StorageEngine?the storage engine to use for storing/retrieving documents if you want to provide a different implementation"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/#functions","title":"Functions","text":"Name Summary build [androidJvm]fun build(): EudiWalletBuild the EudiWallet instance withDocumentManager [androidJvm]fun withDocumentManager(documentManager: DocumentManager): EudiWallet.BuilderConfigure with the given DocumentManager to use. If not set, the default document manager will be used which is DocumentManagerImpl configured with the provided storageEngine and secureAreas if they are set. withKtorHttpClientFactory [androidJvm]fun withKtorHttpClientFactory(ktorHttpClientFactory: () -&gt; HttpClient): EudiWallet.BuilderConfigure with the given Ktor HTTP client factory to use for making HTTP requests. Ktor HTTP client is used by the OpenId4VpManager and OpenId4VciManager for making HTTP requests. withLogger [androidJvm]fun withLogger(logger: Logger): EudiWallet.BuilderConfigure with the given Logger to use for logging. If not set, the default logger will be used which is configured with the EudiWalletConfig.configureLogging. withPresentationManager [androidJvm]fun withPresentationManager(presentationManager: PresentationManager): EudiWallet.BuilderConfigure with the given PresentationManager to use for both proximity and remote presentation. If not set, the default presentation manager will be used which is PresentationManagerImpl that uses the eu.europa.ec.eudi.iso18013.transfer.TransferManagerImpl for proximity presentation and OpenId4VpManager for remote presentation. withReaderTrustStore [androidJvm]fun withReaderTrustStore(readerTrustStore: ReaderTrustStore): EudiWallet.BuilderConfigure with the given ReaderTrustStore to use for performing reader authentication. If not set, the default reader trust store will be used which is initialized with the certificates provided in the EudiWalletConfig.configureReaderTrustStore methods. withSecureAreas [androidJvm]fun withSecureAreas(secureAreas: List&lt;SecureArea&gt;): EudiWallet.BuilderConfigure with the given SecureArea implementations to use for documents' keys management. If not set, the default secure area will be used which is AndroidKeystoreSecureArea. withStorageEngine [androidJvm]fun withStorageEngine(storageEngine: StorageEngine): EudiWallet.BuilderConfigure with the given StorageEngine to use for storing/retrieving documents. If not set, the default storage engine will be used which is AndroidStorageEngine."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/-builder/","title":"builder","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / -builder //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/-builder/#builder","title":"Builder","text":"<p>[androidJvm] constructor(context: Context, config: EudiWalletConfig)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/-builder/#parameters","title":"Parameters","text":"<p>androidJvm</p> context application context config the configuration object"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/build/","title":"Build","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / build //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/build</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/build/#build","title":"build","text":"<p>[androidJvm] fun build(): EudiWallet</p> <p>Build the EudiWallet instance</p> <p>The EudiWallet instance will be created based on the configuration provided in the Builder class.</p> <p>The EudiWallet instance will be created with the following default implementations if not set:</p> <ul> <li>AndroidStorageEngine for storing/retrieving documents</li> <li>AndroidKeystoreSecureArea for managing documents' keys</li> <li>DocumentManagerImpl for managing documents</li> <li>PresentationManagerImpl for both proximity and remote presentation</li> <li>OpenId4VpManager for remote presentation</li> <li>TransferManagerImpl for proximity presentation</li> </ul> <p>Note: The EudiWalletConfig.documentsStorageDir is not set, the default storage directory will be used which is the application's no backup files directory.</p> <p>Note: The EudiWalletConfig.userAuthenticationRequired is set to true and the device is not secured with a PIN, pattern, or password, the configuration will be updated to set the user authentication required to false.</p> <p>Note: The EudiWalletConfig.useStrongBoxForKeys is set to true and the device does not support StrongBox, the configuration will be updated to set the use StrongBox for keys to false.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/build/#return","title":"Return","text":"<p>EudiWallet</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/config/","title":"Config","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / config //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/config/#config","title":"config","text":"<p>[androidJvm] val config: EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/document-manager/","title":"Document manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / document-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/documentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/document-manager/#documentmanager","title":"documentManager","text":"<p>[androidJvm] var documentManager: DocumentManager?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/ktor-http-client-factory/","title":"Ktor http client factory","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / ktor-http-client-factory //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/ktorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/ktor-http-client-factory/#ktorhttpclientfactory","title":"ktorHttpClientFactory","text":"<p>[androidJvm] var ktorHttpClientFactory: () -&gt; HttpClient?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/logger/","title":"Logger","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / logger //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/logger/#logger","title":"logger","text":"<p>[androidJvm] var logger: Logger?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/presentation-manager/","title":"Presentation manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / presentation-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/presentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/presentation-manager/#presentationmanager","title":"presentationManager","text":"<p>[androidJvm] var presentationManager: PresentationManager?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/reader-trust-store/","title":"Reader trust store","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / reader-trust-store //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/readerTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/reader-trust-store/#readertruststore","title":"readerTrustStore","text":"<p>[androidJvm] var readerTrustStore: ReaderTrustStore?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/secure-areas/","title":"Secure areas","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / secure-areas //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/secureAreas</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/secure-areas/#secureareas","title":"secureAreas","text":"<p>[androidJvm] var secureAreas: List&lt;SecureArea&gt;?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/storage-engine/","title":"Storage engine","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / storage-engine //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/storageEngine</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/storage-engine/#storageengine","title":"storageEngine","text":"<p>[androidJvm] var storageEngine: StorageEngine?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-manager/","title":"With document manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / with-document-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withDocumentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-manager/#withdocumentmanager","title":"withDocumentManager","text":"<p>[androidJvm] fun withDocumentManager(documentManager: DocumentManager): EudiWallet.Builder</p> <p>Configure with the given DocumentManager to use. If not set, the default document manager will be used which is DocumentManagerImpl configured with the provided storageEngine and secureAreas if they are set.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-manager/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> documentManager the document manager"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-ktor-http-client-factory/","title":"With ktor http client factory","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / with-ktor-http-client-factory //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withKtorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-ktor-http-client-factory/#withktorhttpclientfactory","title":"withKtorHttpClientFactory","text":"<p>[androidJvm] fun withKtorHttpClientFactory(ktorHttpClientFactory: () -&gt; HttpClient): EudiWallet.Builder</p> <p>Configure with the given Ktor HTTP client factory to use for making HTTP requests. Ktor HTTP client is used by the OpenId4VpManager and OpenId4VciManager for making HTTP requests.</p> <p>If not set, the default Ktor HTTP client factory will be used which is initialized with the default</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-ktor-http-client-factory/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-ktor-http-client-factory/#parameters","title":"Parameters","text":"<p>androidJvm</p> ktorHttpClientFactory the Ktor HTTP client factory"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-logger/","title":"With logger","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / with-logger //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withLogger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-logger/#withlogger","title":"withLogger","text":"<p>[androidJvm] fun withLogger(logger: Logger): EudiWallet.Builder</p> <p>Configure with the given Logger to use for logging. If not set, the default logger will be used which is configured with the EudiWalletConfig.configureLogging.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-logger/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-logger/#parameters","title":"Parameters","text":"<p>androidJvm</p> logger the logger"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-presentation-manager/","title":"With presentation manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / with-presentation-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withPresentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-presentation-manager/#withpresentationmanager","title":"withPresentationManager","text":"<p>[androidJvm] fun withPresentationManager(presentationManager: PresentationManager): EudiWallet.Builder</p> <p>Configure with the given PresentationManager to use for both proximity and remote presentation. If not set, the default presentation manager will be used which is PresentationManagerImpl that uses the eu.europa.ec.eudi.iso18013.transfer.TransferManagerImpl for proximity presentation and OpenId4VpManager for remote presentation.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-presentation-manager/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-presentation-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> presentationManager the presentation manager"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-reader-trust-store/","title":"With reader trust store","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / with-reader-trust-store //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withReaderTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-reader-trust-store/#withreadertruststore","title":"withReaderTrustStore","text":"<p>[androidJvm] fun withReaderTrustStore(readerTrustStore: ReaderTrustStore): EudiWallet.Builder</p> <p>Configure with the given ReaderTrustStore to use for performing reader authentication. If not set, the default reader trust store will be used which is initialized with the certificates provided in the EudiWalletConfig.configureReaderTrustStore methods.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-reader-trust-store/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-reader-trust-store/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerTrustStore the reader trust store"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-secure-areas/","title":"With secure areas","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / with-secure-areas //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withSecureAreas</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-secure-areas/#withsecureareas","title":"withSecureAreas","text":"<p>[androidJvm] fun withSecureAreas(secureAreas: List&lt;SecureArea&gt;): EudiWallet.Builder</p> <p>Configure with the given SecureArea implementations to use for documents' keys management. If not set, the default secure area will be used which is AndroidKeystoreSecureArea.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-secure-areas/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-secure-areas/#parameters","title":"Parameters","text":"<p>androidJvm</p> secureAreas the secure areas"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-storage-engine/","title":"With storage engine","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -builder / with-storage-engine //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withStorageEngine</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-storage-engine/#withstorageengine","title":"withStorageEngine","text":"<p>[androidJvm] fun withStorageEngine(storageEngine: StorageEngine): EudiWallet.Builder</p> <p>Configure with the given StorageEngine to use for storing/retrieving documents. If not set, the default storage engine will be used which is AndroidStorageEngine.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-storage-engine/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-storage-engine/#parameters","title":"Parameters","text":"<p>androidJvm</p> storageEngine the storage engine"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -companion //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/#functions","title":"Functions","text":"Name Summary invoke [androidJvm]operator fun invoke(context: Context, config: EudiWalletConfig, extraConfiguration: EudiWallet.Builder.() -&gt; Unit? = null): EudiWalletCreate an instance of EudiWallet with the given configuration and additional configuration using the Builder class"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/invoke/","title":"Invoke","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet / -companion / invoke //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(context: Context, config: EudiWalletConfig, extraConfiguration: EudiWallet.Builder.() -&gt; Unit? = null): EudiWallet</p> <p>Create an instance of EudiWallet with the given configuration and additional configuration using the Builder class</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/invoke/#parameters","title":"Parameters","text":"<p>androidJvm</p> context application context config the configuration object extraConfiguration additional configuration to be applied based on the Builder"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/#eudiwalletconfig","title":"EudiWalletConfig","text":"<p>class EudiWalletConfig</p> <p>Eudi wallet config. This config is used to configure the default settings of the Eudi wallet.</p> <p>Custom configuration and implementations of the various components can be provided using the EudiWallet.Builder class.</p> <p>Example usage:</p> <pre><code>val config = EudiWalletConfig()\n    .configureDocumentManager(context.noBackupFilesDir)\n    .configureLogging(\n        // set log level to info\n        level = Logger.LEVEL_INFO\n    )\n    .configureDocumentKeyCreation(\n        // set userAuthenticationRequired to true to require user authentication\n        userAuthenticationRequired = true,\n        // set userAuthenticationTimeout to 30 seconds\n        userAuthenticationTimeout = 30_000L,\n        // set useStrongBoxForKeys to true to use the the device's StrongBox if available\n        // to store the keys\n        useStrongBoxForKeys = true\n    )\n    .configureReaderTrustStore(\n        // set the reader trusted certificates for the reader trust store\n        listOf(readerCertificate)\n    )\n    .configureOpenId4Vci {\n        withIssuerUrl(\"https://issuer.com\")\n        withClientId(\"client-id\")\n        withAuthFlowRedirectionURI(\"eudi-openid4ci://authorize\")\n        withParUsage(OpenId4VciManager.Config.ParUsage.Companion.IF_SUPPORTED)\n        withUseDPoPIfSupported(true)\n    }\n    .configureProximityPresentation(\n        enableBlePeripheralMode = true,\n        enableBleCentralMode = false,\n        clearBleCache = true,\n    )\n    .configureOpenId4Vp {\n        withEncryptionAlgorithms(\n            EncryptionAlgorithm.ECDH_ES\n        )\n        withEncryptionMethods(\n            EncryptionMethod.A128CBC_HS256,\n            EncryptionMethod.A256GCM\n        )\n        withClientIdSchemes(\n            ClientIdScheme.X509SanDns\n        )\n        withSchemes(\n            \"openid4vp\",\n            \"eudi-openid4vp\",\n            \"mdoc-openid4vp\"\n        )\n    }\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/#see-also","title":"See also","text":"EudiWallet.Builder"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/#constructors","title":"Constructors","text":"EudiWalletConfig [androidJvm]constructor()"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/#properties","title":"Properties","text":"Name Summary clearBleCache [androidJvm]var clearBleCache: Booleanwhether to clear the BLE cache documentManagerIdentifier [androidJvm]var documentManagerIdentifier: Stringthe document manager identifier documentsStorageDir [androidJvm]var documentsStorageDir: File?the documents storage directory enableBleCentralMode [androidJvm]var enableBleCentralMode: Booleanwhether to enable BLE central mode enableBlePeripheralMode [androidJvm]var enableBlePeripheralMode: Booleanwhether to enable BLE peripheral mode encryptDocumentsInStorage [androidJvm]var encryptDocumentsInStorage: Booleanwhether to encrypt documents in storage logLevel [androidJvm]var logLevel: Intthe log level logSizeLimit [androidJvm]var logSizeLimit: Intthe log size limit nfcEngagementServiceClass [androidJvm]var nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? openId4VciConfig [androidJvm]var openId4VciConfig: OpenId4VciManager.Config?the OpenID4VCI configuration openId4VpConfig [androidJvm]var openId4VpConfig: OpenId4VpConfig?the OpenID4VP configuration readerTrustedCertificates [androidJvm]var readerTrustedCertificates: List&lt;X509Certificate&gt;?the reader trusted certificates userAuthenticationRequired [androidJvm]var userAuthenticationRequired: Booleanwhether user authentication is required userAuthenticationTimeout [androidJvm]var userAuthenticationTimeout: Longthe user authentication timeout useStrongBoxForKeys [androidJvm]var useStrongBoxForKeys: Booleanwhether to use the strong box for keys"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/#functions","title":"Functions","text":"Name Summary configureDocumentKeyCreation [androidJvm]fun configureDocumentKeyCreation(userAuthenticationRequired: Boolean = false, userAuthenticationTimeout: Long = 0, useStrongBoxForKeys: Boolean = true): EudiWalletConfigConfigure the document key creation. This allows to configure if user authentication is required to unlock key usage, the user authentication timeout and whether to use the strong box for keys. These values are used to create the eu.europa.ec.eudi.wallet.document.CreateDocumentSettings using eu.europa.ec.eudi.wallet.document.DocumentExtensions.getDefaultCreateDocumentSettings method. configureDocumentManager [androidJvm]@JvmOverloadsfun configureDocumentManager(storageDir: File, identifier: String? = null, encryptDocuments: Boolean = true): EudiWalletConfigConfigure the built-in document manager. configureLogging [androidJvm]@JvmOverloadsfun configureLogging(level: Int, sizeLimit: Int? = null): EudiWalletConfigConfigure the built-in logging. This allows to configure the log level and the log size limit. configureOpenId4Vci [androidJvm]fun configureOpenId4Vci(openId4VciConfig: OpenId4VciManager.Config): EudiWalletConfigConfigure OpenID4VCI.[androidJvm]fun configureOpenId4Vci(openId4VciConfig: OpenId4VciManager.Config.Builder.() -&gt; Unit): EudiWalletConfigConfigure OpenID4VCI using a OpenId4VciManager.Config.Builder as a lambda with receiver. configureOpenId4Vp [androidJvm]fun configureOpenId4Vp(openId4VpConfig: OpenId4VpConfig): EudiWalletConfigConfigure OpenID4VP.[androidJvm]fun configureOpenId4Vp(openId4VpConfig: OpenId4VpConfig.Builder.() -&gt; Unit): EudiWalletConfigConfigure OpenID4VP using a OpenId4VpConfig.Builder as a lambda with receiver. configureProximityPresentation [androidJvm]@JvmOverloadsfun configureProximityPresentation(enableBlePeripheralMode: Boolean = true, enableBleCentralMode: Boolean = false, clearBleCache: Boolean = true, nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = null): EudiWalletConfigConfigure the proximity presentation. This allows to configure the BLE peripheral mode, the BLE central mode and whether to clear the BLE cache. Also, it allows to set the NFC engagement service class an implementation of NfcEngagementService, which is used to handle the NFC engagement. configureReaderTrustStore [androidJvm]fun configureReaderTrustStore(vararg readerTrustedCertificates: X509Certificate): EudiWalletConfigfun configureReaderTrustStore(readerTrustedCertificates: List&lt;X509Certificate&gt;): EudiWalletConfigConfigure the built-in ReaderTrustStore. This allows to set the reader trusted certificates for the reader trust store.[androidJvm]fun configureReaderTrustStore(context: Context, @RawResvararg certificateRes: Int): EudiWalletConfigConfigure the built-in ReaderTrustStore. This allows to set the reader trusted certificates for the reader trust store. The certificates are loaded from the raw resources."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-eudi-wallet-config/","title":"eudi wallet config","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / -eudi-wallet-config //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-eudi-wallet-config/#eudiwalletconfig","title":"EudiWalletConfig","text":"<p>[androidJvm] constructor()</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/clear-ble-cache/","title":"Clear ble cache","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / clear-ble-cache //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/clearBleCache</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/clear-ble-cache/#clearblecache","title":"clearBleCache","text":"<p>[androidJvm] var clearBleCache: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-key-creation/","title":"Configure document key creation","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / configure-document-key-creation //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureDocumentKeyCreation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-key-creation/#configuredocumentkeycreation","title":"configureDocumentKeyCreation","text":"<p>[androidJvm] fun configureDocumentKeyCreation(userAuthenticationRequired: Boolean = false, userAuthenticationTimeout: Long = 0, useStrongBoxForKeys: Boolean = true): EudiWalletConfig</p> <p>Configure the document key creation. This allows to configure if user authentication is required to unlock key usage, the user authentication timeout and whether to use the strong box for keys. These values are used to create the eu.europa.ec.eudi.wallet.document.CreateDocumentSettings using eu.europa.ec.eudi.wallet.document.DocumentExtensions.getDefaultCreateDocumentSettings method.</p> <p>Note: when setting userAuthenticationRequired to true, device must be secured with a PIN, pattern or password.</p> <p>Note: when setting useStrongBoxForKeys to true, the device must support the StrongBox.</p> <p>The default values are:</p> <ul> <li>userAuthenticationRequired: false</li> <li>userAuthenticationTimeout: 0</li> <li>useStrongBoxForKeys: true if supported by the device</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-key-creation/#parameters","title":"Parameters","text":"<p>androidJvm</p> userAuthenticationRequired whether user authentication is required userAuthenticationTimeout If 0, user authentication is required for every use of the key, otherwise it's required within the given amount of milliseconds useStrongBoxForKeys whether to use the strong box for keys"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-manager/","title":"Configure document manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / configure-document-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureDocumentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-manager/#configuredocumentmanager","title":"configureDocumentManager","text":"<p>[androidJvm]\\</p> <p>@JvmOverloads</p> <p>fun configureDocumentManager(storageDir: File, identifier: String? = null, encryptDocuments: Boolean = true): EudiWalletConfig</p> <p>Configure the built-in document manager.</p> <p>Allowing to configure the documents storage directory, the document manager identifier and whether to encrypt documents in storage. The default document manager identifier is set to DEFAULT_DOCUMENT_MANAGER_IDENTIFIER.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-manager/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> storageDir the documents storage directory identifier the document manager identifier encryptDocuments whether to encrypt documents in storage"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-manager/#see-also","title":"See also","text":"DocumentManagerImpl AndroidStorageEngine"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-logging/","title":"Configure logging","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / configure-logging //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureLogging</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-logging/#configurelogging","title":"configureLogging","text":"<p>[androidJvm]\\</p> <p>@JvmOverloads</p> <p>fun configureLogging(level: Int, sizeLimit: Int? = null): EudiWalletConfig</p> <p>Configure the built-in logging. This allows to configure the log level and the log size limit.</p> <p>The default log level is set to Logger.LEVEL_INFO and the default log size limit is set to</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-logging/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-logging/#parameters","title":"Parameters","text":"<p>androidJvm</p> level the log level sizeLimit the log size limit"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/","title":"Configure open id4 vci","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / configure-open-id4-vci //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureOpenId4Vci</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#configureopenid4vci","title":"configureOpenId4Vci","text":"<p>[androidJvm] fun configureOpenId4Vci(openId4VciConfig: OpenId4VciManager.Config): EudiWalletConfig</p> <p>Configure OpenID4VCI.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#parameters","title":"Parameters","text":"<p>androidJvm</p> openId4VciConfig the OpenID4VCI configuration"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#see-also","title":"See also","text":"OpenId4VciManager.Config OpenId4VciManager.Config.Builder <p>[androidJvm] fun configureOpenId4Vci(openId4VciConfig: OpenId4VciManager.Config.Builder.() -&gt; Unit): EudiWalletConfig</p> <p>Configure OpenID4VCI using a OpenId4VciManager.Config.Builder as a lambda with receiver.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#return_1","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> openId4VciConfig the OpenID4VCI configuration lambda"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#see-also_1","title":"See also","text":"OpenId4VciManager.Config OpenId4VciManager.Config.Builder"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/","title":"Configure open id4 vp","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / configure-open-id4-vp //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureOpenId4Vp</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#configureopenid4vp","title":"configureOpenId4Vp","text":"<p>[androidJvm] fun configureOpenId4Vp(openId4VpConfig: OpenId4VpConfig): EudiWalletConfig</p> <p>Configure OpenID4VP.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#parameters","title":"Parameters","text":"<p>androidJvm</p> openId4VpConfig the OpenID4VP configuration"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#see-also","title":"See also","text":"OpenId4VpConfig OpenId4VpConfig.Builder <p>[androidJvm] fun configureOpenId4Vp(openId4VpConfig: OpenId4VpConfig.Builder.() -&gt; Unit): EudiWalletConfig</p> <p>Configure OpenID4VP using a OpenId4VpConfig.Builder as a lambda with receiver.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#return_1","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> openId4VpConfig the OpenID4VP configuration lambda"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#see-also_1","title":"See also","text":"OpenId4VpConfig OpenId4VpConfig.Builder"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-proximity-presentation/","title":"Configure proximity presentation","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / configure-proximity-presentation //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-proximity-presentation/#configureproximitypresentation","title":"configureProximityPresentation","text":"<p>[androidJvm]\\</p> <p>@JvmOverloads</p> <p>fun configureProximityPresentation(enableBlePeripheralMode: Boolean = true, enableBleCentralMode: Boolean = false, clearBleCache: Boolean = true, nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = null): EudiWalletConfig</p> <p>Configure the proximity presentation. This allows to configure the BLE peripheral mode, the BLE central mode and whether to clear the BLE cache. Also, it allows to set the NFC engagement service class an implementation of NfcEngagementService, which is used to handle the NFC engagement.</p> <p>The default values are:</p> <ul> <li>enableBlePeripheralMode: true</li> <li>enableBleCentralMode: false</li> <li>clearBleCache: true</li> <li>nfcEngagementServiceClass: null</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-proximity-presentation/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-proximity-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> enableBlePeripheralMode whether to enable BLE peripheral mode enableBleCentralMode whether to enable BLE central mode clearBleCache whether to clear the BLE cache nfcEngagementServiceClass the NFC engagement service class"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/","title":"Configure reader trust store","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / configure-reader-trust-store //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureReaderTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/#configurereadertruststore","title":"configureReaderTrustStore","text":"<p>[androidJvm] fun configureReaderTrustStore(readerTrustedCertificates: List&lt;X509Certificate&gt;): EudiWalletConfig</p> <p>fun configureReaderTrustStore(vararg readerTrustedCertificates: X509Certificate): EudiWalletConfig</p> <p>Configure the built-in ReaderTrustStore. This allows to set the reader trusted certificates for the reader trust store.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerTrustedCertificates the reader trusted certificates <p>[androidJvm] fun configureReaderTrustStore(context: Context, @RawResvararg certificateRes: Int): EudiWalletConfig</p> <p>Configure the built-in ReaderTrustStore. This allows to set the reader trusted certificates for the reader trust store. The certificates are loaded from the raw resources.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/#return_1","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> context the context certificateRes the reader trusted certificates raw resources"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/document-manager-identifier/","title":"Document manager identifier","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / document-manager-identifier //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/documentManagerIdentifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/document-manager-identifier/#documentmanageridentifier","title":"documentManagerIdentifier","text":"<p>[androidJvm] var documentManagerIdentifier: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/documents-storage-dir/","title":"Documents storage dir","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / documents-storage-dir //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/documentsStorageDir</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/documents-storage-dir/#documentsstoragedir","title":"documentsStorageDir","text":"<p>[androidJvm] var documentsStorageDir: File?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/enable-ble-central-mode/","title":"Enable ble central mode","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / enable-ble-central-mode //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/enableBleCentralMode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/enable-ble-central-mode/#enableblecentralmode","title":"enableBleCentralMode","text":"<p>[androidJvm] var enableBleCentralMode: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/enable-ble-peripheral-mode/","title":"Enable ble peripheral mode","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / enable-ble-peripheral-mode //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/enableBlePeripheralMode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/enable-ble-peripheral-mode/#enablebleperipheralmode","title":"enableBlePeripheralMode","text":"<p>[androidJvm] var enableBlePeripheralMode: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/encrypt-documents-in-storage/","title":"Encrypt documents in storage","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / encrypt-documents-in-storage //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/encryptDocumentsInStorage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/encrypt-documents-in-storage/#encryptdocumentsinstorage","title":"encryptDocumentsInStorage","text":"<p>[androidJvm] var encryptDocumentsInStorage: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/log-level/","title":"Log level","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / log-level //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/logLevel</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/log-level/#loglevel","title":"logLevel","text":"<p>[androidJvm] var logLevel: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/log-size-limit/","title":"Log size limit","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / log-size-limit //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/logSizeLimit</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/log-size-limit/#logsizelimit","title":"logSizeLimit","text":"<p>[androidJvm] var logSizeLimit: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/nfc-engagement-service-class/","title":"Nfc engagement service class","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / nfc-engagement-service-class //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/nfcEngagementServiceClass</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/nfc-engagement-service-class/#nfcengagementserviceclass","title":"nfcEngagementServiceClass","text":"<p>[androidJvm] var nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/open-id4-vci-config/","title":"Open id4 vci config","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / open-id4-vci-config //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/openId4VciConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/open-id4-vci-config/#openid4vciconfig","title":"openId4VciConfig","text":"<p>[androidJvm] var openId4VciConfig: OpenId4VciManager.Config?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/open-id4-vp-config/","title":"Open id4 vp config","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / open-id4-vp-config //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/openId4VpConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/open-id4-vp-config/#openid4vpconfig","title":"openId4VpConfig","text":"<p>[androidJvm] var openId4VpConfig: OpenId4VpConfig?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/reader-trusted-certificates/","title":"Reader trusted certificates","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / reader-trusted-certificates //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/readerTrustedCertificates</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/reader-trusted-certificates/#readertrustedcertificates","title":"readerTrustedCertificates","text":"<p>[androidJvm] var readerTrustedCertificates: List&lt;X509Certificate&gt;?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/use-strong-box-for-keys/","title":"Use strong box for keys","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / use-strong-box-for-keys //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/useStrongBoxForKeys</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/use-strong-box-for-keys/#usestrongboxforkeys","title":"useStrongBoxForKeys","text":"<p>[androidJvm] var useStrongBoxForKeys: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/user-authentication-required/","title":"User authentication required","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / user-authentication-required //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/userAuthenticationRequired</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/user-authentication-required/#userauthenticationrequired","title":"userAuthenticationRequired","text":"<p>[androidJvm] var userAuthenticationRequired: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/user-authentication-timeout/","title":"User authentication timeout","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / user-authentication-timeout //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/userAuthenticationTimeout</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/user-authentication-timeout/#userauthenticationtimeout","title":"userAuthenticationTimeout","text":"<p>[androidJvm] var userAuthenticationTimeout: Long</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / -companion //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/#properties","title":"Properties","text":"Name Summary DEFAULT_DOCUMENT_MANAGER_IDENTIFIER [androidJvm]const val DEFAULT_DOCUMENT_MANAGER_IDENTIFIER: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/#functions","title":"Functions","text":"Name Summary invoke [androidJvm]operator fun invoke(configure: EudiWalletConfig.() -&gt; Unit): EudiWalletConfigCreate a new EudiWalletConfig instance."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/-d-e-f-a-u-l-t_-d-o-c-u-m-e-n-t_-m-a-n-a-g-e-r_-i-d-e-n-t-i-f-i-e-r/","title":"d e f a u l t  d o c u m e n t  m a n a g e r  i d e n t i f i e r","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / -companion / -d-e-f-a-u-l-t_-d-o-c-u-m-e-n-t_-m-a-n-a-g-e-r_-i-d-e-n-t-i-f-i-e-r //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/Companion/DEFAULT_DOCUMENT_MANAGER_IDENTIFIER</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/-d-e-f-a-u-l-t_-d-o-c-u-m-e-n-t_-m-a-n-a-g-e-r_-i-d-e-n-t-i-f-i-e-r/#default_document_manager_identifier","title":"DEFAULT_DOCUMENT_MANAGER_IDENTIFIER","text":"<p>[androidJvm] const val DEFAULT_DOCUMENT_MANAGER_IDENTIFIER: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/invoke/","title":"Invoke","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-config / -companion / invoke //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(configure: EudiWalletConfig.() -&gt; Unit): EudiWalletConfig</p> <p>Create a new EudiWalletConfig instance.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/invoke/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/invoke/#parameters","title":"Parameters","text":"<p>androidJvm</p> configure the configuration lambda"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-impl //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/#eudiwalletimpl","title":"EudiWalletImpl","text":"<p>[androidJvm] class EudiWalletImpl : EudiWallet, DocumentManager, PresentationManager, SampleDocumentManager</p> <p>Implementation of EudiWallet</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/#properties","title":"Properties","text":"Name Summary config [androidJvm]open override val config: EudiWalletConfigthe wallet configuration context [androidJvm]val context: Contextthe android context documentManager [androidJvm]open override val documentManager: DocumentManagerthe document manager identifier [androidJvm]open override val identifier: String logger [androidJvm]open override val logger: Loggerthe logger nfcEngagementServiceClass [androidJvm]open override val nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? presentationManager [androidJvm]open override val presentationManager: PresentationManagerthe presentation manager readerTrustStore [androidJvm]open override var readerTrustStore: ReaderTrustStore? secureAreaRepository [androidJvm]open override val secureAreaRepository: SecureAreaRepository storageEngine [androidJvm]open override val storageEngine: StorageEngine transferManager [androidJvm]open override val transferManager: TransferManagerthe transfer manager"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/#functions","title":"Functions","text":"Name Summary addTransferEventListener [androidJvm]open override fun addTransferEventListener(listener: TransferEvent.Listener): TransferEvent.Listenable createDocument [androidJvm]open override fun createDocument(format: DocumentFormat, createSettings: CreateDocumentSettings, documentMetaData: DocumentMetaData?): Outcome&lt;UnsignedDocument&gt; createOpenId4VciManager [androidJvm]open override fun createOpenId4VciManager(): OpenId4VciManagerCreate an instance of OpenId4VciManager for the wallet to interact with the OpenId4Vci service deleteDocumentById [androidJvm]open override fun deleteDocumentById(documentId: DocumentId): Outcome&lt;ProofOfDeletion?&gt; disableNFCEngagement [androidJvm]open override fun disableNFCEngagement(activity: ComponentActivity): PresentationManagerDisable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onPause method. enableNFCEngagement [androidJvm]open override fun enableNFCEngagement(activity: ComponentActivity): PresentationManagerEnable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onResume method. enumerateSecureAreas [androidJvm]open fun enumerateSecureAreas(): List&lt;String&gt;Enumerate the secure areas available in the wallet getDefaultCreateDocumentSettings [androidJvm]@JvmName(name = \"getDefaultCreateDocumentSettings\")@JvmOverloads@JvmStaticfun EudiWallet.getDefaultCreateDocumentSettings(attestationChallenge: ByteArray? = null, configure: AndroidKeystoreCreateKeySettings.Builder.() -&gt; Unit? = null): CreateDocumentSettingsReturns the default CreateDocumentSettings for the EudiWallet instance. The default settings are based on the EudiWalletConfig and the first available AndroidKeystoreSecureArea implementation. The attestationChallenge is generated using a SecureRandom instance. The configure lambda can be used to further customize the AndroidKeystoreCreateKeySettings. The first available AndroidKeystoreSecureArea implementation is used. getDefaultKeyUnlockData [androidJvm]@JvmName(name = \"getDefaultKeyUnlockData\")@JvmStaticfun EudiWallet.getDefaultKeyUnlockData(documentId: DocumentId): AndroidKeystoreKeyUnlockData?Returns the default AndroidKeystoreKeyUnlockData for the given DocumentId. The default key unlock data is based on the Document.keyAlias. getDocumentById [androidJvm]open override fun getDocumentById(documentId: DocumentId): Document? getDocuments [androidJvm]open override fun getDocuments(predicate: (Document) -&gt; Boolean?): List&lt;Document&gt; loadMdocSampleDocuments [androidJvm]open override fun loadMdocSampleDocuments(sampleData: ByteArray, createSettings: CreateDocumentSettings, documentNamesMap: Map&lt;DocType, String&gt;?): Outcome&lt;List&lt;DocumentId&gt;&gt; removeAllTransferEventListeners [androidJvm]open override fun removeAllTransferEventListeners(): TransferEvent.Listenable removeTransferEventListener [androidJvm]open override fun removeTransferEventListener(listener: TransferEvent.Listener): TransferEvent.Listenable sendResponse [androidJvm]open override fun sendResponse(response: Response)Send a response to verifier setReaderTrustStore [androidJvm]open override fun setReaderTrustStore(readerTrustStore: ReaderTrustStore): EudiWalletImplSets the reader trust store with the given ReaderTrustStore. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime. setTrustedReaderCertificates [androidJvm]open override fun setTrustedReaderCertificates(vararg rawRes: Int): EudiWalletImplSets the reader trust store with the given list of raw resource IDs. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.[androidJvm]open override fun setTrustedReaderCertificates(trustedReaderCertificates: List&lt;X509Certificate&gt;): EudiWalletImplSets the reader trust store with the given list of X509Certificate. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime. startProximityPresentation [androidJvm]open override fun startProximityPresentation()Starts the proximity presentation. The QR code is available through the TransferEvent.QrEngagementReady event which is triggered almost immediately after calling this method. The wallet should display the QR code to the verifier in order to start the proximity presentation. startRemotePresentation [androidJvm]open override fun startRemotePresentation(uri: Uri)Start a remote presentation with the given URI The URI could be either stopProximityPresentation [androidJvm]open override fun stopProximityPresentation(flags: Int)Stops the proximity presentation. Method receives flags that can be used to control the session termination. The available flags are: storeDeferredDocument [androidJvm]open override fun storeDeferredDocument(unsignedDocument: UnsignedDocument, relatedData: ByteArray): Outcome&lt;DeferredDocument&gt; storeIssuedDocument [androidJvm]open override fun storeIssuedDocument(unsignedDocument: UnsignedDocument, issuerProvidedData: ByteArray): Outcome&lt;IssuedDocument&gt;"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/config/","title":"Config","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-impl / config //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/config/#config","title":"config","text":"<p>[androidJvm] open override val config: EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/context/","title":"Context","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-impl / context //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/context</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/context/#context","title":"context","text":"<p>[androidJvm] val context: Context</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/create-open-id4-vci-manager/","title":"Create open id4 vci manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-impl / create-open-id4-vci-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/createOpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/create-open-id4-vci-manager/#createopenid4vcimanager","title":"createOpenId4VciManager","text":"<p>[androidJvm] open override fun createOpenId4VciManager(): OpenId4VciManager</p> <p>Create an instance of OpenId4VciManager for the wallet to interact with the OpenId4Vci service</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/create-open-id4-vci-manager/#return","title":"Return","text":"<p>an instance of OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/document-manager/","title":"Document manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-impl / document-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/documentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/document-manager/#documentmanager","title":"documentManager","text":"<p>[androidJvm] open override val documentManager: DocumentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/logger/","title":"Logger","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-impl / logger //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/logger/#logger","title":"logger","text":"<p>[androidJvm] open override val logger: Logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/presentation-manager/","title":"Presentation manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-impl / presentation-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/presentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/presentation-manager/#presentationmanager","title":"presentationManager","text":"<p>[androidJvm] open override val presentationManager: PresentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-reader-trust-store/","title":"Set reader trust store","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-impl / set-reader-trust-store //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/setReaderTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-reader-trust-store/#setreadertruststore","title":"setReaderTrustStore","text":"<p>[androidJvm] open override fun setReaderTrustStore(readerTrustStore: ReaderTrustStore): EudiWalletImpl</p> <p>Sets the reader trust store with the given ReaderTrustStore. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-reader-trust-store/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-reader-trust-store/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerTrustStore the reader trust store"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/","title":"Set trusted reader certificates","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-impl / set-trusted-reader-certificates //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/setTrustedReaderCertificates</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/#settrustedreadercertificates","title":"setTrustedReaderCertificates","text":"<p>[androidJvm] open override fun setTrustedReaderCertificates(trustedReaderCertificates: List&lt;X509Certificate&gt;): EudiWalletImpl</p> <p>Sets the reader trust store with the given list of X509Certificate. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerCertificates the list of reader certificates <p>[androidJvm] open override fun setTrustedReaderCertificates(vararg rawRes: Int): EudiWalletImpl</p> <p>Sets the reader trust store with the given list of raw resource IDs. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/#return_1","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> rawRes the list of raw resource IDs"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/transfer-manager/","title":"Transfer manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet / -eudi-wallet-impl / transfer-manager //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/transferManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/transfer-manager/#transfermanager","title":"transferManager","text":"<p>[androidJvm] open override val transferManager: TransferManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.document //wallet-core/eu.europa.ec.eudi.wallet.document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/#types","title":"Types","text":"Name Summary DocumentExtensions [androidJvm]object DocumentExtensions"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.document / -document-extensions //wallet-core/eu.europa.ec.eudi.wallet.document/DocumentExtensions</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/#documentextensions","title":"DocumentExtensions","text":"<p>[androidJvm] object DocumentExtensions</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/#properties","title":"Properties","text":"Name Summary DefaultKeyUnlockData [androidJvm]@get:JvmName(name = \"getDefaultKeyUnlockData\")@get:JvmStaticval Document.DefaultKeyUnlockData: AndroidKeystoreKeyUnlockData?Returns the default AndroidKeystoreKeyUnlockData for the Document instance. The default key unlock data is based on the Document.keyAlias."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/#functions","title":"Functions","text":"Name Summary getDefaultCreateDocumentSettings [androidJvm]@JvmName(name = \"getDefaultCreateDocumentSettings\")@JvmOverloads@JvmStaticfun EudiWallet.getDefaultCreateDocumentSettings(attestationChallenge: ByteArray? = null, configure: AndroidKeystoreCreateKeySettings.Builder.() -&gt; Unit? = null): CreateDocumentSettingsReturns the default CreateDocumentSettings for the EudiWallet instance. The default settings are based on the EudiWalletConfig and the first available AndroidKeystoreSecureArea implementation. The attestationChallenge is generated using a SecureRandom instance. The configure lambda can be used to further customize the AndroidKeystoreCreateKeySettings. The first available AndroidKeystoreSecureArea implementation is used. getDefaultKeyUnlockData [androidJvm]@JvmName(name = \"getDefaultKeyUnlockData\")@JvmStaticfun EudiWallet.getDefaultKeyUnlockData(documentId: DocumentId): AndroidKeystoreKeyUnlockData?Returns the default AndroidKeystoreKeyUnlockData for the given DocumentId. The default key unlock data is based on the Document.keyAlias."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/","title":"default key unlock data","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.document / -document-extensions / -default-key-unlock-data //wallet-core/eu.europa.ec.eudi.wallet.document/DocumentExtensions/DefaultKeyUnlockData</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/#defaultkeyunlockdata","title":"DefaultKeyUnlockData","text":"<p>[androidJvm]\\</p> <p>@get:JvmName(name = \"getDefaultKeyUnlockData\")</p> <p>@get:JvmStatic</p> <p>val Document.DefaultKeyUnlockData: AndroidKeystoreKeyUnlockData?</p> <p>Returns the default AndroidKeystoreKeyUnlockData for the Document instance. The default key unlock data is based on the Document.keyAlias.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/#receiver","title":"Receiver","text":"<p>the Document instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/#return","title":"Return","text":"<p>the default AndroidKeystoreKeyUnlockData for the Document instance if document requires user authentication</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/#see-also","title":"See also","text":"AndroidKeystoreKeyUnlockData Document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/#throws","title":"Throws","text":"IllegalStateException if the Document is not managed by AndroidKeystoreSecureArea"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/","title":"Get default create document settings","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.document / -document-extensions / get-default-create-document-settings //wallet-core/eu.europa.ec.eudi.wallet.document/DocumentExtensions/getDefaultCreateDocumentSettings</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/#getdefaultcreatedocumentsettings","title":"getDefaultCreateDocumentSettings","text":"<p>[androidJvm]\\</p> <p>@JvmName(name = \"getDefaultCreateDocumentSettings\")</p> <p>@JvmOverloads</p> <p>@JvmStatic</p> <p>fun EudiWallet.getDefaultCreateDocumentSettings(attestationChallenge: ByteArray? = null, configure: AndroidKeystoreCreateKeySettings.Builder.() -&gt; Unit? = null): CreateDocumentSettings</p> <p>Returns the default CreateDocumentSettings for the EudiWallet instance. The default settings are based on the EudiWalletConfig and the first available AndroidKeystoreSecureArea implementation. The attestationChallenge is generated using a SecureRandom instance. The configure lambda can be used to further customize the AndroidKeystoreCreateKeySettings. The first available AndroidKeystoreSecureArea implementation is used.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/#receiver","title":"Receiver","text":"<p>the EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/#parameters","title":"Parameters","text":"<p>androidJvm</p> attestationChallenge the attestation challenge to use when creating the keys configure a lambda to further customize the AndroidKeystoreCreateKeySettings"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/#see-also","title":"See also","text":"AndroidKeystoreCreateKeySettings.Builder AndroidKeystoreCreateKeySettings AndroidKeystoreSecureArea CreateDocumentSettings"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/#throws","title":"Throws","text":"NoSuchElementException if no AndroidKeystoreSecureArea implementation is available"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/","title":"Get default key unlock data","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.document / -document-extensions / get-default-key-unlock-data //wallet-core/eu.europa.ec.eudi.wallet.document/DocumentExtensions/getDefaultKeyUnlockData</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#getdefaultkeyunlockdata","title":"getDefaultKeyUnlockData","text":"<p>[androidJvm]\\</p> <p>@JvmName(name = \"getDefaultKeyUnlockData\")</p> <p>@JvmStatic</p> <p>fun EudiWallet.getDefaultKeyUnlockData(documentId: DocumentId): AndroidKeystoreKeyUnlockData?</p> <p>Returns the default AndroidKeystoreKeyUnlockData for the given DocumentId. The default key unlock data is based on the Document.keyAlias.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#receiver","title":"Receiver","text":"<p>the EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#return","title":"Return","text":"<p>the default AndroidKeystoreKeyUnlockData for the given DocumentId or null if the document requires no user authentication</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#parameters","title":"Parameters","text":"<p>androidJvm</p> documentId the DocumentId of the document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#see-also","title":"See also","text":"AndroidKeystoreKeyUnlockData Document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#throws","title":"Throws","text":"IllegalStateException if the Document is not managed by AndroidKeystoreSecureArea NoSuchElementException if the document is not found by the DocumentId"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/#types","title":"Types","text":"Name Summary AccessTokenTO [androidJvm]@Serializabledata class AccessTokenTO(val type: AccessTokenTypeTO, val accessToken: String, val expiresIn: Long? = null) AccessTokenTypeTO [androidJvm]@Serializableenum AccessTokenTypeTO : Enum&lt;AccessTokenTypeTO&gt; CreateDocumentSettingsProvider [androidJvm]fun interface CreateDocumentSettingsProviderThe CreateKeySettingsFactory interface is the main entry point to create a new instance of CreateKeySettings required when creating a new com.android.identity.document.Document DeferredIssuanceStoredContextTO [androidJvm]@Serializabledata class DeferredIssuanceStoredContextTO(val credentialIssuerId: String, val clientId: String, val clientAttestationJwt: String? = null, val clientAttestationPopDuration: Long? = null, val clientAttestationPopAlgorithm: String? = null, val clientAttestationPopType: String? = null, val clientAttestationPopKeyId: String? = null, val deferredEndpoint: String, val authServerId: String, val tokenEndpoint: String, val dPoPSignerKid: String? = null, val responseEncryptionSpec: JsonObject? = null, val transactionId: String, val accessToken: AccessTokenTO, val refreshToken: RefreshTokenTO? = null, val authorizationTimestamp: Long, val grant: GrantTO) DeferredIssueResult [androidJvm]sealed interface DeferredIssueResult : OpenId4VciResultResult of a deferred document issuance. GrantTO [androidJvm]@Serializableenum GrantTO : Enum&lt;GrantTO&gt; IssueEvent [androidJvm]sealed interface IssueEvent : OpenId4VciResultEvents related to document issuance. Offer [androidJvm]data class Offer(val credentialOffer: CredentialOffer)Represents an offer of credentials from an issuer. OfferResult [androidJvm]sealed interface OfferResult : OpenId4VciResultThe result of an offer operation. OpenId4VciManager [androidJvm]interface OpenId4VciManagerOpenId4VciManager is the main entry point to issue documents using the OpenId4Vci protocol It provides methods to issue documents using a document type or an offer, and to resolve an offer OpenId4VciResult [androidJvm]interface OpenId4VciResult RefreshTokenTO [androidJvm]@Serializabledata class RefreshTokenTO(val refreshToken: String)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-t-o //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/#accesstokento","title":"AccessTokenTO","text":"<p>[androidJvm] @Serializable</p> <p>data class AccessTokenTO(val type: AccessTokenTypeTO, val accessToken: String, val expiresIn: Long? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/#constructors","title":"Constructors","text":"AccessTokenTO [androidJvm]constructor(type: AccessTokenTypeTO, accessToken: String, expiresIn: Long? = null)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/#properties","title":"Properties","text":"Name Summary accessToken [androidJvm]@Required@SerialName(value = \"access_token\")val accessToken: String expiresIn [androidJvm]@SerialName(value = \"expires_in\")val expiresIn: Long? = null type [androidJvm]@Required@SerialName(value = \"type\")val type: AccessTokenTypeTO"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/#functions","title":"Functions","text":"Name Summary toAccessToken [androidJvm]fun toAccessToken(): AccessToken"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-access-token-t-o/","title":"access token t o","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-t-o / -access-token-t-o //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/AccessTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-access-token-t-o/#accesstokento","title":"AccessTokenTO","text":"<p>[androidJvm] constructor(type: AccessTokenTypeTO, accessToken: String, expiresIn: Long? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/access-token/","title":"Access token","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-t-o / access-token //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/accessToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/access-token/#accesstoken","title":"accessToken","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"access_token\")</p> <p>val accessToken: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/expires-in/","title":"Expires in","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-t-o / expires-in //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/expiresIn</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/expires-in/#expiresin","title":"expiresIn","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"expires_in\")</p> <p>val expiresIn: Long? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/to-access-token/","title":"To access token","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-t-o / to-access-token //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/toAccessToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/to-access-token/#toaccesstoken","title":"toAccessToken","text":"<p>[androidJvm] fun toAccessToken(): AccessToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/type/","title":"Type","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-t-o / type //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/type</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/type/#type","title":"type","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"type\")</p> <p>val type: AccessTokenTypeTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-t-o / -companion //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-companion/#functions","title":"Functions","text":"Name Summary from [androidJvm]fun from(accessToken: AccessToken): AccessTokenTO"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-companion/from/","title":"From","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-t-o / -companion / from //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/Companion/from</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-companion/from/#from","title":"from","text":"<p>[androidJvm] fun from(accessToken: AccessToken): AccessTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-type-t-o //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTypeTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/#accesstokentypeto","title":"AccessTokenTypeTO","text":"<p>[androidJvm] @Serializable</p> <p>enum AccessTokenTypeTO : Enum&lt;AccessTokenTypeTO&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/#entries","title":"Entries","text":"DPoP [androidJvm]DPoP Bearer [androidJvm]Bearer"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/#properties","title":"Properties","text":"Name Summary entries [androidJvm]val entries: EnumEntries&lt;AccessTokenTypeTO&gt;Returns a representation of an immutable list of all enum entries, in the order they're declared. name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/#functions","title":"Functions","text":"Name Summary valueOf [androidJvm]fun valueOf(value: String): AccessTokenTypeTOReturns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) values [androidJvm]fun values(): Array&lt;AccessTokenTypeTO&gt;Returns an array containing the constants of this enum type, in the order they're declared."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/entries/","title":"Entries","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-type-t-o / entries //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTypeTO/entries</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/entries/#entries","title":"entries","text":"<p>[androidJvm] val entries: EnumEntries&lt;AccessTokenTypeTO&gt;</p> <p>Returns a representation of an immutable list of all enum entries, in the order they're declared.</p> <p>This method may be used to iterate over the enum entries.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/value-of/","title":"Value of","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-type-t-o / value-of //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTypeTO/valueOf</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm] fun valueOf(value: String): AccessTokenTypeTO</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/value-of/#throws","title":"Throws","text":"IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/values/","title":"Values","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-type-t-o / values //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTypeTO/values</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/values/#values","title":"values","text":"<p>[androidJvm] fun values(): Array&lt;AccessTokenTypeTO&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-bearer/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-type-t-o / -bearer //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTypeTO/Bearer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-bearer/#bearer","title":"Bearer","text":"<p>[androidJvm] Bearer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-bearer/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-d-po-p/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -access-token-type-t-o / -d-po-p //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTypeTO/DPoP</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-d-po-p/#dpop","title":"DPoP","text":"<p>[androidJvm] DPoP</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-d-po-p/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-create-document-settings-provider/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -create-document-settings-provider //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/CreateDocumentSettingsProvider</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-create-document-settings-provider/#createdocumentsettingsprovider","title":"CreateDocumentSettingsProvider","text":"<p>[androidJvm] fun interface CreateDocumentSettingsProvider</p> <p>The CreateKeySettingsFactory interface is the main entry point to create a new instance of CreateKeySettings required when creating a new com.android.identity.document.Document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-create-document-settings-provider/#functions","title":"Functions","text":"Name Summary provideSettings [androidJvm]abstract fun provideSettings(offeredDocument: Offer.OfferedDocument): CreateDocumentSettings"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-create-document-settings-provider/provide-settings/","title":"Provide settings","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -create-document-settings-provider / provide-settings //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/CreateDocumentSettingsProvider/provideSettings</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-create-document-settings-provider/provide-settings/#providesettings","title":"provideSettings","text":"<p>[androidJvm] abstract fun provideSettings(offeredDocument: Offer.OfferedDocument): CreateDocumentSettings</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/#deferredissuancestoredcontextto","title":"DeferredIssuanceStoredContextTO","text":"<p>[androidJvm] @Serializable</p> <p>data class DeferredIssuanceStoredContextTO(val credentialIssuerId: String, val clientId: String, val clientAttestationJwt: String? = null, val clientAttestationPopDuration: Long? = null, val clientAttestationPopAlgorithm: String? = null, val clientAttestationPopType: String? = null, val clientAttestationPopKeyId: String? = null, val deferredEndpoint: String, val authServerId: String, val tokenEndpoint: String, val dPoPSignerKid: String? = null, val responseEncryptionSpec: JsonObject? = null, val transactionId: String, val accessToken: AccessTokenTO, val refreshToken: RefreshTokenTO? = null, val authorizationTimestamp: Long, val grant: GrantTO)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/#constructors","title":"Constructors","text":"DeferredIssuanceStoredContextTO [androidJvm]constructor(credentialIssuerId: String, clientId: String, clientAttestationJwt: String? = null, clientAttestationPopDuration: Long? = null, clientAttestationPopAlgorithm: String? = null, clientAttestationPopType: String? = null, clientAttestationPopKeyId: String? = null, deferredEndpoint: String, authServerId: String, tokenEndpoint: String, dPoPSignerKid: String? = null, responseEncryptionSpec: JsonObject? = null, transactionId: String, accessToken: AccessTokenTO, refreshToken: RefreshTokenTO? = null, authorizationTimestamp: Long, grant: GrantTO)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/#properties","title":"Properties","text":"Name Summary accessToken [androidJvm]@SerialName(value = \"access_token\")val accessToken: AccessTokenTO authorizationTimestamp [androidJvm]@SerialName(value = \"authorization_timestamp\")val authorizationTimestamp: Long authServerId [androidJvm]@Required@SerialName(value = \"auth_server_id\")val authServerId: String clientAttestationJwt [androidJvm]@SerialName(value = \"client_attestation_jwt\")val clientAttestationJwt: String? = null clientAttestationPopAlgorithm [androidJvm]@SerialName(value = \"client_attestation_pop_alg\")val clientAttestationPopAlgorithm: String? = null clientAttestationPopDuration [androidJvm]@SerialName(value = \"client_attestation_pop_duration\")val clientAttestationPopDuration: Long? = null clientAttestationPopKeyId [androidJvm]@SerialName(value = \"client_attestation_pop_key_id\")val clientAttestationPopKeyId: String? = null clientAttestationPopType [androidJvm]@SerialName(value = \"client_attestation_pop_typ\")val clientAttestationPopType: String? = null clientId [androidJvm]@Required@SerialName(value = \"client_id\")val clientId: String credentialIssuerId [androidJvm]@Required@SerialName(value = \"credential_issuer\")val credentialIssuerId: String deferredEndpoint [androidJvm]@Required@SerialName(value = \"deferred_endpoint\")val deferredEndpoint: String dPoPSignerKid [androidJvm]@SerialName(value = \"dpop_key_id\")val dPoPSignerKid: String? = null grant [androidJvm]@SerialName(value = \"grant\")val grant: GrantTO refreshToken [androidJvm]@SerialName(value = \"refresh_token\")val refreshToken: RefreshTokenTO? = null responseEncryptionSpec [androidJvm]@SerialName(value = \"credential_response_encryption_spec\")val responseEncryptionSpec: JsonObject? = null tokenEndpoint [androidJvm]@Required@SerialName(value = \"token_endpoint\")val tokenEndpoint: String transactionId [androidJvm]@SerialName(value = \"transaction_id\")val transactionId: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/#functions","title":"Functions","text":"Name Summary toDeferredIssuanceStoredContext [androidJvm]fun toDeferredIssuanceStoredContext(clock: Clock, recreatePopSigner: (String) -&gt; PopSigner.Jwt?, recreateClientAttestationPodSigner: (String) -&gt; JWSSigner?): DeferredIssuanceContext"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-deferred-issuance-stored-context-t-o/","title":"deferred issuance stored context t o","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / -deferred-issuance-stored-context-t-o //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/DeferredIssuanceStoredContextTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-deferred-issuance-stored-context-t-o/#deferredissuancestoredcontextto","title":"DeferredIssuanceStoredContextTO","text":"<p>[androidJvm] constructor(credentialIssuerId: String, clientId: String, clientAttestationJwt: String? = null, clientAttestationPopDuration: Long? = null, clientAttestationPopAlgorithm: String? = null, clientAttestationPopType: String? = null, clientAttestationPopKeyId: String? = null, deferredEndpoint: String, authServerId: String, tokenEndpoint: String, dPoPSignerKid: String? = null, responseEncryptionSpec: JsonObject? = null, transactionId: String, accessToken: AccessTokenTO, refreshToken: RefreshTokenTO? = null, authorizationTimestamp: Long, grant: GrantTO)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/access-token/","title":"Access token","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / access-token //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/accessToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/access-token/#accesstoken","title":"accessToken","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"access_token\")</p> <p>val accessToken: AccessTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/auth-server-id/","title":"Auth server id","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / auth-server-id //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/authServerId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/auth-server-id/#authserverid","title":"authServerId","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"auth_server_id\")</p> <p>val authServerId: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/authorization-timestamp/","title":"Authorization timestamp","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / authorization-timestamp //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/authorizationTimestamp</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/authorization-timestamp/#authorizationtimestamp","title":"authorizationTimestamp","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"authorization_timestamp\")</p> <p>val authorizationTimestamp: Long</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-jwt/","title":"Client attestation jwt","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / client-attestation-jwt //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientAttestationJwt</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-jwt/#clientattestationjwt","title":"clientAttestationJwt","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"client_attestation_jwt\")</p> <p>val clientAttestationJwt: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-algorithm/","title":"Client attestation pop algorithm","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / client-attestation-pop-algorithm //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientAttestationPopAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-algorithm/#clientattestationpopalgorithm","title":"clientAttestationPopAlgorithm","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"client_attestation_pop_alg\")</p> <p>val clientAttestationPopAlgorithm: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-duration/","title":"Client attestation pop duration","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / client-attestation-pop-duration //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientAttestationPopDuration</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-duration/#clientattestationpopduration","title":"clientAttestationPopDuration","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"client_attestation_pop_duration\")</p> <p>val clientAttestationPopDuration: Long? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-key-id/","title":"Client attestation pop key id","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / client-attestation-pop-key-id //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientAttestationPopKeyId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-key-id/#clientattestationpopkeyid","title":"clientAttestationPopKeyId","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"client_attestation_pop_key_id\")</p> <p>val clientAttestationPopKeyId: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-type/","title":"Client attestation pop type","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / client-attestation-pop-type //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientAttestationPopType</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-type/#clientattestationpoptype","title":"clientAttestationPopType","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"client_attestation_pop_typ\")</p> <p>val clientAttestationPopType: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-id/","title":"Client id","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / client-id //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-id/#clientid","title":"clientId","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"client_id\")</p> <p>val clientId: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/credential-issuer-id/","title":"Credential issuer id","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / credential-issuer-id //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/credentialIssuerId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/credential-issuer-id/#credentialissuerid","title":"credentialIssuerId","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"credential_issuer\")</p> <p>val credentialIssuerId: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/d-po-p-signer-kid/","title":"D po p signer kid","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / d-po-p-signer-kid //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/dPoPSignerKid</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/d-po-p-signer-kid/#dpopsignerkid","title":"dPoPSignerKid","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"dpop_key_id\")</p> <p>val dPoPSignerKid: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/deferred-endpoint/","title":"Deferred endpoint","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / deferred-endpoint //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/deferredEndpoint</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/deferred-endpoint/#deferredendpoint","title":"deferredEndpoint","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"deferred_endpoint\")</p> <p>val deferredEndpoint: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/grant/","title":"Grant","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / grant //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/grant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/grant/#grant","title":"grant","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"grant\")</p> <p>val grant: GrantTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/refresh-token/","title":"Refresh token","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / refresh-token //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/refreshToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/refresh-token/#refreshtoken","title":"refreshToken","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"refresh_token\")</p> <p>val refreshToken: RefreshTokenTO? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/response-encryption-spec/","title":"Response encryption spec","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / response-encryption-spec //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/responseEncryptionSpec</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/response-encryption-spec/#responseencryptionspec","title":"responseEncryptionSpec","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"credential_response_encryption_spec\")</p> <p>val responseEncryptionSpec: JsonObject? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/to-deferred-issuance-stored-context/","title":"To deferred issuance stored context","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / to-deferred-issuance-stored-context //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/toDeferredIssuanceStoredContext</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/to-deferred-issuance-stored-context/#todeferredissuancestoredcontext","title":"toDeferredIssuanceStoredContext","text":"<p>[androidJvm] fun toDeferredIssuanceStoredContext(clock: Clock, recreatePopSigner: (String) -&gt; PopSigner.Jwt?, recreateClientAttestationPodSigner: (String) -&gt; JWSSigner?): DeferredIssuanceContext</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/token-endpoint/","title":"Token endpoint","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / token-endpoint //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/tokenEndpoint</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/token-endpoint/#tokenendpoint","title":"tokenEndpoint","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"token_endpoint\")</p> <p>val tokenEndpoint: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/transaction-id/","title":"Transaction id","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / transaction-id //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/transactionId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/transaction-id/#transactionid","title":"transactionId","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"transaction_id\")</p> <p>val transactionId: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / -companion //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/#functions","title":"Functions","text":"Name Summary from [androidJvm]fun from(dCtx: DeferredIssuanceContext, dPoPSignerKid: String?, clientAttestationPopKeyId: String?): DeferredIssuanceStoredContextTO ifAttested [androidJvm]fun &lt;A&gt; Client.ifAttested(getter: Client.Attested.() -&gt; A?): A?"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/from/","title":"From","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / -companion / from //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/Companion/from</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/from/#from","title":"from","text":"<p>[androidJvm] fun from(dCtx: DeferredIssuanceContext, dPoPSignerKid: String?, clientAttestationPopKeyId: String?): DeferredIssuanceStoredContextTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/if-attested/","title":"If attested","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issuance-stored-context-t-o / -companion / if-attested //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/Companion/ifAttested</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/if-attested/#ifattested","title":"ifAttested","text":"<p>[androidJvm] fun &lt;A&gt; Client.ifAttested(getter: Client.Attested.() -&gt; A?): A?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/#deferredissueresult","title":"DeferredIssueResult","text":"<p>sealed interface DeferredIssueResult : OpenId4VciResult</p> <p>Result of a deferred document issuance.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/#inheritors","title":"Inheritors","text":"DocumentIssued DocumentFailed DocumentNotReady DocumentExpired"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/#types","title":"Types","text":"Name Summary DocumentExpired [androidJvm]data class DocumentExpired(val document: DeferredDocument) : DeferredIssueResult, DocumentDetailsDocument issuance expired. DocumentFailed [androidJvm]data class DocumentFailed(val document: Document, val cause: Throwable) : DeferredIssueResult, DocumentDetails, OpenId4VciResult.ErroneousDocument issuance failed. DocumentIssued [androidJvm]data class DocumentIssued(val document: IssuedDocument) : DeferredIssueResult, DocumentDetailsDocument issued successfully. DocumentNotReady [androidJvm]data class DocumentNotReady(val document: DeferredDocument) : DeferredIssueResult, DocumentDetailsDocument issuance deferred."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/#properties","title":"Properties","text":"Name Summary docType [androidJvm]abstract val docType: Stringthe document type document [androidJvm]abstract val document: Document documentId [androidJvm]abstract val documentId: DocumentIdthe id of the document name [androidJvm]abstract val name: Stringthe name of the document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/doc-type/","title":"Doc type","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / doc-type //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/docType</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/doc-type/#doctype","title":"docType","text":"<p>[androidJvm] abstract val docType: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/document-id/","title":"Document id","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / document-id //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/documentId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/document-id/#documentid","title":"documentId","text":"<p>[androidJvm] abstract val documentId: DocumentId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/document/","title":"Document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/document/#document","title":"document","text":"<p>[androidJvm] abstract val document: Document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / name //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/name/#name","title":"name","text":"<p>[androidJvm] abstract val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-expired //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentExpired</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/#documentexpired","title":"DocumentExpired","text":"<p>[androidJvm] data class DocumentExpired(val document: DeferredDocument) : DeferredIssueResult, DocumentDetails</p> <p>Document issuance expired.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/#constructors","title":"Constructors","text":"DocumentExpired [androidJvm]constructor(document: DeferredDocument)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/#properties","title":"Properties","text":"Name Summary docType [androidJvm]open override val docType: Stringthe document type document [androidJvm]open override val document: DeferredDocument documentId [androidJvm]open override val documentId: DocumentIdthe id of the document name [androidJvm]open override val name: Stringthe name of the document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/-document-expired/","title":"document expired","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-expired / -document-expired //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentExpired/DocumentExpired</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/-document-expired/#documentexpired","title":"DocumentExpired","text":"<p>[androidJvm] constructor(document: DeferredDocument)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/document/","title":"Document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-expired / document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentExpired/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/document/#document","title":"document","text":"<p>[androidJvm] open override val document: DeferredDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-failed //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentFailed</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/#documentfailed","title":"DocumentFailed","text":"<p>[androidJvm] data class DocumentFailed(val document: Document, val cause: Throwable) : DeferredIssueResult, DocumentDetails, OpenId4VciResult.Erroneous</p> <p>Document issuance failed.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/#constructors","title":"Constructors","text":"DocumentFailed [androidJvm]constructor(document: Document, cause: Throwable)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/#properties","title":"Properties","text":"Name Summary cause [androidJvm]open override val cause: Throwablethe error that caused the failure docType [androidJvm]open override val docType: Stringthe document type document [androidJvm]open override val document: Document documentId [androidJvm]open override val documentId: DocumentIdthe id of the document name [androidJvm]open override val name: Stringthe name of the document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/-document-failed/","title":"document failed","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-failed / -document-failed //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentFailed/DocumentFailed</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/-document-failed/#documentfailed","title":"DocumentFailed","text":"<p>[androidJvm] constructor(document: Document, cause: Throwable)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/cause/","title":"Cause","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-failed / cause //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentFailed/cause</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/cause/#cause","title":"cause","text":"<p>[androidJvm] open override val cause: Throwable</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/document/","title":"Document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-failed / document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentFailed/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/document/#document","title":"document","text":"<p>[androidJvm] open override val document: Document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-issued //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentIssued</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/#documentissued","title":"DocumentIssued","text":"<p>data class DocumentIssued(val document: IssuedDocument) : DeferredIssueResult, DocumentDetails</p> <p>Document issued successfully.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/#see-also","title":"See also","text":"DocumentId for the document id"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/#constructors","title":"Constructors","text":"DocumentIssued [androidJvm]constructor(document: IssuedDocument)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/#properties","title":"Properties","text":"Name Summary docType [androidJvm]open override val docType: Stringthe document type document [androidJvm]open override val document: IssuedDocument documentId [androidJvm]open override val documentId: DocumentIdthe id of the document name [androidJvm]open override val name: Stringthe name of the document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/-document-issued/","title":"document issued","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-issued / -document-issued //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentIssued/DocumentIssued</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/-document-issued/#documentissued","title":"DocumentIssued","text":"<p>[androidJvm] constructor(document: IssuedDocument)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/document/","title":"Document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-issued / document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentIssued/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/document/#document","title":"document","text":"<p>[androidJvm] open override val document: IssuedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-not-ready //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentNotReady</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/#documentnotready","title":"DocumentNotReady","text":"<p>[androidJvm] data class DocumentNotReady(val document: DeferredDocument) : DeferredIssueResult, DocumentDetails</p> <p>Document issuance deferred.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/#constructors","title":"Constructors","text":"DocumentNotReady [androidJvm]constructor(document: DeferredDocument)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/#properties","title":"Properties","text":"Name Summary docType [androidJvm]open override val docType: Stringthe document type document [androidJvm]open override val document: DeferredDocument documentId [androidJvm]open override val documentId: DocumentIdthe id of the document name [androidJvm]open override val name: Stringthe name of the document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/-document-not-ready/","title":"document not ready","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-not-ready / -document-not-ready //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentNotReady/DocumentNotReady</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/-document-not-ready/#documentnotready","title":"DocumentNotReady","text":"<p>[androidJvm] constructor(document: DeferredDocument)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/document/","title":"Document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -deferred-issue-result / -document-not-ready / document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentNotReady/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/document/#document","title":"document","text":"<p>[androidJvm] open override val document: DeferredDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -grant-t-o //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/#grantto","title":"GrantTO","text":"<p>[androidJvm] @Serializable</p> <p>enum GrantTO : Enum&lt;GrantTO&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/#entries","title":"Entries","text":"AuthorizationCode [androidJvm]@SerialName(value = \"authorization_code\")AuthorizationCode PreAuthorizedCodeGrant [androidJvm]@SerialName(value = \"urn:ietf:params:oauth:grant-type:pre-authorized_code\")PreAuthorizedCodeGrant"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/#properties","title":"Properties","text":"Name Summary entries [androidJvm]val entries: EnumEntries&lt;GrantTO&gt;Returns a representation of an immutable list of all enum entries, in the order they're declared. name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/#functions","title":"Functions","text":"Name Summary toGrant [androidJvm]fun toGrant(): Grant valueOf [androidJvm]fun valueOf(value: String): GrantTOReturns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.) values [androidJvm]fun values(): Array&lt;GrantTO&gt;Returns an array containing the constants of this enum type, in the order they're declared."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/entries/","title":"Entries","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -grant-t-o / entries //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/entries</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/entries/#entries","title":"entries","text":"<p>[androidJvm] val entries: EnumEntries&lt;GrantTO&gt;</p> <p>Returns a representation of an immutable list of all enum entries, in the order they're declared.</p> <p>This method may be used to iterate over the enum entries.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/to-grant/","title":"To grant","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -grant-t-o / to-grant //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/toGrant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/to-grant/#togrant","title":"toGrant","text":"<p>[androidJvm] fun toGrant(): Grant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/value-of/","title":"Value of","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -grant-t-o / value-of //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/valueOf</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm] fun valueOf(value: String): GrantTO</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/value-of/#throws","title":"Throws","text":"IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/values/","title":"Values","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -grant-t-o / values //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/values</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/values/#values","title":"values","text":"<p>[androidJvm] fun values(): Array&lt;GrantTO&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-authorization-code/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -grant-t-o / -authorization-code //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/AuthorizationCode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-authorization-code/#authorizationcode","title":"AuthorizationCode","text":"<p>[androidJvm] @SerialName(value = \"authorization_code\")</p> <p>AuthorizationCode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-authorization-code/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-authorization-code/#functions","title":"Functions","text":"Name Summary toGrant [androidJvm]fun toGrant(): Grant"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -grant-t-o / -companion //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-companion/#functions","title":"Functions","text":"Name Summary fromGrant [androidJvm]fun fromGrant(grant: Grant): GrantTO"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-companion/from-grant/","title":"From grant","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -grant-t-o / -companion / from-grant //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/Companion/fromGrant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-companion/from-grant/#fromgrant","title":"fromGrant","text":"<p>[androidJvm] fun fromGrant(grant: Grant): GrantTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-pre-authorized-code-grant/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -grant-t-o / -pre-authorized-code-grant //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/PreAuthorizedCodeGrant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-pre-authorized-code-grant/#preauthorizedcodegrant","title":"PreAuthorizedCodeGrant","text":"<p>[androidJvm] @SerialName(value = \"urn:ietf:params:oauth:grant-type:pre-authorized_code\")</p> <p>PreAuthorizedCodeGrant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-pre-authorized-code-grant/#properties","title":"Properties","text":"Name Summary name [androidJvm]val name: String ordinal [androidJvm]val ordinal: Int"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-pre-authorized-code-grant/#functions","title":"Functions","text":"Name Summary toGrant [androidJvm]fun toGrant(): Grant"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/#issueevent","title":"IssueEvent","text":"<p>sealed interface IssueEvent : OpenId4VciResult</p> <p>Events related to document issuance.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/#inheritors","title":"Inheritors","text":"Started Finished Failure DocumentIssued DocumentFailed DocumentRequiresCreateSettings DocumentRequiresUserAuth DocumentDeferred"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion DocumentDeferred [androidJvm]data class DocumentDeferred(val document: DeferredDocument) : IssueEvent, DocumentDetailsDocument issuance deferred. DocumentFailed [androidJvm]data class DocumentFailed(document: UnsignedDocument, val cause: Throwable) : IssueEvent, DocumentDetails, OpenId4VciResult.ErroneousDocument issuance failed. DocumentIssued [androidJvm]data class DocumentIssued(val document: IssuedDocument) : IssueEvent, DocumentDetailsDocument issued successfully. DocumentRequiresCreateSettings [androidJvm]data class DocumentRequiresCreateSettings(val offeredDocument: Offer.OfferedDocument, val resume: (createDocumentSettings: CreateDocumentSettings) -&gt; Unit, val cancel: (reason: String?) -&gt; Unit) : IssueEventIssuing requires CreateDocumentSettings to create the document that will be issued for the offeredDocument. DocumentRequiresUserAuth [androidJvm]data class DocumentRequiresUserAuth(val document: UnsignedDocument, val signingAlgorithm: Algorithm, val resume: (keyUnlockData: KeyUnlockData) -&gt; Unit, val cancel: (reason: String?) -&gt; Unit) : IssueEvent, DocumentDetailsDocument requires user authentication to unlock the key for signing the proof of possession. Failure [androidJvm]data class Failure(val cause: Throwable) : IssueEvent, OpenId4VciResult.ErroneousThe issuance failed. Finished [androidJvm]data class Finished(val issuedDocuments: List&lt;DocumentId&gt;) : IssueEventThe issuance has finished. Started [androidJvm]data class Started(val total: Int) : IssueEventThe issuance was started."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -companion //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-deferred //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentDeferred</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/#documentdeferred","title":"DocumentDeferred","text":"<p>[androidJvm] data class DocumentDeferred(val document: DeferredDocument) : IssueEvent, DocumentDetails</p> <p>Document issuance deferred.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/#constructors","title":"Constructors","text":"DocumentDeferred [androidJvm]constructor(document: DeferredDocument)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/#properties","title":"Properties","text":"Name Summary docType [androidJvm]open override val docType: String document [androidJvm]val document: DeferredDocumentthe deferred document documentId [androidJvm]open override val documentId: DocumentId name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/-document-deferred/","title":"document deferred","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-deferred / -document-deferred //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentDeferred/DocumentDeferred</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/-document-deferred/#documentdeferred","title":"DocumentDeferred","text":"<p>[androidJvm] constructor(document: DeferredDocument)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/document/","title":"Document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-deferred / document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentDeferred/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/document/#document","title":"document","text":"<p>[androidJvm] val document: DeferredDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-failed //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentFailed</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/#documentfailed","title":"DocumentFailed","text":"<p>[androidJvm] data class DocumentFailed(document: UnsignedDocument, val cause: Throwable) : IssueEvent, DocumentDetails, OpenId4VciResult.Erroneous</p> <p>Document issuance failed.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/#constructors","title":"Constructors","text":"DocumentFailed [androidJvm]constructor(document: UnsignedDocument, cause: Throwable)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/#properties","title":"Properties","text":"Name Summary cause [androidJvm]open override val cause: Throwablethe error that caused the failure docType [androidJvm]open override val docType: String documentId [androidJvm]open override val documentId: DocumentId name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/-document-failed/","title":"document failed","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-failed / -document-failed //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentFailed/DocumentFailed</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/-document-failed/#documentfailed","title":"DocumentFailed","text":"<p>[androidJvm] constructor(document: UnsignedDocument, cause: Throwable)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/cause/","title":"Cause","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-failed / cause //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentFailed/cause</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/cause/#cause","title":"cause","text":"<p>[androidJvm] open override val cause: Throwable</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-issued //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentIssued</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/#documentissued","title":"DocumentIssued","text":"<p>data class DocumentIssued(val document: IssuedDocument) : IssueEvent, DocumentDetails</p> <p>Document issued successfully.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/#see-also","title":"See also","text":"DocumentId for the document id"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/#constructors","title":"Constructors","text":"DocumentIssued [androidJvm]constructor(document: IssuedDocument)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/#properties","title":"Properties","text":"Name Summary docType [androidJvm]open override val docType: String document [androidJvm]val document: IssuedDocumentthe issued document documentId [androidJvm]open override val documentId: DocumentId name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/-document-issued/","title":"document issued","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-issued / -document-issued //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentIssued/DocumentIssued</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/-document-issued/#documentissued","title":"DocumentIssued","text":"<p>[androidJvm] constructor(document: IssuedDocument)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/document/","title":"Document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-issued / document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentIssued/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/document/#document","title":"document","text":"<p>[androidJvm] val document: IssuedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-create-settings //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresCreateSettings</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/#documentrequirescreatesettings","title":"DocumentRequiresCreateSettings","text":"<p>[androidJvm] data class DocumentRequiresCreateSettings(val offeredDocument: Offer.OfferedDocument, val resume: (createDocumentSettings: CreateDocumentSettings) -&gt; Unit, val cancel: (reason: String?) -&gt; Unit) : IssueEvent</p> <p>Issuing requires CreateDocumentSettings to create the document that will be issued for the offeredDocument.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/#constructors","title":"Constructors","text":"DocumentRequiresCreateSettings [androidJvm]constructor(offeredDocument: Offer.OfferedDocument, resume: (createDocumentSettings: CreateDocumentSettings) -&gt; Unit, cancel: (reason: String?) -&gt; Unit)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/#properties","title":"Properties","text":"Name Summary cancel [androidJvm]val cancel: (reason: String?) -&gt; Unitthe callback to cancel the issuance with an optional reason offeredDocument [androidJvm]val offeredDocument: Offer.OfferedDocumentthe offered document resume [androidJvm]val resume: (createDocumentSettings: CreateDocumentSettings) -&gt; Unitthe callback to resume the issuance with the CreateDocumentSettings that will be used to create the document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/-document-requires-create-settings/","title":"document requires create settings","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-create-settings / -document-requires-create-settings //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresCreateSettings/DocumentRequiresCreateSettings</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/-document-requires-create-settings/#documentrequirescreatesettings","title":"DocumentRequiresCreateSettings","text":"<p>[androidJvm] constructor(offeredDocument: Offer.OfferedDocument, resume: (createDocumentSettings: CreateDocumentSettings) -&gt; Unit, cancel: (reason: String?) -&gt; Unit)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/cancel/","title":"Cancel","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-create-settings / cancel //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresCreateSettings/cancel</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/cancel/#cancel","title":"cancel","text":"<p>[androidJvm] val cancel: (reason: String?) -&gt; Unit</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/offered-document/","title":"Offered document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-create-settings / offered-document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresCreateSettings/offeredDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/offered-document/#offereddocument","title":"offeredDocument","text":"<p>[androidJvm] val offeredDocument: Offer.OfferedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/resume/","title":"Resume","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-create-settings / resume //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresCreateSettings/resume</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/resume/#resume","title":"resume","text":"<p>[androidJvm] val resume: (createDocumentSettings: CreateDocumentSettings) -&gt; Unit</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-user-auth //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/#documentrequiresuserauth","title":"DocumentRequiresUserAuth","text":"<p>[androidJvm] data class DocumentRequiresUserAuth(val document: UnsignedDocument, val signingAlgorithm: Algorithm, val resume: (keyUnlockData: KeyUnlockData) -&gt; Unit, val cancel: (reason: String?) -&gt; Unit) : IssueEvent, DocumentDetails</p> <p>Document requires user authentication to unlock the key for signing the proof of possession.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/#constructors","title":"Constructors","text":"DocumentRequiresUserAuth [androidJvm]constructor(document: UnsignedDocument, signingAlgorithm: Algorithm, resume: (keyUnlockData: KeyUnlockData) -&gt; Unit, cancel: (reason: String?) -&gt; Unit)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/#properties","title":"Properties","text":"Name Summary cancel [androidJvm]val cancel: (reason: String?) -&gt; Unitthe callback to cancel the issuance with an optional reason docType [androidJvm]open override val docType: String document [androidJvm]val document: UnsignedDocumentthe document that requires user authentication documentId [androidJvm]open override val documentId: DocumentId name [androidJvm]open override val name: String resume [androidJvm]val resume: (keyUnlockData: KeyUnlockData) -&gt; Unitthe callback to resume the issuance with the KeyUnlockData that will be used to unlock the key signingAlgorithm [androidJvm]val signingAlgorithm: Algorithm"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/-document-requires-user-auth/","title":"document requires user auth","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-user-auth / -document-requires-user-auth //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth/DocumentRequiresUserAuth</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/-document-requires-user-auth/#documentrequiresuserauth","title":"DocumentRequiresUserAuth","text":"<p>[androidJvm] constructor(document: UnsignedDocument, signingAlgorithm: Algorithm, resume: (keyUnlockData: KeyUnlockData) -&gt; Unit, cancel: (reason: String?) -&gt; Unit)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/cancel/","title":"Cancel","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-user-auth / cancel //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth/cancel</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/cancel/#cancel","title":"cancel","text":"<p>[androidJvm] val cancel: (reason: String?) -&gt; Unit</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/document/","title":"Document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-user-auth / document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/document/#document","title":"document","text":"<p>[androidJvm] val document: UnsignedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/resume/","title":"Resume","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-user-auth / resume //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth/resume</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/resume/#resume","title":"resume","text":"<p>[androidJvm] val resume: (keyUnlockData: KeyUnlockData) -&gt; Unit</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/signing-algorithm/","title":"Signing algorithm","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -document-requires-user-auth / signing-algorithm //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth/signingAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/signing-algorithm/#signingalgorithm","title":"signingAlgorithm","text":"<p>[androidJvm] val signingAlgorithm: Algorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -failure //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Failure</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/#failure","title":"Failure","text":"<p>[androidJvm] data class Failure(val cause: Throwable) : IssueEvent, OpenId4VciResult.Erroneous</p> <p>The issuance failed.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/#constructors","title":"Constructors","text":"Failure [androidJvm]constructor(cause: Throwable)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/#properties","title":"Properties","text":"Name Summary cause [androidJvm]open override val cause: Throwablethe error that caused the failure"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/-failure/","title":"failure","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -failure / -failure //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Failure/Failure</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/-failure/#failure","title":"Failure","text":"<p>[androidJvm] constructor(cause: Throwable)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/cause/","title":"Cause","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -failure / cause //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Failure/cause</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/cause/#cause","title":"cause","text":"<p>[androidJvm] open override val cause: Throwable</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -finished //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Finished</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/#finished","title":"Finished","text":"<p>data class Finished(val issuedDocuments: List&lt;DocumentId&gt;) : IssueEvent</p> <p>The issuance has finished.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/#see-also","title":"See also","text":"DocumentId for the document id"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/#constructors","title":"Constructors","text":"Finished [androidJvm]constructor(issuedDocuments: List&lt;DocumentId&gt;)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/#properties","title":"Properties","text":"Name Summary issuedDocuments [androidJvm]val issuedDocuments: List&lt;DocumentId&gt;the ids of the issued documents"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/-finished/","title":"finished","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -finished / -finished //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Finished/Finished</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/-finished/#finished","title":"Finished","text":"<p>[androidJvm] constructor(issuedDocuments: List&lt;DocumentId&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/issued-documents/","title":"Issued documents","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -finished / issued-documents //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Finished/issuedDocuments</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/issued-documents/#issueddocuments","title":"issuedDocuments","text":"<p>[androidJvm] val issuedDocuments: List&lt;DocumentId&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -started //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Started</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/#started","title":"Started","text":"<p>[androidJvm] data class Started(val total: Int) : IssueEvent</p> <p>The issuance was started.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/#constructors","title":"Constructors","text":"Started [androidJvm]constructor(total: Int)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/#properties","title":"Properties","text":"Name Summary total [androidJvm]val total: Intthe total number of documents to issue"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/-started/","title":"started","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -started / -started //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Started/Started</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/-started/#started","title":"Started","text":"<p>[androidJvm] constructor(total: Int)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/total/","title":"Total","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -issue-event / -started / total //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Started/total</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/total/#total","title":"total","text":"<p>[androidJvm] val total: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/#offer","title":"Offer","text":"<p>[androidJvm] data class Offer(val credentialOffer: CredentialOffer)</p> <p>Represents an offer of credentials from an issuer.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/#constructors","title":"Constructors","text":"Offer [androidJvm]constructor(credentialOffer: CredentialOffer)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/#types","title":"Types","text":"Name Summary OfferedDocument [androidJvm]data class OfferedDocument(val offer: Offer, val configurationIdentifier: CredentialConfigurationIdentifier, val configuration: CredentialConfiguration)Represents an offered document part of an Offer."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/#properties","title":"Properties","text":"Name Summary credentialOffer [androidJvm]val credentialOffer: CredentialOffercredential offer issuerMetadata [androidJvm]val issuerMetadata: CredentialIssuerMetadataissuer metadata offeredDocuments [androidJvm]val offeredDocuments: List&lt;Offer.OfferedDocument&gt;offered documents txCodeSpec [androidJvm]val txCodeSpec: TxCode?offered documents"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offer/","title":"offer","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offer //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/Offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offer/#offer","title":"Offer","text":"<p>[androidJvm] constructor(credentialOffer: CredentialOffer)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/credential-offer/","title":"Credential offer","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / credential-offer //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/credentialOffer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/credential-offer/#credentialoffer","title":"credentialOffer","text":"<p>[androidJvm] val credentialOffer: CredentialOffer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/issuer-metadata/","title":"Issuer metadata","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / issuer-metadata //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/issuerMetadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/issuer-metadata/#issuermetadata","title":"issuerMetadata","text":"<p>[androidJvm] val issuerMetadata: CredentialIssuerMetadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/offered-documents/","title":"Offered documents","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / offered-documents //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/offeredDocuments</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/offered-documents/#offereddocuments","title":"offeredDocuments","text":"<p>[androidJvm] val offeredDocuments: List&lt;Offer.OfferedDocument&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/tx-code-spec/","title":"Tx code spec","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / tx-code-spec //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/txCodeSpec</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/tx-code-spec/#txcodespec","title":"txCodeSpec","text":"<p>[androidJvm] val txCodeSpec: TxCode?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/#offereddocument","title":"OfferedDocument","text":"<p>[androidJvm] data class OfferedDocument(val offer: Offer, val configurationIdentifier: CredentialConfigurationIdentifier, val configuration: CredentialConfiguration)</p> <p>Represents an offered document part of an Offer.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/#constructors","title":"Constructors","text":"OfferedDocument [androidJvm]constructor(offer: Offer, configurationIdentifier: CredentialConfigurationIdentifier, configuration: CredentialConfiguration)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/#properties","title":"Properties","text":"Name Summary configuration [androidJvm]val configuration: CredentialConfigurationcredential configuration configurationIdentifier [androidJvm]val configurationIdentifier: CredentialConfigurationIdentifiercredential configuration identifier documentFormat [androidJvm]val documentFormat: DocumentFormat? offer [androidJvm]val offer: OfferOffer instance"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/#functions","title":"Functions","text":"Name Summary extractDocumentMetaData [androidJvm]fun Offer.OfferedDocument.extractDocumentMetaData(): DocumentMetaData"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/-offered-document/","title":"offered document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document / -offered-document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/OfferedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/-offered-document/#offereddocument","title":"OfferedDocument","text":"<p>[androidJvm] constructor(offer: Offer, configurationIdentifier: CredentialConfigurationIdentifier, configuration: CredentialConfiguration)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/configuration-identifier/","title":"Configuration identifier","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document / configuration-identifier //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/configurationIdentifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/configuration-identifier/#configurationidentifier","title":"configurationIdentifier","text":"<p>[androidJvm] val configurationIdentifier: CredentialConfigurationIdentifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/configuration/","title":"Configuration","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document / configuration //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/configuration</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/configuration/#configuration","title":"configuration","text":"<p>[androidJvm] val configuration: CredentialConfiguration</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/document-format/","title":"Document format","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document / document-format //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/documentFormat</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/document-format/#documentformat","title":"documentFormat","text":"<p>[androidJvm] val documentFormat: DocumentFormat?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/offer/","title":"Offer","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer / -offered-document / offer //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/offer/#offer","title":"offer","text":"<p>[androidJvm] val offer: Offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer-result //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/#offerresult","title":"OfferResult","text":"<p>sealed interface OfferResult : OpenId4VciResult</p> <p>The result of an offer operation.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/#inheritors","title":"Inheritors","text":"Success Failure"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/#types","title":"Types","text":"Name Summary Failure [androidJvm]data class Failure(val cause: Throwable) : OfferResult, OpenId4VciResult.ErroneousThe offer failed. Success [androidJvm]data class Success(val offer: Offer) : OfferResultThe offer was successful."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer-result / -failure //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult/Failure</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/#failure","title":"Failure","text":"<p>[androidJvm] data class Failure(val cause: Throwable) : OfferResult, OpenId4VciResult.Erroneous</p> <p>The offer failed.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/#constructors","title":"Constructors","text":"Failure [androidJvm]constructor(cause: Throwable)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/#properties","title":"Properties","text":"Name Summary cause [androidJvm]open override val cause: Throwablethe error that caused the failure"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/-failure/","title":"failure","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer-result / -failure / -failure //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult/Failure/Failure</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/-failure/#failure","title":"Failure","text":"<p>[androidJvm] constructor(cause: Throwable)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/cause/","title":"Cause","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer-result / -failure / cause //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult/Failure/cause</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/cause/#cause","title":"cause","text":"<p>[androidJvm] open override val cause: Throwable</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer-result / -success //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult/Success</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/#success","title":"Success","text":"<p>[androidJvm] data class Success(val offer: Offer) : OfferResult</p> <p>The offer was successful.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/#constructors","title":"Constructors","text":"Success [androidJvm]constructor(offer: Offer)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/#properties","title":"Properties","text":"Name Summary offer [androidJvm]val offer: Offerthe offer"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/-success/","title":"success","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer-result / -success / -success //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult/Success/Success</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/-success/#success","title":"Success","text":"<p>[androidJvm] constructor(offer: Offer)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/offer/","title":"Offer","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -offer-result / -success / offer //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult/Success/offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/offer/#offer","title":"offer","text":"<p>[androidJvm] val offer: Offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/#openid4vcimanager","title":"OpenId4VciManager","text":"<p>interface OpenId4VciManager</p> <p>OpenId4VciManager is the main entry point to issue documents using the OpenId4Vci protocol It provides methods to issue documents using a document type or an offer, and to resolve an offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/#see-also","title":"See also","text":"OpenId4VciManager.Config for the configuration options"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/#types","title":"Types","text":"Name Summary Builder [androidJvm]class Builder(context: Context)Builder to create an instance of OpenId4VciManager Companion [androidJvm]object Companion Config [androidJvm]data class Config@JvmOverloadsconstructor(val issuerUrl: String, val clientId: String, val authFlowRedirectionURI: String, val useDPoPIfSupported: Boolean = true, val parUsage: Int = IF_SUPPORTED)Configuration for the OpenId4Vci issuer OnDeferredIssueResult [androidJvm]fun interface OnDeferredIssueResult : OpenId4VciManager.OnResult&lt;DeferredIssueResult&gt; Callback to be called when a deferred document is issued OnIssueEvent [androidJvm]fun interface OnIssueEvent : OpenId4VciManager.OnResult&lt;IssueEvent&gt; Callback to be called when a document is issued OnResolvedOffer [androidJvm]fun interface OnResolvedOffer : OpenId4VciManager.OnResult&lt;OfferResult&gt; Callback to be called when an offer is resolved OnResult [androidJvm]fun interface OnResult&lt;T : OpenId4VciResult&gt;Callback to be called for OpenId4VciManager.issueDocumentByDocType, OpenId4VciManager.issueDocumentByOffer, OpenId4VciManager.issueDocumentByOfferUri and OpenId4VciManager.resolveDocumentOffer methods"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/#functions","title":"Functions","text":"Name Summary getIssuerMetadata [androidJvm]abstract suspend fun getIssuerMetadata(): Result&lt;CredentialIssuerMetadata&gt;Provides the issuer metadata issueDeferredDocument [androidJvm]abstract fun issueDeferredDocument(deferredDocument: DeferredDocument, executor: Executor? = null, onIssueResult: OpenId4VciManager.OnDeferredIssueResult)Issue a deferred document issueDocumentByConfigurationIdentifier [androidJvm]abstract fun issueDocumentByConfigurationIdentifier(credentialConfigurationId: String, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)Issue a document using a configuration identifier. issueDocumentByDocType [androidJvm]abstract fun issueDocumentByDocType(docType: String, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)Issue a document using a document type issueDocumentByFormat [androidJvm]abstract fun issueDocumentByFormat(format: DocumentFormat, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)Issue a document using a document format issueDocumentByOffer [androidJvm]abstract fun issueDocumentByOffer(offer: Offer, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)Issue a document using an offer issueDocumentByOfferUri [androidJvm]abstract fun issueDocumentByOfferUri(offerUri: String, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)Issue a document using an offer URI resolveDocumentOffer [androidJvm]abstract fun resolveDocumentOffer(offerUri: String, executor: Executor? = null, onResolvedOffer: OpenId4VciManager.OnResolvedOffer)Resolve an offer using OpenId4Vci protocol resumeWithAuthorization [androidJvm]abstract fun resumeWithAuthorization(uri: Uri)abstract fun resumeWithAuthorization(uri: String)Resume the authorization flow after the user has been redirected back to the app"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/get-issuer-metadata/","title":"Get issuer metadata","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / get-issuer-metadata //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/getIssuerMetadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/get-issuer-metadata/#getissuermetadata","title":"getIssuerMetadata","text":"<p>[androidJvm] abstract suspend fun getIssuerMetadata(): Result&lt;CredentialIssuerMetadata&gt;</p> <p>Provides the issuer metadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-deferred-document/","title":"Issue deferred document","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / issue-deferred-document //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDeferredDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-deferred-document/#issuedeferreddocument","title":"issueDeferredDocument","text":"<p>[androidJvm] abstract fun issueDeferredDocument(deferredDocument: DeferredDocument, executor: Executor? = null, onIssueResult: OpenId4VciManager.OnDeferredIssueResult)</p> <p>Issue a deferred document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-deferred-document/#parameters","title":"Parameters","text":"<p>androidJvm</p> deferredDocument the deferred document to issue executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueResult the callback to be called when the document is issued"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-deferred-document/#see-also","title":"See also","text":"OpenId4VciManager.OnDeferredIssueResult on how to handle the result"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-configuration-identifier/","title":"Issue document by configuration identifier","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / issue-document-by-configuration-identifier //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDocumentByConfigurationIdentifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-configuration-identifier/#issuedocumentbyconfigurationidentifier","title":"issueDocumentByConfigurationIdentifier","text":"<p>[androidJvm] abstract fun issueDocumentByConfigurationIdentifier(credentialConfigurationId: String, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)</p> <p>Issue a document using a configuration identifier.</p> <p>The credential configuration identifier can be obtained from the getIssuerMetadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-configuration-identifier/#parameters","title":"Parameters","text":"<p>androidJvm</p> credentialConfigurationId the configuration identifier to issue the document txCode the transaction code to use for pre-authorized issuing executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueEvent the callback to be called when the document is issued"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-configuration-identifier/#see-also","title":"See also","text":"CredentialConfigurationIdentifier for the configuration identifier"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-doc-type/","title":"Issue document by doc type","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / issue-document-by-doc-type //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDocumentByDocType</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-doc-type/#issuedocumentbydoctype","title":"issueDocumentByDocType","text":"<p>[androidJvm] abstract fun issueDocumentByDocType(docType: String, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-doc-type/#deprecated","title":"Deprecated","text":"<p>Use issueDocumentByConfigurationIdentifier or issueDocumentByFormat instead</p> <p>Issue a document using a document type</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-doc-type/#parameters","title":"Parameters","text":"<p>androidJvm</p> docType the document type to issue txCode the transaction code to use for pre-authorized issuing executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueEvent the callback to be called when the document is issued"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-doc-type/#see-also","title":"See also","text":"IssueEvent on how to handle the result"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-format/","title":"Issue document by format","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / issue-document-by-format //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDocumentByFormat</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-format/#issuedocumentbyformat","title":"issueDocumentByFormat","text":"<p>[androidJvm] abstract fun issueDocumentByFormat(format: DocumentFormat, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)</p> <p>Issue a document using a document format</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-format/#parameters","title":"Parameters","text":"<p>androidJvm</p> format the document format to issue txCode the transaction code to use for pre-authorized issuing executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueEvent the callback to be called when the document is issued"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-format/#see-also","title":"See also","text":"DocumentFormat for the available formats"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer-uri/","title":"Issue document by offer uri","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / issue-document-by-offer-uri //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDocumentByOfferUri</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer-uri/#issuedocumentbyofferuri","title":"issueDocumentByOfferUri","text":"<p>[androidJvm] abstract fun issueDocumentByOfferUri(offerUri: String, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)</p> <p>Issue a document using an offer URI</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer-uri/#parameters","title":"Parameters","text":"<p>androidJvm</p> offerUri the offer URI txCode the transaction code to use for pre-authorized issuing executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueEvent the callback to be called when the document is issued. This callback may be called multiple times, each for every document in the offer"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer-uri/#see-also","title":"See also","text":"IssueEvent on how to handle the result"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer/","title":"Issue document by offer","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / issue-document-by-offer //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDocumentByOffer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer/#issuedocumentbyoffer","title":"issueDocumentByOffer","text":"<p>[androidJvm] abstract fun issueDocumentByOffer(offer: Offer, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)</p> <p>Issue a document using an offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer/#parameters","title":"Parameters","text":"<p>androidJvm</p> offer the offer to issue txCode the transaction code to use for pre-authorized issuing executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueEvent the callback to be called when the document is issued. This callback may be called multiple times, each for every document in the offer"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer/#see-also","title":"See also","text":"IssueEvent on how to handle the result"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resolve-document-offer/","title":"Resolve document offer","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / resolve-document-offer //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/resolveDocumentOffer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resolve-document-offer/#resolvedocumentoffer","title":"resolveDocumentOffer","text":"<p>[androidJvm] abstract fun resolveDocumentOffer(offerUri: String, executor: Executor? = null, onResolvedOffer: OpenId4VciManager.OnResolvedOffer)</p> <p>Resolve an offer using OpenId4Vci protocol</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resolve-document-offer/#parameters","title":"Parameters","text":"<p>androidJvm</p> offerUri the offer URI executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onResolvedOffer the callback to be called when the offer is resolved"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resume-with-authorization/","title":"Resume with authorization","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / resume-with-authorization //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/resumeWithAuthorization</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resume-with-authorization/#resumewithauthorization","title":"resumeWithAuthorization","text":"<p>[androidJvm] abstract fun resumeWithAuthorization(uri: Uri)</p> <p>abstract fun resumeWithAuthorization(uri: String)</p> <p>Resume the authorization flow after the user has been redirected back to the app</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resume-with-authorization/#parameters","title":"Parameters","text":"<p>androidJvm</p> uri the uri that contains the authorization code"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resume-with-authorization/#throws","title":"Throws","text":"IllegalStateException if no authorization request to resume"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -builder //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/#builder","title":"Builder","text":"<p>class Builder(context: Context)</p> <p>Builder to create an instance of OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/#parameters","title":"Parameters","text":"<p>androidJvm</p> context the context"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/#constructors","title":"Constructors","text":"Builder [androidJvm]constructor(context: Context)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/#properties","title":"Properties","text":"Name Summary config [androidJvm]var config: OpenId4VciManager.Config?the Config to use documentManager [androidJvm]var documentManager: DocumentManager?the DocumentManager to use ktorHttpClientFactory [androidJvm]var ktorHttpClientFactory: () -&gt; HttpClient?the factory to create the Ktor HTTP client requires user authentication logger [androidJvm]var logger: Logger?the logger to use"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/#functions","title":"Functions","text":"Name Summary build [androidJvm]fun build(): OpenId4VciManagerBuild the OpenId4VciManager config [androidJvm]fun config(config: OpenId4VciManager.Config): OpenId4VciManager.BuilderSet the Config to use documentManager [androidJvm]fun documentManager(documentManager: DocumentManager): OpenId4VciManager.BuilderSet the DocumentManager to use ktorHttpClientFactory [androidJvm]fun ktorHttpClientFactory(factory: () -&gt; HttpClient): OpenId4VciManager.BuilderOverride the Ktor HTTP client factory logger [androidJvm]fun logger(logger: Logger): OpenId4VciManager.BuilderSet the logger to use"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/-builder/","title":"builder","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -builder / -builder //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/-builder/#builder","title":"Builder","text":"<p>[androidJvm] constructor(context: Context)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/-builder/#parameters","title":"Parameters","text":"<p>androidJvm</p> context the context"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/build/","title":"Build","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -builder / build //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/build</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/build/#build","title":"build","text":"<p>[androidJvm] fun build(): OpenId4VciManager</p> <p>Build the OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/build/#return","title":"Return","text":"<p>the OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/build/#throws","title":"Throws","text":"IllegalStateException if config or documentManager is not set"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/config/","title":"Config","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -builder / config //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/config/#config","title":"config","text":"<p>[androidJvm] fun config(config: OpenId4VciManager.Config): OpenId4VciManager.Builder</p> <p>Set the Config to use</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/config/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/config/#parameters","title":"Parameters","text":"<p>androidJvm</p> config the config <p>[androidJvm] var config: OpenId4VciManager.Config?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/document-manager/","title":"Document manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -builder / document-manager //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/documentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/document-manager/#documentmanager","title":"documentManager","text":"<p>[androidJvm] fun documentManager(documentManager: DocumentManager): OpenId4VciManager.Builder</p> <p>Set the DocumentManager to use</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/document-manager/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/document-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> documentManager the document manager <p>[androidJvm] var documentManager: DocumentManager?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/ktor-http-client-factory/","title":"Ktor http client factory","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -builder / ktor-http-client-factory //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/ktorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/ktor-http-client-factory/#ktorhttpclientfactory","title":"ktorHttpClientFactory","text":"<p>[androidJvm] fun ktorHttpClientFactory(factory: () -&gt; HttpClient): OpenId4VciManager.Builder</p> <p>Override the Ktor HTTP client factory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/ktor-http-client-factory/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/ktor-http-client-factory/#parameters","title":"Parameters","text":"<p>androidJvm</p> factory the factory to use <p>[androidJvm] var ktorHttpClientFactory: () -&gt; HttpClient?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/logger/","title":"Logger","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -builder / logger //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/logger/#logger","title":"logger","text":"<p>[androidJvm] fun logger(logger: Logger): OpenId4VciManager.Builder</p> <p>Set the logger to use</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/logger/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/logger/#parameters","title":"Parameters","text":"<p>androidJvm</p> logger the logger <p>[androidJvm] var logger: Logger?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -companion //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-companion/#functions","title":"Functions","text":"Name Summary invoke [androidJvm]operator fun invoke(context: Context, block: OpenId4VciManager.Builder.() -&gt; Unit): OpenId4VciManagerCreate an instance of OpenId4VciManager"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-companion/invoke/","title":"Invoke","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -companion / invoke //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(context: Context, block: OpenId4VciManager.Builder.() -&gt; Unit): OpenId4VciManager</p> <p>Create an instance of OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/#config","title":"Config","text":"<p>[androidJvm] data class Config@JvmOverloadsconstructor(val issuerUrl: String, val clientId: String, val authFlowRedirectionURI: String, val useDPoPIfSupported: Boolean = true, val parUsage: Int = IF_SUPPORTED)</p> <p>Configuration for the OpenId4Vci issuer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/#constructors","title":"Constructors","text":"Config [androidJvm]@JvmOverloadsconstructor(issuerUrl: String, clientId: String, authFlowRedirectionURI: String, useDPoPIfSupported: Boolean = true, parUsage: Int = IF_SUPPORTED)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/#types","title":"Types","text":"Name Summary Builder [androidJvm]class BuilderBuilder for Config Companion [androidJvm]object Companion ParUsage [androidJvm]annotation class ParUsagePAR usage for the OpenId4Vci issuer"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/#properties","title":"Properties","text":"Name Summary authFlowRedirectionURI [androidJvm]val authFlowRedirectionURI: Stringthe redirection URI for the authorization flow clientId [androidJvm]val clientId: Stringthe client id issuerUrl [androidJvm]val issuerUrl: Stringthe issuer url parUsage [androidJvm]val parUsage: Intif PAR should be used useDPoPIfSupported [androidJvm]val useDPoPIfSupported: Boolean = trueflag that if set will enable the use of DPoP JWT"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-config/","title":"config","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -config //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-config/#config","title":"Config","text":"<p>[androidJvm]\\</p> <p>@JvmOverloads</p> <p>constructor(issuerUrl: String, clientId: String, authFlowRedirectionURI: String, useDPoPIfSupported: Boolean = true, parUsage: Int = IF_SUPPORTED)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/auth-flow-redirection-u-r-i/","title":"Auth flow redirection u r i","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / auth-flow-redirection-u-r-i //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/authFlowRedirectionURI</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/auth-flow-redirection-u-r-i/#authflowredirectionuri","title":"authFlowRedirectionURI","text":"<p>[androidJvm] val authFlowRedirectionURI: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/client-id/","title":"Client id","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / client-id //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/clientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/client-id/#clientid","title":"clientId","text":"<p>[androidJvm] val clientId: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/issuer-url/","title":"Issuer url","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / issuer-url //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/issuerUrl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/issuer-url/#issuerurl","title":"issuerUrl","text":"<p>[androidJvm] val issuerUrl: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/par-usage/","title":"Par usage","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / par-usage //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/parUsage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/par-usage/#parusage","title":"parUsage","text":"<p>[androidJvm] val parUsage: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/use-d-po-p-if-supported/","title":"Use d po p if supported","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / use-d-po-p-if-supported //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/useDPoPIfSupported</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/use-d-po-p-if-supported/#usedpopifsupported","title":"useDPoPIfSupported","text":"<p>[androidJvm] val useDPoPIfSupported: Boolean = true</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/#builder","title":"Builder","text":"<p>[androidJvm] class Builder</p> <p>Builder for Config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/#constructors","title":"Constructors","text":"Builder [androidJvm]constructor()"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/#properties","title":"Properties","text":"Name Summary authFlowRedirectionURI [androidJvm]var authFlowRedirectionURI: String?the redirection URI for the authorization flow clientId [androidJvm]var clientId: String?the client id issuerUrl [androidJvm]var issuerUrl: String?the issuer url parUsage [androidJvm]var parUsage: Intif PAR should be used useDPoPIfSupported [androidJvm]var useDPoPIfSupported: Booleanflag that if set will enable the use of DPoP JWT"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/#functions","title":"Functions","text":"Name Summary build [androidJvm]fun build(): OpenId4VciManager.ConfigBuild the Config withAuthFlowRedirectionURI [androidJvm]fun withAuthFlowRedirectionURI(authFlowRedirectionURI: String): OpenId4VciManager.Config.BuilderSet the redirection URI for the authorization flow withClientId [androidJvm]fun withClientId(clientId: String): OpenId4VciManager.Config.BuilderSet the client id withIssuerUrl [androidJvm]fun withIssuerUrl(issuerUrl: String): OpenId4VciManager.Config.BuilderSet the issuer url withParUsage [androidJvm]fun withParUsage(parUsage: Int): OpenId4VciManager.Config.BuilderSet the PAR usage withUseDPoPIfSupported [androidJvm]fun withUseDPoPIfSupported(useDPoPIfSupported: Boolean): OpenId4VciManager.Config.BuilderSet the flag to enable the use of DPoP JWT"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/-builder/","title":"builder","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / -builder //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/-builder/#builder","title":"Builder","text":"<p>[androidJvm] constructor()</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/auth-flow-redirection-u-r-i/","title":"Auth flow redirection u r i","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / auth-flow-redirection-u-r-i //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/authFlowRedirectionURI</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/auth-flow-redirection-u-r-i/#authflowredirectionuri","title":"authFlowRedirectionURI","text":"<p>[androidJvm] var authFlowRedirectionURI: String?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/build/","title":"Build","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / build //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/build</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/build/#build","title":"build","text":"<p>[androidJvm] fun build(): OpenId4VciManager.Config</p> <p>Build the Config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/build/#return","title":"Return","text":"<p>the Config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/client-id/","title":"Client id","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / client-id //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/clientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/client-id/#clientid","title":"clientId","text":"<p>[androidJvm] var clientId: String?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/issuer-url/","title":"Issuer url","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / issuer-url //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/issuerUrl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/issuer-url/#issuerurl","title":"issuerUrl","text":"<p>[androidJvm] var issuerUrl: String?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/par-usage/","title":"Par usage","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / par-usage //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/parUsage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/par-usage/#parusage","title":"parUsage","text":"<p>[androidJvm] var parUsage: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/use-d-po-p-if-supported/","title":"Use d po p if supported","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / use-d-po-p-if-supported //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/useDPoPIfSupported</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/use-d-po-p-if-supported/#usedpopifsupported","title":"useDPoPIfSupported","text":"<p>[androidJvm] var useDPoPIfSupported: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-auth-flow-redirection-u-r-i/","title":"With auth flow redirection u r i","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / with-auth-flow-redirection-u-r-i //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/withAuthFlowRedirectionURI</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-auth-flow-redirection-u-r-i/#withauthflowredirectionuri","title":"withAuthFlowRedirectionURI","text":"<p>[androidJvm] fun withAuthFlowRedirectionURI(authFlowRedirectionURI: String): OpenId4VciManager.Config.Builder</p> <p>Set the redirection URI for the authorization flow</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-auth-flow-redirection-u-r-i/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-auth-flow-redirection-u-r-i/#parameters","title":"Parameters","text":"<p>androidJvm</p> authFlowRedirectionURI the redirection URI"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-client-id/","title":"With client id","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / with-client-id //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/withClientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-client-id/#withclientid","title":"withClientId","text":"<p>[androidJvm] fun withClientId(clientId: String): OpenId4VciManager.Config.Builder</p> <p>Set the client id</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-client-id/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-client-id/#parameters","title":"Parameters","text":"<p>androidJvm</p> clientId the client id"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-issuer-url/","title":"With issuer url","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / with-issuer-url //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/withIssuerUrl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-issuer-url/#withissuerurl","title":"withIssuerUrl","text":"<p>[androidJvm] fun withIssuerUrl(issuerUrl: String): OpenId4VciManager.Config.Builder</p> <p>Set the issuer url</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-issuer-url/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-issuer-url/#parameters","title":"Parameters","text":"<p>androidJvm</p> issuerUrl the issuer url"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-par-usage/","title":"With par usage","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / with-par-usage //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/withParUsage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-par-usage/#withparusage","title":"withParUsage","text":"<p>[androidJvm] fun withParUsage(parUsage: Int): OpenId4VciManager.Config.Builder</p> <p>Set the PAR usage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-par-usage/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-par-usage/#parameters","title":"Parameters","text":"<p>androidJvm</p> parUsage the PAR usage"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-use-d-po-p-if-supported/","title":"With use d po p if supported","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -builder / with-use-d-po-p-if-supported //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/withUseDPoPIfSupported</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-use-d-po-p-if-supported/#withusedpopifsupported","title":"withUseDPoPIfSupported","text":"<p>[androidJvm] fun withUseDPoPIfSupported(useDPoPIfSupported: Boolean): OpenId4VciManager.Config.Builder</p> <p>Set the flag to enable the use of DPoP JWT</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-use-d-po-p-if-supported/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-use-d-po-p-if-supported/#parameters","title":"Parameters","text":"<p>androidJvm</p> useDPoPIfSupported the flag"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -companion //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/#functions","title":"Functions","text":"Name Summary invoke [androidJvm]operator fun invoke(block: OpenId4VciManager.Config.Builder.() -&gt; Unit): OpenId4VciManager.ConfigCreate a Config instance"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/invoke/","title":"Invoke","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -companion / invoke //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(block: OpenId4VciManager.Config.Builder.() -&gt; Unit): OpenId4VciManager.Config</p> <p>Create a Config instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/invoke/#return","title":"Return","text":"<p>the Config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/invoke/#parameters","title":"Parameters","text":"<p>androidJvm</p> block the builder block"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -par-usage //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/ParUsage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/#parusage","title":"ParUsage","text":"<p>[androidJvm] annotation class ParUsage</p> <p>PAR usage for the OpenId4Vci issuer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -par-usage / -companion //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/ParUsage/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/#properties","title":"Properties","text":"Name Summary IF_SUPPORTED [androidJvm]const val IF_SUPPORTED: Int = 2 NEVER [androidJvm]const val NEVER: Int = 0 REQUIRED [androidJvm]const val REQUIRED: Int = 4"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-i-f_-s-u-p-p-o-r-t-e-d/","title":"i f  s u p p o r t e d","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -par-usage / -companion / -i-f_-s-u-p-p-o-r-t-e-d //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/ParUsage/Companion/IF_SUPPORTED</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-i-f_-s-u-p-p-o-r-t-e-d/#if_supported","title":"IF_SUPPORTED","text":"<p>[androidJvm] const val IF_SUPPORTED: Int = 2</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-n-e-v-e-r/","title":"n e v e r","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -par-usage / -companion / -n-e-v-e-r //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/ParUsage/Companion/NEVER</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-n-e-v-e-r/#never","title":"NEVER","text":"<p>[androidJvm] const val NEVER: Int = 0</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-r-e-q-u-i-r-e-d/","title":"r e q u i r e d","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -config / -par-usage / -companion / -r-e-q-u-i-r-e-d //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/ParUsage/Companion/REQUIRED</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-r-e-q-u-i-r-e-d/#required","title":"REQUIRED","text":"<p>[androidJvm] const val REQUIRED: Int = 4</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-deferred-issue-result/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -on-deferred-issue-result //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/OnDeferredIssueResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-deferred-issue-result/#ondeferredissueresult","title":"OnDeferredIssueResult","text":"<p>[androidJvm] fun interface OnDeferredIssueResult : OpenId4VciManager.OnResult&lt;DeferredIssueResult&gt; </p> <p>Callback to be called when a deferred document is issued</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-deferred-issue-result/#functions","title":"Functions","text":"Name Summary invoke [androidJvm]open operator fun invoke(result: DeferredIssueResult) onResult [androidJvm]abstract fun onResult(result: DeferredIssueResult)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-issue-event/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -on-issue-event //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/OnIssueEvent</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-issue-event/#onissueevent","title":"OnIssueEvent","text":"<p>[androidJvm] fun interface OnIssueEvent : OpenId4VciManager.OnResult&lt;IssueEvent&gt; </p> <p>Callback to be called when a document is issued</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-issue-event/#functions","title":"Functions","text":"Name Summary invoke [androidJvm]open operator fun invoke(result: IssueEvent) onResult [androidJvm]abstract fun onResult(result: IssueEvent)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-resolved-offer/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -on-resolved-offer //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/OnResolvedOffer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-resolved-offer/#onresolvedoffer","title":"OnResolvedOffer","text":"<p>[androidJvm] fun interface OnResolvedOffer : OpenId4VciManager.OnResult&lt;OfferResult&gt; </p> <p>Callback to be called when an offer is resolved</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-resolved-offer/#functions","title":"Functions","text":"Name Summary invoke [androidJvm]open operator fun invoke(result: OfferResult) onResult [androidJvm]abstract fun onResult(result: OfferResult)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -on-result //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/OnResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/#onresult","title":"OnResult","text":"<p>fun interface OnResult&lt;T : OpenId4VciResult&gt;</p> <p>Callback to be called for OpenId4VciManager.issueDocumentByDocType, OpenId4VciManager.issueDocumentByOffer, OpenId4VciManager.issueDocumentByOfferUri and OpenId4VciManager.resolveDocumentOffer methods</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/#inheritors","title":"Inheritors","text":"OnIssueEvent OnResolvedOffer OnDeferredIssueResult"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/#functions","title":"Functions","text":"Name Summary invoke [androidJvm]open operator fun invoke(result: T) onResult [androidJvm]abstract fun onResult(result: T)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/invoke/","title":"Invoke","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -on-result / invoke //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/OnResult/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] open operator fun invoke(result: T)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/on-result/","title":"On result","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-manager / -on-result / on-result //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/OnResult/onResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/on-result/#onresult","title":"onResult","text":"<p>[androidJvm] abstract fun onResult(result: T)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-result //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/#openid4vciresult","title":"OpenId4VciResult","text":"<p>interface OpenId4VciResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/#inheritors","title":"Inheritors","text":"DeferredIssueResult IssueEvent OfferResult"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/#types","title":"Types","text":"Name Summary Erroneous [androidJvm]interface Erroneous"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-result / -erroneous //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciResult/Erroneous</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous/#erroneous","title":"Erroneous","text":"<p>interface Erroneous</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous/#inheritors","title":"Inheritors","text":"DocumentFailed Failure DocumentFailed Failure"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous/#properties","title":"Properties","text":"Name Summary cause [androidJvm]abstract val cause: Throwable"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous/cause/","title":"Cause","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -open-id4-vci-result / -erroneous / cause //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciResult/Erroneous/cause</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous/cause/#cause","title":"cause","text":"<p>[androidJvm] abstract val cause: Throwable</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -refresh-token-t-o //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/#refreshtokento","title":"RefreshTokenTO","text":"<p>[androidJvm] @Serializable</p> <p>data class RefreshTokenTO(val refreshToken: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/#constructors","title":"Constructors","text":"RefreshTokenTO [androidJvm]constructor(refreshToken: String)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/#properties","title":"Properties","text":"Name Summary refreshToken [androidJvm]@Required@SerialName(value = \"refresh_token\")val refreshToken: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/#functions","title":"Functions","text":"Name Summary toRefreshToken [androidJvm]fun toRefreshToken(): RefreshToken"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-refresh-token-t-o/","title":"refresh token t o","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -refresh-token-t-o / -refresh-token-t-o //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO/RefreshTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-refresh-token-t-o/#refreshtokento","title":"RefreshTokenTO","text":"<p>[androidJvm] constructor(refreshToken: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/refresh-token/","title":"Refresh token","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -refresh-token-t-o / refresh-token //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO/refreshToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/refresh-token/#refreshtoken","title":"refreshToken","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"refresh_token\")</p> <p>val refreshToken: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/to-refresh-token/","title":"To refresh token","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -refresh-token-t-o / to-refresh-token //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO/toRefreshToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/to-refresh-token/#torefreshtoken","title":"toRefreshToken","text":"<p>[androidJvm] fun toRefreshToken(): RefreshToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -refresh-token-t-o / -companion //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-companion/#functions","title":"Functions","text":"Name Summary from [androidJvm]fun from(refreshToken: RefreshToken): RefreshTokenTO"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-companion/from/","title":"From","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci / -refresh-token-t-o / -companion / from //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO/Companion/from</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-companion/from/#from","title":"from","text":"<p>[androidJvm] fun from(refreshToken: RefreshToken): RefreshTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci.transformations //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/#functions","title":"Functions","text":"Name Summary extractDocumentMetaData [androidJvm]fun Offer.OfferedDocument.extractDocumentMetaData(): DocumentMetaData"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/extract-document-meta-data/","title":"Extract document meta data","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.issue.openid4vci.transformations / extract-document-meta-data //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/extractDocumentMetaData</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/extract-document-meta-data/#extractdocumentmetadata","title":"extractDocumentMetaData","text":"<p>[androidJvm] fun Offer.OfferedDocument.extractDocumentMetaData(): DocumentMetaData</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging //wallet-core/eu.europa.ec.eudi.wallet.logging</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/#types","title":"Types","text":"Name Summary Logger [androidJvm]fun interface LoggerLogger interface for the EudiWallet"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/#logger","title":"Logger","text":"<p>[androidJvm] fun interface Logger</p> <p>Logger interface for the EudiWallet</p> <p>Implementors can provide their own logging mechanism by implementing this interface</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/#types","title":"Types","text":"Name Summary Companion [androidJvm]object CompanionCompanion object for the Logger interface Level [androidJvm]annotation class LevelLog level annotation for configuring logging with EudiWalletConfig.configureLogging Record [androidJvm]data class Record(val level: Int, val instant: Instant = Instant.now(), val message: String, val thrown: Throwable? = null, val sourceClassName: String? = null, val sourceMethod: String? = null)Log record"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/#functions","title":"Functions","text":"Name Summary log [androidJvm]abstract fun log(record: Logger.Record)Log a record"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/log/","title":"Log","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / log //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/log</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/log/#log","title":"log","text":"<p>[androidJvm] abstract fun log(record: Logger.Record)</p> <p>Log a record</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/log/#parameters","title":"Parameters","text":"<p>androidJvm</p> record the record to log"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/log/#see-also","title":"See also","text":"Logger.Record"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -companion //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p> <p>Companion object for the Logger interface</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/#properties","title":"Properties","text":"Name Summary LEVEL_DEBUG [androidJvm]const val LEVEL_DEBUG: Int = 3the log level DEBUG (errors, info and debug) LEVEL_ERROR [androidJvm]const val LEVEL_ERROR: Int = 1the log level ERROR (only errors) LEVEL_INFO [androidJvm]const val LEVEL_INFO: Int = 2the log level INFO (errors and info) OFF [androidJvm]const val OFF: Int = 0the log level OFF (no logging)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/#functions","title":"Functions","text":"Name Summary invoke [androidJvm]operator fun invoke(config: EudiWalletConfig): LoggerConstruct a default instance of Logger with the provided EudiWalletConfig"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-d-e-b-u-g/","title":"l e v e l  d e b u g","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -companion / -l-e-v-e-l_-d-e-b-u-g //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion/LEVEL_DEBUG</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-d-e-b-u-g/#level_debug","title":"LEVEL_DEBUG","text":"<p>[androidJvm] const val LEVEL_DEBUG: Int = 3</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-e-r-r-o-r/","title":"l e v e l  e r r o r","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -companion / -l-e-v-e-l_-e-r-r-o-r //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion/LEVEL_ERROR</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-e-r-r-o-r/#level_error","title":"LEVEL_ERROR","text":"<p>[androidJvm] const val LEVEL_ERROR: Int = 1</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-i-n-f-o/","title":"l e v e l  i n f o","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -companion / -l-e-v-e-l_-i-n-f-o //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion/LEVEL_INFO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-i-n-f-o/#level_info","title":"LEVEL_INFO","text":"<p>[androidJvm] const val LEVEL_INFO: Int = 2</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-o-f-f/","title":"o f f","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -companion / -o-f-f //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion/OFF</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-o-f-f/#off","title":"OFF","text":"<p>[androidJvm] const val OFF: Int = 0</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/invoke/","title":"Invoke","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -companion / invoke //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(config: EudiWalletConfig): Logger</p> <p>Construct a default instance of Logger with the provided EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-level/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -level //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Level</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-level/#level","title":"Level","text":"<p>[androidJvm] annotation class Level</p> <p>Log level annotation for configuring logging with EudiWalletConfig.configureLogging</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -record //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/#record","title":"Record","text":"<p>[androidJvm] data class Record(val level: Int, val instant: Instant = Instant.now(), val message: String, val thrown: Throwable? = null, val sourceClassName: String? = null, val sourceMethod: String? = null)</p> <p>Log record</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/#constructors","title":"Constructors","text":"Record [androidJvm]constructor(level: Int, instant: Instant = Instant.now(), message: String, thrown: Throwable? = null, sourceClassName: String? = null, sourceMethod: String? = null)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/#properties","title":"Properties","text":"Name Summary instant [androidJvm]val instant: Instantthe instant the log was created level [androidJvm]val level: Intthe log level message [androidJvm]val message: Stringthe log message sourceClassName [androidJvm]val sourceClassName: String? = nullthe source class name sourceMethod [androidJvm]val sourceMethod: String? = nullthe source method name thrown [androidJvm]val thrown: Throwable? = nullthe throwable that was thrown"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/-record/","title":"record","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -record / -record //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/Record</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/-record/#record","title":"Record","text":"<p>[androidJvm] constructor(level: Int, instant: Instant = Instant.now(), message: String, thrown: Throwable? = null, sourceClassName: String? = null, sourceMethod: String? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/instant/","title":"Instant","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -record / instant //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/instant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/instant/#instant","title":"instant","text":"<p>[androidJvm] val instant: Instant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/level/","title":"Level","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -record / level //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/level</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/level/#level","title":"level","text":"<p>[androidJvm] val level: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/message/","title":"Message","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -record / message //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/message</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/message/#message","title":"message","text":"<p>[androidJvm] val message: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/source-class-name/","title":"Source class name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -record / source-class-name //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/sourceClassName</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/source-class-name/#sourceclassname","title":"sourceClassName","text":"<p>[androidJvm] val sourceClassName: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/source-method/","title":"Source method","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -record / source-method //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/sourceMethod</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/source-method/#sourcemethod","title":"sourceMethod","text":"<p>[androidJvm] val sourceMethod: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/thrown/","title":"Thrown","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.logging / -logger / -record / thrown //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/thrown</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/thrown/#thrown","title":"thrown","text":"<p>[androidJvm] val thrown: Throwable? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation //wallet-core/eu.europa.ec.eudi.wallet.presentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/#types","title":"Types","text":"Name Summary PresentationManager [androidJvm]interface PresentationManager : TransferEvent.Listenable, ReaderTrustStoreAwareThe PresentationManager is responsible for managing the presentation of the wallet's documents to the verifier. The wallet can present the documents in two ways: PresentationManagerImpl [androidJvm]class PresentationManagerImpl@JvmOverloadsconstructor(transferManager: TransferManager, openId4vpManager: OpenId4VpManager? = null, val nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = null) : PresentationManagerImplementation of the PresentationManager interface based on the TransferManager and OpenId4VpManager implementations. SessionTerminationFlag [androidJvm]annotation class SessionTerminationFlagAnnotation that defines the possible flags for session termination."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/#presentationmanager","title":"PresentationManager","text":"<p>interface PresentationManager : TransferEvent.Listenable, ReaderTrustStoreAware</p> <p>The PresentationManager is responsible for managing the presentation of the wallet's documents to the verifier. The wallet can present the documents in two ways:</p> <ul> <li>Proximity presentation: the wallet uses BLE/NFC to present the documents to verifier's device</li> <li>Remote presentation: the wallet sends the documents to the verifier's server</li> </ul> <p>This interface extends TransferEvent.Listenable that allows to listen to the transfer events through which it receives the requests from the verifier. After receiving the eu.europa.ec.eudi.iso18013.transfer.response.RequestProcessor.ProcessedRequest the wallet can generate the response with eu.europa.ec.eudi.iso18013.transfer.response.RequestProcessor.ProcessedRequest.Success.generateResponse and send it back to the verifier by calling sendResponse method.</p> <p>It also extends ReaderTrustStoreAware that allows to set the ReaderTrustStore that is used to verify the authenticity of the reader.</p> <p>It provides also functionality to start the NFC engagement by calling enableNFCEngagement method and stop it by calling disableNFCEngagement method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/#inheritors","title":"Inheritors","text":"EudiWallet EudiWalletImpl PresentationManagerImpl"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/#properties","title":"Properties","text":"Name Summary nfcEngagementServiceClass [androidJvm]abstract val nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? readerTrustStore [androidJvm]abstract var readerTrustStore: ReaderTrustStore?"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/#functions","title":"Functions","text":"Name Summary addTransferEventListener [androidJvm]abstract fun addTransferEventListener(listener: TransferEvent.Listener): TransferEvent.Listenable disableNFCEngagement [androidJvm]abstract fun disableNFCEngagement(activity: ComponentActivity): PresentationManagerDisable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onPause method. enableNFCEngagement [androidJvm]abstract fun enableNFCEngagement(activity: ComponentActivity): PresentationManagerEnable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onResume method. removeAllTransferEventListeners [androidJvm]abstract fun removeAllTransferEventListeners(): TransferEvent.Listenable removeTransferEventListener [androidJvm]abstract fun removeTransferEventListener(listener: TransferEvent.Listener): TransferEvent.Listenable sendResponse [androidJvm]abstract fun sendResponse(response: Response)Send a response to verifier startProximityPresentation [androidJvm]abstract fun startProximityPresentation()Starts the proximity presentation. The QR code is available through the TransferEvent.QrEngagementReady event which is triggered almost immediately after calling this method. The wallet should display the QR code to the verifier in order to start the proximity presentation. startRemotePresentation [androidJvm]abstract fun startRemotePresentation(uri: Uri)Start a remote presentation with the given URI The URI could be either stopProximityPresentation [androidJvm]abstract fun stopProximityPresentation(flags: Int = SEND_SESSION_TERMINATION_MESSAGE)Stops the proximity presentation. Method receives flags that can be used to control the session termination. The available flags are:"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/disable-n-f-c-engagement/","title":"Disable n f c engagement","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager / disable-n-f-c-engagement //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/disableNFCEngagement</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/disable-n-f-c-engagement/#disablenfcengagement","title":"disableNFCEngagement","text":"<p>[androidJvm] abstract fun disableNFCEngagement(activity: ComponentActivity): PresentationManager</p> <p>Disable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onPause method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/disable-n-f-c-engagement/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/disable-n-f-c-engagement/#parameters","title":"Parameters","text":"<p>androidJvm</p> activity the activity"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/enable-n-f-c-engagement/","title":"Enable n f c engagement","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager / enable-n-f-c-engagement //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/enableNFCEngagement</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/enable-n-f-c-engagement/#enablenfcengagement","title":"enableNFCEngagement","text":"<p>[androidJvm] abstract fun enableNFCEngagement(activity: ComponentActivity): PresentationManager</p> <p>Enable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onResume method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/enable-n-f-c-engagement/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/enable-n-f-c-engagement/#parameters","title":"Parameters","text":"<p>androidJvm</p> activity the activity"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/nfc-engagement-service-class/","title":"Nfc engagement service class","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager / nfc-engagement-service-class //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/nfcEngagementServiceClass</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/nfc-engagement-service-class/#nfcengagementserviceclass","title":"nfcEngagementServiceClass","text":"<p>[androidJvm] abstract val nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/send-response/","title":"Send response","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager / send-response //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/sendResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/send-response/#sendresponse","title":"sendResponse","text":"<p>[androidJvm] abstract fun sendResponse(response: Response)</p> <p>Send a response to verifier</p> <p>The response should be generated through the eu.europa.ec.eudi.iso18013.transfer.response.RequestProcessor.ProcessedRequest.Success.generateResponse method and sent back to the verifier by calling this method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/send-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> response the response"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-proximity-presentation/","title":"Start proximity presentation","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager / start-proximity-presentation //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/startProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-proximity-presentation/#startproximitypresentation","title":"startProximityPresentation","text":"<p>[androidJvm] abstract fun startProximityPresentation()</p> <p>Starts the proximity presentation. The QR code is available through the TransferEvent.QrEngagementReady event which is triggered almost immediately after calling this method. The wallet should display the QR code to the verifier in order to start the proximity presentation.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-remote-presentation/","title":"Start remote presentation","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager / start-remote-presentation //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/startRemotePresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-remote-presentation/#startremotepresentation","title":"startRemotePresentation","text":"<p>[androidJvm] abstract fun startRemotePresentation(uri: Uri)</p> <p>Start a remote presentation with the given URI The URI could be either</p> <ul> <li>a REST API request ISO-18013-7</li> <li>a OpenId4Vp request</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-remote-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> uri the URI"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/stop-proximity-presentation/","title":"Stop proximity presentation","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager / stop-proximity-presentation //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/stopProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/stop-proximity-presentation/#stopproximitypresentation","title":"stopProximityPresentation","text":"<p>[androidJvm] abstract fun stopProximityPresentation(flags: Int = SEND_SESSION_TERMINATION_MESSAGE)</p> <p>Stops the proximity presentation. Method receives flags that can be used to control the session termination. The available flags are:</p> <ul> <li>SEND_SESSION_TERMINATION_MESSAGE: sends the session termination message to the verifier</li> <li>SessionTerminationFlag.USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION: uses the transport specific session termination</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/stop-proximity-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> flags the flags"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/#presentationmanagerimpl","title":"PresentationManagerImpl","text":"<p>[androidJvm] class PresentationManagerImpl@JvmOverloadsconstructor(transferManager: TransferManager, openId4vpManager: OpenId4VpManager? = null, val nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = null) : PresentationManager</p> <p>Implementation of the PresentationManager interface based on the TransferManager and OpenId4VpManager implementations.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/#constructors","title":"Constructors","text":"PresentationManagerImpl [androidJvm]@JvmOverloadsconstructor(transferManager: TransferManager, openId4vpManager: OpenId4VpManager? = null, nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = null)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/#properties","title":"Properties","text":"Name Summary nfcEngagementServiceClass [androidJvm]open override val nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = nullthe NFC engagement service class readerTrustStore [androidJvm]open override var readerTrustStore: ReaderTrustStore?the reader trust store"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/#functions","title":"Functions","text":"Name Summary addTransferEventListener [androidJvm]open override fun addTransferEventListener(listener: TransferEvent.Listener): PresentationManagerImpl disableNFCEngagement [androidJvm]open override fun disableNFCEngagement(activity: ComponentActivity): PresentationManagerImplDisable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onPause method. enableNFCEngagement [androidJvm]open override fun enableNFCEngagement(activity: ComponentActivity): PresentationManagerImplEnable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onResume method. removeAllTransferEventListeners [androidJvm]open override fun removeAllTransferEventListeners(): PresentationManagerImpl removeTransferEventListener [androidJvm]open override fun removeTransferEventListener(listener: TransferEvent.Listener): PresentationManagerImpl sendResponse [androidJvm]open override fun sendResponse(response: Response)Send a response to verifier startProximityPresentation [androidJvm]open override fun startProximityPresentation()Starts the proximity presentation. The QR code is available through the TransferEvent.QrEngagementReady event which is triggered almost immediately after calling this method. The wallet should display the QR code to the verifier in order to start the proximity presentation. startRemotePresentation [androidJvm]open override fun startRemotePresentation(uri: Uri)Start a remote presentation with the given URI The URI could be either stopProximityPresentation [androidJvm]open override fun stopProximityPresentation(flags: Int)Stops the proximity presentation. Method receives flags that can be used to control the session termination. The available flags are:"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-presentation-manager-impl/","title":"presentation manager impl","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / -presentation-manager-impl //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/PresentationManagerImpl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-presentation-manager-impl/#presentationmanagerimpl","title":"PresentationManagerImpl","text":"<p>[androidJvm]\\</p> <p>@JvmOverloads</p> <p>constructor(transferManager: TransferManager, openId4vpManager: OpenId4VpManager? = null, nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/add-transfer-event-listener/","title":"Add transfer event listener","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / add-transfer-event-listener //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/addTransferEventListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/add-transfer-event-listener/#addtransfereventlistener","title":"addTransferEventListener","text":"<p>[androidJvm] open override fun addTransferEventListener(listener: TransferEvent.Listener): PresentationManagerImpl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/disable-n-f-c-engagement/","title":"Disable n f c engagement","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / disable-n-f-c-engagement //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/disableNFCEngagement</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/disable-n-f-c-engagement/#disablenfcengagement","title":"disableNFCEngagement","text":"<p>[androidJvm] open override fun disableNFCEngagement(activity: ComponentActivity): PresentationManagerImpl</p> <p>Disable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onPause method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/disable-n-f-c-engagement/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/disable-n-f-c-engagement/#parameters","title":"Parameters","text":"<p>androidJvm</p> activity the activity"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/enable-n-f-c-engagement/","title":"Enable n f c engagement","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / enable-n-f-c-engagement //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/enableNFCEngagement</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/enable-n-f-c-engagement/#enablenfcengagement","title":"enableNFCEngagement","text":"<p>[androidJvm] open override fun enableNFCEngagement(activity: ComponentActivity): PresentationManagerImpl</p> <p>Enable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onResume method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/enable-n-f-c-engagement/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/enable-n-f-c-engagement/#parameters","title":"Parameters","text":"<p>androidJvm</p> activity the activity"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/nfc-engagement-service-class/","title":"Nfc engagement service class","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / nfc-engagement-service-class //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/nfcEngagementServiceClass</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/nfc-engagement-service-class/#nfcengagementserviceclass","title":"nfcEngagementServiceClass","text":"<p>[androidJvm] open override val nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/reader-trust-store/","title":"Reader trust store","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / reader-trust-store //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/readerTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/reader-trust-store/#readertruststore","title":"readerTrustStore","text":"<p>[androidJvm] open override var readerTrustStore: ReaderTrustStore?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/remove-all-transfer-event-listeners/","title":"Remove all transfer event listeners","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / remove-all-transfer-event-listeners //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/removeAllTransferEventListeners</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/remove-all-transfer-event-listeners/#removealltransfereventlisteners","title":"removeAllTransferEventListeners","text":"<p>[androidJvm] open override fun removeAllTransferEventListeners(): PresentationManagerImpl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/remove-transfer-event-listener/","title":"Remove transfer event listener","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / remove-transfer-event-listener //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/removeTransferEventListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/remove-transfer-event-listener/#removetransfereventlistener","title":"removeTransferEventListener","text":"<p>[androidJvm] open override fun removeTransferEventListener(listener: TransferEvent.Listener): PresentationManagerImpl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/send-response/","title":"Send response","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / send-response //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/sendResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/send-response/#sendresponse","title":"sendResponse","text":"<p>[androidJvm] open override fun sendResponse(response: Response)</p> <p>Send a response to verifier</p> <p>The response should be generated through the eu.europa.ec.eudi.iso18013.transfer.response.RequestProcessor.ProcessedRequest.Success.generateResponse method and sent back to the verifier by calling this method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/send-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> response the response"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-proximity-presentation/","title":"Start proximity presentation","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / start-proximity-presentation //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/startProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-proximity-presentation/#startproximitypresentation","title":"startProximityPresentation","text":"<p>[androidJvm] open override fun startProximityPresentation()</p> <p>Starts the proximity presentation. The QR code is available through the TransferEvent.QrEngagementReady event which is triggered almost immediately after calling this method. The wallet should display the QR code to the verifier in order to start the proximity presentation.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-remote-presentation/","title":"Start remote presentation","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / start-remote-presentation //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/startRemotePresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-remote-presentation/#startremotepresentation","title":"startRemotePresentation","text":"<p>[androidJvm] open override fun startRemotePresentation(uri: Uri)</p> <p>Start a remote presentation with the given URI The URI could be either</p> <ul> <li>a REST API request ISO-18013-7</li> <li>a OpenId4Vp request</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-remote-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> uri the URI"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/stop-proximity-presentation/","title":"Stop proximity presentation","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / stop-proximity-presentation //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/stopProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/stop-proximity-presentation/#stopproximitypresentation","title":"stopProximityPresentation","text":"<p>[androidJvm] open override fun stopProximityPresentation(flags: Int)</p> <p>Stops the proximity presentation. Method receives flags that can be used to control the session termination. The available flags are:</p> <ul> <li>SEND_SESSION_TERMINATION_MESSAGE: sends the session termination message to the verifier</li> <li>SessionTerminationFlag.USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION: uses the transport specific session termination</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/stop-proximity-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> flags the flags"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / -companion //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-companion/#properties","title":"Properties","text":"Name Summary MDOC_SCHEME [androidJvm]const val MDOC_SCHEME: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-companion/-m-d-o-c_-s-c-h-e-m-e/","title":"m d o c  s c h e m e","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -presentation-manager-impl / -companion / -m-d-o-c_-s-c-h-e-m-e //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/Companion/MDOC_SCHEME</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-companion/-m-d-o-c_-s-c-h-e-m-e/#mdoc_scheme","title":"MDOC_SCHEME","text":"<p>[androidJvm] const val MDOC_SCHEME: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -session-termination-flag //wallet-core/eu.europa.ec.eudi.wallet.presentation/SessionTerminationFlag</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/#sessionterminationflag","title":"SessionTerminationFlag","text":"<p>annotation class SessionTerminationFlag</p> <p>Annotation that defines the possible flags for session termination.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/#see-also","title":"See also","text":"PresentationManager.stopProximityPresentation"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/#types","title":"Types","text":"Name Summary Companion [androidJvm]object CompanionCompanion object that defines the possible flags for session termination."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -session-termination-flag / -companion //wallet-core/eu.europa.ec.eudi.wallet.presentation/SessionTerminationFlag/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p> <p>Companion object that defines the possible flags for session termination.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/#properties","title":"Properties","text":"Name Summary SEND_SESSION_TERMINATION_MESSAGE [androidJvm]const val SEND_SESSION_TERMINATION_MESSAGE: Intthe flag that indicates that a session termination message should be sent USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION [androidJvm]const val USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION: Intthe flag that indicates that the transport specific session termination should be used"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/-s-e-n-d_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n_-m-e-s-s-a-g-e/","title":"s e n d  s e s s i o n  t e r m i n a t i o n  m e s s a g e","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -session-termination-flag / -companion / -s-e-n-d_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n_-m-e-s-s-a-g-e //wallet-core/eu.europa.ec.eudi.wallet.presentation/SessionTerminationFlag/Companion/SEND_SESSION_TERMINATION_MESSAGE</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/-s-e-n-d_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n_-m-e-s-s-a-g-e/#send_session_termination_message","title":"SEND_SESSION_TERMINATION_MESSAGE","text":"<p>[androidJvm] const val SEND_SESSION_TERMINATION_MESSAGE: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/-u-s-e_-t-r-a-n-s-p-o-r-t_-s-p-e-c-i-f-i-c_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n/","title":"u s e  t r a n s p o r t  s p e c i f i c  s e s s i o n  t e r m i n a t i o n","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.presentation / -session-termination-flag / -companion / -u-s-e_-t-r-a-n-s-p-o-r-t_-s-p-e-c-i-f-i-c_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n //wallet-core/eu.europa.ec.eudi.wallet.presentation/SessionTerminationFlag/Companion/USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/-u-s-e_-t-r-a-n-s-p-o-r-t_-s-p-e-c-i-f-i-c_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n/#use_transport_specific_session_termination","title":"USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION","text":"<p>[androidJvm] const val USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-sd-jwt-vc-item/path/","title":"Path","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openId4vp / -sd-jwt-vc-item / path //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/SdJwtVcItem/path</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-sd-jwt-vc-item/path/#path","title":"path","text":"<p>[androidJvm] val path: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/#types","title":"Types","text":"Name Summary ClientId [androidJvm]typealias ClientId = String ClientIdScheme [androidJvm]sealed interface ClientIdScheme EncryptionAlgorithm [androidJvm]sealed interface EncryptionAlgorithm EncryptionMethod [androidJvm]sealed interface EncryptionMethod Format [androidJvm]sealed interface Format LegalName [androidJvm]typealias LegalName = String OpenId4VpConfig [androidJvm]class OpenId4VpConfigConfiguration for the OpenId4Vp transfer. OpenId4VpManager [androidJvm]class OpenId4VpManager(val config: OpenId4VpConfig, val requestProcessor: OpenId4VpRequestProcessor, var logger: Logger? = null, var listenersExecutor: Executor? = null, val ktorHttpClientFactory: () -&gt; HttpClient? = null) : TransferEvent.Listenable, ReaderTrustStoreAware OpenId4VpRequest [androidJvm]data class OpenId4VpRequest(val resolvedRequestObject: ResolvedRequestObject) : Request OpenId4VpRequestProcessor [androidJvm]class OpenId4VpRequestProcessor(documentManager: DocumentManager, var readerTrustStore: ReaderTrustStore?) : RequestProcessor, ReaderTrustStoreAware OpenId4VpResponse [androidJvm]sealed interface OpenId4VpResponse : Response PreregisteredVerifier [androidJvm]data class PreregisteredVerifier(var clientId: ClientId, var legalName: LegalName, var verifierApi: VerifierApi) ProcessedGenericOpenId4VpRequest [androidJvm]class ProcessedGenericOpenId4VpRequest(documentManager: DocumentManager, resolvedRequestObject: ResolvedRequestObject, inputDescriptorMap: Map&lt;InputDescriptorId, List&lt;DocumentId&gt;&gt;, requestedDocuments: RequestedDocuments, val msoMdocNonce: String?) : RequestProcessor.ProcessedRequest.Success ProcessedMsoMdocOpenId4VpRequest [androidJvm]class ProcessedMsoMdocOpenId4VpRequest(processedDeviceRequest: ProcessedDeviceRequest, resolvedRequestObject: ResolvedRequestObject, val msoMdocNonce: String) : RequestProcessor.ProcessedRequest.Success SdJwtVcItem [androidJvm]class SdJwtVcItem(val path: List&lt;String&gt;) : DocItemRepresents a SD-JWT VC item. VerifierApi [androidJvm]typealias VerifierApi = String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -client-id //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id/#clientid","title":"ClientId","text":"<p>[androidJvm] typealias ClientId = String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -client-id-scheme //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientIdScheme</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/#clientidscheme","title":"ClientIdScheme","text":"<p>sealed interface ClientIdScheme</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/#inheritors","title":"Inheritors","text":"Preregistered X509SanDns X509SanUri"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/#types","title":"Types","text":"Name Summary Preregistered [androidJvm]data class Preregistered(var preregisteredVerifiers: List&lt;PreregisteredVerifier&gt;) : ClientIdScheme X509SanDns [androidJvm]data object X509SanDns : ClientIdScheme X509SanUri [androidJvm]data object X509SanUri : ClientIdScheme"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -client-id-scheme / -preregistered //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientIdScheme/Preregistered</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/#preregistered","title":"Preregistered","text":"<p>[androidJvm] data class Preregistered(var preregisteredVerifiers: List&lt;PreregisteredVerifier&gt;) : ClientIdScheme</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/#constructors","title":"Constructors","text":"Preregistered [androidJvm]constructor(preregisteredVerifiers: List&lt;PreregisteredVerifier&gt;)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/#properties","title":"Properties","text":"Name Summary preregisteredVerifiers [androidJvm]var preregisteredVerifiers: List&lt;PreregisteredVerifier&gt;"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/-preregistered/","title":"preregistered","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -client-id-scheme / -preregistered / -preregistered //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientIdScheme/Preregistered/Preregistered</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/-preregistered/#preregistered","title":"Preregistered","text":"<p>[androidJvm] constructor(preregisteredVerifiers: List&lt;PreregisteredVerifier&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/preregistered-verifiers/","title":"Preregistered verifiers","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -client-id-scheme / -preregistered / preregistered-verifiers //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientIdScheme/Preregistered/preregisteredVerifiers</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/preregistered-verifiers/#preregisteredverifiers","title":"preregisteredVerifiers","text":"<p>[androidJvm] var preregisteredVerifiers: List&lt;PreregisteredVerifier&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-x509-san-dns/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -client-id-scheme / -x509-san-dns //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientIdScheme/X509SanDns</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-x509-san-dns/#x509sandns","title":"X509SanDns","text":"<p>[androidJvm] data object X509SanDns : ClientIdScheme</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-x509-san-uri/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -client-id-scheme / -x509-san-uri //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientIdScheme/X509SanUri</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-x509-san-uri/#x509sanuri","title":"X509SanUri","text":"<p>[androidJvm] data object X509SanUri : ClientIdScheme</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/#encryptionalgorithm","title":"EncryptionAlgorithm","text":"<p>sealed interface EncryptionAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/#inheritors","title":"Inheritors","text":"ECDH_ES ECDH_ES_A128KW ECDH_ES_A192KW ECDH_ES_A256KW ECDH_1PU ECDH_1PU_A128KW ECDH_1PU_A192KW ECDH_1PU_A256KW"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/#types","title":"Types","text":"Name Summary ECDH_1PU [androidJvm]data object ECDH_1PU : EncryptionAlgorithm ECDH_1PU_A128KW [androidJvm]data object ECDH_1PU_A128KW : EncryptionAlgorithm ECDH_1PU_A192KW [androidJvm]data object ECDH_1PU_A192KW : EncryptionAlgorithm ECDH_1PU_A256KW [androidJvm]data object ECDH_1PU_A256KW : EncryptionAlgorithm ECDH_ES [androidJvm]data object ECDH_ES : EncryptionAlgorithm ECDH_ES_A128KW [androidJvm]data object ECDH_ES_A128KW : EncryptionAlgorithm ECDH_ES_A192KW [androidJvm]data object ECDH_ES_A192KW : EncryptionAlgorithm ECDH_ES_A256KW [androidJvm]data object ECDH_ES_A256KW : EncryptionAlgorithm"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/#properties","title":"Properties","text":"Name Summary name [androidJvm]abstract val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/name/#name","title":"name","text":"<p>[androidJvm] abstract val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_-e-s //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s/#ecdh_es","title":"ECDH_ES","text":"<p>[androidJvm] data object ECDH_ES : EncryptionAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_-e-s / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_-e-s_-a128-k-w //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A128KW</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/#ecdh_es_a128kw","title":"ECDH_ES_A128KW","text":"<p>[androidJvm] data object ECDH_ES_A128KW : EncryptionAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_-e-s_-a128-k-w / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A128KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_-e-s_-a192-k-w //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A192KW</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/#ecdh_es_a192kw","title":"ECDH_ES_A192KW","text":"<p>[androidJvm] data object ECDH_ES_A192KW : EncryptionAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_-e-s_-a192-k-w / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A192KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_-e-s_-a256-k-w //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A256KW</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/#ecdh_es_a256kw","title":"ECDH_ES_A256KW","text":"<p>[androidJvm] data object ECDH_ES_A256KW : EncryptionAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_-e-s_-a256-k-w / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A256KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_1-p-u //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u/#ecdh_1pu","title":"ECDH_1PU","text":"<p>[androidJvm] data object ECDH_1PU : EncryptionAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_1-p-u / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_1-p-u_-a128-k-w //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A128KW</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/#ecdh_1pu_a128kw","title":"ECDH_1PU_A128KW","text":"<p>[androidJvm] data object ECDH_1PU_A128KW : EncryptionAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_1-p-u_-a128-k-w / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A128KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_1-p-u_-a192-k-w //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A192KW</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/#ecdh_1pu_a192kw","title":"ECDH_1PU_A192KW","text":"<p>[androidJvm] data object ECDH_1PU_A192KW : EncryptionAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_1-p-u_-a192-k-w / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A192KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_1-p-u_-a256-k-w //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A256KW</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/#ecdh_1pu_a256kw","title":"ECDH_1PU_A256KW","text":"<p>[androidJvm] data object ECDH_1PU_A256KW : EncryptionAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-algorithm / -e-c-d-h_1-p-u_-a256-k-w / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A256KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/#encryptionmethod","title":"EncryptionMethod","text":"<p>sealed interface EncryptionMethod</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/#inheritors","title":"Inheritors","text":"A128CBC_HS256 A192CBC_HS384 A256CBC_HS512 A128GCM A192GCM A256GCM"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/#types","title":"Types","text":"Name Summary A128CBC_HS256 [androidJvm]data object A128CBC_HS256 : EncryptionMethod A128GCM [androidJvm]data object A128GCM : EncryptionMethod A192CBC_HS384 [androidJvm]data object A192CBC_HS384 : EncryptionMethod A192GCM [androidJvm]data object A192GCM : EncryptionMethod A256CBC_HS512 [androidJvm]data object A256CBC_HS512 : EncryptionMethod A256GCM [androidJvm]data object A256GCM : EncryptionMethod"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/#properties","title":"Properties","text":"Name Summary name [androidJvm]abstract val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/name/#name","title":"name","text":"<p>[androidJvm] abstract val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-c-b-c_-h-s256/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a128-c-b-c_-h-s256 //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A128CBC_HS256</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-c-b-c_-h-s256/#a128cbc_hs256","title":"A128CBC_HS256","text":"<p>[androidJvm] data object A128CBC_HS256 : EncryptionMethod</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-c-b-c_-h-s256/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-c-b-c_-h-s256/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a128-c-b-c_-h-s256 / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A128CBC_HS256/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-c-b-c_-h-s256/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-g-c-m/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a128-g-c-m //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A128GCM</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-g-c-m/#a128gcm","title":"A128GCM","text":"<p>[androidJvm] data object A128GCM : EncryptionMethod</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-g-c-m/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-g-c-m/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a128-g-c-m / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A128GCM/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-g-c-m/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-c-b-c_-h-s384/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a192-c-b-c_-h-s384 //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A192CBC_HS384</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-c-b-c_-h-s384/#a192cbc_hs384","title":"A192CBC_HS384","text":"<p>[androidJvm] data object A192CBC_HS384 : EncryptionMethod</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-c-b-c_-h-s384/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-c-b-c_-h-s384/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a192-c-b-c_-h-s384 / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A192CBC_HS384/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-c-b-c_-h-s384/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-g-c-m/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a192-g-c-m //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A192GCM</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-g-c-m/#a192gcm","title":"A192GCM","text":"<p>[androidJvm] data object A192GCM : EncryptionMethod</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-g-c-m/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-g-c-m/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a192-g-c-m / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A192GCM/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-g-c-m/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-c-b-c_-h-s512/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a256-c-b-c_-h-s512 //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A256CBC_HS512</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-c-b-c_-h-s512/#a256cbc_hs512","title":"A256CBC_HS512","text":"<p>[androidJvm] data object A256CBC_HS512 : EncryptionMethod</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-c-b-c_-h-s512/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-c-b-c_-h-s512/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a256-c-b-c_-h-s512 / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A256CBC_HS512/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-c-b-c_-h-s512/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-g-c-m/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a256-g-c-m //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A256GCM</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-g-c-m/#a256gcm","title":"A256GCM","text":"<p>[androidJvm] data object A256GCM : EncryptionMethod</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-g-c-m/#properties","title":"Properties","text":"Name Summary name [androidJvm]open override val name: String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-g-c-m/name/","title":"Name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -encryption-method / -a256-g-c-m / name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A256GCM/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-g-c-m/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -format //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/#format","title":"Format","text":"<p>sealed interface Format</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/#inheritors","title":"Inheritors","text":"SdJwtVc MsoMdoc"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/#types","title":"Types","text":"Name Summary MsoMdoc [androidJvm]data object MsoMdoc : Format SdJwtVc [androidJvm]data class SdJwtVc(val sdJwtAlgorithms: List&lt;Algorithm&gt;, val kbJwtAlgorithms: List&lt;Algorithm&gt;) : Format"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-mso-mdoc/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -format / -mso-mdoc //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/MsoMdoc</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-mso-mdoc/#msomdoc","title":"MsoMdoc","text":"<p>[androidJvm] data object MsoMdoc : Format</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -format / -sd-jwt-vc //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/#sdjwtvc","title":"SdJwtVc","text":"<p>[androidJvm] data class SdJwtVc(val sdJwtAlgorithms: List&lt;Algorithm&gt;, val kbJwtAlgorithms: List&lt;Algorithm&gt;) : Format</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/#constructors","title":"Constructors","text":"SdJwtVc [androidJvm]constructor(sdJwtAlgorithms: List&lt;Algorithm&gt;, kbJwtAlgorithms: List&lt;Algorithm&gt;)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/#properties","title":"Properties","text":"Name Summary kbJwtAlgorithms [androidJvm]val kbJwtAlgorithms: List&lt;Algorithm&gt; sdJwtAlgorithms [androidJvm]val sdJwtAlgorithms: List&lt;Algorithm&gt;"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-sd-jwt-vc/","title":"sd jwt vc","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -format / -sd-jwt-vc / -sd-jwt-vc //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/SdJwtVc</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-sd-jwt-vc/#sdjwtvc","title":"SdJwtVc","text":"<p>[androidJvm] constructor(sdJwtAlgorithms: List&lt;Algorithm&gt;, kbJwtAlgorithms: List&lt;Algorithm&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/kb-jwt-algorithms/","title":"Kb jwt algorithms","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -format / -sd-jwt-vc / kb-jwt-algorithms //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/kbJwtAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/kb-jwt-algorithms/#kbjwtalgorithms","title":"kbJwtAlgorithms","text":"<p>[androidJvm] val kbJwtAlgorithms: List&lt;Algorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/sd-jwt-algorithms/","title":"Sd jwt algorithms","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -format / -sd-jwt-vc / sd-jwt-algorithms //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/sdJwtAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/sd-jwt-algorithms/#sdjwtalgorithms","title":"sdJwtAlgorithms","text":"<p>[androidJvm] val sdJwtAlgorithms: List&lt;Algorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -format / -sd-jwt-vc / -companion //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-companion/#properties","title":"Properties","text":"Name Summary ES256 [androidJvm]val ES256: Format.SdJwtVc"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-companion/-e-s256/","title":"e s256","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -format / -sd-jwt-vc / -companion / -e-s256 //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/Companion/ES256</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-companion/-e-s256/#es256","title":"ES256","text":"<p>[androidJvm] val ES256: Format.SdJwtVc</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-legal-name/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -legal-name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/LegalName</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-legal-name/#legalname","title":"LegalName","text":"<p>[androidJvm] typealias LegalName = String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/#openid4vpconfig","title":"OpenId4VpConfig","text":"<p>[androidJvm] class OpenId4VpConfig</p> <p>Configuration for the OpenId4Vp transfer.</p> <p>Use Builder to create an instance.</p> <p>Example usage:</p> <pre><code>val config = OpenId4VpConfig.Builder()\n   .withClientIdSchemes(\n         listOf(\n             ClientIdScheme.Preregistered(\n                 listOf(\n                     PreregisteredVerifier(\n                     \"VerifierClientId\",\n                     \"VerifierLegalName\",\n                     \"http://example.com\")\n                 )),\n             ClientIdScheme.X509SanDns\n         )\n    )\n    .withScheme(\n        listOf(\n            \"eudi-openid4vp\",\n            \"mdoc-openid4vp\"\n        )\n    )\n   .withEncryptionAlgorithms(listOf(EncryptionAlgorithm.ECDH_ES))\n   .withEncryptionMethods(listOf(EncryptionMethod.A128CBC_HS256))\n   .withFormats(Format.MsoMdoc, Format.SdJwtVc.ES256)\n   .build()\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/#types","title":"Types","text":"Name Summary Builder [androidJvm]class BuilderBuilder for OpenId4VciConfig."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/#properties","title":"Properties","text":"Name Summary clientIdSchemes [androidJvm]val clientIdSchemes: List&lt;ClientIdScheme&gt;list of ClientIdScheme that defines the supported Client Identifier schemes encryptionAlgorithms [androidJvm]val encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;list of EncryptionAlgorithm that defines the supported encryption algorithms encryptionMethods [androidJvm]val encryptionMethods: List&lt;EncryptionMethod&gt;list of EncryptionMethod that defines the supported encryption methods formats [androidJvm]val formats: List&lt;Format&gt;the supported credential formats schemes [androidJvm]val schemes: List&lt;String&gt;optionally you can set one or more schemes. By default, the scheme \"mdoc-openid4vp\" is used"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/client-id-schemes/","title":"Client id schemes","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / client-id-schemes //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/clientIdSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/client-id-schemes/#clientidschemes","title":"clientIdSchemes","text":"<p>[androidJvm] val clientIdSchemes: List&lt;ClientIdScheme&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/encryption-algorithms/","title":"Encryption algorithms","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / encryption-algorithms //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/encryptionAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/encryption-algorithms/#encryptionalgorithms","title":"encryptionAlgorithms","text":"<p>[androidJvm] val encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/encryption-methods/","title":"Encryption methods","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / encryption-methods //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/encryptionMethods</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/encryption-methods/#encryptionmethods","title":"encryptionMethods","text":"<p>[androidJvm] val encryptionMethods: List&lt;EncryptionMethod&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/formats/","title":"Formats","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / formats //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/formats</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/formats/#formats","title":"formats","text":"<p>[androidJvm] val formats: List&lt;Format&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/schemes/","title":"Schemes","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / schemes //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/schemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/schemes/#schemes","title":"schemes","text":"<p>[androidJvm] val schemes: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/#builder","title":"Builder","text":"<p>[androidJvm] class Builder</p> <p>Builder for OpenId4VciConfig.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/#constructors","title":"Constructors","text":"Builder [androidJvm]constructor()"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/#properties","title":"Properties","text":"Name Summary clientIdSchemes [androidJvm]lateinit var clientIdSchemes: List&lt;ClientIdScheme&gt;list of ClientIdScheme that defines the supported Client Identifier schemes encryptionAlgorithms [androidJvm]lateinit var encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;list of EncryptionAlgorithm that defines the supported encryption algorithms encryptionMethods [androidJvm]lateinit var encryptionMethods: List&lt;EncryptionMethod&gt;list of EncryptionMethod that defines the supported encryption methods formats [androidJvm]lateinit var formats: List&lt;Format&gt;the supported credential formats schemes [androidJvm]var schemes: List&lt;String&gt;for OpenId4Vp. Optionally, you can set one or more schemes. By default, \"mdoc-openid4vp\" is used."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/#functions","title":"Functions","text":"Name Summary build [androidJvm]fun build(): OpenId4VpConfigBuilds the OpenId4VpConfig. withClientIdSchemes [androidJvm]fun withClientIdSchemes(vararg clientIdSchemes: ClientIdScheme): OpenId4VpConfig.Builder[androidJvm]fun withClientIdSchemes(clientIdSchemes: List&lt;ClientIdScheme&gt;): OpenId4VpConfig.BuilderSets the issuer url. withEncryptionAlgorithms [androidJvm]fun withEncryptionAlgorithms(vararg encryptionAlgorithms: EncryptionAlgorithm): OpenId4VpConfig.Builder[androidJvm]fun withEncryptionAlgorithms(encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;): OpenId4VpConfig.BuilderSets the issuer url. withEncryptionMethods [androidJvm]fun withEncryptionMethods(vararg encryptionMethods: EncryptionMethod): OpenId4VpConfig.Builder[androidJvm]fun withEncryptionMethods(encryptionMethods: List&lt;EncryptionMethod&gt;): OpenId4VpConfig.BuilderSets the issuer url. withFormats [androidJvm]fun withFormats(vararg formats: Format): OpenId4VpConfig.Builder[androidJvm]fun withFormats(formats: List&lt;Format&gt;): OpenId4VpConfig.BuilderSets the supported credential formats for the OpenId4Vp. withSchemes [androidJvm]fun withSchemes(vararg schemes: String): OpenId4VpConfig.BuilderSets a list of schemes for openId4Vp.[androidJvm]fun withSchemes(schemes: List&lt;String&gt;): OpenId4VpConfig.BuilderSets a list of schemes for openId4Vp. By default, the scheme \"mdoc-openid4vp\" is supported"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/-builder/","title":"builder","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / -builder //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/-builder/#builder","title":"Builder","text":"<p>[androidJvm] constructor()</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/build/","title":"Build","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / build //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/build</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/build/#build","title":"build","text":"<p>[androidJvm] fun build(): OpenId4VpConfig</p> <p>Builds the OpenId4VpConfig.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/build/#return","title":"Return","text":"<p>the OpenId4VpConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/client-id-schemes/","title":"Client id schemes","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / client-id-schemes //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/clientIdSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/client-id-schemes/#clientidschemes","title":"clientIdSchemes","text":"<p>[androidJvm] lateinit var clientIdSchemes: List&lt;ClientIdScheme&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/encryption-algorithms/","title":"Encryption algorithms","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / encryption-algorithms //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/encryptionAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/encryption-algorithms/#encryptionalgorithms","title":"encryptionAlgorithms","text":"<p>[androidJvm] lateinit var encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/encryption-methods/","title":"Encryption methods","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / encryption-methods //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/encryptionMethods</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/encryption-methods/#encryptionmethods","title":"encryptionMethods","text":"<p>[androidJvm] lateinit var encryptionMethods: List&lt;EncryptionMethod&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/formats/","title":"Formats","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / formats //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/formats</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/formats/#formats","title":"formats","text":"<p>[androidJvm] lateinit var formats: List&lt;Format&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/schemes/","title":"Schemes","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / schemes //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/schemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/schemes/#schemes","title":"schemes","text":"<p>[androidJvm] var schemes: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-client-id-schemes/","title":"With client id schemes","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / with-client-id-schemes //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withClientIdSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-client-id-schemes/#withclientidschemes","title":"withClientIdSchemes","text":"<p>[androidJvm] fun withClientIdSchemes(clientIdSchemes: List&lt;ClientIdScheme&gt;): OpenId4VpConfig.Builder</p> <p>Sets the issuer url.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-client-id-schemes/#parameters","title":"Parameters","text":"<p>androidJvm</p> issuerUrl the issuer url <p>[androidJvm] fun withClientIdSchemes(vararg clientIdSchemes: ClientIdScheme): OpenId4VpConfig.Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-algorithms/","title":"With encryption algorithms","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / with-encryption-algorithms //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withEncryptionAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-algorithms/#withencryptionalgorithms","title":"withEncryptionAlgorithms","text":"<p>[androidJvm] fun withEncryptionAlgorithms(encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;): OpenId4VpConfig.Builder</p> <p>Sets the issuer url.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-algorithms/#parameters","title":"Parameters","text":"<p>androidJvm</p> issuerUrl the issuer url <p>[androidJvm] fun withEncryptionAlgorithms(vararg encryptionAlgorithms: EncryptionAlgorithm): OpenId4VpConfig.Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-methods/","title":"With encryption methods","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / with-encryption-methods //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withEncryptionMethods</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-methods/#withencryptionmethods","title":"withEncryptionMethods","text":"<p>[androidJvm] fun withEncryptionMethods(encryptionMethods: List&lt;EncryptionMethod&gt;): OpenId4VpConfig.Builder</p> <p>Sets the issuer url.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-methods/#parameters","title":"Parameters","text":"<p>androidJvm</p> issuerUrl the issuer url <p>[androidJvm] fun withEncryptionMethods(vararg encryptionMethods: EncryptionMethod): OpenId4VpConfig.Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-formats/","title":"With formats","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / with-formats //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withFormats</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-formats/#withformats","title":"withFormats","text":"<p>[androidJvm] fun withFormats(formats: List&lt;Format&gt;): OpenId4VpConfig.Builder</p> <p>Sets the supported credential formats for the OpenId4Vp.</p> <p>[androidJvm] fun withFormats(vararg formats: Format): OpenId4VpConfig.Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-schemes/","title":"With schemes","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-config / -builder / with-schemes //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-schemes/#withschemes","title":"withSchemes","text":"<p>[androidJvm] fun withSchemes(schemes: List&lt;String&gt;): OpenId4VpConfig.Builder</p> <p>Sets a list of schemes for openId4Vp. By default, the scheme \"mdoc-openid4vp\" is supported</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-schemes/#parameters","title":"Parameters","text":"<p>androidJvm</p> schemes the list of schemes <p>[androidJvm] fun withSchemes(vararg schemes: String): OpenId4VpConfig.Builder</p> <p>Sets a list of schemes for openId4Vp.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/#openid4vpmanager","title":"OpenId4VpManager","text":"<p>[androidJvm] class OpenId4VpManager(val config: OpenId4VpConfig, val requestProcessor: OpenId4VpRequestProcessor, var logger: Logger? = null, var listenersExecutor: Executor? = null, val ktorHttpClientFactory: () -&gt; HttpClient? = null) : TransferEvent.Listenable, ReaderTrustStoreAware</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/#constructors","title":"Constructors","text":"OpenId4VpManager [androidJvm]constructor(config: OpenId4VpConfig, requestProcessor: OpenId4VpRequestProcessor, logger: Logger? = null, listenersExecutor: Executor? = null, ktorHttpClientFactory: () -&gt; HttpClient? = null)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/#types","title":"Types","text":"Name Summary Companion [androidJvm]object Companion"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/#properties","title":"Properties","text":"Name Summary config [androidJvm]val config: OpenId4VpConfig ktorHttpClientFactory [androidJvm]val ktorHttpClientFactory: () -&gt; HttpClient? = null listenersExecutor [androidJvm]var listenersExecutor: Executor? logger [androidJvm]var logger: Logger? readerTrustStore [androidJvm]open override var readerTrustStore: ReaderTrustStore? requestProcessor [androidJvm]val requestProcessor: OpenId4VpRequestProcessor"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/#functions","title":"Functions","text":"Name Summary addTransferEventListener [androidJvm]open override fun addTransferEventListener(listener: TransferEvent.Listener): OpenId4VpManager removeAllTransferEventListeners [androidJvm]open override fun removeAllTransferEventListeners(): OpenId4VpManager removeTransferEventListener [androidJvm]open override fun removeTransferEventListener(listener: TransferEvent.Listener): OpenId4VpManager resolveRequestUri [androidJvm]fun resolveRequestUri(uri: String) sendResponse [androidJvm]fun sendResponse(response: Response)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/-open-id4-vp-manager/","title":"open id4 vp manager","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / -open-id4-vp-manager //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/OpenId4VpManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/-open-id4-vp-manager/#openid4vpmanager","title":"OpenId4VpManager","text":"<p>[androidJvm] constructor(config: OpenId4VpConfig, requestProcessor: OpenId4VpRequestProcessor, logger: Logger? = null, listenersExecutor: Executor? = null, ktorHttpClientFactory: () -&gt; HttpClient? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/add-transfer-event-listener/","title":"Add transfer event listener","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / add-transfer-event-listener //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/addTransferEventListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/add-transfer-event-listener/#addtransfereventlistener","title":"addTransferEventListener","text":"<p>[androidJvm] open override fun addTransferEventListener(listener: TransferEvent.Listener): OpenId4VpManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/config/","title":"Config","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / config //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/config/#config","title":"config","text":"<p>[androidJvm] val config: OpenId4VpConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/ktor-http-client-factory/","title":"Ktor http client factory","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / ktor-http-client-factory //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/ktorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/ktor-http-client-factory/#ktorhttpclientfactory","title":"ktorHttpClientFactory","text":"<p>[androidJvm] val ktorHttpClientFactory: () -&gt; HttpClient? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/listeners-executor/","title":"Listeners executor","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / listeners-executor //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/listenersExecutor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/listeners-executor/#listenersexecutor","title":"listenersExecutor","text":"<p>[androidJvm] var listenersExecutor: Executor?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/logger/","title":"Logger","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / logger //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/logger/#logger","title":"logger","text":"<p>[androidJvm] var logger: Logger?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/reader-trust-store/","title":"Reader trust store","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / reader-trust-store //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/readerTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/reader-trust-store/#readertruststore","title":"readerTrustStore","text":"<p>[androidJvm] open override var readerTrustStore: ReaderTrustStore?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/remove-all-transfer-event-listeners/","title":"Remove all transfer event listeners","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / remove-all-transfer-event-listeners //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/removeAllTransferEventListeners</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/remove-all-transfer-event-listeners/#removealltransfereventlisteners","title":"removeAllTransferEventListeners","text":"<p>[androidJvm] open override fun removeAllTransferEventListeners(): OpenId4VpManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/remove-transfer-event-listener/","title":"Remove transfer event listener","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / remove-transfer-event-listener //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/removeTransferEventListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/remove-transfer-event-listener/#removetransfereventlistener","title":"removeTransferEventListener","text":"<p>[androidJvm] open override fun removeTransferEventListener(listener: TransferEvent.Listener): OpenId4VpManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/request-processor/","title":"Request processor","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / request-processor //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/requestProcessor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/request-processor/#requestprocessor","title":"requestProcessor","text":"<p>[androidJvm] val requestProcessor: OpenId4VpRequestProcessor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/resolve-request-uri/","title":"Resolve request uri","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / resolve-request-uri //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/resolveRequestUri</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/resolve-request-uri/#resolverequesturi","title":"resolveRequestUri","text":"<p>[androidJvm] fun resolveRequestUri(uri: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/send-response/","title":"Send response","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / send-response //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/sendResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/send-response/#sendresponse","title":"sendResponse","text":"<p>[androidJvm] fun sendResponse(response: Response)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/-companion/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-manager / -companion //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/-companion/#companion","title":"Companion","text":"<p>[androidJvm] object Companion</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-request //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/#openid4vprequest","title":"OpenId4VpRequest","text":"<p>[androidJvm] data class OpenId4VpRequest(val resolvedRequestObject: ResolvedRequestObject) : Request</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/#constructors","title":"Constructors","text":"OpenId4VpRequest [androidJvm]constructor(resolvedRequestObject: ResolvedRequestObject)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/#properties","title":"Properties","text":"Name Summary resolvedRequestObject [androidJvm]val resolvedRequestObject: ResolvedRequestObject"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/-open-id4-vp-request/","title":"open id4 vp request","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-request / -open-id4-vp-request //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequest/OpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/-open-id4-vp-request/#openid4vprequest","title":"OpenId4VpRequest","text":"<p>[androidJvm] constructor(resolvedRequestObject: ResolvedRequestObject)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/resolved-request-object/","title":"Resolved request object","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-request / resolved-request-object //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequest/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-request-processor //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequestProcessor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/#openid4vprequestprocessor","title":"OpenId4VpRequestProcessor","text":"<p>[androidJvm] class OpenId4VpRequestProcessor(documentManager: DocumentManager, var readerTrustStore: ReaderTrustStore?) : RequestProcessor, ReaderTrustStoreAware</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/#constructors","title":"Constructors","text":"OpenId4VpRequestProcessor [androidJvm]constructor(documentManager: DocumentManager, readerTrustStore: ReaderTrustStore?)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/#properties","title":"Properties","text":"Name Summary readerTrustStore [androidJvm]open override var readerTrustStore: ReaderTrustStore?"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/#functions","title":"Functions","text":"Name Summary process [androidJvm]open override fun process(request: Request): RequestProcessor.ProcessedRequest"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/-open-id4-vp-request-processor/","title":"open id4 vp request processor","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-request-processor / -open-id4-vp-request-processor //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequestProcessor/OpenId4VpRequestProcessor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/-open-id4-vp-request-processor/#openid4vprequestprocessor","title":"OpenId4VpRequestProcessor","text":"<p>[androidJvm] constructor(documentManager: DocumentManager, readerTrustStore: ReaderTrustStore?)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/process/","title":"Process","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-request-processor / process //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequestProcessor/process</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/process/#process","title":"process","text":"<p>[androidJvm] open override fun process(request: Request): RequestProcessor.ProcessedRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/reader-trust-store/","title":"Reader trust store","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-request-processor / reader-trust-store //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequestProcessor/readerTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/reader-trust-store/#readertruststore","title":"readerTrustStore","text":"<p>[androidJvm] open override var readerTrustStore: ReaderTrustStore?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/#openid4vpresponse","title":"OpenId4VpResponse","text":"<p>sealed interface OpenId4VpResponse : Response</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/#inheritors","title":"Inheritors","text":"DeviceResponse GenericResponse"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/#types","title":"Types","text":"Name Summary DeviceResponse [androidJvm]data class DeviceResponse(val resolvedRequestObject: ResolvedRequestObject, val consensus: Consensus.PositiveConsensus, val vpToken: VpToken, val responseBytes: DeviceResponseBytes, val msoMdocNonce: String) : OpenId4VpResponse GenericResponse [androidJvm]data class GenericResponse(val resolvedRequestObject: ResolvedRequestObject, val consensus: Consensus.PositiveConsensus, val vpToken: VpToken, val response: List&lt;String&gt;) : OpenId4VpResponse"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/#properties","title":"Properties","text":"Name Summary consensus [androidJvm]abstract val consensus: Consensus.PositiveConsensus resolvedRequestObject [androidJvm]abstract val resolvedRequestObject: ResolvedRequestObject"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/consensus/","title":"Consensus","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / consensus //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/consensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/consensus/#consensus","title":"consensus","text":"<p>[androidJvm] abstract val consensus: Consensus.PositiveConsensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/resolved-request-object/","title":"Resolved request object","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / resolved-request-object //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] abstract val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -device-response //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/#deviceresponse","title":"DeviceResponse","text":"<p>[androidJvm] data class DeviceResponse(val resolvedRequestObject: ResolvedRequestObject, val consensus: Consensus.PositiveConsensus, val vpToken: VpToken, val responseBytes: DeviceResponseBytes, val msoMdocNonce: String) : OpenId4VpResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/#constructors","title":"Constructors","text":"DeviceResponse [androidJvm]constructor(resolvedRequestObject: ResolvedRequestObject, consensus: Consensus.PositiveConsensus, vpToken: VpToken, responseBytes: DeviceResponseBytes, msoMdocNonce: String)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/#properties","title":"Properties","text":"Name Summary consensus [androidJvm]open override val consensus: Consensus.PositiveConsensus msoMdocNonce [androidJvm]val msoMdocNonce: String resolvedRequestObject [androidJvm]open override val resolvedRequestObject: ResolvedRequestObject responseBytes [androidJvm]val responseBytes: DeviceResponseBytes vpToken [androidJvm]val vpToken: VpToken"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/#functions","title":"Functions","text":"Name Summary equals [androidJvm]open operator override fun equals(other: Any?): Boolean hashCode [androidJvm]open override fun hashCode(): Int"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/-device-response/","title":"device response","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -device-response / -device-response //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/DeviceResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/-device-response/#deviceresponse","title":"DeviceResponse","text":"<p>[androidJvm] constructor(resolvedRequestObject: ResolvedRequestObject, consensus: Consensus.PositiveConsensus, vpToken: VpToken, responseBytes: DeviceResponseBytes, msoMdocNonce: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/consensus/","title":"Consensus","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -device-response / consensus //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/consensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/consensus/#consensus","title":"consensus","text":"<p>[androidJvm] open override val consensus: Consensus.PositiveConsensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/equals/","title":"Equals","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -device-response / equals //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/equals</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/equals/#equals","title":"equals","text":"<p>[androidJvm] open operator override fun equals(other: Any?): Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/hash-code/","title":"Hash code","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -device-response / hash-code //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/hashCode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/hash-code/#hashcode","title":"hashCode","text":"<p>[androidJvm] open override fun hashCode(): Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -device-response / mso-mdoc-nonce //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/resolved-request-object/","title":"Resolved request object","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -device-response / resolved-request-object //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] open override val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/response-bytes/","title":"Response bytes","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -device-response / response-bytes //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/responseBytes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/response-bytes/#responsebytes","title":"responseBytes","text":"<p>[androidJvm] val responseBytes: DeviceResponseBytes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/vp-token/","title":"Vp token","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -device-response / vp-token //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/vpToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/vp-token/#vptoken","title":"vpToken","text":"<p>[androidJvm] val vpToken: VpToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -generic-response //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/#genericresponse","title":"GenericResponse","text":"<p>[androidJvm] data class GenericResponse(val resolvedRequestObject: ResolvedRequestObject, val consensus: Consensus.PositiveConsensus, val vpToken: VpToken, val response: List&lt;String&gt;) : OpenId4VpResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/#constructors","title":"Constructors","text":"GenericResponse [androidJvm]constructor(resolvedRequestObject: ResolvedRequestObject, consensus: Consensus.PositiveConsensus, vpToken: VpToken, response: List&lt;String&gt;)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/#properties","title":"Properties","text":"Name Summary consensus [androidJvm]open override val consensus: Consensus.PositiveConsensus resolvedRequestObject [androidJvm]open override val resolvedRequestObject: ResolvedRequestObject response [androidJvm]val response: List&lt;String&gt; vpToken [androidJvm]val vpToken: VpToken"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/-generic-response/","title":"generic response","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -generic-response / -generic-response //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/GenericResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/-generic-response/#genericresponse","title":"GenericResponse","text":"<p>[androidJvm] constructor(resolvedRequestObject: ResolvedRequestObject, consensus: Consensus.PositiveConsensus, vpToken: VpToken, response: List&lt;String&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/consensus/","title":"Consensus","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -generic-response / consensus //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/consensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/consensus/#consensus","title":"consensus","text":"<p>[androidJvm] open override val consensus: Consensus.PositiveConsensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/resolved-request-object/","title":"Resolved request object","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -generic-response / resolved-request-object //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] open override val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/response/","title":"Response","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -generic-response / response //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/response</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/response/#response","title":"response","text":"<p>[androidJvm] val response: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/vp-token/","title":"Vp token","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -open-id4-vp-response / -generic-response / vp-token //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/vpToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/vp-token/#vptoken","title":"vpToken","text":"<p>[androidJvm] val vpToken: VpToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -preregistered-verifier //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/#preregisteredverifier","title":"PreregisteredVerifier","text":"<p>[androidJvm] data class PreregisteredVerifier(var clientId: ClientId, var legalName: LegalName, var verifierApi: VerifierApi)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/#constructors","title":"Constructors","text":"PreregisteredVerifier [androidJvm]constructor(clientId: ClientId, legalName: LegalName, verifierApi: VerifierApi)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/#properties","title":"Properties","text":"Name Summary clientId [androidJvm]var clientId: ClientId legalName [androidJvm]var legalName: LegalName verifierApi [androidJvm]var verifierApi: VerifierApi"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/-preregistered-verifier/","title":"preregistered verifier","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -preregistered-verifier / -preregistered-verifier //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/PreregisteredVerifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/-preregistered-verifier/#preregisteredverifier","title":"PreregisteredVerifier","text":"<p>[androidJvm] constructor(clientId: ClientId, legalName: LegalName, verifierApi: VerifierApi)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/client-id/","title":"Client id","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -preregistered-verifier / client-id //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/clientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/client-id/#clientid","title":"clientId","text":"<p>[androidJvm] var clientId: ClientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/legal-name/","title":"Legal name","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -preregistered-verifier / legal-name //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/legalName</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/legal-name/#legalname","title":"legalName","text":"<p>[androidJvm] var legalName: LegalName</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/verifier-api/","title":"Verifier api","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -preregistered-verifier / verifier-api //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/verifierApi</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/verifier-api/#verifierapi","title":"verifierApi","text":"<p>[androidJvm] var verifierApi: VerifierApi</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-generic-open-id4-vp-request //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedGenericOpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/#processedgenericopenid4vprequest","title":"ProcessedGenericOpenId4VpRequest","text":"<p>[androidJvm] class ProcessedGenericOpenId4VpRequest(documentManager: DocumentManager, resolvedRequestObject: ResolvedRequestObject, inputDescriptorMap: Map&lt;InputDescriptorId, List&lt;DocumentId&gt;&gt;, requestedDocuments: RequestedDocuments, val msoMdocNonce: String?) : RequestProcessor.ProcessedRequest.Success</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/#constructors","title":"Constructors","text":"ProcessedGenericOpenId4VpRequest [androidJvm]constructor(documentManager: DocumentManager, resolvedRequestObject: ResolvedRequestObject, inputDescriptorMap: Map&lt;InputDescriptorId, List&lt;DocumentId&gt;&gt;, requestedDocuments: RequestedDocuments, msoMdocNonce: String?)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/#properties","title":"Properties","text":"Name Summary msoMdocNonce [androidJvm]val msoMdocNonce: String? requestedDocuments [androidJvm]val requestedDocuments: RequestedDocuments"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/#functions","title":"Functions","text":"Name Summary generateResponse [androidJvm]open override fun generateResponse(disclosedDocuments: DisclosedDocuments, signatureAlgorithm: Algorithm?): ResponseResult getOrNull [androidJvm]open fun getOrNull(): RequestProcessor.ProcessedRequest.Success? getOrThrow [androidJvm]open fun getOrThrow(): RequestProcessor.ProcessedRequest.Success"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/-processed-generic-open-id4-vp-request/","title":"processed generic open id4 vp request","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-generic-open-id4-vp-request / -processed-generic-open-id4-vp-request //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedGenericOpenId4VpRequest/ProcessedGenericOpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/-processed-generic-open-id4-vp-request/#processedgenericopenid4vprequest","title":"ProcessedGenericOpenId4VpRequest","text":"<p>[androidJvm] constructor(documentManager: DocumentManager, resolvedRequestObject: ResolvedRequestObject, inputDescriptorMap: Map&lt;InputDescriptorId, List&lt;DocumentId&gt;&gt;, requestedDocuments: RequestedDocuments, msoMdocNonce: String?)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/generate-response/","title":"Generate response","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-generic-open-id4-vp-request / generate-response //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedGenericOpenId4VpRequest/generateResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/generate-response/#generateresponse","title":"generateResponse","text":"<p>[androidJvm] open override fun generateResponse(disclosedDocuments: DisclosedDocuments, signatureAlgorithm: Algorithm?): ResponseResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-generic-open-id4-vp-request / mso-mdoc-nonce //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedGenericOpenId4VpRequest/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] val msoMdocNonce: String?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-mso-mdoc-open-id4-vp-request //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedMsoMdocOpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/#processedmsomdocopenid4vprequest","title":"ProcessedMsoMdocOpenId4VpRequest","text":"<p>[androidJvm] class ProcessedMsoMdocOpenId4VpRequest(processedDeviceRequest: ProcessedDeviceRequest, resolvedRequestObject: ResolvedRequestObject, val msoMdocNonce: String) : RequestProcessor.ProcessedRequest.Success</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/#constructors","title":"Constructors","text":"ProcessedMsoMdocOpenId4VpRequest [androidJvm]constructor(processedDeviceRequest: ProcessedDeviceRequest, resolvedRequestObject: ResolvedRequestObject, msoMdocNonce: String)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/#properties","title":"Properties","text":"Name Summary msoMdocNonce [androidJvm]val msoMdocNonce: String requestedDocuments [androidJvm]val requestedDocuments: RequestedDocuments"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/#functions","title":"Functions","text":"Name Summary generateResponse [androidJvm]open override fun generateResponse(disclosedDocuments: DisclosedDocuments, signatureAlgorithm: Algorithm?): ResponseResult getOrNull [androidJvm]open fun getOrNull(): RequestProcessor.ProcessedRequest.Success? getOrThrow [androidJvm]open fun getOrThrow(): RequestProcessor.ProcessedRequest.Success"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/-processed-mso-mdoc-open-id4-vp-request/","title":"processed mso mdoc open id4 vp request","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-mso-mdoc-open-id4-vp-request / -processed-mso-mdoc-open-id4-vp-request //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedMsoMdocOpenId4VpRequest/ProcessedMsoMdocOpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/-processed-mso-mdoc-open-id4-vp-request/#processedmsomdocopenid4vprequest","title":"ProcessedMsoMdocOpenId4VpRequest","text":"<p>[androidJvm] constructor(processedDeviceRequest: ProcessedDeviceRequest, resolvedRequestObject: ResolvedRequestObject, msoMdocNonce: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/generate-response/","title":"Generate response","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-mso-mdoc-open-id4-vp-request / generate-response //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedMsoMdocOpenId4VpRequest/generateResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/generate-response/#generateresponse","title":"generateResponse","text":"<p>[androidJvm] open override fun generateResponse(disclosedDocuments: DisclosedDocuments, signatureAlgorithm: Algorithm?): ResponseResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -processed-mso-mdoc-open-id4-vp-request / mso-mdoc-nonce //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedMsoMdocOpenId4VpRequest/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -sd-jwt-vc-item //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/SdJwtVcItem</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/#sdjwtvcitem","title":"SdJwtVcItem","text":"<p>[androidJvm] class SdJwtVcItem(val path: List&lt;String&gt;) : DocItem</p> <p>Represents a SD-JWT VC item.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/#constructors","title":"Constructors","text":"SdJwtVcItem [androidJvm]constructor(path: List&lt;String&gt;)"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/#properties","title":"Properties","text":"Name Summary path [androidJvm]val path: List&lt;String&gt;The path of the item."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/-sd-jwt-vc-item/","title":"sd jwt vc item","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -sd-jwt-vc-item / -sd-jwt-vc-item //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/SdJwtVcItem/SdJwtVcItem</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/-sd-jwt-vc-item/#sdjwtvcitem","title":"SdJwtVcItem","text":"<p>[androidJvm] constructor(path: List&lt;String&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-verifier-api/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.transfer.openid4vp / -verifier-api //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/VerifierApi</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-verifier-api/#verifierapi","title":"VerifierApi","text":"<p>[androidJvm] typealias VerifierApi = String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.util //wallet-core/eu.europa.ec.eudi.wallet.util</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/#package-level-declarations","title":"Package-level declarations","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/#types","title":"Types","text":"Name Summary CBOR [androidJvm]object CBOR"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/","title":"Index","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.util / -c-b-o-r //wallet-core/eu.europa.ec.eudi.wallet.util/CBOR</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/#cbor","title":"CBOR","text":"<p>[androidJvm] object CBOR</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/#functions","title":"Functions","text":"Name Summary cborDecode [androidJvm]@JvmStaticfun cborDecode(encodedBytes: ByteArray): DataItem cborDecodeByteString [androidJvm]@JvmStaticfun cborDecodeByteString(data: ByteArray): ByteArray cborEncode [androidJvm]@JvmStaticfun cborEncode(dataItem: DataItem): ByteArray cborPrettyPrint [androidJvm]@JvmStaticfun cborPrettyPrint(encodedBytes: ByteArray): String"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode-byte-string/","title":"Cbor decode byte string","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.util / -c-b-o-r / cbor-decode-byte-string //wallet-core/eu.europa.ec.eudi.wallet.util/CBOR/cborDecodeByteString</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode-byte-string/#cbordecodebytestring","title":"cborDecodeByteString","text":"<p>[androidJvm]\\</p> <p>@JvmStatic</p> <p>fun cborDecodeByteString(data: ByteArray): ByteArray</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode/","title":"Cbor decode","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.util / -c-b-o-r / cbor-decode //wallet-core/eu.europa.ec.eudi.wallet.util/CBOR/cborDecode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode/#cbordecode","title":"cborDecode","text":"<p>[androidJvm]\\</p> <p>@JvmStatic</p> <p>fun cborDecode(encodedBytes: ByteArray): DataItem</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-encode/","title":"Cbor encode","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.util / -c-b-o-r / cbor-encode //wallet-core/eu.europa.ec.eudi.wallet.util/CBOR/cborEncode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-encode/#cborencode","title":"cborEncode","text":"<p>[androidJvm]\\</p> <p>@JvmStatic</p> <p>fun cborEncode(dataItem: DataItem): ByteArray</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-pretty-print/","title":"Cbor pretty print","text":"<p>Home / eudi-lib-android-wallet-core / docs / wallet-core / eu.europa.ec.eudi.wallet.util / -c-b-o-r / cbor-pretty-print //wallet-core/eu.europa.ec.eudi.wallet.util/CBOR/cborPrettyPrint</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-pretty-print/#cborprettyprint","title":"cborPrettyPrint","text":"<p>[androidJvm]\\</p> <p>@JvmStatic</p> <p>fun cborPrettyPrint(encodedBytes: ByteArray): String</p>"},{"location":"eudi-app-android-wallet-ui/","title":"Index","text":"<p>Home / eudi-app-android-wallet-ui</p>"},{"location":"eudi-app-android-wallet-ui/#eudi-android-wallet-reference-application","title":"EUDI Android Wallet reference application","text":"<p>:heavy_exclamation_mark: Important! Before you proceed, please read the EUDI Wallet Reference Implementation project description</p>"},{"location":"eudi-app-android-wallet-ui/#table-of-contents","title":"Table of contents","text":"<ul> <li>Overview</li> <li>Disclaimer</li> <li>Important things to know</li> <li>How to contribute</li> <li>Demo videos</li> <li>How to use the application</li> <li>How to build - Quick start guide</li> <li>Application configuration</li> <li>License</li> </ul>"},{"location":"eudi-app-android-wallet-ui/#overview","title":"Overview","text":"<p>The EUDI Wallet Reference Implementation is built based on the Architecture Reference Framework and aims to showcase a robust and interoperable platform for digital identification, authentication, and electronic signatures based on common standards across the European Union. The EUDI Wallet Reference Implementation is based on a modular architecture composed of business-agnostic, reusable components that will evolve in incremental steps and can be re-used across multiple projects.</p> <p>The EUDI Wallet Reference Implementation is the application that allows users to:</p> <ol> <li>To obtain, store, and, present PID and mDL.</li> <li>Verify presentations.</li> <li>Share data on proximity scenarios.</li> <li>Support remote QES and more use cases with the modules included.</li> </ol> <p>The EUDIW project provides through this repository an Android app. Please refer to the repositories listed in the following sections for more detailed information on how to get started, contribute, and engage with the EUDI Wallet Reference Implementation.</p>"},{"location":"eudi-app-android-wallet-ui/#specifications-employed","title":"\ud83d\udca1 Specifications Employed","text":"<p>The app consumes the SDK called EUDIW Wallet core Wallet core and a list of available libraries to facilitate remote presentation, proximity, and issuing test/demo functionality following specification of the ARF including:</p> <ul> <li> <p>OpenID4VP - draft 19 (remote presentation), presentation exchange v2.0,</p> </li> <li> <p>ISO18013-5 (proximity presentation),</p> </li> <li> <p>OpenID4VCI draft 13 (issuing)</p> </li> <li> <p>Issuer functionality, to support development and testing, one can access an OID4VCI test/demo service for issuing at: </p> </li> <li> <p>EUDI Issuer (Draft 13)</p> </li> <li> <p>OpenID4VCI PID and mDL Issuer (python)</p> </li> <li> <p>OpenID4VCI PID and mDL Issuer (kotlin)</p> </li> </ul> <p>Relying Party functionality:</p> <p>To support development and testing, one can access a test/demo service for remote presentation at:</p> <ul> <li> <p>EUDI Verifier </p> </li> <li> <p>Web verifier source</p> </li> <li> <p>Verifier restful backend service source</p> </li> </ul> <p>To support proximity an Android Proximity Verifier is available as an app that can request PID and mDL with reader authentication available here</p> <p>The issuer, verifier service, and verifier app authentication are based on the EUDIW development IACA</p>"},{"location":"eudi-app-android-wallet-ui/#important-things-to-know","title":"Important things to know","text":"<p>The main purpose of the reference implementation is to showcase the ecosystem and act as a technical example of how to integrate and use all of the available components.</p> <p>If you're planning to use this application in production, we recommend reviewing the following steps: - Configure the application properly by following the guide here - Ensure the Pin storage configuration matches your security requirements or provide your own by following this guide Pin Storage Configuration - Ensure the application meets the OWASP MASVS industry standard. Please refer to the following links for further information on the controls you must implement to ensure maximum compliance:     - OWASP MASVS     - Play Integrity API</p>"},{"location":"eudi-app-android-wallet-ui/#how-to-contribute","title":"How to contribute","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, follow the guidelines found in CONTRIBUTING.md.</p>"},{"location":"eudi-app-android-wallet-ui/#demo-videos","title":"Demo videos","text":"<p>Issuance</p> <p>Issuance</p> <p>Presentation</p> <p>Presentation</p> <p>Proximity</p> <p>Proximity</p>"},{"location":"eudi-app-android-wallet-ui/#how-to-use-the-application","title":"How to use the application","text":""},{"location":"eudi-app-android-wallet-ui/#minimum-device-requirements","title":"Minimum device requirements","text":"<ul> <li>API level 26.</li> </ul>"},{"location":"eudi-app-android-wallet-ui/#prerequisites","title":"Prerequisites","text":"<p>You can download the application here</p> <p>You will also need to download the Android Verifier app. More information can be found here</p>"},{"location":"eudi-app-android-wallet-ui/#app-launch","title":"App launch","text":"<ol> <li>Launch the application</li> <li>You will be presented with a welcome screen where you will be asked to create a PIN for future logins.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/#issuance-flow-scoped","title":"Issuance flow (Scoped)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Pick \"National ID\".</li> <li>From the web view that appears select the \"FormEU\" option and tap submit.</li> <li>Fill in the form. Any data will do.</li> <li>You will be shown a success screen. Tap next.</li> <li>Your \"National ID\" is displayed. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/#issuance-flow-credential-offer","title":"Issuance flow (Credential Offer)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Tap \"SCAN QR\".</li> <li>Scan The QR Code from the issuer's website EUDI Issuer</li> <li>Review the documents contained in the credential offer and tap \"Issue\".</li> <li>You will be shown a success screen. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol> <p>While on the \"Dashboard\" screen you can tap \"Add doc\" and issue a new document, e.g. \"Driving License\".</p> <p>If you want to re-issue a document, you must delete it first by tapping on it in the \"Dashboard\" screen and tapping the delete icon in the \"Document details\" view.</p>"},{"location":"eudi-app-android-wallet-ui/#presentation-online-authenticationsame-device-flow","title":"Presentation (Online authentication/Same device) flow.","text":"<ol> <li>Go to the browser application on your device and enter \"https://verifier.eudiw.dev\"</li> <li>Select scenario \"PID Authentication\"</li> <li>Expand the Person Identification Data (PID) card and select \"attributes by\" -&gt; \"Specific attributes\" and \"format\" -&gt; the format of your choice.</li> <li>Press next and then \"Select Attributes\"</li> <li>Pick the fields you want to share (e.g. \"Family Name\" and \"Given Name\")</li> <li>Review your presentation request and then click next.</li> <li>When asked to open the wallet app tap \"Open\".</li> <li>You will be returned to the app's \"Request\" screen. Tap \"Share.\"</li> <li>Enter the PIN you added in the initial steps.</li> <li>On success tap \"Continue\".</li> <li>A browser will open showing that the Verifier has accepted your request.</li> <li>Return to the app. You are back on the \"Dashboard\" screen, and the flow is complete.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/#proximity-flow","title":"Proximity flow","text":"<ol> <li>The user logs in successfully to the EUDI Wallet app and views the dashboard.</li> <li>The user clicks the 'SHOW QR/TAP' button to display the QR code.</li> <li>The Relying Party scans the presented QR code.</li> <li> <p>EUDI Wallet User can view the requested data set from the relying party.</p> <ol> <li>The distinction between mandatory and optional data elements is depicted.</li> <li>The requestor (i.e. relying party) of the data is depicted.</li> <li>EUDI Wallet User may select additional optional attributes to be shared.</li> <li>EUDI Wallet User selects the option to share the attributes.</li> <li>EUDI Wallet authenticates to share data (quick PIN).</li> <li>User authorization is accepted - a corresponding message is displayed to the  EUDI Wallet User.</li> </ol> </li> </ol>"},{"location":"eudi-app-android-wallet-ui/#how-to-build-quick-start-guide","title":"How to build - Quick start guide","text":"<p>This document describes how you can build the application and deploy the issuing and verification services locally.</p>"},{"location":"eudi-app-android-wallet-ui/#application-configuration","title":"Application configuration","text":"<p>You can find instructions on how to configure the application here</p>"},{"location":"eudi-app-android-wallet-ui/#disclaimer","title":"Disclaimer","text":"<p>The released software is an initial development release version:  -  The initial development release is an early endeavor reflecting the efforts of a short time-boxed period, and by no means can be considered as the final product. -  The initial development release may be changed substantially over time, might introduce new features but also may change or remove existing ones, potentially breaking compatibility with your existing code. -  The initial development release is limited in functional scope. -  The initial development release may contain errors or design flaws and other problems that could cause system or other failures and data loss. -  The initial development release has reduced security, privacy, availability, and reliability standards relative to future releases. This could make the software slower, less reliable, or more vulnerable to attacks than mature software. -  The initial development release is not yet comprehensively documented.  -  Users of the software must perform sufficient engineering and additional testing to properly evaluate their application and determine whether any of the open-sourced components are suitable for use in that application. -  We strongly recommend not putting this version of the software into production use. -  Only the latest version of the software will be supported</p>"},{"location":"eudi-app-android-wallet-ui/#package-structure","title":"Package structure","text":"<p>assembly-logic: App dependencies.</p> <p>build-logic: Application gradle plugins.</p> <p>resources-logic: All app resources reside here (images, etc.)</p> <p>analytics-logic: Access to analytics providers. Capabilities for test monitoring analytics (i.e. crashes) can be added here (no functionality right now)</p> <p>business-logic: App business logic.</p> <p>core-logic: Wallet core logic.</p> <p>storage-logic: Persistent storage cache.</p> <p>authentication-logic: Pin/Biometry Storage and System Biometrics Logic.</p> <p>ui-logic: Common UI components.</p> <p>common-feature: Code that is common to all features.</p> <p>dashboard-feature: The application main screen.</p> <p>startup-feature: The initial screen of the app.</p> <p>presentation-feature: Online authentication feature.</p> <p>issuance-feature: Document issuance feature.</p> <p>proximity-feature: Proximity scenarios feature.</p> <pre><code>graph TD;\n  startup-feature --&gt; assembly-logic\n  dashboard-feature --&gt; assembly-logic\n  presentation-feature --&gt; assembly-logic\n  proximity-feature --&gt; assembly-logic\n  issuance-feature --&gt; assembly-logic\n\n  common-feature --&gt; startup-feature\n  common-feature --&gt; dashboard-feature\n  common-feature --&gt; presentation-feature\n  common-feature --&gt; proximity-feature\n  common-feature --&gt; issuance-feature\n\n  business-logic --&gt;common-feature\n  ui-logic --&gt;common-feature\n  network-logic --&gt;common-feature\n  resources-logic --&gt;common-feature\n  analytics-logic --&gt;common-feature \n  authentication-logic --&gt;common-feature \n  core-logic --&gt;common-feature\n  storage-logic --&gt;common-feature \n\n  business-logic --&gt;core-logic\n  resources-logic --&gt;core-logic\n  authentication-logic --&gt;core-logic\n\n  business-logic --&gt;ui-logic\n  resources-logic --&gt;ui-logic\n  analytics-logic --&gt;ui-logic\n\n  business-logic --&gt;network-logic\n\n  business-logic --&gt;storage-logic\n\n  resources-logic --&gt;storage-logic\n\n  resources-logic --&gt;business-logic\n\n  resources-logic --&gt; authentication-logic\n  business-logic --&gt; authentication-logic\n</code></pre>"},{"location":"eudi-app-android-wallet-ui/#license","title":"License","text":""},{"location":"eudi-app-android-wallet-ui/#license-details","title":"License details","text":"<p>Copyright \u00a9 2023 European Commission</p> <p>Licensed under the EUPL, Version 1.2 or - as soon they will be approved by the European Commission - subsequent versions of the EUPL (the \"Licence\"); You may not use this work except in compliance with the Licence.</p> <p>You may obtain a copy of the Licence at: https://joinup.ec.europa.eu/software/page/eupl</p> <p>Unless required by applicable law or agreed to in writing, software distributed under  the Licence is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF  ANY KIND, either express or implied. See the Licence for the specific language  governing permissions and limitations under the Licence.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home / eudi-app-android-wallet-ui / CODE_OF_CONDUCT</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home / eudi-app-android-wallet-ui / CONTRIBUTING</p>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> </li> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another     round of review.</li> </ul>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:</li> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-app-android-wallet-ui/SECURITY/","title":"SECURITY","text":"<p>Home / eudi-app-android-wallet-ui / SECURITY</p>"},{"location":"eudi-app-android-wallet-ui/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-app-android-wallet-ui/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-app-android-wallet-ui/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-app-android-wallet-ui/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-app-android-wallet-ui/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/","title":"How to use app","text":"<p>Home / eudi-app-android-wallet-ui / how-to-use-app</p>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#how-to-use-the-application","title":"How to use the application","text":""},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#minimum-device-requirements","title":"Minimum device requirements","text":"<ul> <li>API level 26.</li> </ul>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#prerequisites","title":"Prerequisites","text":"<p>You can download the application here</p> <p>You will also need to download the Android Verifier app. More information can be found here</p>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#app-launch","title":"App launch","text":"<ol> <li>Launch the application</li> <li>You will be presented with a welcome screen where you will be asked to create a PIN for future logins.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#issuance-flow-scoped","title":"Issuance flow (Scoped)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Pick \"National ID\".</li> <li>From the web view that appears select the \"FormEU\" option and tap submit.</li> <li>Fill in the form. Any data will do.</li> <li>You will be shown a success screen. Tap next.</li> <li>Your \"National ID\" is displayed. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#issuance-flow-credential-offer","title":"Issuance flow (Credential Offer)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Tap \"SCAN QR\".</li> <li>Scan The QR Code from the issuer's website EUDI Issuer</li> <li>Review the documents contained in the credential offer and tap \"Issue\".</li> <li>You will be shown a success screen. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol> <p>While on the \"Dashboard\" screen you can tap \"Add doc\" and issue a new document, e.g. \"Driving License\".</p> <p>If you want to re-issue a document you must delete it first by tapping on the document in the \"Dashboard\" screen and tapping the delete icon in the \"Document details\" view.</p>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#presentation-online-authenticationsame-device-flow","title":"Presentation (Online authentication/Same device) flow.","text":"<ol> <li>Go to the browser application on your device and enter \"https://verifier.eudiw.dev\"</li> <li>Tap the first option (selectable) and pick the fields you want to share (e.g. \"Family Name\" and \"Given Name\")</li> <li>Tap \"Next\" and then \"Authorize\".</li> <li>When asked to open the wallet app tap \"Open\".</li> <li>You will be returned to the app to the \"Request\" screen. Tap \"Share\".</li> <li>Enter the PIN you added in the initial steps.</li> <li>On success tap \"Continue\".</li> <li>A browser will open showing that the Verifier has accepted your request.</li> <li>Return to the app. You are back to the \"Dashboard\" screen and the flow is complete.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#proximity-flow","title":"Proximity flow","text":"<ol> <li>The user logs in successfully to the EUDI Wallet app and views the dashboard.</li> <li>The user clicks the 'SHOW QR/TAP' button to display the QR code.</li> <li>The Relying Party scans the presented QR code.</li> <li> <p>EUDI Wallet User can view the requested data set from the relying party.</p> <ol> <li>The distinction between mandatory and optional data elements is depicted.</li> <li>The requestor (i.e. relying party) of the data is depicted.</li> <li>EUDI Wallet User may select additional optional attributes to be shared.</li> <li>EUDI Wallet User selects the option to share the attributes.</li> <li>EUDI Wallet authenticates to share data (quick PIN).</li> <li>User authorization is accepted - a corresponding message is displayed to the  EUDI Wallet User.</li> </ol> </li> </ol>"},{"location":"eudi-app-android-wallet-ui/fastlane/","title":"Index","text":"<p>Home / eudi-app-android-wallet-ui / fastlane fastlane documentation</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#installation","title":"Installation","text":"<p>Make sure you have the latest version of the Xcode command line tools installed:</p> <pre><code>xcode-select --install\n</code></pre> <p>For fastlane installation instructions, see Installing fastlane</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#available-actions","title":"Available Actions","text":""},{"location":"eudi-app-android-wallet-ui/fastlane/#android","title":"Android","text":""},{"location":"eudi-app-android-wallet-ui/fastlane/#android-tests","title":"android tests","text":"<pre><code>[bundle exec] fastlane android tests\n</code></pre> <p>Runs all the unit tests</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#android-deploy","title":"android deploy","text":"<pre><code>[bundle exec] fastlane android deploy\n</code></pre> <p>Build Wallet and upload it to appcenter</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#android-upload_tag","title":"android upload_tag","text":"<pre><code>[bundle exec] fastlane android upload_tag\n</code></pre> <p>Upload tag to remote repo</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#android-upload_to_appcenter","title":"android upload_to_appcenter","text":"<pre><code>[bundle exec] fastlane android upload_to_appcenter\n</code></pre> <p>Upload to AppCenter</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#android-latest_appcenter_release","title":"android latest_appcenter_release","text":"<pre><code>[bundle exec] fastlane android latest_appcenter_release\n</code></pre> <p>Get Release version From AppCenter</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#android-build_number","title":"android build_number","text":"<pre><code>[bundle exec] fastlane android build_number\n</code></pre> <p>Build Number</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#android-tag_name","title":"android tag_name","text":"<pre><code>[bundle exec] fastlane android tag_name\n</code></pre> <p>Build Tag Name</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#android-full_version","title":"android full_version","text":"<pre><code>[bundle exec] fastlane android full_version\n</code></pre> <p>Get version version From Project</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#android-reset_versioncode","title":"android reset_versioncode","text":"<pre><code>[bundle exec] fastlane android reset_versioncode\n</code></pre> <p>Set versionCode back to default 1</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#android-reset_versionname","title":"android reset_versionName","text":"<pre><code>[bundle exec] fastlane android reset_versionName\n</code></pre> <p>Set versionName back to default yyyy.d.m</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#android-set_version","title":"android set_version","text":"<pre><code>[bundle exec] fastlane android set_version\n</code></pre> <p>Build VersionName based on CalVer</p> <p>This README.md is auto-generated and will be re-generated every time fastlane is run.</p> <p>More information about fastlane can be found on fastlane.tools.</p> <p>The documentation of fastlane can be found on docs.fastlane.tools.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/","title":"Configuration","text":"<p>Home / eudi-app-android-wallet-ui / wiki / configuration</p>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#how-to-configure-the-application","title":"How to configure the application","text":""},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#table-of-contents","title":"Table of contents","text":"<ul> <li>General configuration</li> <li>DeepLink Schemas configuration</li> <li>Scoped Issuance Document Configuration</li> <li>How to work with self-signed certificates</li> <li>Theme configuration</li> <li>Pin Storage configuration</li> <li>Analytics configuration</li> </ul>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#general-configuration","title":"General configuration","text":"<p>The application allows the configuration of:</p> <ol> <li>Issuing API</li> </ol> <p>Via the WalletCoreConfig interface inside the business-logic module.</p> <pre><code>interface WalletCoreConfig {\n    val config: EudiWalletConfig\n}\n</code></pre> <p>You can configure the EudiWalletConfig per flavor. You can find both implementations inside the core-logic module at src/demo/config/WalletCoreConfigImpl and src/dev/config/WalletCoreConfigImpl</p> <pre><code>    private companion object {\n        const val VCI_ISSUER_URL = \"https://issuer.eudiw.dev/oidc\"\n        const val VCI_CLIENT_ID = \"wallet-demo\"\n        const val AUTHENTICATION_REQUIRED = false\n    }\n</code></pre> <ol> <li>Trusted certificates</li> </ol> <p>Via the WalletCoreConfig interface.</p> <pre><code>interface WalletCoreConfig {\n    val config: EudiWalletConfig\n}\n</code></pre> <p>Same as the Verifier and Issuing APIs you can configure the Trusted certificates for the EudiWalletConfig per flavor inside the core-logic module at src/demo/config/WalletCoreConfigImpl and src/dev/config/WalletCoreConfigImpl</p> <pre><code>_config = EudiWalletConfig.Builder(context)\n            .trustedReaderCertificates(R.raw.eudi_pid_issuer_ut)\n            .build()\n</code></pre> <p>The application's IACA certificates are located here</p> <ol> <li>Preregistered Client Scheme</li> </ol> <p>If you plan to use the ClientIdScheme.Preregistered for OpenId4VP configuration, please add the following to the configuration files.</p> <pre><code>const val OPENID4VP_VERIFIER_API_URI = \"your_verifier_url\"\nconst val OPENID4VP_VERIFIER_LEGAL_NAME = \"your_verifier_legal_name\"\nconst val OPENID4VP_VERIFIER_CLIENT_ID = \"your_verifier_client_id\"\n\n.openId4VpConfig {\n    withClientIdSchemes(\n        listOf(\n            ClientIdScheme.Preregistered(\n                listOf(\n                    PreregisteredVerifier(\n                        clientId = OPENID4VP_VERIFIER_CLIENT_ID,\n                        verifierApi = OPENID4VP_VERIFIER_API_URI,\n                        legalName = OPENID4VP_VERIFIER_LEGAL_NAME\n                    )\n                )\n            )\n        )\n    )\n}\n</code></pre> <ol> <li>RQES</li> </ol> <p>Via the ConfigLogic interface inside the business-logic module.</p> <pre><code>interface ConfigLogic {\n    /**\n     * RQES Config.\n     */\n    val rqesConfig: EudiRQESUiConfig\n}\n</code></pre> <p>You can configure the RQESConfig, which implements the EudiRQESUiConfig interface from the RQESUi SDK, per flavor. You can find both implementations inside the business-logic module at src/demo/config/RQESConfigImpl and src/dev/config/RQESConfigImpl.</p> <pre><code>class RQESConfigImpl : EudiRQESUiConfig {\n\n    // Optional. Default English translations will be used if not set.\n    override val translations: Map&lt;String, Map&lt;LocalizableKey, String&gt;&gt; get()\n\n    // Optional. Default theme will be used if not set.\n    override val themeManager: ThemeManager get()\n\n    override val rqesServiceConfig: RqesServiceConfig get()\n\n    override val qtsps: List&lt;QtspData&gt; get()\n\n    // Optional. Default is false.\n    override val printLogs: Boolean get()\n}\n</code></pre> <p>Example:</p> <pre><code>class RQESConfigImpl : EudiRQESUiConfig {\n\n    override val rqesServiceConfig: RqesServiceConfig\n        get() = RqesServiceConfig(\n            clientId = \"your_clientid\",\n            clientSecret = \"your_secret\",\n            authFlowRedirectionURI = URI.create(\"your_uri\"),\n            hashAlgorithm = HashAlgorithmOID.SHA_256,\n        )\n\n    override val qtsps: List&lt;QtspData&gt;\n        get() = listOf(\n            QtspData(\n                name = \"your_name\",\n                endpoint = \"your_endpoint\".toUri(),\n                scaUrl = \"your_sca\",\n            )\n        )\n\n    override val printLogs: Boolean get() = BuildConfig.DEBUG\n}\n</code></pre>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#deeplink-schemas-configuration","title":"DeepLink Schemas configuration","text":"<p>According to the specifications issuance and presentation require deep-linking for the same device flows.</p> <p>If you want to adjust any schema, you can alter the AndroidLibraryConventionPlugin inside the build-logic module.</p> <pre><code>val eudiOpenId4VpScheme = \"eudi-openid4vp\"\nval eudiOpenid4VpHost = \"*\"\n\nval mdocOpenId4VpScheme = \"mdoc-openid4vp\"\nval mdocOpenid4VpHost = \"*\"\n\nval openId4VpScheme = \"openid4vp\"\nval openid4VpHost = \"*\"\n\nval credentialOfferScheme = \"openid-credential-offer\"\nval credentialOfferHost = \"*\"\n</code></pre> <p>Let's assume you want to change the credential offer schema to custom-my-offer:// the AndroidLibraryConventionPlugin should look like this:</p> <pre><code>val eudiOpenId4VpScheme = \"eudi-openid4vp\"\nval eudiOpenid4VpHost = \"*\"\n\nval mdocOpenId4VpScheme = \"mdoc-openid4vp\"\nval mdocOpenid4VpHost = \"*\"\n\nval openId4VpScheme = \"openid4vp\"\nval openid4VpHost = \"*\"\n\nval credentialOfferScheme = \"custom-my-offer\"\nval credentialOfferHost = \"*\"\n</code></pre> <p>In case of an additive change, e.g. adding an extra credential offer schema, you must adjust the following.</p> <p>AndroidLibraryConventionPlugin:</p> <pre><code>val credentialOfferScheme = \"openid-credential-offer\"\nval credentialOfferHost = \"*\"\n\nval myOwnCredentialOfferScheme = \"custom-my-offer\"\nval myOwnCredentialOfferHost = \"*\"\n</code></pre> <pre><code>// Manifest placeholders used for OpenId4VCI\nmanifestPlaceholders[\"credentialOfferHost\"] = credentialOfferHost\nmanifestPlaceholders[\"credentialOfferScheme\"] = credentialOfferScheme\nmanifestPlaceholders[\"myOwnCredentialOfferHost\"] = myOwnCredentialOfferHost\nmanifestPlaceholders[\"myOwnCredentialOfferScheme\"] = myOwnCredentialOfferScheme\n</code></pre> <pre><code>addConfigField(\"CREDENTIAL_OFFER_SCHEME\", credentialOfferScheme)\naddConfigField(\"MY_OWN_CREDENTIAL_OFFER_SCHEME\", myOwnCredentialOfferScheme)\n</code></pre> <p>Android Manifest (inside assembly-logic module):</p> <pre><code>&lt;intent-filter&gt;\n    &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\n\n    &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\n    &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\n\n        &lt;data\n            android:host=\"${credentialOfferHost}\"\n            android:scheme=\"${credentialOfferScheme}\" /&gt;\n\n    &lt;/intent-filter&gt;\n\n&lt;intent-filter&gt;\n    &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\n\n    &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\n    &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\n\n        &lt;data\n            android:host=\"${myOwnCredentialOfferHost}\"\n            android:scheme=\"${myOwnCredentialOfferScheme}\" /&gt;\n\n&lt;/intent-filter&gt;\n</code></pre> <p>DeepLinkType (DeepLinkHelper Object inside ui-logic module):</p> <pre><code>enum class DeepLinkType(val schemas: List&lt;String&gt;, val host: String? = null) {\n\n    OPENID4VP(\n        schemas = listOf(\n            BuildConfig.OPENID4VP_SCHEME,\n            BuildConfig.EUDI_OPENID4VP_SCHEME,\n            BuildConfig.MDOC_OPENID4VP_SCHEME\n        )\n    ),\n    CREDENTIAL_OFFER(\n        schemas = listOf(\n            BuildConfig.CREDENTIAL_OFFER_SCHEME,\n            BuildConfig.MY_OWN_CREDENTIAL_OFFER_SCHEME\n        )\n    ),\n    ISSUANCE(\n        schemas = listOf(BuildConfig.ISSUE_AUTHORIZATION_SCHEME),\n        host = BuildConfig.ISSUE_AUTHORIZATION_HOST\n    ),\n    EXTERNAL(listOf(\"external\"))\n}\n</code></pre> <p>In the case of an additive change regarding openId4VP, you also need to update the EudiWalletConfig for each flavor inside the core-logic module.</p> <pre><code>.openId4VpConfig {\n    withScheme(\n        listOf(\n                BuildConfig.OPENID4VP_SCHEME,\n                BuildConfig.EUDI_OPENID4VP_SCHEME,\n                BuildConfig.MDOC_OPENID4VP_SCHEME,\n                BuildConfig.YOUR_OWN_OPENID4VP_SCHEME\n            )\n    )\n}\n</code></pre>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#scoped-issuance-document-configuration","title":"Scoped Issuance Document Configuration","text":"<p>The credential configuration is derived directly from the issuer's metadata. The issuer URL is configured per flavor via the configureOpenId4Vci method inside the core-logic module at src/demo/config/WalletCoreConfigImpl and src/dev/config/WalletCoreConfigImpl. If you want to add or adjust the displayed scoped documents, you must modify the issuer's metadata, and the wallet will automatically resolve your changes.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#how-to-work-with-self-signed-certificates","title":"How to work with self-signed certificates","text":"<p>This section describes configuring the application to interact with services utilizing self-signed certificates.</p> <ol> <li>Open the build.gradle.kts file of the \"core-logic\" module.</li> <li>In the 'dependencies' block add the following two:     <pre><code>implementation(libs.ktor.android)\nimplementation(libs.ktor.logging)\n</code></pre></li> <li>Now, you need to create a new kotlin file ProvideKtorHttpClient and place it into the srcmainjavaeueuropaeccorelogicconfig package.</li> <li>Copy and paste the following into your newly created ProvideKtorHttpClient kotlin file.     <pre><code>import android.annotation.SuppressLint\nimport io.ktor.client.HttpClient\nimport io.ktor.client.engine.android.Android\nimport io.ktor.client.plugins.logging.Logging\nimport java.security.SecureRandom\nimport javax.net.ssl.HostnameVerifier\nimport javax.net.ssl.SSLContext\nimport javax.net.ssl.TrustManager\nimport javax.net.ssl.X509TrustManager\nimport javax.security.cert.CertificateException\n\nobject ProvideKtorHttpClient {\n\n    @SuppressLint(\"TrustAllX509TrustManager\", \"CustomX509TrustManager\")\n    fun client(): HttpClient {\n        val trustAllCerts = arrayOf&lt;TrustManager&gt;(\n            object : X509TrustManager {\n                @Throws(CertificateException::class)\n                override fun checkClientTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                @Throws(CertificateException::class)\n                override fun checkServerTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                override fun getAcceptedIssuers(): Array&lt;java.security.cert.X509Certificate&gt; {\n                    return arrayOf()\n                }\n            }\n        )\n\n        return HttpClient(Android) {\n            install(Logging)\n            engine {\n                requestConfig\n                sslManager = { httpsURLConnection -&gt;\n                    httpsURLConnection.sslSocketFactory = SSLContext.getInstance(\"TLS\").apply {\n                        init(null, trustAllCerts, SecureRandom())\n                    }.socketFactory\n                    httpsURLConnection.hostnameVerifier = HostnameVerifier { _, _ -&gt; true }\n                }\n            }\n        }\n    }\n\n}\n</code></pre></li> <li>Finally, add this custom HttpClient to the EudiWallet provider function provideEudiWallet located in LogicCoreModule.kt <pre><code>@Single\nfun provideEudiWallet(\ncontext: Context,\nwalletCoreConfig: WalletCoreConfig,\nwalletCoreLogController: WalletCoreLogController\n): EudiWallet = EudiWallet(context, walletCoreConfig.config) {\n    withLogger(walletCoreLogController)\n    // Custom HttpClient\n    withKtorHttpClientFactory {\n        ProvideKtorHttpClient.client()\n    }\n}\n</code></pre></li> </ol>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#theme-configuration","title":"Theme configuration","text":"<p>The application allows the configuration of:</p> <ol> <li>Colors</li> <li>Images</li> <li>Shape</li> <li>Fonts</li> <li>Dimension</li> </ol> <p>Via ThemeManager.Builder().</p>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#pin-storage-configuration","title":"Pin Storage configuration","text":"<p>The application allows the configuration of the PIN storage. You can configure the following:</p> <ol> <li>Where the pin will be stored</li> <li>From where the pin will be retrieved</li> <li>Pin matching and validity</li> </ol> <p>Via the StorageConfig inside the authentication-logic module.</p> <pre><code>interface StorageConfig {\n    val pinStorageProvider: PinStorageProvider\n    val biometryStorageProvider: BiometryStorageProvider\n}\n</code></pre> <p>You can provide your storage implementation by implementing the PinStorageProvider interface and then setting it as default to the StorageConfigImpl pinStorageProvider variable. The project utilizes Koin for Dependency Injection (DI), thus requiring adjustment of the LogicAuthenticationModule graph to provide the configuration.</p> <p>Implementation Example: <pre><code>class PrefsPinStorageProvider(\n    private val prefsController: PrefsController\n) : PinStorageProvider {\n\n    override fun retrievePin(): String {\n        return prefsController.getString(\"DevicePin\", \"\")\n    }\n\n    override fun setPin(pin: String) {\n        prefsController.setString(\"DevicePin\", pin)\n    }\n\n    override fun isPinValid(pin: String): Boolean = retrievePin() == pin\n}\n</code></pre></p> <p>Config Example: <pre><code>class StorageConfigImpl(\n    private val pinImpl: PinStorageProvider,\n    private val biometryImpl: BiometryStorageProvider\n) : StorageConfig {\n    override val pinStorageProvider: PinStorageProvider\n        get() = pinImpl\n    override val biometryStorageProvider: BiometryStorageProvider\n        get() = biometryImpl\n}\n</code></pre></p> <p>Config Construction via Koin DI Example: <pre><code>@Single\nfun provideStorageConfig(\n    prefsController: PrefsController\n): StorageConfig = StorageConfigImpl(\n    pinImpl = PrefsPinStorageProvider(prefsController),\n    biometryImpl = PrefsBiometryStorageProvider(prefsController)\n)\n</code></pre></p>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#analytics-configuration","title":"Analytics configuration","text":"<p>The application allows the configuration of multiple analytics providers. You can configure the following:</p> <ol> <li>Initializing the provider (e.g. Firebase, Appcenter, etc...)</li> <li>Screen logging</li> <li>Event logging</li> </ol> <p>Via the AnalyticsConfig inside the analytics-logic module.</p> <pre><code>interface AnalyticsConfig {\n    val analyticsProviders: Map&lt;String, AnalyticsProvider&gt;\n        get() = emptyMap()\n}\n</code></pre> <p>You can provide your implementation by implementing the AnalyticsProvider interface and then adding it to your AnalyticsConfigImpl analyticsProviders variable. You will also need the provider's token/key, thus requiring a Map configuration. The project utilizes Koin for Dependency Injection (DI), thus requiring adjustment of the LogicAnalyticsModule graph to provide the configuration. <p>Implementation Example: <pre><code>object AppCenterAnalyticsProvider : AnalyticsProvider {\n    override fun initialize(context: Application, key: String) {\n        AppCenter.start(\n            context,\n            key,\n            Analytics::class.java\n        )\n    }\n\n    override fun logScreen(name: String, arguments: Map&lt;String, String&gt;) {\n        logEvent(name, arguments)\n    }\n\n    override fun logEvent(event: String, arguments: Map&lt;String, String&gt;) {\n        if (Analytics.isEnabled().get()) {\n            Analytics.trackEvent(event, arguments)\n        }\n    }\n}\n</code></pre></p> <p>Config Example: <pre><code>class AnalyticsConfigImpl : AnalyticsConfig {\n    override val analyticsProviders: Map&lt;String, AnalyticsProvider&gt;\n        get() = mapOf(\"YOUR_OWN_KEY\" to AppCenterAnalyticsProvider)\n}\n</code></pre></p> <p>Config Construction via Koin DI Example: <pre><code>@Single\nfun provideAnalyticsConfig(): AnalyticsConfig = AnalyticsConfigImpl()\n</code></pre></p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/","title":"How to build","text":"<p>Home / eudi-app-android-wallet-ui / wiki / how_to_build</p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#building-the-reference-apps-to-interact-with-issuing-and-verifying-services","title":"Building the Reference apps to interact with issuing and verifying services.","text":""},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#table-of-contents","title":"Table of contents","text":"<ul> <li>Overview</li> <li>Setup Apps</li> <li>How to work with self signed certificates</li> </ul>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#overview","title":"Overview","text":"<p>This guide aims to assist developers build the Android application.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#setup-apps","title":"Setup Apps","text":""},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#eudi-android-wallet-reference-application","title":"EUDI Android Wallet reference application","text":"<p>You need Android Studio and its associated tools installed on your machine. We recommend the latest stable version. Clone the Android repository Open the project in Android Studio.</p> <p>The application has two product flavors: - \"Dev\", which communicates with the services deployed in an environment based on the latest main branch. - \"Demo\", which communicates with the services deployed in an environment based on the latest main branch.</p> <p>and two Build Types: - \"Debug\", which has full logging enabled. - \"Release\", which has no logging enabled.</p> <p>which, ultimately, result in the following Build Variants:</p> <ul> <li>\"devDebug\", \"devRelease\", \"demoDebug\", \"demoRelease\" .</li> </ul> <p>To change the Build Variant, go to Build -&gt; Select Build Variant and from the tool window you can click on the \"Active Build Variant\" of the module \":app\" and select the one you prefer. It will automatically apply it for the other modules as well.</p> <p>To run the App on a device, firstly you must connect your device with the Android Studio, and then go to Run -&gt; Run 'app'. To run the App on an emulator, simply go to Run -&gt; Run 'app'.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#running-with-remote-services","title":"Running with remote services","text":"<p>The app is configured to use some configuration in the two ConfigWalletCoreImpl.kt files (located in the \"core-logic\" module, in either srcdevjavaeueuropaeccorelogicconfig or srcdemojavaeueuropaeccorelogicconfig, depending on the flavor of your choice).</p> <p>These are the contents of the ConfigWalletCoreImpl file (dev flavor) and you don't need to change anything: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://dev.issuer.eudiw.dev\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#running-with-local-services","title":"Running with local services","text":"<p>The first step here is to have all three services running locally on your machine, you can follow these Repositories for further instructions: * Issuer * Web Verifier UI * Web Verifier Endpoint</p> <p>After this, and assuming you are now running everything locally, you need to change the contents of the ConfigWalletCoreImpl file, from: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://dev.issuer.eudiw.dev\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre> into something like this: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"local_IP_address_of_issuer\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p> <p>for example: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://192.168.1.1:5000\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p> <p>Finally, you have to also change the content of network_security_config.xml file and allow HTTP traffic, to this: <pre><code>&lt;network-security-config&gt;\n    &lt;base-config cleartextTrafficPermitted=\"true\" /&gt;\n&lt;/network-security-config&gt;\n</code></pre></p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#how-to-work-with-self-signed-certificates","title":"How to work with self-signed certificates","text":"<p>This section describes configuring the application to interact with services utilizing self-signed certificates.</p> <ol> <li>Open the build.gradle.kts file of the \"core-logic\" module.</li> <li>In the 'dependencies' block add the following two:     <pre><code>implementation(libs.ktor.android)\nimplementation(libs.ktor.logging)\n</code></pre></li> <li>Now, you need to create a new kotlin file ProvideKtorHttpClient and place it into the srcmainjavaeueuropaeccorelogicconfig package.</li> <li>Copy and paste the following into your newly created ProvideKtorHttpClient kotlin file.     <pre><code>import android.annotation.SuppressLint\nimport io.ktor.client.HttpClient\nimport io.ktor.client.engine.android.Android\nimport io.ktor.client.plugins.logging.Logging\nimport java.security.SecureRandom\nimport javax.net.ssl.HostnameVerifier\nimport javax.net.ssl.SSLContext\nimport javax.net.ssl.TrustManager\nimport javax.net.ssl.X509TrustManager\nimport javax.security.cert.CertificateException\n\nobject ProvideKtorHttpClient {\n\n    @SuppressLint(\"TrustAllX509TrustManager\", \"CustomX509TrustManager\")\n    fun client(): HttpClient {\n        val trustAllCerts = arrayOf&lt;TrustManager&gt;(\n            object : X509TrustManager {\n                @Throws(CertificateException::class)\n                override fun checkClientTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                @Throws(CertificateException::class)\n                override fun checkServerTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                override fun getAcceptedIssuers(): Array&lt;java.security.cert.X509Certificate&gt; {\n                    return arrayOf()\n                }\n            }\n        )\n\n        return HttpClient(Android) {\n            install(Logging)\n            engine {\n                requestConfig\n                sslManager = { httpsURLConnection -&gt;\n                    httpsURLConnection.sslSocketFactory = SSLContext.getInstance(\"TLS\").apply {\n                        init(null, trustAllCerts, SecureRandom())\n                    }.socketFactory\n                    httpsURLConnection.hostnameVerifier = HostnameVerifier { _, _ -&gt; true }\n                }\n            }\n        }\n    }\n\n}\n</code></pre></li> <li>Finally, add this custom HttpClient to the EudiWallet provider function provideEudiWallet located in LogicCoreModule.kt <pre><code>@Single\nfun provideEudiWallet(\ncontext: Context,\nwalletCoreConfig: WalletCoreConfig,\nwalletCoreLogController: WalletCoreLogController\n): EudiWallet = EudiWallet(context, walletCoreConfig.config) {\n    withLogger(walletCoreLogController)\n    // Custom HttpClient\n    withKtorHttpClientFactory {\n        ProvideKtorHttpClient.client()\n    }\n}\n</code></pre></li> </ol> <p>For all configuration options please refer to this document</p>"},{"location":"eudi-app-android-wallet-ui/wiki/verifier_proximity/","title":"Verifier proximity","text":"<p>Home / eudi-app-android-wallet-ui / wiki / verifier_proximity</p>"},{"location":"eudi-app-android-wallet-ui/wiki/verifier_proximity/#mdoc-verifier-testing","title":"mDoc Verifier (Testing)","text":"<p>The mDoc Verifier (Testing) is an Android application based on the <code>appverifier</code> from the Google Identity Credential library, implementing ISO/IEC 18013-5:2021.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/verifier_proximity/#purpose","title":"Purpose","text":"<p>The mDoc Verifier (Testing) app is provided to help developers test and validate their wallet implementations.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/verifier_proximity/#modifications","title":"Modifications","text":"<p>Starting from the original code of the <code>appverifier</code> here, the following modifications have been made:</p> <ul> <li>Support for requesting EU Documents:</li> <li>Personal Identification Data (PID) document, according to the ARF PID RuleBook.</li> <li>Age Verification (Pseudonym) document.</li> <li>IACA Certificates: Updated to support EUDI Wallet IACAs as trusted certificates.</li> <li>Reader Authentication Certificate.</li> </ul> <p>The app is available for download from the App Center, here  (the code is not currently publicly available).</p>"},{"location":"eudi-app-android-wallet-ui/wiki/verifier_proximity/#important-note","title":"Important Note","text":"<p>The mDoc Verifier (Testing) app is a testing tool for developers to validate their wallet implementations.  It is not intended for production use.  The app may contain bugs or other issues that affect its functionality on different mobile devices or Android versions. These issues will be addressed in the upcoming open-source library, which will be available for developers to build their own verifier applications.</p>"},{"location":"eudi-lib-ios-wallet-kit/","title":"Index","text":"<p>Home / eudi-lib-ios-wallet-kit</p>"},{"location":"eudi-lib-ios-wallet-kit/#eudi-wallet-kit-library-for-ios","title":"EUDI Wallet Kit library for iOS","text":"<p>Important! Before you proceed, please read the EUDI Wallet Reference Implementation project description</p>"},{"location":"eudi-lib-ios-wallet-kit/#eudi-iso-ios-wallet-kit-library","title":"EUDI ISO iOS Wallet Kit library","text":""},{"location":"eudi-lib-ios-wallet-kit/#overview","title":"Overview","text":"<p>This repository contains the EUDI Wallet Kit library for iOS. The library is a part of the EUDI Wallet Reference Implementation project.</p> <p>This library acts as a coordinator by orchestrating the various components that are required to implement the EUDI Wallet functionality. On top of that, it provides a simplified API that can be used by the application to implement the EUDI Wallet functionality.</p> <pre><code>graph TD;\n    A[eudi-lib-ios-wallet-kit]\n    B[eudi-lib-ios-wallet-storage] --&gt;  |Wallet Storage|A \n    C[eudi-lib-ios-iso18013-data-transfer] --&gt; |Transfer Manager|A \n    D[eudi-lib-ios-openid4vci-swift] --&gt; |OpenId4Vci Manager|A \n    E[eudi-lib-ios-siop-openid4vp-swift] --&gt; |OpenId4Vp Manager|A \n    F[eudi-lib-ios-iso18013-security] --&gt; |Mdoc Security|C \n    G[eudi-lib-ios-iso18013-data-model] --&gt; |Mdoc Data Model|C \n    H[eudi-lib-ios-presentation-exchange-swift] --&gt; E \n</code></pre> <p>The library provides the following functionality:</p> <ul> <li>Document management<ul> <li> Storage encryption</li> <li> Using iOS Secure Enclave for generating/storing documents' keypair</li> <li> Enforcing device user authentication when retrieving documents' private keys</li> </ul> </li> <li>Document issuance<ul> <li> Support for OpenId4VCI document issuance<ul> <li> Authorization Code Flow</li> <li> Pre-authorization Code Flow</li> <li> Support for mso_mdoc format</li> <li> Support for sd-jwt-vc format</li> <li> Support credential offer</li> <li> Support for DPoP JWT in authorization</li> <li> Support for JWT and CWT proof types</li> <li> Support for deferred issuing</li> </ul> </li> </ul> </li> <li>Proximity document presentation<ul> <li> Support for ISO-18013-5 device retrieval<ul> <li> QR device engagement</li> <li> BLE data transfer</li> </ul> </li> </ul> </li> <li>Remote document presentation<ul> <li> OpenId4VP document transfer<ul> <li> For pre-registered verifiers</li> <li> Dynamic registration of verifiers</li> </ul> </li> </ul> </li> </ul> <p>The library is written in Swift and is compatible with iOS 14 or higher. It is distributed as a Swift package and can be included in any iOS project.</p> <p>It is based on the following specifications: - ISO/IEC 18013-5 \u2013 Published - Presentation Exchange v2.0.0 - Published - OpenID4VP \u2013 Draft 18 - SIOPv2 \u2013 Draft</p>"},{"location":"eudi-lib-ios-wallet-kit/#disclaimer","title":"Disclaimer","text":"<p>The released software is a initial development release version:  -  The initial development release is an early endeavor reflecting the efforts of a short timeboxed period, and by no means can be considered as the final product. -  The initial development release may be changed substantially over time, might introduce new features but also may change or remove existing ones, potentially breaking compatibility with your existing code. -  The initial development release is limited in functional scope. -  The initial development release may contain errors or design flaws and other problems that could cause system or other failures and data loss. -  The initial development release has reduced security, privacy, availability, and reliability standards relative to future releases. This could make the software slower, less reliable, or more vulnerable to attacks than mature software. -  The initial development release is not yet comprehensively documented.  -  Users of the software must perform sufficient engineering and additional testing in order to properly evaluate their application and determine whether any of the open-sourced components is suitable for use in that application. -  We strongly recommend to not put this version of the software into production use. -  Only the latest version of the software will be supported</p>"},{"location":"eudi-lib-ios-wallet-kit/#installation","title":"Installation","text":"<p>To use EUDI Wallet Kit, add the following dependency to your Package.swift: <pre><code>dependencies: [\n    .package(url: \"https://github.com/eu-digital-identity-wallet/eudi-lib-ios-wallet-kit.git\", .upToNextMajor(from: \"0.6.6\"))\n]\n</code></pre></p> <p>Then add the Eudi Wallet package to your target's dependencies: <pre><code>dependencies: [\n    .product(name: \"EudiWalletKit\", package: \"eudi-lib-ios-wallet-kit\"),\n]\n</code></pre></p>"},{"location":"eudi-lib-ios-wallet-kit/#reference","title":"Reference","text":"<p>Detailed documentation is provided in the DocC documentation here</p>"},{"location":"eudi-lib-ios-wallet-kit/#initialization","title":"Initialization","text":"<p>The EudiWallet class provides a unified API for the two user attestation presentation flows. It is initialized with a document storage manager instance. For SwiftUI apps, the wallet instance can be added as an <code>environmentObject</code> to be accessible from all views. A KeyChain implementation of document storage is available.</p> <p>The wallet developer can customize cryptographic key operations by passing <code>SecureArea</code> instances to the wallet, otherwise the wallet-kit creates 'SecureEnclave' (default) and 'Software' secure areas. The wallet developer can specify key create options per doc-type such as curve type, secure area name, and key unlock policy.</p> <pre><code>let wallet = try! EudiWallet(serviceName: \"my_wallet_app\",\n   trustedReaderCertificates: [Data(name: \"eudi_pid_issuer_ut\", ext: \"der\")!] )\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/#manage-documents","title":"Manage documents","text":"<p>The EudiWallet class provides a set of methods to work with documents.</p>"},{"location":"eudi-lib-ios-wallet-kit/#loading-documents","title":"Loading documents","text":"<p>The <code>loadDocuments</code> method returns documents with a specific status from storage.</p> <p>The following example shows how to retrieve issued documents:</p> <pre><code> public func loadDocuments() async throws {\n    let documents = try await wallet.loadDocuments(status: .issued)\n  }\n</code></pre> <p>To retrieve documents of all statuses use the <code>loadAllDocuments</code> method.</p> <pre><code>let documents = try await wallet.loadAllDocuments()\n</code></pre> <p>The <code>loadDocument(id:status:)</code> method returns a document with a given id and status. </p> <p>The following example shows how to retrieve a document:</p> <pre><code>let document = try await wallet.loadDocument(id: documentId, status: .issued)\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/#storage-manager","title":"Storage manager","text":"<p>The read-only property <code>storage</code> is an instance of a StorageManager class. Currently the keychain implementation is used. It provides document management functionality using the iOS KeyChain.</p> <p>The storage model provides the following models for the supported well-known document types:</p> DocType Model eu.europa.ec.eudiw.pid.1 EuPidModel org.iso.18013.5.1.mDL IsoMdlModel <p>Since the issued mDoc documents retrieved expose only basic metadata and the raw data, they must be decoded to the corresponding CBOR models. The library provides the <code>StorageManager\\toClaimsModel</code> function to decode document raw CBOR data to strongly-typed models conforming to DocClaimsDecodable protocol. </p> <p>The loading functions automatically update the <code>StorageManager</code> members. The decoded issued documents are available in the <code>docModels</code> property. The deferred and pending documents are available in the <code>StorageManager\\deferredDocuments</code> and <code>StorageManager\\pendingDocuments</code> properties respectively.</p> <p>For other document types the GenericMdocModel is provided.</p>"},{"location":"eudi-lib-ios-wallet-kit/#deleting-a-document","title":"Deleting a document","text":"<p>The <code>deleteDocument(id:)</code> method that deletes a document with the given id.</p> <p>The following example shows how to delete a document:</p> <pre><code>try await wallet.deleteDocument(id: documentId)\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/#issue-document-using-openid4vci","title":"Issue document using OpenID4VCI","text":"<p>The library provides the functionality to issue documents using OpenID4VCI. </p> <p>To issue a document using this functionality, EudiWallet must be property initialized.  If <code>userAuthenticationRequired</code> is true, user authentication is required. The authentication prompt message has localisation key \"issue_document\". After issuing a document, the document data and corresponding private key are stored in the wallet storage.</p>"},{"location":"eudi-lib-ios-wallet-kit/#issue-document-by-doctype","title":"Issue document by docType","text":"<p>When the document docType to be issued use the <code>issueDocument(docType:keyOptions:)</code> method.</p> <ul> <li>Currently, only mso_mdoc and sd_jwt formats are supported</li> </ul> <p>The following example shows how to issue an EUDI Personal ID document using OpenID4VCI:</p> <p><pre><code>do {\n  let doc = try await userWallet.issueDocument(docType: EuPidModel.euPidDocType, keyOptions: KeyOptions(secureAreaName: \"SecureEnclave\", accessControl: [.requireUserPresence])])\n  // document has been added to wallet storage, you can display it\n}\ncatch {\n  // display error\n}\n</code></pre> You can also issue a document by passing configuration <code>identifier</code> parameter the <code>identifier</code>. The configuration identifiers can be retrieved from the issuer's metadata,  using the <code>getIssuerMetadata</code> method.</p> <pre><code>  // get current issuer metadata\n  let configuration = try await wallet.getIssuerMetadata()\n  ...\n  let doc = try await userWallet.issueDocument(identifier: \"eu.europa.ec.eudi.pid_vc_sd_jwt\")\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/#resolving-credential-offer","title":"Resolving Credential offer","text":"<p>The library provides the <code>resolveOfferUrlDocTypes(uriOffer:)</code> method that resolves the credential offer URI. The method returns the resolved <code>OfferedIssuanceModel</code> object that contains the offer's data (offered document types, issuer name and transaction code specification for pre-authorized flow). The offer's data can be displayed to the user.</p> <p>The following example shows how to resolve a credential offer:</p> <pre><code> func resolveOfferUrlDocTypes(uriOffer: String) async throws -&gt; OfferedIssuanceModel {\n    return try await wallet.resolveOfferUrlDocTypes(uriOffer: uriOffer)\n  }\n</code></pre> <p>After user acceptance of the offer, the selected documents can be issued using the <code>issueDocumentsByOfferUrl(offerUri:docTypes:docTypeKeyOptions:txCodeValue:)</code> method. The <code>txCodeValue</code> parameter is not used in the case of the authorization code flow. The following example shows how to issue documents by offer URL: <pre><code> let documents = try await walletController.issueDocumentsByOfferUrl(offerUri: uri,  docTypes: docOffers,\n   docTypeKeyOptions: [EuPidModel.euPidDocType : KeyOptions(secureAreaName: \"SecureEnclave\", accessControl: [.requireUserPresence])], txCodeValue: txCodeValue )\n</code></pre></p>"},{"location":"eudi-lib-ios-wallet-kit/#authorization-code-flow","title":"Authorization code flow","text":"<p>For the authorization code flow to work, the redirect URI must be specified specified by setting the the <code>openID4VciRedirectUri</code> property. The user is redirected in an authorization web view to the issuer's authorization endpoint. After the user authenticates and authorizes the request, the issuer redirects the user back to the application with an authorization code. The library exchanges the authorization code for an access token and issues the document.</p>"},{"location":"eudi-lib-ios-wallet-kit/#pre-authorization-code-flow","title":"Pre-Authorization code flow","text":"<p>When Issuer supports the pre-authorization code flow, the resolved offer will also contain the corresponding information. Specifically, the <code>txCodeSpec</code> field in the <code>OfferedIssuanceModel</code> object will contain:</p> <ul> <li>The input mode, whether it is NUMERIC or TEXT</li> <li>The expected length of the input</li> <li>The description of the input</li> </ul> <p>From the user's perspective, the application must provide a way to input the transaction code.</p> <p>After user acceptance of the offer, the selected documents can be issued using the <code>issueDocumentsByOfferUrl(offerUri:docTypes:docTypeKeyOptions:txCodeValue:)</code> method. When the transaction code is provided, the issuance process can be resumed by calling the above-mentioned method and passing the transaction code in the <code>txCodeValue</code> parameter.</p>"},{"location":"eudi-lib-ios-wallet-kit/#dynamic-issuance","title":"Dynamic issuance","text":"<p>Wallet kit supports the Dynamic PID based issuance</p> <p>After calling <code>issueDocument(docType:keyOptions: KeyOptions:)</code> or <code>issueDocumentsByOfferUrl(offerUri:docTypes:docTypeKeyOptions:txCodeValue:)</code> the wallet application need to check if the doc is pending and has a <code>authorizePresentationUrl</code> property. If the property is present, the application should perform the OpenID4VP presentation using the presentation URL. On success, the <code>resumePendingIssuance(pendingDoc:, webUrl:)</code> method should be called with the authorization URL provided by the server. <pre><code>if let urlString = newDocs.last?.authorizePresentationUrl { \n    // perform openid4vp presentation using the urlString \n    // on success call resumePendingIssuance using the authorization url  \n</code></pre></p>"},{"location":"eudi-lib-ios-wallet-kit/#presentation-service","title":"Presentation Service","text":"<p>The presentation service protocol abstracts the presentation flow. The BlePresentationService and OpenId4VpService classes implement the proximity and remote presentation flows respectively. The PresentationSession class is used to wrap the presentation service and provide @Published properties for SwiftUI screens. The following example code demonstrates the initialization of a SwiftUI view with a new presentation session of a selected flow type.</p> <pre><code>let session = eudiWallet.beginPresentation(flow: flow)\n// pass the session to a SwiftUI view\nShareView(presentationSession: session)\n</code></pre> <p>On view appearance the attestations are presented with the receiveRequest method. For the BLE (proximity) case the deviceEngagement property is populated with the QR code to be displayed on the holder device.</p> <p><pre><code>.task {\n     if presentationSession.flow.isProximity { await presentationSession.startQrEngagement() }\n     _ = await presentationSession.receiveRequest()\n}\n</code></pre> After the request is received the <code>presentationSession.disclosedDocuments</code> contains the requested attested items. The selected state of the items can be modified via UI binding. Finally, the response is sent with the following code: </p> <pre><code>// Send the disclosed document items after biometric authentication (FaceID or TouchID)\n// if the user cancels biometric authentication, onCancel method is called\n await presentationSession.sendResponse(userAccepted: true,\n  itemsToSend: presentationSession.disclosedDocuments.items, onCancel: { dismiss() }, onSuccess: {\n            if let url = $0 { \n        // handle URL\n       }\n        })\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/#logging","title":"Logging","text":"<p>The SwiftLog library is used for logging. The library provides a default logger that logs to the console. The main app configures logging outputs such as file logging. To use the logger create a logger instance with the desired label. The logger can be used to log messages with different log levels. <pre><code>import Logging\n// Create a logger with a label\nlet logger = Logger(label: \"com.example.BestExampleApp.main\")\n// log an info message\nlogger.info(\"Hello World!\")\n</code></pre></p>"},{"location":"eudi-lib-ios-wallet-kit/#reference_1","title":"Reference","text":"<p>Detailed documentation is provided in the DocC documentation here </p>"},{"location":"eudi-lib-ios-wallet-kit/#dependencies","title":"Dependencies","text":"<p>The detailed functionality of the wallet kit is implemented in the following Swift Packages: MdocDataModel18013, MdocSecurity18013,  MdocDataTransfer18013 and   SiopOpenID4VP OpenID4VCI</p>"},{"location":"eudi-lib-ios-wallet-kit/#reference-application","title":"Reference application","text":"<p>A reference application that demonstrates the usage of this library is App Wallet UI.</p>"},{"location":"eudi-lib-ios-wallet-kit/#how-to-contribute","title":"How to contribute","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, follow the guidelines found in CONTRIBUTING.md.</p>"},{"location":"eudi-lib-ios-wallet-kit/#license-details","title":"License details","text":"<p>Copyright \u00a9 2023 European Commission</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <pre><code>http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home / eudi-lib-ios-wallet-kit / CODE_OF_CONDUCT</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home / eudi-lib-ios-wallet-kit / CONTRIBUTING</p>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/","title":"SECURITY","text":"<p>Home / eudi-lib-ios-wallet-kit / SECURITY</p>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/","title":"Changelog","text":"<p>Home / eudi-lib-ios-wallet-kit / changelog</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v093","title":"v0.9.3","text":"<ul> <li>Fixed bug for OpenID4VP presentation for more than 2 documents</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v092","title":"v0.9.2","text":"<ul> <li>Fixed bugs for OpenID4VP presentation</li> <li>Added properties to <code>DocClaimsDecodable</code> protocol: <code>issuerDisplay</code>,<code>credentialIssuerIdentifier</code>, <code>configurationIdentifier</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v091","title":"v0.9.1","text":"<ul> <li><code>EudiWallet</code>: added <code>uiCulture</code> string property for UI localization. It must be a 2-letter language code (optional)</li> <li><code>EudiWallet</code>: added <code>getIssuerMetadata()</code> function to retrieve selected issuer's metadata</li> <li><code>EudiWallet</code>: Issue document using either doc-type, scope or configuration identifier:  <code>func issueDocument(docType: String?, scope: String?, identifier: String?, promptMessage: String? = nil)</code></li> <li><code>WalletStorage.Document</code>: added <code>displayName</code> property with localized string value</li> <li><code>ElementViewModel</code>: added <code>displayName</code> property with localized string value</li> <li><code>DocMetadata</code>: stores all localized metadata in <code>display</code> property</li> <li><code>DocClaimMetadata</code>: stores all localized metadata in <code>display</code> property</li> <li>Fix bug with VP presentation</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v090","title":"v0.9.0","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#supports-issuing-and-display-of-documents-with-sd-jwt-vc-format","title":"Supports issuing and display of documents with sd-jwt-vc format","text":"<ul> <li><code>DocClaimDecodable</code> protocol is supported for both mso-mdoc (cbor) and sd-jwt-vc formats</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#supports-saving-and-retrieving-issuer-metadata-to-be-used-for-display","title":"Supports saving and retrieving issuer metadata to be used for display","text":"<ul> <li><code>DocClaim</code> struct has <code>docDataValue</code> property to store the typed value (enum with associated values) of the claim and <code>stringValue</code> property to store the string value of the claim</li> <li><code>DocClaim</code> struct has <code>displayName</code>, <code>isOptional</code> and <code>valueType</code> properties provided by the issuer</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#updated-eudi-lib-ios-openid4vci-swift-to-version-0100","title":"Updated eudi-lib-ios-openid4vci-swift to version 0.10.0","text":"<ul> <li>Feature/dpop nonce</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-changes","title":"Breaking changes","text":"<ul> <li><code>StorageManager</code> property <code>mdocModels</code> renamed to <code>docModels</code></li> <li><code>MdocDecodable</code> protocol renamed to <code>DocClaimDecodable</code></li> <li><code>NameValue</code> struct renamed to <code>DocClaim</code></li> <li><code>NameImage</code> struct removed</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v082","title":"v0.8.2","text":"<ul> <li>Update for OpenID4VCI Draft14 (eudi-lib-ios-openid4vci-swift updated to tag 0.9.0)</li> <li>Use @MainActor for issuing methods due to authentication UI</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v081","title":"v0.8.1","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-changes_1","title":"Breaking changes","text":"<ul> <li><code>SecureArea</code> protocol static factory method added: <code>nonisolated public static func create(storage: any SecureKeyStorage) -&gt; Self</code></li> <li>Removed <code>SecureArea</code> protocol initializer: <code>init(storage: any SecureKeyStorage)</code> (use the static factory method instead)</li> <li>Removed property <code>storage</code> from <code>SecureArea</code> protocol</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v080","title":"v0.8.0","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#secure-area-refactoring","title":"Secure area refactoring","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#eudiwallet-changes","title":"<code>EudiWallet</code> changes:","text":"<ul> <li><code>init</code> added <code>secureAreas</code>: <code>[SecureArea]</code> optional parameter (default is <code>[\"SecureEnclave\", \"Software\"]</code>)</li> <li><code>issueDocument</code>: added <code>keyOptions</code> optional parameter to specify the secure area name and other key options for the key creation</li> <li><code>issueDocumentsByOfferUrl</code>: added <code>docTypeKeyOptions</code> optional parameter to specify the secure area name and other key options for each doc type </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v078","title":"v0.7.8","text":"<ul> <li><code>RequestItems</code> conforms to <code>Equatable</code> protocol</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v077","title":"v0.7.7","text":"<ul> <li>Fix issue #118  ### Breaking changes</li> <li><code>RequestItems</code> is now a dictionary with a key of type <code>String</code> (doc-type) and a value of type <code>[String: [RequestItem]]</code> (namespace to request items)</li> <li><code>RequestItem</code> is a struct with the following properties: <code>elementIdentifier</code>, <code>intentToRetain</code> and <code>isOptional</code> <code>swift  public typealias RequestItems = [String: [String: [RequestItem]]]</code></li> <li>ElementViewModel: <code>public var isMandatory: Bool</code> is removed</li> <li>ElementViewModel: <code>public var isOptional: Bool</code> is added (opposite of <code>isMandatory</code>)</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v074","title":"v0.7.4","text":"<ul> <li>Update Package.resolved and Package.swift with new versions for openid4vci, openid4vp</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v073","title":"v0.7.3","text":"<ul> <li>Bug fix</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v072","title":"v0.7.2","text":"<ul> <li>Removed <code>@MainActor</code> annotation from class definitions</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v071","title":"v0.7.1","text":"<ul> <li>Swift 6 migration</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v070","title":"v0.7.0","text":"<ul> <li>Updated OpenID4VCI to version 0.6.0</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v069","title":"v0.6.9","text":"<ul> <li>Fill document display name in DocElementsViewModel</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v068","title":"v0.6.8","text":"<ul> <li>Updated OpenID4VCI to version 0.5.0</li> <li>Updated OpenID4VP to version 0.4.0</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v067","title":"v0.6.7","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#added-methods","title":"Added methods:","text":"<ul> <li><code>public func loadDocument(id:status:) async throws -&gt; WalletStorage.Document?</code></li> <li><code>public func deleteDocument(id:status:) async throws</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#documentation","title":"Documentation","text":"<ul> <li>Updated README.md with new methods and explanations</li> <li>Added documentation using Swift-DocC (deployed here)</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v065","title":"v0.6.5","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#fixes-for-dynamic-issuance","title":"Fixes for dynamic issuance:","text":"<ul> <li>Support dynamic issuance in scoped mode </li> <li>Remove pending document after finalizing <code>resumePendingIssuance</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v064","title":"v0.6.4","text":"<ul> <li>New wallet methods: </li> </ul> <p><code>public func loadAllDocuments() async throws -&gt; [WalletStorage.Document]?</code></p> <p><code>public func deleteAllDocuments() async throws</code></p> <p><code>public func resumePendingIssuance(pendingDoc: WalletStorage.Document, webUrl: URL?) async throws -&gt; WalletStorage.Document</code></p> <ul> <li>Dynamic issuance handling:  After calling issueDocumentsByOfferUrl the wallet application need to check if the issuance is pending:</li> </ul> <p><code>if let urlString = newDocs.first?.authorizePresentationUrl {</code></p> <p><code>// perform openid4vp presentation using the urlString</code></p> <p><code>// on success call resumePendingIssuance using the url provided by the server</code></p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v063","title":"v0.6.3","text":"<ul> <li>Fixed issuing error when wallet <code>userAuthenticationRequired</code> property is true</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v062","title":"v0.6.2","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#fix","title":"Fix","text":"<ul> <li>Wrong text on success message after issuing a document: <code>OfferedIssuanceModel</code>, <code>issuerName</code> now has only the domain</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#logging-mechanism","title":"Logging mechanism","text":"<ul> <li> <p><code>EudiWallet</code> supports logging and retrieval of log contents</p> <p>` // If not-nil, logging to the specified log file name will be configured  public var logFileName: String? { didSet { try? initializeLogging() } }</p> <p>// Helper method to return a file URL from a file name.  public static func getLogFileURL(_ fileName: String) throws -&gt; URL? </p> <p>// Reset a log file stored in the caches directory  public func resetLogFile(_ fileName: String) throws  </p> <p>// Get the contents of a log file stored in the caches directory public func getLogFileContents(_ fileName: String) throws -&gt; String    ` </p> </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v061","title":"v0.6.1","text":"<ul> <li>Set WalletStorage.Document displayName property when saving a document</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v060","title":"v0.6.0","text":"<ul> <li>Update eudi-lib-ios-openid4vci-swift to version 0.4.3</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v059","title":"v0.5.9","text":"<ul> <li><code>EudiWallet</code> new property <code>public var serviceName: String</code></li> </ul> <p>Use a different <code>serviceName</code> than the default one if you want to store documents in a different location. e.g.    wallet.serviceName = \"wallet_dev\"</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v058","title":"v0.5.8","text":"<ul> <li>Update eudi-lib-ios-openid4vci-swift to version 0.4.2</li> <li>New <code>EudiWallet</code> property <code>public var openID4VciConfig: OpenId4VCIConfig?</code> to pass OpenID4VCI issuer parameters</li> <li>Removed <code>EudiWallet</code> properties <code>var openID4VciClientId</code> and <code>var openID4VciRedirectUri</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v057","title":"v0.5.7","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#storagemanager-changes","title":"StorageManager changes","text":"<ul> <li><code>loadDocuments</code> takes an optional <code>status</code> parameter of type <code>WalletStorage.DocumentStatus</code> (default is <code>issued</code>)</li> <li><code>deleteDocuments</code> takes an optional <code>status</code> parameter of type <code>WalletStorage.DocumentStatus</code> (default is <code>issued</code>)</li> <li>new variable <code>@Published public private(set) var deferredDocuments: [WalletStorage.Document] = []</code> (documents that are not yet issued)</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#deferred-issuance","title":"Deferred issuance","text":"<ul> <li>Request a deferred issuance based on a stored deferred document. On success, the deferred document is updated with the issued document.    The caller does not need to reload documents, storage manager <code>deferredDocuments</code> and <code>docModels</code> properties are updated.</li> <li>New function to request deferred issuance: <code>@discardableResult public func requestDeferredIssuance(deferredDoc: WalletStorage.Document) async throws -&gt; WalletStorage.Document</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#other-changes","title":"Other changes","text":"<ul> <li>Removed <code>otherModels</code>, <code>docTypes</code>, <code>documentIds</code> properties</li> <li>Updated eudi-lib-ios-openid4vci-swift to version 0.4.1</li> <li>Rename <code>OfferedIssueModel</code> to <code>OfferedIssuanceModel</code> </li> <li><code>EudiWallet</code>: added property <code>public var accessGroup: String?</code> (used for sharing keychain items between apps with the same access group)</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v056","title":"v0.5.6","text":"<ul> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.3.2</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v055","title":"v0.5.5","text":"<ul> <li>Update eudi-lib-ios-openid4vci-swift to version 0.3.1</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v054","title":"v0.5.4","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#custom-urlsession-variable","title":"Custom URLSession variable","text":"<ul> <li>Added <code>public var urlSession: URLSession</code> variable to <code>EudiWallet</code> class. This variable can be used to set a custom URLSession for network requests. Allows for custom configuration of the URLSession, such as setting a custom timeout interval or Self-Signed certificates.</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v053","title":"v0.5.3","text":"<ul> <li>Library updates</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v052","title":"v0.5.2","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#support-pre-authorized-code-flow","title":"Support Pre-Authorized Code Flow","text":"<p>The flow is supported by existing methods:</p> <p>1 - An issue offer url is scanned. The following method is called: <code>public func resolveOfferUrlDocTypes(uriOffer: String) async throws -&gt; OfferedIssueModel</code></p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-change-the-return-value-type-is-offeredissuemodel-instead-of-offereddocmodel","title":"(Breaking change, the return value type is <code>OfferedIssueModel</code> instead of <code>[OfferedDocModel]</code>)","text":"<p>2 - If <code>OfferedIssueModel.isTxCodeRequired</code> is true, the call to <code>` must include the transaction code (parameter</code>txCodeValue`). </p> <ul> <li>Note: for the clientId value the <code>EudiWallet/openID4VciClientId</code> is used.</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v051","title":"v0.5.1","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#update-eudi-lib-ios-openid4vci-swift-dependency-to-version-015","title":"Update eudi-lib-ios-openid4vci-swift dependency to version 0.1.5","text":"<ul> <li>Update eudi-lib-ios-openid4vci-swift dependency to version 0.1.5</li> <li>Fixes iOS16 offer url parsing issue</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v050","title":"v0.5.0","text":"<ul> <li><code>EuPidModel</code> updated with new PID docType</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v049","title":"v0.4.9","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#openid4vp-fixes-and-updates","title":"Openid4VP fixes and updates","text":"<ul> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.1</li> <li>Fix openid4vp certificate chain verification (PresentationSession's  <code>readerCertIssuerValid</code> and <code>readerCertIssuer</code> properties)</li> <li>Add <code>readerLegalName</code> property to PresentationSession</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v048","title":"v0.4.8","text":"<ul> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.0</li> <li>Added wallet configuration parameter <code>public var verifierLegalName: String?</code> (used for Openid4VP preregistered clients)</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v047","title":"v0.4.7","text":"<p>###Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.0</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v046","title":"v0.4.6","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#update-openid4vci-to-version-012","title":"Update openid4vci to version 0.1.2","text":"<p>##v0.4.5</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#update-eudi-lib-ios-openid4vci-swift-to-version-009","title":"Update eudi-lib-ios-openid4vci-swift to version 0.0.9","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#v044","title":"v0.4.4","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-change-docmodels-contains-not-nil-items-swiftui-breaks-with-nil-items","title":"Breaking change - docModels contains not-nil items (SwiftUI breaks with nil items)","text":"<p>@Published public var docModels: [any MdocDecodable] = []</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v043","title":"v0.4.3","text":"<p>Openid4vp, BLE: Support sending multiple documents with same doc-type - DocElementsViewModel: added <code>public var docId: String</code> - PresentationSession / func sendResponse: itemsToSend dictionary is keyed by docId (and not docType) </p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v042","title":"v0.4.2","text":"<p>Refactoring for issuing documents with IssuerSigned cbor data</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-change-document-data-is-saved-as-encoded-issuersigned-cbor","title":"Breaking change: Document data is saved as encoded IssuerSigned cbor","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#v041","title":"v0.4.1","text":"<p>OpenID4VCI: fix for filtering resolved identifiers Support mdoc Authentication for OpenId4Vp #46</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v040","title":"v0.4.0","text":"<p>OpenID4VCI fix</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v039","title":"v0.3.9","text":"<p>OpenID4VCI: Allow partial issuing when some documents fail to issue</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v038","title":"v0.3.8","text":"<p>OpenID4VCI: Fixed issuing with https://dev.issuer.eudiw.dev</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v037","title":"v0.3.7","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#added-functions","title":"Added functions:","text":"<p>/// Resolve OpenID4VCI offer URL document types. Resolved offer metadata are cached</p> <p><code>public func resolveOfferUrlDocTypes(uriOffer: String) async throws -&gt; [OfferedDocModel]</code></p> <p>/// Issue documents by offer URI.</p> <p><code>public func issueDocumentsByOfferUrl(offerUri: String, docTypes: [OfferedDocModel], docTypeKeyOptions: [String: KeyOptions]? = nil, promptMessage: String? = nil, claimSet: ClaimSet? = nil) async throws -&gt; [WalletStorage.Document]</code></p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-change","title":"Breaking change:","text":"<p><code>// PresentationSession  @Published public var deviceEngagement: String?</code>     use the following code to convert to QR code image:  </p> <p><code>let qrImage =  DeviceEngagement.getQrCodeImage(qrCode: d)</code></p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v036","title":"v0.3.6","text":"<p>Updated <code>eudi-lib-ios-siop-openid4vp-swift</code> to v0.0.74 Updated <code>eudi-lib-ios-openid4vci-swift</code> to v0.0.7</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v035","title":"v0.3.5","text":"<p>Updated <code>eudi-lib-ios-siop-openid4vp-swift</code> to v0.0.73 Updated <code>eudi-lib-ios-openid4vci-swift</code> to v0.0.6</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v034","title":"v0.3.4","text":"<ul> <li>Refactor MdocDecodable (DocType, DocumentIdentifier, createdAt), </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v033","title":"v0.3.3","text":"<ul> <li>OpenID4VP draft 13 support</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v032","title":"v0.3.2","text":"<ul> <li>Internal updates for security checks</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v031","title":"v0.3.1","text":"<ul> <li>Updated presentation definition parsing</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v030","title":"v0.3.0","text":"<ul> <li>Updated eudi-lib-ios-siop-openid4vp-swift to 0.0.72</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v029","title":"v0.2.9","text":"<ul> <li>Fixed mDOC authentication MAC validation error for mDL document type</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v017","title":"v0.1.7","text":"<ul> <li>Added delete documents func</li> <li>Storage manager functions are now <code>async throws</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#mdocdatamodel18013","title":"MdocDataModel18013","text":"<ul> <li>extractDisplayStrings is recursive (cbor elements can be dictionaries)</li> <li>NameValue: added <code>var children: [NameValue]</code> property (tree-like structure)</li> <li>MdocDecodable: added 'var displayImages: [NameImage]' property</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v016","title":"v0.1.6","text":"<ul> <li>Add isMandatory property to DocElementsViewModel structure</li> <li><code>PresentationSession</code> methods do not run on main actor</li> <li><code>PresentationSession</code>: add `readerCertIssuerValid`` (is verifier certificate trusted)</li> <li><code>PresentationSession</code>: change `readerCertIssuer`` (has verifier certificate common name)</li> <li><code>MdocDecodable</code>: add extension method: <code>public func toJson() -&gt; [String: Any]</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#pull-requests","title":"Pull requests","text":"<ul> <li>Update eudi-lib-ios-openid4vci-swift to version 0.4.2 and add new properties to EudiWallet (#86) via @phisakel</li> <li>Refactor to support Deferred document issuing (#74) via @phisakel</li> <li>Update documentation links in README.md (#82) via @phisakel</li> <li>Docs: update documentation in README.md (#81) via @phisakel</li> <li>VP version 0.3.2, docs with Swift-DocC Plugin (#80) via @phisakel</li> <li>Update PGP Key link (#79) via @mgiakkou</li> <li>Update eudi-lib-ios-openid4vci-swift to version 0.3.1 (#78) via @phisakel</li> <li>Allow Self-Signed SSL for OpenId4VCI and OpenId4VP (#76) via @phisakel</li> <li>[fix] pre-auth fixes in libs (#75) via @dtsiflit</li> <li>Support Pre-Authorized Code Flow - Wallet-kit (iOS) (#72) via @phisakel</li> <li>Fix swift.yml (#71) via @phisakel</li> <li>Credential offer URL parsing issue for iOS16 (#69) via @phisakel</li> <li>Update eudi-lib-ios-iso18013-data-model and eudi-lib-ios-iso18013-data-transfer dependencies (#68) via @phisakel</li> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.1, fix verifier display name, valid status (#67) via @phisakel</li> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.0 (#64) via @phisakel</li> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.0 (#64) via @phisakel</li> <li>Update openid4vci library to version 0.1.2 (#62) via @phisakel</li> <li>Update eudi-lib-ios-openid4vci-swift to version 0.0.9 (#61) via @phisakel</li> <li>Issuing - Support for credential offer (#45) via @phisakel</li> <li>OpenID4VCI draft13 support (#31) via @phisakel</li> <li>Simplify Storage Manager API (#59) via @phisakel</li> <li>Openid4vp and BLE should support sending response with multiple documents of the same doc-type (iOS) (#56) via @phisakel</li> <li>Refactor to support IssuerSigned CBOR structure [iOS] (#53) via @phisakel</li> <li>Changelog.md update (#51) via @phisakel</li> <li>Vci offer fix for filtering resolved identifiers (#50) via @phisakel</li> <li>Support mdoc Authentication for OpenId4Vp (#46) via @phisakel</li> <li>OpenID4VCI: Allow partial issuing when some documents fail to issue (#48) via @phisakel</li> <li>Issuing - Support for credential offer (#45) via @phisakel</li> <li>Support OpenID4VCI credential offer (resolution of credential offer, issuing of specific doc types) (#44) via @phisakel</li> <li>Chore: Update dependencies for udi-lib-ios-iso18013-data-transfer to \u2026 (#43) via @phisakel</li> <li>Return the QR code to the device engagement in string representation (#42) via @akarabashov</li> <li>Centralization of sec workflows (#21) via @christosservosNCIN</li> <li>[fix] sdjwt case fix (#36) via @dtsiflit</li> <li>Update openid4vci library to v0.0.7 (#39) via @phisakel</li> <li>Update OpenID4VP to v0.0.74 (#37) via @phisakel</li> <li>Update dependencies to latest versions (#35) via @phisakel</li> <li>Update dependencies and refactor StorageManager to support multiple documents with same docType (#34) via @phisakel</li> <li>Update changelog.md (#32) via @phisakel</li> <li>Update dependencies and changelog (#30) via @phisakel</li> <li>Updates due to security helpers changes (#29) via @phisakel</li> <li>Updated Presentation Definition Parsing (#28) via @phisakel</li> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.0.72 (#27) via @phisakel</li> <li>Check if iaca variable is nil, refactor to use multiple device private keys (#23) via @phisakel</li> <li>Update README.md (#25) via @vkanellopoulos</li> <li>Update SECURITY.md (#22) via @vkanellopoulos</li> <li>Use subjectDistinguishedName for openID4vp verifier, update packages (#20) via @phisakel</li> <li>Fix for verifier name (#19) via @phisakel</li> <li>Reader auth for openid4vp, readme overview (#18) via @phisakel</li> <li>SendResponse takes an onSuccess callback function (#17) via @phisakel</li> <li>Add BlueECC dependency and update eudi-lib-ios-siop-openid4vp-swift version (#16) via @phisakel</li> <li>OpenID4VciRedirectUri public property in wallet kit (#15) via @phisakel</li> <li>Changes for Secure Enclave use (#14) via @phisakel</li> <li>Fixes after updating OpenID4VCI library (#13) via @phisakel</li> <li>Issue documents using OpenID4VCI protocol (#12) via @phisakel</li> <li>Bug fixes for storage manager (#11) via @phisakel</li> <li>Method to begin presentation using any custom PresentationService (#10) via @phisakel</li> <li>Update README and SECURITY.md files (#9) via @phisakel</li> <li>Added delete documents func to wallet kit (#8) via @phisakel</li> <li>Make storage manager methods async throws (#7) via @phisakel</li> <li>Update Package.resolved and add isMandatory property to DocElementsViewModel structure (#6) via @phisakel</li> <li>Develop: limit main actor usage, reader cert variables (#5) via @phisakel</li> <li>Update License and Copyright (#4) via @phisakel</li> <li>Develop (#3) via @phisakel</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/EudiWalletKit/","title":"EudiWalletKit","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources / EudiWalletKit / EudiWalletKit.docc / EudiWalletKit</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/EudiWalletKit/#eudiwalletkit","title":"<code>EudiWalletKit</code>","text":"<p>EUDI Wallet Kit library for iOS</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/EudiWalletKit/#overview","title":"Overview","text":"<p>This repository contains the EUDI Wallet Kit library for iOS. The library is a part             of the EUDI Wallet Reference Implementation project.</p> <p>This library acts as a coordinator by orchestrating the various components that are             required to implement the EUDI Wallet functionality. On top of that, it provides a simplified API             that can be used by the application to implement the EUDI Wallet functionality.</p> <p>The library depends on the following EUDI libraries:</p> Library path Library name Documentation iso18013-data-model MdocDataModel18013 Documentation iso18013-data-transfer MdocDataTransfer18013 Documentation iso18013-security MdocSecurity18013 Documentation wallet-storage WalletStorage Documentation openid4vp-swift SiopOpenID4VP Documentation presentation-exchange-swift PresentationExchange Documentation openid4vci-swift OpenID4VCI Documentation <p></p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/EudiWalletKit/#topics","title":"Topics","text":""},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/EudiWalletKit/#essentials","title":"Essentials","text":"<ul> <li> <li> <li> <li> <li> <p>@Links(visualStyle: detailedGrid) {     -  }"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/GetStarted/","title":"GetStarted","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources / EudiWalletKit / EudiWalletKit.docc / GetStarted</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/GetStarted/#get-started","title":"Get started","text":"<p>How to install and initialize EUDI Wallet Kit in your project</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/GetStarted/#package-installation","title":"Package installation","text":"<p>To use EUDI Wallet Kit, add the following dependency to your Package.swift: <pre><code>dependencies: [\n        .package(url: \"https://github.com/eu-digital-identity-wallet/eudi-lib-ios-wallet-kit.git\", .upToNextMajor(from: \"0.6.6\"))\n]\n</code></pre></p> <p>Then add the Eudi Wallet package to your target's dependencies: <pre><code>dependencies: [\n        .product(name: \"EudiWalletKit\", package: \"eudi-lib-ios-wallet-kit\"),\n]\n</code></pre></p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/GetStarted/#initialization","title":"Initialization","text":"<p>The <code>EudiWallet</code> class provides a unified API for the two user attestation presentation flows. It is initialized with a document storage manager instance. For SwiftUI apps, the wallet instance can be added as an <code>environmentObject</code> to be accessible from all views. A KeyChain implementation of document storage is available.</p> <p>```swift let wallet = EudiWallet.standard wallet.userAuthenticationRequired = true wallet.trustedReaderCertificates = [...] // array of der certificate data wallet.openId4VpVerifierApiUri = \"https:// ... verifier api uri ...\" wallet.verifierApiUri = configLogic.verifierConfig.apiUri wallet.verifierLegalName = configLogic.verifierConfig.legalName wallet.openID4VciIssuerUrl = configLogic.vciConfig.issuerUrl wallet.openID4VciClientId = configLogic.vciConfig.clientId wallet.openID4VciRedirectUri = configLogic.vciConfig.redirectUri wallet.loadAllDocuments()</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/","title":"IssueDocuments","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources / EudiWalletKit / EudiWalletKit.docc / IssueDocuments</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#issue-documents","title":"Issue documents","text":"<p>The library provides the functionality to issue documents using OpenID4VCI. </p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#overview","title":"Overview","text":"<p>To issue a document using this functionality, EudiWallet must be property initialized.  If <code>EudiWallet/userAuthenticationRequired</code> is true, user authentication is required. The authentication prompt message has localisation key \"issue_document\". After issuing a document, the document data and corresponding private key are stored in the wallet storage.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#issue-document-by-doctype","title":"Issue document by docType","text":"<p>When the document docType to be issued use the <code>EudiWallet/issueDocument(docType:scope:identifier:keyOptions:promptMessage:)</code> method.</p> <p>Important Notes:</p> <ul> <li>Currently, only mso_mdoc format is supported</li> <li>For the 'SecureEnclave' secure area, only ES256 algorithm is supported for signing OpenId4CVI proof of possession of the public/private key pair.</li> </ul> <p>The following example shows how to issue an EUDI Personal ID document using OpenID4VCI:</p> <pre><code>wallet.openID4VciIssuerUrl = \"https://issuer.eudiw.dev\" \nwallet.openID4VciClientId = \"wallet-dev\"\nwallet.openID4VciRedirectUri = \"eudi-openid4ci://authorize/\" \ndo {\n    let doc = try await userWallet.: EuPidModel.euPidDocType)\n    // document has been added to wallet storage, you can display it\n}\ncatch {\n    // display error\n}\n</code></pre> <p>You can also issue a document by passing configuration <code>identifier</code> parameter the <code>identifier</code>. The configuration identifiers can be retrieved from the issuer's metadata,  using the <code>getIssuerMetadata</code> method.</p> <pre><code>  // get current issuer metadata\n  let configuration = try await wallet.getIssuerMetadata()\n  ...\n  let doc = try await userWallet.issueDocument(identifier: \"eu.europa.ec.eudi.pid_vc_sd_jwt\")\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#resolving-credential-offer","title":"Resolving Credential offer","text":"<p>The library provides the <code>EudiWallet/resolveOfferUrlDocTypes(uriOffer:)</code> method that resolves the credential offer URI. The method returns the resolved <code>OfferedIssuanceModel</code> object that contains the offer's data (offered document types, issuer name and transaction code specification for pre-authorized flow). The offer's data can be displayed to the user.</p> <p>The following example shows how to resolve a credential offer:</p> <pre><code> func resolveOfferUrlDocTypes(uriOffer: String) async throws -&gt; OfferedIssuanceModel {\n        return try await wallet.resolveOfferUrlDocTypes(uriOffer: uriOffer)\n    }\n</code></pre> <p>After user acceptance of the offer, the selected documents can be issued using the <code>EudiWallet/issueDocumentsByOfferUrl(offerUri:docTypes:docTypeKeyOptions:txCodeValue:promptMessage:claimSet:)</code> method. The <code>txCodeValue</code> parameter is not used in the case of the authorization code flow.</p> <p>The following example shows how to issue documents by offer URL: <pre><code> let documents = try await walletController.issueDocumentsByOfferUrl(offerUri: uri,  docTypes: docOffers, txCodeValue: txCodeValue )\n</code></pre></p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#authorization-code-flow","title":"Authorization code flow","text":"<p>For the authorization code flow to work, the redirect URI must be specified specified by setting the the <code>EudiWallet/openID4VciConfig</code> property. The user is redirected in an authorization web view to the issuer's authorization endpoint. After the user authenticates and authorizes the request, the issuer redirects the user back to the application with an authorization code. The library exchanges the authorization code for an access token and issues the document.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#pre-authorization-code-flow","title":"Pre-Authorization code flow","text":"<p>When Issuer supports the pre-authorization code flow, the resolved offer will also contain the corresponding information. Specifically, the <code>txCodeSpec</code> field in the <code>OfferedIssuanceModel</code> object will contain:</p> <ul> <li>The input mode, whether it is NUMERIC or TEXT</li> <li>The expected length of the input</li> <li>The description of the input</li> </ul> <p>From the user's perspective, the application must provide a way to input the transaction code.</p> <p>After user acceptance of the offer, the selected documents can be issued using the <code>EudiWallet/issueDocumentsByOfferUrl(offerUri:docTypes:txCodeValue:promptMessage:useSecureEnclave:claimSet:)</code> method. When the transaction code is provided, the issuance process can be resumed by calling the above-mentioned method and passing the transaction code in the <code>txCodeValue</code> parameter.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#dynamic-issuance","title":"Dynamic issuance","text":"<p>Wallet kit supports the Dynamic PID based issuance</p> <p>After calling <code>EudiWallet/issueDocument(docType:scope:identifier:keyOptions:promptMessage:)</code> or <code>EudiWallet/issueDocumentsByOfferUrl(offerUri:docTypes:docTypeKeyOptions:txCodeValue:promptMessage:claimSet:)</code> the wallet application need to check if the doc is pending and has a <code>authorizePresentationUrl</code> property. If the property is present, the application should perform the OpenID4VP presentation using the presentation URL. On success, the <code>EudiWallet/resumePendingIssuance(pendingDoc:webUrl:)</code> method should be called with the authorization URL provided by the server. <pre><code>if let urlString = newDocs.last?.authorizePresentationUrl { \n    // perform openid4vp presentation using the urlString \n    // on success call resumePendingIssuance using the authorization url  \n</code></pre></p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/ManageDocuments/","title":"ManageDocuments","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources / EudiWalletKit / EudiWalletKit.docc / ManageDocuments</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/ManageDocuments/#manage-documents","title":"Manage documents","text":"<p>The EudiWallet class provides a set of methods to work with documents.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/ManageDocuments/#loading-documents","title":"Loading documents","text":"<p>The <code>EudiWallet/loadDocuments(status:)</code> method returns documents with a specific status from storage.</p> <p>The following example shows how to retrieve issued documents:</p> <pre><code> public func loadDocuments() async throws {\n        let documents = try await wallet.loadDocuments(status: .issued)\n    }\n</code></pre> <p>To load documents of all statuses use the <code>EudiWallet/loadAllDocuments()</code> method.</p> <pre><code>let documents = try await wallet.loadAllDocuments()\n</code></pre> <p>The <code>EudiWallet/loadDocument(id:status:)</code> method returns a document with a given id and status. </p> <p>The following example shows how to retrieve a document:</p> <pre><code>let document = try await wallet.loadDocument(id: documentId, status: .issued)\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/ManageDocuments/#storage-manager","title":"Storage manager","text":"<p>The read-only property <code>storage</code> is an instance of a <code>StorageManager</code> class. Currently the keychain implementation is used. It provides document management functionality using the iOS KeyChain.</p> <p>The storage model provides the following models for the supported well-known document types:</p> DocType Model eu.europa.ec.eudiw.pid.1 EuPidModel org.iso.18013.5.1.mDL IsoMdlModel <p>Since the issued mDoc documents retrieved expose only basic metadata and the raw data, they must be decoded to the corresponding CBOR models. The library provides the <code>StorageManager/toClaimsModel(doc:modelFactory:)</code> function to decode document raw CBOR data to strongly-typed models conforming to MdocDecodable protocol. </p> <p>The loading functions automatically update the <code>StorageManager</code> members. The decoded issued documents are available in the <code>docModels</code> property. The deferred and pending documents are available in the <code>deferredDocuments</code> and <code>pendingDocuments</code> properties respectively.</p> <p>For other document types the GenericMdocModel is provided.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/ManageDocuments/#deleting-a-document","title":"Deleting a document","text":"<p>The <code>EudiWallet/deleteDocument(id:status:)</code> method that deletes a document with the given id.</p> <p>The following example shows how to delete a document:</p> <p><pre><code>try await wallet.deleteDocument(id: documentId, status: .issued)\n</code></pre> To delete all documents you can use <code>EudiWallet/deleteAllDocuments()</code></p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/PresentationService/","title":"PresentationService","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources / EudiWalletKit / EudiWalletKit.docc / PresentationService</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/PresentationService/#presentation-service","title":"Presentation Service","text":"<p>The library supports document presentation via BLE or online verifier</p> <p>The <code>PresentationService</code> protocol abstracts the presentation flow. The <code>BlePresentationService</code> and <code>OpenId4VpService</code> classes implement the proximity and remote presentation flows respectively. The <code>PresentationSession</code> class is used to wrap the presentation service and provide <code>@Published</code> properties for SwiftUI screens. The following example code demonstrates the initialization of a SwiftUI view with a new presentation session of a selected <code>FlowType</code>.</p> <pre><code>let session = eudiWallet.beginPresentation(flow: flow)\n// pass the session to a SwiftUI view\nShareView(presentationSession: session)\n</code></pre> <p>On view appearance the attestations are presented with the <code>PresentationService/receiveRequest()</code>  method. For the BLE (proximity) case, the <code>PresentationSession/deviceEngagement</code> property is populated with the QR code to be displayed on the holder device.</p> <p><pre><code>.task {\n     if presentationSession.flow.isProximity { await presentationSession.startQrEngagement() }\n     _ = await presentationSession.receiveRequest()\n}\n</code></pre> After the request is received the <code>PresentationSession/disclosedDocuments</code> contains the requested attested items. The selected state of the items can be modified via UI binding. Finally, the response is sent with the following code: </p> <pre><code>// Send the disclosed document items after biometric authentication (FaceID or TouchID)\n// if the user cancels biometric authentication, onCancel method is called\n await presentationSession.sendResponse(userAccepted: true,\n    itemsToSend: presentationSession.disclosedDocuments.items, onCancel: { dismiss() }, onSuccess: {\n            if let url = $0 { \n                // handle URL\n             }\n        })\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/SecureAreas/","title":"SecureAreas","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources / EudiWalletKit / EudiWalletKit.docc / SecureAreas</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/SecureAreas/#custom-key-management","title":"Custom key management","text":"<p>Eudi Wallet Kit supports custom key management through the implementation of SecureArea and SecureKeyStorage protocols. This document details the process of integrating custom key management with the library.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/SecureAreas/#secure-areas","title":"Secure areas","text":"<p>The wallet developer can customize cryptographic key operations by passing SecureArea instances to the wallet. In the absence of custom instances, the wallet kit automatically generates SecureEnclaveSecureArea (default) and SoftwareSecureArea secure areas. </p> <p>The secure area instance must be initialized with a secure key storage area implementing the SecureKeyStorage protocol. An iOS keychain-based storage is provided via the KeyChainSecureKeyStorage actor. </p> <p>Assuming that the application developer has implemented the SecureArea protocol and registered an instance with the wallet kit, it will be available for custom secure area cryptographic operations. The following example demonstrates how to register a custom secure area with the Wallet Kit:</p> <pre><code>let keyChainStorage = KeyChainSecureKeyStorage(serviceName: self.serviceName, accessGroup: nil)\nlet mySecureArea = MySecureArea(storage: keyChainStorage)\nlet wallet = try! EudiWallet(serviceName: \"wallet_dev_ui\",\n        trustedReaderCertificates: [Data(name: \"eudi_pid_issuer_ut\", ext: \"der\")!],\n        secureAreas: [mySecureArea])\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/SecureAreas/#secure-key-creation-on-issuing","title":"Secure key creation on issuing","text":"<p>For each document type, the wallet developer has the flexibility to define specific key creation parameters, including the secure area name, curve type, key access control and key unlock policy.</p> <p>Specifically:</p> <ul> <li>The <code>EudiWallet/issueDocument(docType:scope:identifier:keyOptions:promptMessage:)</code> has been extended to support an additional keyOptions optional parameter to specify the secure area name and other key options for the key creation. </li> <li>The <code>EudiWallet/issueDocumentsByOfferUrl(offerUri:docTypes:docTypeKeyOptions:txCodeValue:promptMessage:claimSet:)</code> has been extended to support a <code>docTypeKeyOptions</code> to specify the secure area name and other key options for each doc type.</li> </ul> <pre><code>// For keychain saved keys, the iOS will automatically present a biometric or user PIN screen to authorize key usage for PID documents\nlet docTypeKeyOptions: [EuPidModel.euPidDocType : KeyOptions(secureAreaName: \"Software\", accessControl: [.requireUserPresence])]\nlet issuedDocs = try await wallet.issueDocumentsByOfferUrl(offerUri: uriOffered, docTypes: docIssueOffered.docModels, docTypeKeyOptions: docTypeKeyOptions)\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/SecureAreas/#secure-key-usage-on-presentation","title":"Secure key usage on presentation","text":"<p>During presentation with BLE proximity or OpenID4VP, the private key is used to create a device signature. The secure area is automatically used to sign the device response. An unlock key hook is provided via the unlockKey method which is internally called to get the optional <code>unlockData</code>. </p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/WalletUI/","title":"WalletUI","text":"<p>Home / eudi-lib-ios-wallet-kit / Sources / EudiWalletKit / EudiWalletKit.docc / WalletUI</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/WalletUI/#eudi-ios-wallet-reference-implementation","title":"EUDI iOS Wallet reference implementation","text":"<p>@Metadata {     @CallToAction(                                 purpose: link,                                 url: \"https://github.com/eu-digital-identity-wallet/eudi-app-ios-wallet-ui\")     @PageKind(sampleCode) }</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/WalletUI/#overview","title":"Overview","text":"<p>The app consumes EUDIW Wallet kit and a list of available libraries to facilitate remote presentation, proximity, and issuing test/demo functionality following specification of The Architecture and Reference Framework (ARF)</p>"},{"location":"eudi-app-ios-wallet-ui/","title":"Index","text":"<p>Home / eudi-app-ios-wallet-ui</p>"},{"location":"eudi-app-ios-wallet-ui/#eudi-ios-wallet-reference-application","title":"EUDI iOS Wallet reference application","text":"<p>:heavy_exclamation_mark: Important! Before you proceed, please read the EUDI Wallet Reference Implementation project description</p>"},{"location":"eudi-app-ios-wallet-ui/#table-of-contents","title":"Table of contents","text":"<ul> <li>Overview</li> <li>Disclaimer</li> <li>Important things to know</li> <li>How to contribute</li> <li>Demo videos</li> <li>How to use the application</li> <li>How to build - Quick start guide</li> <li>Application configuration</li> <li>License</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/#overview","title":"Overview","text":"<p>The EUDI Wallet Reference Implementation is built based on the Architecture Reference Framework and aims to showcase a robust and interoperable platform for digital identification, authentication, and electronic signatures based on common standards across the European Union. The EUDI Wallet Reference Implementation is based on a modular architecture composed of business-agnostic, reusable components that will evolve in incremental steps and can be re-used across multiple projects.</p> <p>The EUDI Wallet Reference Implementation is the application that allows users to:</p> <ol> <li>To obtain, store, and, present PID and mDL.</li> <li>Verify presentations.</li> <li>Share data on proximity scenarios.</li> <li>Support remote QES and more use cases with the modules included.</li> </ol> <p>The EUDIW project provides through this repository an iOS app. Please refer to the repositories listed in the following sections for more detailed information on how to get started, contribute, and engage with the EUDI Wallet Reference Implementation.</p>"},{"location":"eudi-app-ios-wallet-ui/#specifications-employed","title":"\ud83d\udca1 Specifications Employed","text":"<p>The app consumes the SDK called EUDIW Wallet core Wallet kit and a list of available libraries to facilitate remote presentation, proximity, and issuing test/demo functionality following specification of the ARF including:</p> <ul> <li> <p>OpenID4VP - draft 19 (remote presentation), presentation exchange v2.0,</p> </li> <li> <p>ISO18013-5 (proximity presentation),</p> </li> <li> <p>OpenID4VCI draft 13 (issuing)</p> </li> <li> <p>Issuer functionality, to support development and testing, one can access an OID4VCI test/demo service for issuing at:</p> </li> <li> <p>EUDI Issuer (Draft 13)</p> </li> <li> <p>OpenID4VCI PID and mDL Issuer (python)</p> </li> <li> <p>OpenID4VCI PID and mDL Issuer (kotlin)</p> </li> </ul> <p>Relying Party functionality:</p> <p>To support development and testing, one can access a test/demo service for remote presentation at:</p> <ul> <li> <p>EUDI Verifier </p> </li> <li> <p>Web verifier source</p> </li> <li> <p>Verifier restful backend service source</p> </li> </ul> <p>To support proximity an Android Proximity Verifier is available as an app that can request PID and mDL with reader authentication available here</p> <p>The issuer, verifier service, and verifier app authentication are based on the EUDIW development IACA</p>"},{"location":"eudi-app-ios-wallet-ui/#important-things-to-know","title":"Important things to know","text":"<p>The main purpose of the reference implementation is to showcase the ecosystem and act as a technical example of how to integrate and use all of the available components.</p> <p>If you're planning to use this application in production, we recommend reviewing the following steps: - Configure the application properly by following the guide here - Ensure the Pin storage configuration matches your security requirements or provide your own by following this guide Pin Storage Configuration - Ensure the application meets the OWASP MASVS industry standard. Please refer to the following links for further information on the controls you must implement to ensure maximum compliance:     - OWASP MASVS     - App Attestation</p>"},{"location":"eudi-app-ios-wallet-ui/#how-to-contribute","title":"How to contribute","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, follow the guidelines found in CONTRIBUTING.md.</p>"},{"location":"eudi-app-ios-wallet-ui/#demo-videos","title":"Demo videos","text":"<p>(NOTE: These videos are from the Android version)</p> <p>Issuance</p> <p>Issuance</p> <p>Presentation</p> <p>Presentation</p> <p>Proximity</p> <p>Proximity</p>"},{"location":"eudi-app-ios-wallet-ui/#how-to-use-the-application","title":"How to use the application","text":"<p>Minimum device requirements</p> <ul> <li>Any device that supports iOS 16.0</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/#prerequisites","title":"Prerequisites","text":"<p>To complete the flows described below you need to build and run the application with xcode. Alternatively, you can directly download the Android app onto your device.</p> <p>App center download method (Android app)</p> <p>In addition to building the app from the source, you can also use the Android app which you can download here</p> <p>Run the app from the source (xcode build)</p> <p>Clone this repo and make sure you have access to the dependencies below:</p> <p>iso18013-data-model</p> <p>iso18013-data-transfer</p> <p>iso18013-security</p> <p>wallet-storage.</p> <p>wallet-kit</p> <p>openid4vp-swift</p> <p>presentation-exchange-swift</p> <p>openid4vci-swift</p> <p>You will also need to download the Android Verifier app. More information can be found here</p>"},{"location":"eudi-app-ios-wallet-ui/#app-launch","title":"App launch","text":"<ol> <li>Launch the application</li> <li>You will be presented with a welcome screen where you will be asked to create a PIN for future logins.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/#issuance-flow-scoped","title":"Issuance flow (Scoped)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Pick \"National ID\".</li> <li>From the web view that appears select the \"FormEU\" option and tap submit.</li> <li>Fill in the form. Any data will do.</li> <li>You will be shown a success screen. Tap next.</li> <li>Your \"National ID\" is displayed. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/#issuance-flow-credential-offer","title":"Issuance flow (Credential Offer)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Tap \"SCAN QR\".</li> <li>Scan The QR Code from the issuer's website EUDI Issuer</li> <li>Review the documents contained in the credential offer and tap \"Issue\".</li> <li>You will be shown a success screen. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol> <p>While on the \"Dashboard\" screen you can tap \"Add doc\" and issue a new document, e.g. \"Driving License\".</p> <p>If you want to re-issue a document, you must delete it first by tapping on it in the \"Dashboard\" screen and tapping the delete icon in the \"Document details\" view.</p>"},{"location":"eudi-app-ios-wallet-ui/#presentation-online-authenticationsame-device-flow","title":"Presentation (Online authentication/Same device) flow.","text":"<ol> <li>Go to the browser application on your device and enter \"https://verifier.eudiw.dev\"</li> <li>Select scenario \"PID Authentication\"</li> <li>Expand the Person Identification Data (PID) card and select \"attributes by\" -&gt; \"Specific attributes\" and \"format\" -&gt; the format of your choice.</li> <li>Press next and then \"Select Attributes\"</li> <li>Pick the fields you want to share (e.g. \"Family Name\" and \"Given Name\")</li> <li>Review your presentation request and then click next.</li> <li>When asked to open the wallet app tap \"Open\".</li> <li>You will be returned to the app's \"Request\" screen. Tap \"Share.\"</li> <li>Enter the PIN you added in the initial steps.</li> <li>On success tap \"Continue\".</li> <li>A browser will open showing that the Verifier has accepted your request.</li> <li>Return to the app. You are back on the \"Dashboard\" screen, and the flow is complete.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/#proximity-flow","title":"Proximity flow","text":"<ol> <li>The user logs in successfully to the EUDI Wallet app and views the dashboard.</li> <li>The user clicks the 'SHOW QR' button to display the QR code.</li> <li>The Relying Party scans the presented QR code.</li> <li>EUDI Wallet User can view the requested data set from the relying party.<ol> <li>The distinction between mandatory and optional data elements is depicted.</li> <li>The requestor (i.e. relying party) of the data is depicted.</li> <li>EUDI Wallet User may select additional optional attributes to be shared.</li> </ol> </li> <li>EUDI Wallet User selects the option to share the attributes.</li> <li>EUDI Wallet authenticates to share data (quick PIN).</li> <li>User authorization is accepted - a corresponding message is displayed to the  EUDI Wallet User.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/#how-to-build-quick-start-guide","title":"How to build - Quick start guide","text":"<p>This document describes how you can build the application and deploy the issuing and verification services locally.</p>"},{"location":"eudi-app-ios-wallet-ui/#application-configuration","title":"Application configuration","text":"<p>You can find instructions on how to configure the application here</p>"},{"location":"eudi-app-ios-wallet-ui/#disclaimer","title":"Disclaimer","text":"<p>The released software is an initial development release version:  -  The initial development release is an early endeavor reflecting the efforts of a short time-boxed period, and by no means can it be considered as the final product. -  The initial development release may be changed substantially over time, might introduce new features but also may change or remove existing ones, potentially breaking compatibility with your existing code. -  The initial development release is limited in functional scope. -  The initial development release may contain errors or design flaws and other problems that could cause system or other failures and data loss. -  The initial development release has reduced security, privacy, availability, and reliability standards relative to future releases. This could make the software slower, less reliable, or more vulnerable to attacks than mature software. -  The initial development release is not yet comprehensively documented.  -  Users of the software must perform sufficient engineering and additional testing to properly evaluate their application and determine whether any of the open-sourced components is suitable for use in that application. -  We strongly recommend not to put this version of the software into production use. -  Only the latest version of the software will be supported</p>"},{"location":"eudi-app-ios-wallet-ui/#package-structure","title":"Package structure","text":"<p>logic-resources: All app resources reside here (images, etc.)</p> <p>logic-core: Wallet core logic.</p> <p>logic-analytics: Access to analytics providers. Capabilities for test monitoring analytics (i.e. crashes) can be added here (no functionality right now)</p> <p>logic-business: App business logic.</p> <p>logic-storage: Persistent storage cache.</p> <p>logic-authentication: PinStorage and System Biometrics Logic.</p> <p>logic-ui: Common UI components.</p> <p>feature-common: Code that is common to all features.</p> <p>feature-dashboard: The application's main screen.</p> <p>feature-startup: The initial screen of the app.</p> <p>feature-presentation: Online authentication feature.</p> <p>feature-issuance: Document issuance feature.</p> <p>feature-proximity: Proximity scenarios feature.</p> <p>logic-assembly: This module has access to all the above modules and assembles navigation and DI graphs.</p> <pre><code>graph TD;\n  logic-business --&gt; logic-authentication\n  logic-core --&gt; logic-authentication\n  logic-analytics --&gt; logic-authentication\n  logic-resources --&gt; logic-authentication\n\n  feature-common --&gt; logic-assembly\n  feature-startup --&gt; logic-assembly\n  feature-dashboard --&gt; logic-assembly\n  feature-presentation --&gt; logic-assembly\n  feature-issuance --&gt; logic-assembly\n  feature-proximity --&gt; logic-assembly\n\n  logic-business --&gt; logic-core\n  logic-resources --&gt; logic-core\n  logic-resources --&gt; logic-storage\n\n  logic-business --&gt; logic-analytics\n\n  feature-common --&gt; feature-issuance\n\n  feature-common --&gt; feature-proximity\n\n  feature-common --&gt; feature-presentation\n\n  feature-common --&gt; feature-dashboard\n\n  logic-storage --&gt; feature-common\n  logic-core --&gt; feature-common\n  logic-business --&gt; feature-common\n  logic-analytics --&gt; feature-common\n  logic-ui --&gt; feature-common\n  logic-api --&gt; feature-common\n  logic-authentication --&gt; feature-common\n\n  feature-common --&gt; feature-startup\n\n  logic-business --&gt; logic-storage\n\n  logic-core --&gt; logic-api\n  logic-business --&gt; logic-api\n  logic-analytics --&gt; logic-api\n\n  logic-resources --&gt; logic-business\n\n  logic-business --&gt; logic-ui\n  logic-analytics --&gt; logic-ui\n  logic-resources --&gt; logic-ui\n\n  logic-core --&gt; logic-ui\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/#license","title":"License","text":""},{"location":"eudi-app-ios-wallet-ui/#license-details","title":"License details","text":"<p>Copyright \u00a9 2023 European Commission</p> <p>Licensed under the EUPL, Version 1.2 or - as soon they will be approved by the European Commission - subsequent versions of the EUPL (the \"Licence\"); You may not use this work except in compliance with the Licence.</p> <p>You may obtain a copy of the Licence at: https://joinup.ec.europa.eu/software/page/eupl</p> <p>Unless required by applicable law or agreed to in writing, software distributed under  the Licence is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF  ANY KIND, either express or implied. See the Licence for the specific language  governing permissions and limitations under the Licence.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home / eudi-app-ios-wallet-ui / CODE_OF_CONDUCT</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home / eudi-app-ios-wallet-ui / CONTRIBUTING</p>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/","title":"SECURITY","text":"<p>Home / eudi-app-ios-wallet-ui / SECURITY</p>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/","title":"How to use app","text":"<p>Home / eudi-app-ios-wallet-ui / how-to-use-app</p>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#how-to-use-the-application","title":"How to use the application","text":"<p>Minimum device requirements</p> <ul> <li>Any device that supports iOS 16.0</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#prerequisites","title":"Prerequisites","text":"<p>To complete the flows described below you need to build and run the application with xcode. Alternatively, you can directly download the Android app onto your device.</p> <p>App center download method (Android app)</p> <p>In addition to building the app from the source, you can also use the Android app which you can download here</p> <p>Run the app from the source (xcode build)</p> <p>Clone this repo and make sure you have access to the dependencies below:</p> <p>iso18013-data-model</p> <p>iso18013-data-transfer</p> <p>iso18013-security</p> <p>wallet-storage.</p> <p>wallet-kit</p> <p>openid4vp-swift</p> <p>presentation-exchange-swift</p> <p>openid4vci-swift</p> <p>You will also need to download the Android Verifier app. More information can be found here</p>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#app-launch","title":"App launch","text":"<ol> <li>Launch the application</li> <li>You will be presented with a welcome screen where you will be asked to create a PIN for future logins.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#issuance-flow-scoped","title":"Issuance flow (Scoped)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Pick \"National ID\".</li> <li>From the web view that appears select the \"FormEU\" option and tap submit.</li> <li>Fill in the form. Any data will do.</li> <li>You will be shown a success screen. Tap next.</li> <li>Your \"National ID\" is displayed. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#issuance-flow-credential-offer","title":"Issuance flow (Credential Offer)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Tap \"SCAN QR\".</li> <li>Scan The QR Code from the issuer's website EUDI Issuer</li> <li>Review the documents contained in the credential offer and tap \"Issue\".</li> <li>You will be shown a success screen. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol> <p>While on the \"Dashboard\" screen you can tap \"Add doc\" and issue a new document, e.g. \"Driving License\".</p> <p>If you want to re-issue a document you must delete it first by tapping on the document in the \"Dashboard\" screen and tapping the delete icon in the \"Document details\" view.</p>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#presentation-online-authenticationsame-device-flow","title":"Presentation (Online authentication/Same device) flow.","text":"<ol> <li>Go to the browser application on your device and enter \"https://verifier.eudiw.dev\"</li> <li>Tap the first option (selectable) and pick the fields you want to share (e.g. \"Family Name\" and \"Given Name\")</li> <li>Tap \"Next\" and then \"Authorize\".</li> <li>When asked to open the wallet app tap \"Open\".</li> <li>You will be returned to the app to the \"Request\" screen. Tap \"Share\".</li> <li>Enter the PIN you added in the initial steps.</li> <li>On success tap \"Continue\".</li> <li>A browser will open showing that the Verifier has accepted your request.</li> <li>Return to the app. You are back to the \"Dashboard\" screen and the flow is complete.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#proximity-flow","title":"Proximity flow","text":"<ol> <li>The user logs in successfully to the EUDI Wallet app and views the dashboard.</li> <li>The user clicks the 'SHOW QR' button to display the QR code.</li> <li>The Relying Party scans the presented QR code.</li> <li> <p>EUDI Wallet User can view the requested data set from the relying party.</p> <ol> <li>The distinction between mandatory and optional data elements is depicted.</li> <li>The requestor (i.e. relying party) of the data is depicted.</li> <li>EUDI Wallet User may select additional optional attributes to be shared.</li> <li>EUDI Wallet User selects the option to share the attributes.</li> <li>EUDI Wallet authenticates to share data (quick PIN).</li> <li>User authorization is accepted - a corresponding message is displayed to the  EUDI Wallet User.</li> </ol> </li> </ol>"},{"location":"eudi-app-ios-wallet-ui/fastlane/","title":"Index","text":"<p>Home / eudi-app-ios-wallet-ui / fastlane fastlane documentation</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#installation","title":"Installation","text":"<p>Make sure you have the latest version of the Xcode command line tools installed:</p> <pre><code>xcode-select --install\n</code></pre> <p>For fastlane installation instructions, see Installing fastlane</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#available-actions","title":"Available Actions","text":""},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios","title":"iOS","text":""},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-coverage","title":"ios coverage","text":"<pre><code>[bundle exec] fastlane ios coverage\n</code></pre> <p>Run test coverage</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-tests","title":"ios tests","text":"<pre><code>[bundle exec] fastlane ios tests\n</code></pre> <p>Run tests</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-deploy","title":"ios deploy","text":"<pre><code>[bundle exec] fastlane ios deploy\n</code></pre> <p>Build EUDI Wallet Demo version and upload it to AppCenter</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-upload_tag","title":"ios upload_tag","text":"<pre><code>[bundle exec] fastlane ios upload_tag\n</code></pre> <p>Upload tag to remote repo</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-upload_upstore","title":"ios upload_upstore","text":"<pre><code>[bundle exec] fastlane ios upload_upstore\n</code></pre> <p>Reset version and build number to default</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-reset_project","title":"ios reset_project","text":"<pre><code>[bundle exec] fastlane ios reset_project\n</code></pre> <p>Reset default project settings</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-update_build_number","title":"ios update_build_number","text":"<pre><code>[bundle exec] fastlane ios update_build_number\n</code></pre> <p>Set build number</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-update_version","title":"ios update_version","text":"<pre><code>[bundle exec] fastlane ios update_version\n</code></pre> <p>Set version</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-build_number","title":"ios build_number","text":"<pre><code>[bundle exec] fastlane ios build_number\n</code></pre> <p>Build Number</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-tag_name","title":"ios tag_name","text":"<pre><code>[bundle exec] fastlane ios tag_name\n</code></pre> <p>Build Tag Name</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-full_version","title":"ios full_version","text":"<pre><code>[bundle exec] fastlane ios full_version\n</code></pre> <p>Build Version</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-minified_version","title":"ios minified_version","text":"<pre><code>[bundle exec] fastlane ios minified_version\n</code></pre> <p>Appstore Build Version</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#ios-update_display_name","title":"ios update_display_name","text":"<pre><code>[bundle exec] fastlane ios update_display_name\n</code></pre> <p>Change App Display Name</p> <p>This README.md is auto-generated and will be re-generated every time fastlane is run.</p> <p>More information about fastlane can be found on fastlane.tools.</p> <p>The documentation of fastlane can be found on docs.fastlane.tools.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/","title":"Configuration","text":"<p>Home / eudi-app-ios-wallet-ui / wiki / configuration</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#how-to-configure-the-application","title":"How to configure the application","text":""},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#table-of-contents","title":"Table of contents","text":"<ul> <li>General configuration</li> <li>DeepLink Schemas configuration</li> <li>Scoped Issuance Document Configuration</li> <li>How to work with self-signed certificates</li> <li>Theme configuration</li> <li>Pin Storage configuration</li> <li>Analytics configuration</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#general-configuration","title":"General configuration","text":"<p>The application allows the configuration of:</p> <ol> <li>Issuing API</li> </ol> <p>Via the WalletKitConfig protocol inside the logic-core module.</p> <p><pre><code>public protocol WalletKitConfig {\n  /**\n   * VCI Configuration\n   */\n  var vciConfig: VciConfig { get }\n}\n</code></pre> Based on the Build Variant of the Wallet (e.g. Dev)</p> <pre><code>struct WalletKitConfigImpl: WalletKitConfig {\n\n  let configLogic: ConfigLogic\n\n  init(configLogic: ConfigLogic) {\n    self.configLogic = configLogic\n  }\n\n  var vciConfig: VciConfig {\n    return switch configLogic.appBuildVariant {\n    case .DEMO:\n        .init(\n          issuerUrl: \"your_demo_url\",\n          clientId: \"your_demo_clientid\",\n          redirectUri: URL(string: \"your_demo_redirect\")!\n        )\n    case .DEV:\n        .init(\n          issuerUrl: \"your_dev_url\",\n          clientId: \"your_dev_clientid\",\n          redirectUri: URL(string: \"your_dev_redirect\")!\n        )\n    }\n  }\n}\n</code></pre> <ol> <li>Trusted certificates</li> </ol> <p>Via the WalletKitConfig protocol inside the logic-core module.</p> <pre><code>public protocol WalletKitConfig {\n  /**\n   * Reader Configuration\n   */\n  var readerConfig: ReaderConfig { get }\n}\n</code></pre> <pre><code>public struct ReaderConfig {\n  public let trustedCerts: [Data]\n}\n</code></pre> <p>The WalletKitConfigImpl implementation of the WalletKitConfig protocol can be located inside the logic-core module.</p> <p>The application's IACA certificates are located here</p> <pre><code>  var readerConfigConfig: ReaderConfig {\n    guard let cert = Data(name: \"eudi_pid_issuer_ut\", ext: \"der\") else {\n      return .init(trustedCerts: [])\n    }\n    return .init(trustedCerts: [cert])\n  }\n</code></pre> <ol> <li>Preregistered Client Scheme</li> </ol> <p>If you plan to use the Preregistered for OpenId4VP configuration, please add the following to the WalletKitConfigImpl initializer.</p> <pre><code>wallet.verifierApiUri = \"your_verifier_url\"\nwallet.verifierLegalName = \"your_verifier_legal_name\"\n</code></pre> <ol> <li>RQES</li> </ol> <p>Via the RQESConfig struct, which implements the EudiRQESUiConfig protocol from the RQESUi SDK, inside the logic-business module.</p> <pre><code>final class RQESConfig: EudiRQESUiConfig {\n\n  let buildVariant: AppBuildVariant\n  let buildType: AppBuildType\n\n  init(buildVariant: AppBuildVariant, buildType: AppBuildType) {\n    self.buildVariant = buildVariant\n    self.buildType = buildType\n  }\n\n  var rssps: [QTSPData]\n\n  // Optional. Default is false.\n  var printLogs: Bool\n\n  var rQESConfig: RqesServiceConfig\n\n  // Optional. Default English translations will be used if not set.\n  var translations: [String : [LocalizableKey : String]]\n\n  // Optional. Default theme will be used if not set.\n  var theme: ThemeProtocol\n}\n</code></pre> <p>Based on the Build Variant and Type of the Wallet (e.g. Dev Debug)</p> <pre><code>final class RQESConfig: EudiRQESUiConfig {\n\n  let buildVariant: AppBuildVariant\n  let buildType: AppBuildType\n\n  init(buildVariant: AppBuildVariant, buildType: AppBuildType) {\n    self.buildVariant = buildVariant\n    self.buildType = buildType\n  }\n\n  var rssps: [QTSPData] {\n    return switch buildVariant {\n    case .DEV:\n      [\n        .init(\n          name: \"your_dev_name\",\n          uri: URL(string: \"your_dev_uri\")!,\n          scaURL: \"your_dev_sca\"\n        )\n      ]\n    case .DEMO:\n      [\n        .init(\n          name: \"your_demo_name\",\n          uri: URL(string: \"your_demo_uri\")!,\n          scaURL: \"your_demo_sca\"\n        )\n      ]\n    }\n  }\n\n  var printLogs: Bool {\n    buildType == .DEBUG\n  }\n\n  var rQESConfig: RqesServiceConfig {\n    return switch buildVariant {\n    case .DEV:\n        .init(\n          clientId: \"your_dev_clientid\",\n          clientSecret: \"your_dev_secret\",\n          authFlowRedirectionURI: \"your_dev_redirect\",\n          hashAlgorithm: .SHA256\n        )\n    case .DEMO:\n        .init(\n          clientId: \"your_demo_clientid\",\n          clientSecret: \"your_demo_secret\",\n          authFlowRedirectionURI: \"your_demo_redirect\",\n          hashAlgorithm: .SHA256\n        )\n    }\n  }\n}\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#deeplink-schemas-configuration","title":"DeepLink Schemas configuration","text":"<p>According to the specifications issuance and presentation require deep-linking for the same device flows.</p> <p>If you want to change or add your own you can do it by adjusting the Wallet.plist file.</p> <pre><code>&lt;array&gt;\n    &lt;dict&gt;\n        &lt;key&gt;CFBundleTypeRole&lt;/key&gt;\n        &lt;string&gt;Editor&lt;/string&gt;\n        &lt;key&gt;CFBundleURLName&lt;/key&gt;\n        &lt;string&gt;$(PRODUCT_BUNDLE_IDENTIFIER)&lt;/string&gt;\n        &lt;key&gt;CFBundleURLSchemes&lt;/key&gt;\n        &lt;array&gt;\n            &lt;string&gt;eudi-openid4vp&lt;/string&gt;\n            &lt;string&gt;mdoc-openid4vp&lt;/string&gt;\n            &lt;string&gt;openid4vp&lt;/string&gt;\n            &lt;string&gt;openid-credential-offer&lt;/string&gt;\n        &lt;/array&gt;\n    &lt;/dict&gt;\n&lt;/array&gt;\n</code></pre> <p>Let's assume you want to add a new one for the credential offer (e.g. custom-my-offer://) the Wallet.plist should look like this:</p> <pre><code>&lt;array&gt;\n    &lt;dict&gt;\n        &lt;key&gt;CFBundleTypeRole&lt;/key&gt;\n        &lt;string&gt;Editor&lt;/string&gt;\n        &lt;key&gt;CFBundleURLName&lt;/key&gt;\n        &lt;string&gt;$(PRODUCT_BUNDLE_IDENTIFIER)&lt;/string&gt;\n        &lt;key&gt;CFBundleURLSchemes&lt;/key&gt;\n        &lt;array&gt;\n            &lt;string&gt;eudi-openid4vp&lt;/string&gt;\n            &lt;string&gt;mdoc-openid4vp&lt;/string&gt;\n            &lt;string&gt;openid4vp&lt;/string&gt;\n            &lt;string&gt;openid-credential-offer&lt;/string&gt;\n            &lt;string&gt;custom-my-offer&lt;/string&gt;\n        &lt;/array&gt;\n    &lt;/dict&gt;\n&lt;/array&gt;\n</code></pre> <p>After the Wallet.plist adjustment, you must also adjust the DeepLinkController inside the logic-ui module.</p> <p>Current Implementation:</p> <pre><code>public extension DeepLink {\n  enum Action: String, Equatable {\n\n    case openid4vp\n    case credential_offer\n    case external\n\n    static func parseType(\n      with scheme: String,\n      and urlSchemaController: UrlSchemaController\n    ) -&gt; Action? {\n      switch scheme {\n      case _ where openid4vp.getSchemas(with: urlSchemaController).contains(scheme):\n        return .openid4vp\n      case _ where credential_offer.getSchemas(with: urlSchemaController).contains(scheme):\n        return .credential_offer\n      default:\n        return .external\n      }\n    }\n  }\n}\n</code></pre> <p>Adjusted with the new schema:</p> <pre><code>public extension DeepLink {\n  enum Action: String, Equatable {\n\n    case openid4vp\n    case credential_offer\n    case custom_my_offer\n    case external\n\n    static func parseType(\n      with scheme: String,\n      and urlSchemaController: UrlSchemaController\n    ) -&gt; Action? {\n      switch scheme {\n      case _ where openid4vp.getSchemas(with: urlSchemaController).contains(scheme):\n        return .openid4vp\n      case _ where credential_offer.getSchemas(with: urlSchemaController).contains(scheme):\n        return .credential_offer\n      case _ where custom_my_offer.getSchemas(with: urlSchemaController).contains(scheme):\n        return .credential_offer\n      default:\n        return .external\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#scoped-issuance-document-configuration","title":"Scoped Issuance Document Configuration","text":"<p>The credential configuration is derived directly from the issuer's metadata. The issuer URL is configured via the VciConfig property inside the logic-core module in WalletKitConfigImpl. If you want to add or adjust the displayed scoped documents, you must modify the issuer's metadata, and the wallet will automatically resolve your changes.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#how-to-work-with-self-signed-certificates","title":"How to work with self-signed certificates","text":"<p>This section describes configuring the application to interact with services utilizing self-signed certificates.</p> <p>Add these lines of code to the top of the file WalletKitController, inside the logic-core module, just below the import statements. </p> <pre><code>class SelfSignedDelegate: NSObject, URLSessionDelegate {\n  func urlSession(\n    _ session: URLSession,\n    didReceive challenge: URLAuthenticationChallenge,\n    completionHandler: @escaping (URLSession.AuthChallengeDisposition, URLCredential?) -&gt; Void\n  ) {\n    // Check if the challenge is for a self-signed certificate\n    if challenge.protectionSpace.authenticationMethod == NSURLAuthenticationMethodServerTrust,\n       let trust = challenge.protectionSpace.serverTrust {\n      // Create a URLCredential with the self-signed certificate\n      let credential = URLCredential(trust: trust)\n      // Call the completion handler with the credential to accept the self-signed certificate\n      completionHandler(.useCredential, credential)\n    } else {\n      // For other authentication methods, call the completion handler with a nil credential to reject the request\n      completionHandler(.cancelAuthenticationChallenge, nil)\n    }\n  }\n}\n\nlet walletSession: URLSession = {\n  let delegate = SelfSignedDelegate()\n  let configuration = URLSessionConfiguration.default\n  return URLSession(\n    configuration: configuration,\n    delegate: delegate,\n    delegateQueue: nil\n  )\n}()\n</code></pre> <p>Once the above is in place add the following:</p> <pre><code>wallet.urlSession = walletSession\n</code></pre> <p>in the initializer. This change will allow the app to interact with web services that rely on self-signed certificates.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#theme-configuration","title":"Theme configuration","text":"<p>The application allows the configuration of:</p> <ol> <li>Colors</li> <li>Images</li> <li>Shape</li> <li>Fonts</li> <li>Dimension</li> </ol> <p>Via the ThemeConfiguration struct.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#pin-storage-configuration","title":"Pin Storage configuration","text":"<p>The application allows the configuration of the PIN storage. You can configure the following:</p> <ol> <li>Where the pin will be stored</li> <li>From where the pin will be retrieved</li> <li>Pin matching and validity</li> </ol> <p>Via the LogicAuthAssembly inside the logic-authentication module.</p> <pre><code>public final class LogicAuthAssembly: Assembly {\n\n  public init() {}\n\n  public func assemble(container: Container) {\n  }\n}\n</code></pre> <p>You can provide your storage implementation by implementing the PinStorageProvider protocol and then providing the implementation inside the Assembly DI Graph LogicAuthAssembly</p> <p>Implementation Example:</p> <pre><code>final class KeychainPinStorageProvider: PinStorageProvider {\n\n  private let keyChainController: KeyChainController\n\n  init(keyChainController: KeyChainController) {\n    self.keyChainController = keyChainController\n  }\n\n  func retrievePin() -&gt; String? {\n    keyChainController.getValue(key: KeychainIdentifier.devicePin)\n  }\n\n  func setPin(with pin: String) {\n    keyChainController.storeValue(key: KeychainIdentifier.devicePin, value: pin)\n  }\n\n  func isPinValid(with pin: String) -&gt; Bool {\n    keyChainController.getValue(key: KeychainIdentifier.devicePin) == pin\n  }\n}\n</code></pre> <p>Config Example:</p> <pre><code>container.register(PinStorageProvider.self) { r in\n  KeychainPinStorageProvider(keyChainController: r.force(KeyChainController.self))\n}\n.inObjectScope(ObjectScope.graph)\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#analytics-configuration","title":"Analytics configuration","text":"<p>The application allows the configuration of multiple analytics providers. You can configure the following:</p> <ol> <li>Initializing the provider (e.g. Firebase, Appcenter, etc...)</li> <li>Screen logging</li> <li>Event logging</li> </ol> <p>Via the AnalyticsConfig and LogicAnalyticsAssembly inside the logic-analytics module.</p> <pre><code>protocol AnalyticsConfig {\n  /**\n   * Supported Analytics Provider, e.g. Firebase\n   */\n  var analyticsProviders: [String: AnalyticsProvider] { get }\n}\n</code></pre> <p>You can provide your implementation by implementing the AnalyticsProvider protocol and then adding it to your AnalyticsConfigImpl analyticsProviders variable. You will also need the provider's token/key, thus requiring a [String: AnalyticsProvider] configuration. The project utilizes Dependency Injection (DI), thus requiring adjustment of the LogicAnalyticsAssembly graph to provide the configuration.</p> <p>Implementation Example:</p> <pre><code>struct AppCenterProvider: AnalyticsProvider {\n\n  func initialize(key: String) {\n    AppCenter.start(\n      withAppSecret: key,\n      services: [\n        Analytics.self\n      ]\n    )\n  }\n\n  func logScreen(screen: String, arguments: [String: String]) {\n    if Analytics.enabled {\n      logEvent(event: screen, arguments: arguments)\n    }\n  }\n\n  func logEvent(event: String, arguments: [String: String]) {\n    Analytics.trackEvent(event, withProperties: arguments)\n  }\n}\n</code></pre> <p>Config Example:</p> <pre><code>struct AnalyticsConfigImpl: AnalyticsConfig {\n  var analyticsProviders: [String: AnalyticsProvider] {\n    return [\"YOUR_OWN_KEY\": AppCenterProvider()]\n  }\n}\n</code></pre> <p>Config Construction via DI Graph Example:</p> <pre><code>container.register(AnalyticsConfig.self) { _ in\n AnalyticsConfigImpl()\n}\n.inObjectScope(ObjectScope.graph)\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/","title":"How to build","text":"<p>Home / eudi-app-ios-wallet-ui / wiki / how_to_build</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#building-the-reference-apps-to-interact-with-issuing-and-verifying-services","title":"Building the Reference apps to interact with issuing and verifying services.","text":""},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#table-of-contents","title":"Table of contents","text":"<ul> <li>Overview</li> <li>Setup Apps</li> <li>How to work with self signed certificates on iOS</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#overview","title":"Overview","text":"<p>This guide aims to assist developers to build the iOS application.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#setup-apps","title":"Setup Apps","text":""},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#eudi-ios-wallet-reference-application","title":"EUDI iOS Wallet reference application","text":"<p>You need xcode and its associated tools installed on your machine. We recommend the latest non-beta version. </p> <p>Clone the iOS repository</p> <p>Open the project file in Xcode. The application has two schemes: \"EUDI Wallet Dev\" and \"EUDI Wallet Demo\".</p> <ul> <li>EUDI Wallet Dev: This target communicates with the services deployed in an environment based on the latest main branch.</li> <li>EUDI Wallet Demo: This target communicates with the services deployed in the latest stable environment.</li> </ul> <p>Each scheme has two configurations: Debug and Release.</p> <ul> <li>Debug: Used when running the app from within Xcode.</li> <li>Release: Used when running the app after it has been distributed via a distribution platform, currently TestFlight.</li> </ul> <p>This setup results in a total of four configurations. All four configurations are defined in the xcconfig files located under the Config folder in the project.</p> <p>To run the app on the simulator, select your app schema and press Run.</p> <p>To run the app on a device, follow similar steps to running it on the simulator. Additionally, you need to supply your own provisioning profile and signing certificate in the Signing &amp; Capabilities tab of your app target.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#running-with-remote-services","title":"Running with remote services","text":"<p>The app is configured to the type (debug/release) and variant (dev/demo) in the four xcconfig files. These are the contents of the xcconfig file and you don't need to change anything if you don't want to:</p> <pre><code>BUILD_TYPE = RELEASE\nBUILD_VARIANT = DEMO\n</code></pre> <p>The values defined in the <code>.xcconfig</code> files are utilized within instances of <code>WalletKitConfig</code> and <code>RQESConfig</code> to assign the appropriate configurations. These configurations are selected based on the specified build type and build variant defined in the <code>.xcconfig</code> files.</p> <p>Instances of <code>ConfigLogic</code> are responsible for interpreting the raw string values extracted from the <code>.xcconfig</code> files and converting them into appropriate data types.</p> <pre><code>/**\n * Build type.\n */\nvar appBuildType: AppBuildType { get }\n\n/**\n * Build variant.\n */\nvar appBuildVariant: AppBuildVariant { get }\n</code></pre> <p>Using this parsed information, instances such as <code>WalletKitConfig</code> and <code>RQESConfig</code> can determine and assign their specific configurations based on the defined build type and variant.</p> <p>For instance, here's how <code>WalletKitConfig</code> resolves its configuration for OpenID4VCI remote services based on the build variant:</p> <pre><code>var vciConfig: VciConfig {\n    switch configLogic.appBuildVariant {\n    case .DEMO:\n        return .init(\n            issuerUrl: \"https://issuer.eudiw.dev\",\n            clientId: \"wallet-dev\",\n            redirectUri: URL(string: \"eu.europa.ec.euidi://authorization\")!\n        )\n    case .DEV:\n        return .init(\n            issuerUrl: \"https://dev.issuer.eudiw.dev\",\n            clientId: \"wallet-dev\",\n            redirectUri: URL(string: \"eu.europa.ec.euidi://authorization\")!\n        )\n    }\n}\n</code></pre> <p>In this example, the <code>vciConfig</code> property dynamically assigns configurations such as <code>issuerUrl</code>, <code>clientId</code>, and <code>redirectUri</code> based on the current appBuildVariant. This ensures that the appropriate settings are applied for each variant (e.g., .<code>DEMO</code> or <code>.DEV</code>).</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#running-with-local-services","title":"Running with local services","text":"<p>The first step here is to have all three services running locally on your machine,  you can follow these Repositories for further instructions: * Issuer * Web Verifier UI * Web Verifier Endpoint</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#how-to-work-with-self-signed-certificates-on-ios","title":"How to work with self signed certificates on iOS","text":"<p>In addition to the change below, in order for the app to interact with locally running service a small code change is required to do this successfully.</p> <p>Before running the app in the simulator add these lines of code to the top of the file WalletKitController just below the import statements. </p> <pre><code>class SelfSignedDelegate: NSObject, URLSessionDelegate {\n  func urlSession(\n    _ session: URLSession,\n    didReceive challenge: URLAuthenticationChallenge,\n    completionHandler: @escaping (URLSession.AuthChallengeDisposition, URLCredential?) -&gt; Void\n  ) {\n    // Check if the challenge is for a self-signed certificate\n    if challenge.protectionSpace.authenticationMethod == NSURLAuthenticationMethodServerTrust,\n       let trust = challenge.protectionSpace.serverTrust {\n      // Create a URLCredential with the self-signed certificate\n      let credential = URLCredential(trust: trust)\n      // Call the completion handler with the credential to accept the self-signed certificate\n      completionHandler(.useCredential, credential)\n    } else {\n      // For other authentication methods, call the completion handler with a nil credential to reject the request\n      completionHandler(.cancelAuthenticationChallenge, nil)\n    }\n  }\n}\n\nlet walletSession: URLSession = {\n  let delegate = SelfSignedDelegate()\n  let configuration = URLSessionConfiguration.default\n  return URLSession(\n    configuration: configuration,\n    delegate: delegate,\n    delegateQueue: nil\n  )\n}()\n</code></pre> <p>Once the above is in place add:</p> <pre><code>wallet.urlSession = walletSession\n</code></pre> <p>in the initializer. This change will allow the app to interact with web services that rely on self signed certificates.</p> <p>For all configuration options please refer to this document</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/verifier_proximity/","title":"Verifier proximity","text":"<p>Home / eudi-app-ios-wallet-ui / wiki / verifier_proximity</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/verifier_proximity/#mdoc-verifier-testing","title":"mDoc Verifier (Testing)","text":"<p>The mDoc Verifier (Testing) is an Android application based on the <code>appverifier</code> from the Google Identity Credential library, implementing ISO/IEC 18013-5:2021.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/verifier_proximity/#purpose","title":"Purpose","text":"<p>The mDoc Verifier (Testing) app is provided to help developers test and validate their wallet implementations.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/verifier_proximity/#modifications","title":"Modifications","text":"<p>Starting from the original code of the <code>appverifier</code> here, the following modifications have been made:</p> <ul> <li>Support for requesting EU Documents:</li> <li>Personal Identification Data (PID) document, according to the ARF PID RuleBook.</li> <li>Age Verification (Pseudonym) document.</li> <li>IACA Certificates: Updated to support EUDI Wallet IACAs as trusted certificates.</li> <li>Reader Authentication Certificate.</li> </ul> <p>The app is available for download from the App Center, here  (the code is not currently publicly available).</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/verifier_proximity/#important-note","title":"Important Note","text":"<p>The mDoc Verifier (Testing) app is a testing tool for developers to validate their wallet implementations.  It is not intended for production use.  The app may contain bugs or other issues that affect its functionality on different mobile devices or Android versions. These issues will be addressed in the upcoming open-source library, which will be available for developers to build their own verifier applications.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/","title":"Index","text":"<p>Home / eudi-srv-web-issuing-eudiw-py</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#eudiw-issuer","title":"EUDIW Issuer","text":"<p>Important! Before you proceed, please read the EUDI Wallet Reference Implementation project description</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#overview","title":"Overview","text":"<p>The EUDIW Issuer is an implementation of  the PID and (Q)EAA Provider service, supporting the OpenId4VCI (draft 13) protocol.</p> <p>The service provides, by default, support for <code>mso_mdoc</code> and <code>SD-JWT-VC</code>formats, for the following credentials:</p> Credential/Attestation Format PID mso_mdoc PID SD-JWT-VC mDL mso_mdoc mDL SD-JWT-VC (Q)EAA age-over-18 pseudonym mso_mdoc (Q)EAA loyalty card mso_mdoc <p>For authenticating the user, it requires the use of eIDAS node, OAUTH2 server or a simple form (for testing purposes).</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#openid4vci-coverage","title":"OpenId4VCI coverage","text":"<p>This version of the EUDIW Issuer supports the OpenId for Verifiable Credential Issuance (draft 13) protocol with the following coverage:</p> Feature Coverage Authorization Code flow \u2705 Support for PAR, PKCE, credential configuration id, scope Pre-authorized code flow \u2705 Dynamic Credential Request \u2705 mso_mdoc format \u2705 SD-JWT-VC format \u2705 W3C VC DM \u274c Token Endpoint \u2705 Credential Offer \u2705 <code>authorization_code</code> , \u2705 <code>pre-authorized_code</code> Credential Endpoint \u2705 Including proofs and repeatable invocations Credential Issuer MetaData \u2705 Batch Endpoint \u2705 Deferred Endpoint \u2705 Proof \u2705 JWT, \u2705 CWT Notification Endpoint \u2705 <p>You can use the EUDIW Issuer at https://issuer.eudiw.dev/, or install it locally.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#heavy_exclamation_mark-disclaimer","title":":heavy_exclamation_mark: Disclaimer","text":"<p>The released software is a initial development release version:</p> <ul> <li>The initial development release is an early endeavor reflecting the efforts of a short timeboxed     period, and by no means can be considered as the final product.</li> <li>The initial development release may be changed substantially over time, might introduce new     features but also may change or remove existing ones, potentially breaking compatibility with your     existing code.</li> <li>The initial development release is limited in functional scope.</li> <li>The initial development release may contain errors or design flaws and other problems that could     cause system or other failures and data loss.</li> <li>The initial development release has reduced security, privacy, availability, and reliability     standards relative to future releases. This could make the software slower, less reliable, or more     vulnerable to attacks than mature software.</li> <li>The initial development release is not yet comprehensively documented.</li> <li>Users of the software must perform sufficient engineering and additional testing in order to     properly evaluate their application and determine whether any of the open-sourced components is     suitable for use in that application.</li> <li>We strongly recommend not putting this version of the software into production use.</li> <li>Only the latest version of the software will be supported</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/#1-installation","title":"1. Installation","text":"<p>Pre-requisites:</p> <ul> <li>Python v. 3.9 or 3.10</li> <li>Flask v. 2.3 or higher</li> </ul> <p>Click here for detailed installation instructions.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#2-run","title":"2. Run","text":"<p>Click here for detailed instructions.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#3-frequently-asked-questions","title":"3. Frequently Asked Questions","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/#a-how-to-make-your-local-eudiw-issuer-available-on-the-internet","title":"A. How to make your local EUDIW Issuer available on the Internet?","text":"<p>Please see detailed instructions in install.md.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#b-how-to-add-a-new-credential-to-the-issuer","title":"B. How to add a new credential to the issuer ?","text":"<p>Please see detailed instructions in api_docs/add_credential.md.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#c-can-i-use-my-iaca-certificate-with-the-eudiw-issuer","title":"C. Can I use my IACA certificate with the EUDIW Issuer?","text":"<p>Yes. You must copy your IACA trusted certificate(s) (in PEM format) to the <code>trusted_CAs_path</code> folder. If you don't have an IACA certificate, we provide an example test IACA certificate for the country Utopia (UT).</p> <p>See more information in api_docs/configuration.md.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#d-can-i-use-my-document-signer-private-key-and-certificate-with-the-eudiw-issuer","title":"D. Can I use my Document Signer private key and certificate with the EUDIW Issuer?","text":"<p>Yes. Please follow the instructions in api_docs/configuration.md. If you don't have Document Signer private key and certificate, we provide  test private DS keys and certificates, for country Utopia (UT).</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#e-how-can-i-create-a-credential-offer-to-issue-a-credential","title":"E. How can I create a credential offer to issue a credential?","text":"<p>Please see detailed instructions in api_docs/credential_offer.md.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#f-can-i-test-the-pre-authorized-flow","title":"F. Can I test the pre-authorized flow?","text":"<p>Yes. Please see how in api_docs/pre-authorized.md.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#h-can-i-run-the-issuer-in-a-docker-container","title":"H. Can I run the issuer in a Docker container?","text":"<p>Yes. Please see how in Install Docker.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#how-to-contribute","title":"How to contribute","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, follow the guidelines found in CONTRIBUTING.md.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#license","title":"License","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/#license-details","title":"License details","text":"<p>Copyright \u00a9 2023 European Commission</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <pre><code>http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / CODE_OF_CONDUCT</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / CONTRIBUTING</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/","title":"SECURITY","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / SECURITY</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public   repositories</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following:","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you   agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using   our PGP key   to prevent this critical information from falling into the wrong hands.</li> <li>Provide us sufficient information to reproduce the problem so that we can resolve it as quickly as   possible. Usually, the IP address or the URL of the affected system and a description of the   vulnerability will be sufficient, but complex vulnerabilities may require further explanation in   terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European   Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the   vulnerability.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example by   downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying   other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:<ul> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam etc.).</li> </ul> </li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/#what-we-promise","title":"What we promise:","text":"<ul> <li>We will respond to your report within three business days with our evaluation of the report.</li> <li>We will handle your report with strict confidentiality.</li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in   accordance with the applicable data protection legislation and will not pass on your personal   details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the   discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/","title":"Changelog","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / changelog</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changelog","title":"Changelog","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#030","title":"[0.3.0]","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added","title":"Added:","text":"<ul> <li>A new mandatory argument, \"device_publickey\", has been added. This new attribute is the wallet instance public key.</li> <li>Added a tutorial on how to use Pytest, which can be found in the tests folder, \"Pytest_Tutorial.md\".</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changed","title":"Changed","text":"<ul> <li>Modifications to the /get_pid and /pid routes: when the \"country\" parameter is empty, the user is redirected to the      /pid route to choose the corresponding country. In the /pid route, when a card is selected, the user is redirected      back to /getpid, now with the desired country information.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#fixed","title":"Fixed","text":"<ul> <li>Correction in the encoding process where the data was encoded twice in base64. Rectified to just base64 encoding.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#040","title":"[0.4.0]","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added_1","title":"Added:","text":"<ul> <li> <p>Added tutorial on using the Robot framework, found in the tests folder under the name, \"robot_tutorial.md\".</p> </li> <li> <p>Added functionality for issuing mDL requests, both in CBOR and SD-JWT format. To use the \"/mdl\" and \"/getmdl\"      routes, the operation and arguments required are the same as for the PID.</p> </li> <li> <p>Added metadata to the PID (\"issuance_date\", \"expiry_date\", \"issuing_authority\" and \"issuing_country\").</p> </li> <li> <p>Added the \"un_distinguishing_sign\" attribute to the mDL.</p> </li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#050","title":"[0.5.0]","text":"<p>20 Jun 2024</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added_2","title":"Added:","text":"<ul> <li>Support notification endpoint - OID4VCI draf13</li> <li>Support deferred flow - OID4VCI draft 13</li> <li>Support dynamic-credential-request - OID4VCI draft 13</li> <li>Support Pre-Authorized Code Flow - OID4VCI draft 13</li> <li>Support credential offer - OID4VCI draft 13</li> <li>Configure a new generic IdP based on OIDC</li> <li>Support batch flow - OID4VCI draft 13</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changed_1","title":"Changed","text":"<ul> <li>Update current flows to OID4VCI draft 13</li> <li>Remove /oidc route</li> <li>A more dynamically built form and country selection</li> <li>Changed doctype and namespace from \"eudiw\" to \"eudi\" in pid and age verification credentials. </li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#fixed_1","title":"Fixed","text":"<ul> <li>UI scalling for mobile devices</li> <li>Pull #11 Fix date validation for issue_date and expiry_date for doc_type org.iso.18013.5.1.mDL</li> <li>Pull #7 Fix Directory /tmp/log does not exist</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#060","title":"[0.6.0]","text":"<p>04 Oct 2024</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added_3","title":"Added:","text":"<ul> <li>Docker</li> <li>config with environment variables</li> <li>Issue Photo ID attestation</li> <li>Issue attestations needed for the LSP POTENTIAL</li> <li>Endpoint to create a credential offer, from an external request</li> <li>Credential offer guides to the front page</li> <li>Issuing PID/EAA with optional attributes</li> <li>Added information to the metadata on how the attribute will be sourced</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changed_2","title":"Changed","text":"<ul> <li>UI changes in the credential offer and authorisation pages</li> <li>change the way optional attributes are managed</li> <li>dynamic generation of Issuer managed attributes (issuance date, expiration date, issuing authority, issuing country, ...)</li> <li>Improve responsiveness to the issuer profile and service (including UI) to improve usability and accessibility</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Fixed form data being prematurely removed</li> <li>Conflicting dependencies</li> <li>Dynamic Issuing always requests full PID attestation instead of the required attributes.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/","title":"Install","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / install</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#installation","title":"Installation","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/install/#1-python","title":"1. Python","text":"<p>The EUDIW Issuer was tested with</p> <ul> <li>Python version 3.9.2</li> </ul> <p>and should only be used with Python 3.9 or 3.10.</p> <p>If you don't have it installed, please download it from https://www.python.org/downloads/ and follow the Python Developer's Guide.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#2-flask","title":"2. Flask","text":"<p>The EUDIW Issuer was tested with</p> <ul> <li>Flask v. 2.3</li> </ul> <p>and should only be used with Flask v. 2.3 or higher.</p> <p>To install Flask, please follow the Installation Guide.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#3-how-to-run-the-eudiw-issuer","title":"3. How to run the EUDIW Issuer?","text":"<p>To run the EUDIW Issuer, please follow these simple steps (some of which may have already been completed when installing Flask) for Linux/macOS or Windows.</p> <ol> <li> <p>Clone the EUDIW Issuer repository:</p> <pre><code>git clone git@github.com:eu-digital-identity-wallet/eudi-srv-web-issuing-eudiw-py.git\n</code></pre> </li> <li> <p>Create a <code>.venv</code> folder within the cloned repository:</p> <pre><code>cd eudi-srv-web-issuing-eudiw-py\npython3 -m venv .venv\n</code></pre> </li> <li> <p>Activate the environment:</p> </li> </ol> <p>Linux/macOS</p> <pre><code>```shell\n. .venv/bin/activate\n```\n\nWindows\n\n```shell\n. .venv\\Scripts\\Activate\n```\n</code></pre> <ol> <li> <p>Install or upgrade pip</p> <pre><code>python -m pip install --upgrade pip\n</code></pre> </li> <li> <p>Install Flask, gunicorn and other dependencies in virtual environment</p> <pre><code>pip install -r app/requirements.txt\n</code></pre> </li> <li> <p>Setup secrets</p> </li> <li> <p>Copy <code>app/app_config/__config_secrets.py</code> to <code>app/app_config/config_secrets.py</code> and modify secrets.</p> </li> <li> <p>Service Configuration</p> </li> <li> <p>Configure the service according to documentation </p> </li> <li> <p>Run the EUDIW Issuer </p> <p>On the root directory of the clone repository, insert one of the following command lines to run the EUDIW Issuer.</p> <ul> <li>Linux/macOS/Windows (on http://127.0.0.1:5000 or http://localhost:5000)</li> </ul> <pre><code>flask --app app run\n</code></pre> <ul> <li>Linux/macOS/Windows (on http://127.0.0.1:5000 or http://localhost:5000 with flag debug)</li> </ul> <pre><code>flask --app app run --debug\n</code></pre> </li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#4-running-your-local-eudiw-issuer-over-https","title":"4. Running your local EUDIW Issuer over HTTPS","text":"<ol> <li>Generate a self signed certificate and a private key</li> <li> <p>Linux/macOS</p> <p>Example:      <code>openssl req -x509 -out localhost.crt -keyout localhost.key -newkey rsa:2048 -nodes -sha256 -subj '/CN=localhost' -extensions EXT -config &lt;( \\    printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=IP.1:127.0.0.1\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")</code></p> <ul> <li> <p>Windows</p> <p>Create the file localhost.conf using the following as an example: <pre><code>[req]\ndefault_bits  = 2048\ndistinguished_name = req_distinguished_name\nreq_extensions = req_ext\nx509_extensions = v3_req\nprompt = no\n[req_distinguished_name]\ncountryName = XX\nstateOrProvinceName = N/A\nlocalityName = N/A\norganizationName = Self-signed certificate\ncommonName = 120.0.0.1: Self-signed certificate\n[req_ext]\nsubjectAltName = @alt_names\n[v3_req]\nsubjectAltName = @alt_names\n[alt_names]\nIP.1 = 127.0.0.1\n</code></pre></p> <p>Use the configuration file above to generate the certificate and key <pre><code>openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout key.pem -out cert.pem -config localhost.conf \n</code></pre></p> </li> </ul> </li> <li> <p>Add certificate to environment variables</p> </li> <li> <p>Linux/macOS        <pre><code> export REQUESTS_CA_BUNDLE=\"/path/to/certificate\"\n</code></pre></p> </li> <li> <p>Windows         <pre><code>set REQUESTS_CA_BUNDLE=\"\\path\\to\\certificate\"\n</code></pre></p> </li> <li> <p>Run the EUDIW Issuer with certificate and key     <pre><code>flask --app app run --cert=cert.pem --key=key.pem\n</code></pre></p> </li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#5-make-your-local-eudiw-issuer-available-on-the-internet-optional","title":"5. Make your local EUDIW Issuer available on the Internet (optional)","text":"<p>If you want to make your local EUDIW Issuer available on the Internet, we recommend to use NGINX reverse proxy and certbot (to generate an HTTPS certificate).</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#51-install-and-configure-nginx","title":"5.1 Install and configure NGINX","text":"<ol> <li> <p>Follow the installation guide in https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/</p> </li> <li> <p>Configure your local EUDIW Issuer. For example, use the following Nginx configuration file (for a Linux installation):</p> </li> </ol> <pre><code>server {\n    server_name FQDN; # Change to the FQDN you want to use\n\n    listen 80;\n    access_log /var/log/nginx/issuer.eudiw.access.log;\n    error_log /var/log/nginx/issuer.eudiw.error.log;\n    root /var/www/html;\n\n# Recommended\n    proxy_busy_buffers_size   512k;\n    proxy_buffers   4 512k;\n    proxy_buffer_size   256k;\n\n# Provider backend\n    location / {\n        # The proxy_pass directive assumes that your local EUDIW Issuer is running at http://127.0.0.1:5000/. \n        # If not, please adjust it accordingly.\n        proxy_pass                              http://127.0.0.1:5000/;\n        proxy_set_header Host                   $http_host;\n        proxy_set_header X-Real-IP              $remote_addr;\n        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto      $scheme;\n    }\n}\n</code></pre> <ol> <li>Restart the Nginx server</li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#52-install-and-run-certbot-to-gef-a-free-https-certificate","title":"5.2 Install and run certbot to gef a free HTTPS certificate","text":"<ol> <li> <p>Follow the installation guide in https://certbot.eff.org</p> </li> <li> <p>Run <code>certbot</code> to get a free HTTPS certificate. The <code>certbot</code> will also configure the EUDIW Issuer Nginx configuration file with the HTTPS certificate.</p> </li> <li> <p>Restart the Nginx server and goto <code>https:\\\\FQDN\\</code> (FQDN configured in the Nginx configuration file)</p> </li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#6-docker","title":"6. Docker","text":"<p>To run the EUDIW issuer in Docker please follow these steps:</p> <ol> <li> <p>Install Docker following the official instructions for your operating system : https://docs.docker.com/engine/install/</p> </li> <li> <p>Download the Dockerfile at https://github.com/eu-digital-identity-wallet/eudi-srv-web-issuing-eudiw-py/blob/main/Dockerfile </p> </li> <li> <p>Build the Docker: <code>sudo docker build -t eudiw-issuer .</code></p> </li> <li> <p>Create 2 directories to be mounted:</p> </li> <li> <p>First directory named <code>config_secrets</code></p> <p>This directory will have the cert.pem and key.pem generated in Section 4</p> <p>As well as the config_secrets.py based on this example</p> </li> <li> <p>Second directory named <code>pid-issuer</code>, inside will be a directory <code>cert</code> and <code>privKey</code></p> <p>The <code>cert</code> directory has the certificates of the trusted CAs in PEM format as well as the Document/Credential signer (DS) certificates in DER format</p> <p>The <code>privKey</code> directory has the Document/Credential signer (DS) private keys</p> <p>Example:</p> <pre><code>docker-issuer\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 config_secrets\n\u2502   \u251c\u2500\u2500 config_secrets.py\n\u2502   \u251c\u2500\u2500 cert.pem\n\u2502   \u2514\u2500\u2500 key.pem\n\u2514\u2500\u2500 pid-issuer\n    \u251c\u2500\u2500 cert\n    \u2502   \u251c\u2500\u2500 PID-DS-0001_UT_cert.der\n    \u2502   \u2514\u2500\u2500 PIDIssuerCAUT01.pem\n    \u2514\u2500\u2500 privKey\n        \u2514\u2500\u2500 PID-DS-0001_UT.pem\n</code></pre> </li> <li> <p>Run Docker</p> <p>If running a basic configuration without EIDAS node or Dynamic presentation, their respective variables can be removed from the run command below.</p> <pre><code>sudo docker run -d \\\n--name eudiw-issuer \\\n-e SERVICE_URL=\"https://your.service.url/\" \\\n-e EIDAS_NODE_URL=\"https://your.eidas.node.url/\" \\\n-e DYNAMIC_PRESENTATION_URL=\"https://your.dynamic.presentation.url/\" \\\n-v ./config_secrets:/root/secrets \\\n-v ./pid-issuer:/etc/eudiw/pid-issuer \\\n-p 5000:5000 \\\neudiw-issuer\n</code></pre> </li> <li> <p>Docker logs</p> <p>Issuer logs in real time: <code>sudo docker logs -f eudiw-issuer</code> All logs: <code>sudo docker logs eudiw-issuer</code></p> </li> <li> <p>Stopping Docker Issuer    <code>sudo docker stop eudiw-issuer</code></p> </li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/licenses/","title":"Licenses","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / licenses | Name                      | Version   | License                                             | Project URL                                                    | License URL    | |---------------------------|-----------|-----------------------------------------------------|----------------------------------------------------------------|---------------------------------------------------------------| | Flask                     | 2.3.3     | BSD 3-Clause License                                       | https://github.com/pallets/flask/                              | https://github.com/pallets/flask/blob/main/LICENSE.txt         | | Flask-API                 | 3.1       | BSD 2-Clause License                                       | https://github.com/flask-api/flask-api/                        | https://github.com/flask-api/flask-api/blob/develop/LICENSE.md | | Flask-Cors                | 4.0.0     | MIT License                                         | https://github.com/corydolphin/flask-cors/                     | https://github.com/corydolphin/flask-cors/blob/main/LICENSE    | | Flask-Session             | 0.6.0     | BSD 3-Clause License                                       | https://github.com/pallets-eco/flask-session/                  | https://github.com/pallets-eco/flask-session/blob/development/LICENSE.rst| | requests                  | 2.31.0    | Apache Software License 2.0                         | https://github.com/psf/requests/                               | https://github.com/psf/requests/blob/main/LICENSE| | cbor2                     | 5.4.6     | MIT License                                         | https://github.com/agronholm/cbor2/                            | https://github.com/agronholm/cbor2/blob/master/LICENSE.txt| | pytz                      | 2023.4    | MIT License                                         | https://github.com/stub42/pytz/                                | https://github.com/stub42/pytz/blob/master/LICENSE.txt| | pyignite                  | 0.6.1     | Apache Software License 2.0                         | https://github.com/apache/ignite-python-thin-client/            | https://github.com/apache/ignite-python-thin-client/blob/master/LICENSE| | tinyec                    | 0.4.0     | GPLv3                                               | https://github.com/alexmgr/tinyec/                              | https://github.com/alexmgr/tinyec/blob/master/LICENSE| | pycryptodome              | 3.20.0    | BSD 2-Clause License; Public Domain                        | https://github.com/Legrandin/pycryptodome/                      | https://github.com/Legrandin/pycryptodome/blob/master/LICENSE.rst| | config                    | 0.5.1     | BSD 3-Clause License                                       | https://github.com/vsajip/py-cfg-lib/                           | https://github.com/vsajip/py-cfg-lib/blob/master/LICENSE| | cbor-diag                 | 1.0.1     | Apache Software License 2.0; MIT License            | https://github.com/chrysn/cbor-diag-py/                         | https://github.com/chrysn/cbor-diag-py?tab=readme-ov-file#license| | validators                | 0.22.0    | MIT License                                         | https://github.com/python-validators/validators/                | https://github.com/python-validators/validators/blob/master/LICENSE.txt| | jsonschema                | 4.21.1    | MIT License                                         | https://github.com/python-jsonschema/jsonschema/                | https://github.com/python-jsonschema/jsonschema?tab=MIT-1-ov-file#readme| | Werkzeug                  | 2.3.7     | BSD 3-Clause License                                         | https://github.com/pallets/werkzeug/                           | https://github.com/pallets/werkzeug/blob/main/LICENSE.txt| | pycose                    | 1.0.1     | BSD 3-Clause License                                | https://github.com/TimothyClaeys/pycose/                        | https://github.com/TimothyClaeys/pycose/blob/master/LICENSE| | cwt                       | 2.3.2     | MIT License                                         | https://github.com/dajiaji/python-cwt/                          | https://github.com/dajiaji/python-cwt/blob/main/LICENSE| | PyJWT                     | 2.8.0     | MIT License                                         | https://github.com/jpadilla/pyjwt/                              | https://github.com/jpadilla/pyjwt/blob/master/LICENSE| | schedule                  | 1.2.1     | MIT License                                         | https://github.com/dbader/schedule/                             | https://github.com/dbader/schedule/blob/master/LICENSE.txt| | pillow                    | 10.2.0    | Historical Permission Notice and Disclaimer (HPND)  | https://github.com/python-pillow/Pillow/                       | https://github.com/python-pillow/Pillow/blob/main/LICENSE| | segno                     | 1.6.1     | BSD 3-Clause License                                | https://github.com/heuer/segno/                                | https://github.com/heuer/segno/blob/master/LICENSE| | qrcode-artistic           | 3.0.2     | BSD 3-Clause License                                | https://github.com/heuer/qrcode-artistic/                      | https://github.com/heuer/qrcode-artistic/blob/master/LICENSE| | gunicorn                  | 22.0.0    | MIT License                                         | https://github.com/benoitc/gunicorn/                           | https://github.com/benoitc/gunicorn/blob/master/LICENSE| | pymdoccbor                | 0.5.4     | Apache Software License 2.0                         | https://github.com/peppelinux/pyMDL-MDOC/                       | https://github.com/IdentityPython/pyMDOC-CBOR/blob/main/LICENSE| | sd-jwt                    | 0.10.4    | Apache Software License 2.0                         | https://github.com/openwallet-foundation-labs/sd-jwt-python/    | https://github.com/openwallet-foundation-labs/sd-jwt-python/blob/main/LICENSE| | idpyoidc                  | 3.0.0     | Apache Software License 2.0                             | https://github.com/IdentityPython/idpy-oidc/                   | https://github.com/IdentityPython/idpy-oidc/blob/main/LICENSE| | openid4v                  | 0.0.1     | Apache Software License 2.0                            | https://github.com/rohe/openid4v/                              |  https://github.com/rohe/openid4v/blob/main/LICENSE| | fedservice                | 4.0.0     | Apache Software License 2.0                            | https://github.com/rohe/fedservice/                            | https://github.com/rohe/fedservice/blob/master/LICENSE | idpysdjwt                 | 0.0.1     | Apache Software License 2.0                            | https://github.com/rohe/idpy-sdjwt/                             | https://github.com/rohe/idpy-sdjwt/blob/main/LICENSE|</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/","title":"New Attestations","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs / add_credential</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/#configuration","title":"Configuration","text":"<p>This document specifies the changes needed to add a new attestation/credential to the EUDIW Issuer. We will use a generic loyalty card credential as an example for this configuration.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/#1-metadata-configuration","title":"1. Metadata Configuration","text":"<p>Add a new json file with the credential metadata to <code>app/metadata_config/credentials_supported</code></p> <p>For this example we will use <code>app/metadata_config/credentials_supported/loyalty_mdoc.json</code></p> <p>Example loyalty card metadata for mso_mdoc format (ISO 18013-5), with namespace <code>eu.europa.ec.eudi.loyalty_mdoc</code>:</p> <pre><code>{\n  \"eu.europa.ec.eudi.loyalty_mdoc\": {\n      \"format\": \"mso_mdoc\",\n      \"doctype\": \"eu.europa.ec.eudi.loyalty.1\",\n      \"scope\": \"eu.europa.ec.eudi.loyalty.1\",\n      \"cryptographic_binding_methods_supported\": [\n        \"jwk\", \"cose_key\"\n      ],\n      \"credential_signing_alg_values_supported\": [\n        \"ES256\"\n      ],\n      \"proof_types_supported\": {\n        \"jwt\": {\n          \"proof_signing_alg_values_supported\": [\n            \"ES256\"\n          ]\n        },\n        \"cwt\": {\n          \"proof_signing_alg_values_supported\": [\n            \"ES256\"\n          ],\n          \"proof_alg_values_supported\": [\n            -7\n          ],\n          \"proof_crv_values_supported\": [\n            1\n          ]\n        }\n      },\n      \"display\": [\n        {\n          \"name\": \"Loyalty\",\n          \"locale\": \"en\",\n          \"logo\": {\n            \"url\": \"https://examplestate.com/public/pid.png\",\n            \"alt_text\": \"A square figure of a PID\"\n          }\n        }\n      ],\n      \"claims\": {\n        \"eu.europa.ec.eudi.loyalty.1\": {\n          \"given_name\": {\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Given Name\",\n                \"locale\": \"en\"\n              }\n            ]\n          },\n          \"family_name\": {\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Family Name\",\n                \"locale\": \"en\"              }\n            ]\n          },\n          \"company\": {\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Loyalty Card Company\",\n                \"locale\": \"en\"              }\n            ]\n          },\n          \"client_id\": {\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Client ID\",\n                \"locale\": \"en\"              }\n            ]\n          },\n          \"issuance_date\": {\n            \"mandatory\": true,\n            \"source\":\"issuer\",\n            \"display\": [\n              {\n                \"name\": \"Issuance Date\",\n                \"locale\": \"en\"\n              }\n            ]\n          },\n          \"expiry_date\": {\n            \"mandatory\": true,\n            \"source\":\"issuer\",\n            \"display\": [\n              {\n                \"name\": \"Expiry Date\",\n                \"locale\": \"en\"\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n</code></pre> <p>If you want to issue a different attestation/credential using this example as a template, please choose a different namespace, doctype, and scope, and modify the claims to include the required attributes.</p> <p>For more information on the metadata parameters, please refer to https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-metadata.</p> <p>Extra Parameters  - source: Where the attributed is sourced from. Either the user or issuer (Example: Issuance Date is filled in by the issuer while given_name is filled in by the user on the form) - value_type: Type of the value expected. This will add the attribute to the forms. (Can be string, full-date, jpeg, driving_privileges, uint, bool)</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/#2-service-configuration","title":"2. Service Configuration","text":"<p>In the service configuration file (<code>app/app_config/config_service.py</code>), you need to configure the issuing authority, organization and validity of the credential.</p> <ul> <li>Add a new entry to config_doctype (using the doctype of the credential as key)</li> </ul> <pre><code>\"eu.europa.ec.eudi.loyalty.1\": {\n    \"issuing_authority\": \"Test QEAA issuer\",\n    \"organization_id\": pid_organization_id,\n    \"validity\": qeaa_validity,\n    \"organization_name\": \"Test QEAA issuer\",\n    \"namespace\": \"eu.europa.ec.eudi.loyalty.1\",\n}\n</code></pre> <ul> <li> <p>Add a new entry to auth_method_supported_credencials (using the credential identifier specified in the metadata)</p> <p>This configures the type of user authentication allowed for the credential. You may choose authentication through a PID using OpenId4VP, or through a country selection (options are: IDP, eidas node or a simple form).</p> <p>In the following examples the authentication allowed for the loyalty credential is country selection.</p> </li> </ul> <pre><code>auth_method_supported_credencials = {\n    \"PID_login\": [\n    ],\n    \"country_selection\": [\n        \"eu.europa.ec.eudi.loyalty_mdoc\",\n    ],\n}\n</code></pre> <ul> <li>If this credential supports Dynamic Credential Request, add a new entry to dynamic_issuing</li> </ul> <p>This configures which attestation and attributes are asked for in the OID4VP Request When using Dynamic credential request to issue this credential.</p> <p>Follows the format: <pre><code>dynamic_issuing = {\n      \"credential_configuration_id\":{\n          \"DocType\":{\"Namespace\":[\"attribute\",...,\"attribute\"]}\n      }\n}\n</code></pre></p> <p>Example from age over 18 pseudonym: <pre><code>dynamic_issuing = {\n      \"eu.europa.ec.eudi.pseudonym_over18_mdoc\":{\n          \"eu.europa.ec.eudi.pid.1\":{\"eu.europa.ec.eudi.pid.1\":[\"age_over_18\"]}\n      }\n}\n</code></pre></p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/#3-configuration-of-countries-supported-by-the-eudiw-issuer","title":"3. Configuration of Countries supported by the EUDIW Issuer","text":"<p>Located in <code>app/app_config/config_countries.py</code>, this configuration file contains configuration data related to the countries supported by the PID Issuer, and the credentials supported by each country.</p> <p>For example, to add the loyalty credential to the <code>formCountry</code>, you need to add the loyalty credential id (defined in the metadata) to the <code>supported_credentials</code> of the <code>formCountry</code>.</p> <pre><code>\"supported_credentials\": [\n  \"eu.europa.ec.eudi.loyalty_mdoc\"\n]\n</code></pre>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/","title":"Authorization","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs / authorization</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-details","title":"Authorization Details","text":"<p>The following authorization flows are supported:</p> <ul> <li>PAR + PKCE -&gt; Pushed Authorization Request with PKCE.</li> <li>PAR -&gt; Pushed Authorization Request without PKCE.</li> <li>PKCE -&gt; Authorization Request with PKCE.</li> <li>Authorization Request -&gt; Authorization Request without PKCE.</li> <li>Scope -&gt; Using scope Parameter to Request Issuance of a Credential</li> <li>Authorization Details -&gt; Using Authorization Details to Request Issuance of a Credential</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-flow-step-1-push-authorization-request-with-pkce-post","title":"Authorization flow - step 1 - Push Authorization Request with PKCE (POST)","text":"<p>Endpoint: https://issuer.eudiw.dev/pushed_authorizationv2 (or https://localhost/pushed_authorizationv2 if installed locally)</p> <p>The following parameters are supported:</p> <ul> <li>response_type - Required. Value must be \u201ccode\u201d</li> <li>state - Recommended. Opaque value used by the client to maintain state between requests</li> <li>client_id - Required. The client identifier as described in RFC6749 (section 2.2)</li> <li>redirect_uri</li> <li>code_challenge - RFC 7636  see section 4.2 (PKCE)</li> <li>code_challenge_method - RFC 7636  see section 4.2 (PKCE)</li> <li>scope - Required if authorization_details is not used</li> <li>authorization_details - Required if scope is not used</li> </ul> <p>Example:</p> <pre><code>Header:\n\n  Content-Type - application/x-www-form-urlencoded\n\nPayload:\n\n  response_type=code&amp;state=af0ifjsldkj&amp;client_id=ID&amp;redirect_uri=...&amp;code_challenge=-ciaVij0VMswVfqm3_GK758-_dAI0E9i97hu1SAOiFQ&amp;code_challenge_method=S256&amp;scope=eu.europa.ec.eudi.pid.1 openid&amp;authorization_details=[{\"type\": \"openid_credential\", \"format\": \"vc+sd-jwt\", \"vct\": \"eu.europa.ec.eudi.mdl_jwt_vc_json\"}]\n</code></pre> <p>Response:</p> <ul> <li>expires_in - RFC 9126 see section 2.2</li> <li>request_uri - RFC 9126 see section 2.2</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-flow-step-1-push-authorization-request-without-pkce-post","title":"Authorization flow - step 1 - Push Authorization Request without PKCE (POST)","text":"<p>Endpoint: https://issuer.eudiw.dev/pushed_authorizationv2 (or https://localhost/pushed_authorizationv2 if installed locally)</p> <p>The following parameters are supported:</p> <ul> <li>response_type - Required. Value must be \u201ccode\u201d</li> <li>state - Recommended. Opaque valued used by the client to maintain state between requests</li> <li>client_id - Required. The client identifier as described in RFC6749 (section 2.2)</li> <li>redirect_uri</li> <li>scope - Required if authorization_details is not used</li> <li>authorization_details - Required if scope is not used</li> </ul> <p>Example:</p> <pre><code>Header:\n\n  Content-Type - application/x-www-form-urlencoded\n\nPayload:\n\n  response_type=code&amp;state=af0ifjsldkj&amp;client_id=ID&amp;redirect_uri=...&amp;scope= eu.europa.ec.eudi.pid.1 openid&amp;authorization_details=[{\"type\": \"openid_credential\", \"format\": \"vc+sd-jwt\", \"vct\": \"eu.europa.ec.eudi.mdl_jwt_vc_json\"}]\n</code></pre> <p>Response:</p> <ul> <li>expires_in - RFC 9126 see section 2.2</li> <li>request_uri - RFC 9126 see section 2.2</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-flow-step-2-authorization-request-with-par-get","title":"Authorization flow - step 2 - Authorization Request with PAR (GET)","text":"<p>After the <code>Push Authorization Request</code> (step 1 of the authorization flow) with or without PKCE.</p> <p>Endpoint: https://issuer.eudiw.dev/authorizationV3 (or https://localhost/authorizationV3 if installed locally)</p> <p>The following parameters are supported:</p> <ul> <li>client_id - Required. The client identifier as described in RFC6749 2.2</li> <li>request_uri - RFC 9126 see section 2.2</li> </ul> <p>At the end of user authentication, the following parameters are returned:</p> <ul> <li>state - Optional. Same value received from client</li> <li>code - Authorization code generated by authorization server </li> <li>iss</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-flow-step-2-authorization-request-with-pkce-and-without-par-get","title":"Authorization flow - step 2 - Authorization Request with PKCE and without PAR (GET)","text":"<p>Endpoint: https://issuer.eudiw.dev/authorizationV3 (or https://localhost/authorizationV3 if installed locally)</p> <p>The following parameters are supported:</p> <ul> <li>response_type - Required. Value must be \u201ccode\u201d</li> <li>state - Recommended. Opaque valued used by the client to maintain state between requests</li> <li>client_id - Required. The client identifier as described in RFC6749 (section 2.2)</li> <li>redirect_uri</li> <li>code_challenge - RFC 7636  see section 4.2 (PKCE)</li> <li>code_challenge_method - RFC 7636  see section 4.2 (PKCE)</li> <li>scope - Required if authorization_details is not used</li> <li>authorization_details - Required if scope is not used</li> </ul> <p>Example:</p> <pre><code>  https://issuer.eudiw.dev/authorizationV3?response_type=code&amp;client_id=ID&amp;redirect_uri=...&amp;scope=eu.europa.ec.eudi.pid.1&amp;code_challenge_method=S256&amp;code_challenge=-ciaVij0VMswVfqm3_GK758-_dAI0E9i97hu1SAOiFQ&amp;authorization_details=[{\"type\": \"openid_credential\",\"credential_configuration_id\": \"eu.europa.ec.eudi.pid_mdoc\"},{\"type\": \"openid_credential\",\"credential_configuration_id\":\"eu.europa.ec.eudi.mdl_mdoc\"}]\n</code></pre> <p>At the end of user authentication, the following parameters are returned:</p> <ul> <li>state - Optional. Same value received from client</li> <li>code - Authorization code generated by authorization server </li> <li>iss</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-flow-step-2-authorization-request-without-pkce-and-without-par-get","title":"Authorization flow - step 2 - Authorization Request without PKCE and without PAR (GET)","text":"<p>Endpoint: https://issuer.eudiw.dev/authorizationV3 (or https://localhost/authorizationV3 if installed locally)</p> <p>The following parameters are supported:</p> <ul> <li>response_type - Required. Value must be \u201ccode\u201d</li> <li>state - Recommended. Opaque valued used by the client to maintain state between requests</li> <li>client_id - Required. The client identifier as described in RFC6749 (section 2.2)</li> <li>redirect_uri</li> <li>scope - Required if authorization_details is not used</li> <li>authorization_details - Required if scope is not used</li> </ul> <p>Example:</p> <pre><code>  https://issuer.eudiw.dev/authorizationV3?response_type=code&amp;client_id=ID&amp;redirect_uri=...&amp;scope=eu.europa.ec.eudi.pid.1&amp;authorization_details=[{\"type\": \"openid_credential\",\"credential_configuration_id\": \"eu.europa.ec.eudi.pid_mdoc\"},{\"type\": \"openid_credential\",\"credential_configuration_id\":\"eu.europa.ec.eudi.mdl_mdoc\"}]\n</code></pre> <p>At the end of user authentication, the following parameters are returned:</p> <ul> <li>state - Opcional. Same value received from client</li> <li>code - Authorization code generated by authorization server </li> <li>iss</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/batch_credential/","title":"Batch credential","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs / batch_credential</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/batch_credential/#batch-credential-request-post","title":"Batch Credential Request (Post)","text":"<p>Endpoint: https://issuer.eudiw.dev/batch_credential (or https://localhost/batch_credential if installed locally)</p> <p>Header:</p> <ul> <li>Content-Type - application/json</li> <li>Authorization - Bearer token</li> </ul> <p>Payload:</p> <ul> <li>credential_requests - Required</li> </ul> <p></p> <p>Example Request:</p> <p>header:   <pre><code>'Content-Type': 'application/json',\n'Authorization': 'Bearer eyJhbGciOiJFUzI1NiIsImtpZCI6Ik1tWkhTQzE0UlhwNVRUQjVkMHR1UTE5a1FYVnJTVlZLUldKelVWSTVlREJ6UWkxd1ZuQXdVMGgyYncifQ.eyJzY29wZSI6ICJvcGVuaWQiLCAiYXVkIjogWyJJRCJdLCAianRpIjogImZiMGI3NzdmODk5ODQ2MjBiMjQwZjNhZjczNjFlYzU3IiwgImNsaWVudF9pZCI6ICJJRCIsICJzdWIiOiAiODQzZjFjN2FkMDRjYTAyYTY1ZWEzYTc0MWY2YjkzOGNjN2U2N2E3OGQ0ZmFhN2YwMDYyNWFkYTFkZTM2OTM1NiIsICJhY3IiOiAidXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFjOmNsYXNzZXM6SW50ZXJuZXRQcm90b2NvbFBhc3N3b3JkIiwgInNpZCI6ICJaMEZCUVVGQlFtMWhSbEYwVFV0TVRYUnJkak5wVkRjdFRWOTFWa3RRUmtkcVptTjFhamxETUdKemMzUkpXV1ZzUTBoeFVHazNZbXhpVjNaV1QzZDVjbFJ0Wkd0bk16Qk9WekEwV0Y5T2NuRkZYMWg2UjFWSGFuWlhkV0V0UmkwdGRtcFZVbTl1YzFJM2MwdDFjVUoyVGs1RGMyNXlaRVpxWkhKa1MwSkJObWxpY1hSS1JFaEVkVXRMT1dOWFRYcFBWMHB1VlVSWE9UTjZVVUZMYmw5RFNGOXVMWEJaY1VwRFRrbGxYMnQzVURadlNra3dka1owZEd0Vk9VVkRVMGhzWlhwelREVnpiemRuYzFCTk16TTFjVEZoUTA0eGN6Um5SekU1UnpsZlJrYzBZMDFXU2tGbmJYUkxXV1ZOVjNGRk9VRkRVMVl5Y25KWWRuZFdlR2h4VVZBMGVUZHJWMWQzTW1vMFRWRndVa3RJZFdGc2QySTNMVkozWW5wTVpWb3pRbEU5UFE9PSIsICJ0b2tlbl9jbGFzcyI6ICJhY2Nlc3NfdG9rZW4iLCAiaXNzIjogImh0dHBzOi8vZGV2Lmlzc3Vlci5ldWRpdy5kZXYiLCAiaWF0IjogMTcxODExMzMzNCwgImV4cCI6IDE3MTgxMTY5MzR9.QA7er_vPCqQsXjP3BtL2uFT1tKYKqaV7RRd_rwcdBOOO_uniax2uwjsWp5m5TAXYjzhec_ioL3kmv2OmRSLhlg'\n</code></pre></p> <p>payload:   <pre><code>{\n  \"credential_requests\": [\n    {\n      \"format\": \"mso_mdoc\",\n      \"doctype\": \"eu.europa.ec.eudi.pid.1\",\n      \"proof\": {\n        \"proof_type\": \"jwt\",\n        \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"\n      }\n    },\n    {\n      \"format\": \"vc+sd-jwt\",\n      \"vct\": \"eu.europa.ec.eudi.mdl_jwt_vc_json\",\n      \"proof\": {\n        \"proof_type\": \"jwt\",\n        \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"\n      }\n    },\n    {\n      \"credential_identifier\": \"eu.europa.ec.eudiw.pid_jwt_vc_json\",\n      \"proof\": {\n        \"proof_type\": \"jwt\",\n        \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"\n      }\n    }\n  ]\n}\n</code></pre></p> <p>Response:</p> <ul> <li>c_nonce - String containing a nonce</li> <li>c_nonce_expires_in - Json integer denoting lifetime of c_nonce</li> <li>credential_responses - Optional. Contains issued Credential</li> <li>notification_id - Used by the Wallet to notify the Credential Issuer of certain events for issued Credentials. These events enable the Credential Issuer to take subsequent actions after issuance.</li> <li>transaction_id - Optional, String identifying a Deferred Issuance transaction</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/","title":"Configuration","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs / configuration</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/#configuration","title":"Configuration","text":"<p>For configuring your locally installed version of the EUDIW Issuer, you need to change the following configurations.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/#1-service-configuration","title":"1. Service Configuration","text":"<p>Base configuration for the EUDIW Issuer is located in <code>app/app_config/config_service.py</code>.</p> <p>Parameters that should be changed:</p> <ul> <li><code>service_url</code> (Base url of the service)</li> <li><code>trusted_CAs_path</code> (Path to a folder with trusted IACA certificates)</li> <li><code>eidasnode_url</code> (eIDAS Node base URL. Only needs to be changed if you're configuring the eIDAS Node)</li> <li><code>eidasnode_lightToken_connectorEndpoint</code> (eIDAS node connector endpoint for lightrequest. Only needs to be changed if you're configuring the eIDAS Node.)</li> </ul> <p>You must copy your IACA trusted certificate(s) (in PEM format) to the <code>trusted_CAs_path</code> folder - you can find an example test IACA certificate for country Utopia (UT) here -.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/#2-configuration-of-countries","title":"2. Configuration of Countries","text":"<p>The supported countries configuration of the EUDIW Issuer is located in <code>/app/app_config/config_countries.py</code>.</p> <p>Parameters that should be changed for each country:</p> <ul> <li><code>name</code> - name of the country</li> <li><code>connection_type</code>- options are eidasnode, oauth, and openid.</li> <li><code>pid_mdoc_privkey</code>- Document/Credential signer (DS) private key file location.</li> <li><code>pid_mdoc_privkey_passwd</code> - Document/Credential signer (DS) private key password.( Can be None or bytes. Example: b\"password\")</li> <li><code>pid_mdoc_cert</code> - Document/Credential signer (DS) certificate file location.</li> </ul> <p>You must copy your DS private key (in PEM format) to <code>pid_mdoc_privkey</code> file (the password must be defined in <code>pid_mdoc_privkey_passwd</code>), and the certificate (in DER format) to <code>pid_mdoc_cert</code> file.</p> <p>You can find example test private DS keys and certificates, for country Utopia (UT) here - the password of the example test private DS keys is b\"pid-ds-0002\". To decrypt the private key you can run the following command <code>openssl ec -in PID-DS-0002.pid-ds-0002.key.pem -out PID-DS-0002-decrypted.key.pem</code>.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/#3-oid4vci-configuration","title":"3. OID4VCI configuration","text":"<p>For configuring the installed idpy-oidc and openid4v libraries, you need to change the following parameters in the <code>app/app_config/oid_config.py</code> configuration file:</p> <ul> <li>port</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/#4-metadata-configuration","title":"4. Metadata configuration","text":"<p>The EUDIW Issuer OAuth2 metadata configuration files are located in <code>app/metadata_config/metadata_config.json</code> and <code>app/metadata_config/openid-configuration.json</code></p> <p>You must change the base URL of the endpoints from <code>https://issuer.eudiw.dev</code> to a custom one or <code>https://localhost</code> if installed locally</p> <p>Example: <pre><code>\"credential_issuer\": \"{base_url}\",\n\"credential_endpoint\": \"{base_url}/credential\",\n\"batch_credential_endpoint\": \"{base_url}/batch_credential\",\n\"notification_endpoint\": \"{base_url}/notification\",\n\"deferred_credential_endpoint\": \"{base_url}/deferred_credential\",\n</code></pre></p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential/","title":"Credential","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs / credential</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential/#credential-request-post","title":"Credential Request (Post)","text":"<p>Endpoint: https://issuer.eudiw.dev/credential (or https://localhost/credential if installed locally)</p> <p>Header:</p> <ul> <li>Content-Type - application/json</li> <li>Authorization - Bearer token</li> </ul> <p>Payload:</p> <ul> <li>format - Required when the credential_identifiers parameter was not returned from the Token Response. Format of credential to be issued. (vc+sd-jwt / mso_mdoc)</li> <li>doctype - Required when the credential_identifiers parameter was not returned from the Token Response. When issuing mso_mdoc format</li> <li>vct - Required when the credential_identifiers parameter was not returned from the Token Response. When issuing vc+sd-jwt format</li> <li>credential_identifier- Required when the credential_identifiers parameter was returned from the Token Response</li> <li>proof - Required. JWT or CWT</li> </ul> <p></p> <p>Example Requests:</p> <p>header:   <pre><code>'Content-Type': 'application/json',\n'Authorization': 'Bearer eyJhbGciOiJFUzI1NiIsImtpZCI6Ik1tWkhTQzE0UlhwNVRUQjVkMHR1UTE5a1FYVnJTVlZLUldKelVWSTVlREJ6UWkxd1ZuQXdVMGgyYncifQ.eyJzY29wZSI6ICJvcGVuaWQiLCAiYXVkIjogWyJJRCJdLCAianRpIjogImZiMGI3NzdmODk5ODQ2MjBiMjQwZjNhZjczNjFlYzU3IiwgImNsaWVudF9pZCI6ICJJRCIsICJzdWIiOiAiODQzZjFjN2FkMDRjYTAyYTY1ZWEzYTc0MWY2YjkzOGNjN2U2N2E3OGQ0ZmFhN2YwMDYyNWFkYTFkZTM2OTM1NiIsICJhY3IiOiAidXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFjOmNsYXNzZXM6SW50ZXJuZXRQcm90b2NvbFBhc3N3b3JkIiwgInNpZCI6ICJaMEZCUVVGQlFtMWhSbEYwVFV0TVRYUnJkak5wVkRjdFRWOTFWa3RRUmtkcVptTjFhamxETUdKemMzUkpXV1ZzUTBoeFVHazNZbXhpVjNaV1QzZDVjbFJ0Wkd0bk16Qk9WekEwV0Y5T2NuRkZYMWg2UjFWSGFuWlhkV0V0UmkwdGRtcFZVbTl1YzFJM2MwdDFjVUoyVGs1RGMyNXlaRVpxWkhKa1MwSkJObWxpY1hSS1JFaEVkVXRMT1dOWFRYcFBWMHB1VlVSWE9UTjZVVUZMYmw5RFNGOXVMWEJaY1VwRFRrbGxYMnQzVURadlNra3dka1owZEd0Vk9VVkRVMGhzWlhwelREVnpiemRuYzFCTk16TTFjVEZoUTA0eGN6Um5SekU1UnpsZlJrYzBZMDFXU2tGbmJYUkxXV1ZOVjNGRk9VRkRVMVl5Y25KWWRuZFdlR2h4VVZBMGVUZHJWMWQzTW1vMFRWRndVa3RJZFdGc2QySTNMVkozWW5wTVpWb3pRbEU5UFE9PSIsICJ0b2tlbl9jbGFzcyI6ICJhY2Nlc3NfdG9rZW4iLCAiaXNzIjogImh0dHBzOi8vZGV2Lmlzc3Vlci5ldWRpdy5kZXYiLCAiaWF0IjogMTcxODExMzMzNCwgImV4cCI6IDE3MTgxMTY5MzR9.QA7er_vPCqQsXjP3BtL2uFT1tKYKqaV7RRd_rwcdBOOO_uniax2uwjsWp5m5TAXYjzhec_ioL3kmv2OmRSLhlg'\n</code></pre></p> <p>payload:   <pre><code>{\n    \"credential_identifier\": \"eu.europa.ec.eudi.pid_jwt_vc_json\",\n    \"proof\": {\n      \"proof_type\": \"jwt\",\n      \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"\n    }\n  }\n</code></pre></p> <p>payload:   <pre><code>{\n    \"credential_identifier\": \"eu.europa.ec.eudi.pid_jwt_vc_json\",\n    \"proof\": {\n      \"proof_type\": \"jwt\",\n      \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"\n    }\n  }\n</code></pre></p> <p>payload:   <pre><code>{\n    \"format\": \"vc+sd-jwt\",\n    \"vct\": \"eu.europa.ec.eudi.mdl_jwt_vc_json\",\n    \"proof\": {\n      \"proof_type\": \"jwt\",\n      \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"\n    }\n  }\n</code></pre></p> <p>Response:</p> <ul> <li>c_nonce - JSON string containing a nonce</li> <li>c_nonce_expires_in - Json integer denoting lifetime of c_nonce</li> <li>credential - Optional. Contains issued Credential</li> <li>notification_id - Used by the Wallet to notify the Credential Issuer of certain events for issued Credentials. These events enable the Credential Issuer to take subsequent actions after issuance.</li> <li>transaction_id - Optional, String identifying a Deferred Issuance transaction</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential_offer/","title":"Credential offer","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs / credential_offer</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential_offer/#credential-offer","title":"Credential Offer","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential_offer/#1-authorization-code-flow","title":"1. Authorization code flow","text":"<p>Endpoint: https://issuer.eudiw.dev/credential_offer (or https://localhost/credential_offer if installed locally)</p> <p>A form is presented showing the Request Credentials for your EUDI Wallet that can be requested.</p> <p></p> <p>After choosing the credential(s) and submitting, a QR code and DeepLink is generated:</p> <p></p> <p>This generated DeepLink contains information about the credentials chosen in the form.</p> <p>Example:</p> <p>if the selected options are Personal Identification Data and the Mobile Driver's License in both sd-jwt and mdoc format:</p> <pre><code>openid-credential-offer://credential_offer?credential_offer=%7B%22credential_issuer%22:%20%22https://issuer.eudiw.dev%22%2C%20%22credential_configuration_ids%22:%20%5B%22eu.europa.ec.eudi.pid_jwt_vc_json%22%2C%20%22eu.europa.ec.eudi.mdl_jwt_vc_json%22%2C%20%22eu.europa.ec.eudi.pid_mdoc%22%2C%20%22eu.europa.ec.eudi.mdl_mdoc%22%5D%2C%20%22grants%22:%20%7B%22authorization_code%22:%20%7B%7D%7D%7D&gt;\n</code></pre>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential_offer/#2-pre-authorized-code-flow","title":"2. Pre-Authorized Code Flow","text":"<p>Currently only suporting a loyalty credential through form</p> <p>Endpoint: https://dev.issuer.eudiw.dev/dynamic/preauth (or https://localhost/dynamic/preauth if installed locally)</p> <p>Example of generated DeepLink: <pre><code>openid-credential-offer://?credential_offer=%7B%22credential_issuer%22:%20%22https://issuer.eudiw.dev/%22%2C%20%22credential_configuration_ids%22:%20%5B%22eu.europa.ec.eudi.loyalty_mdoc%22%5D%2C%20%22grants%22:%20%7B%22urn:ietf:params:oauth:grant-type:pre-authorized_code%22:%20%7B%22pre-authorized_code%22:%20%22Z0FBQUFBQm1mWHdPdlR0X0JBTjRXR2EtRVFkZVpKTXFaTW95U29mVElnTkQ1cnphTEg5ajg0YnJTMk1JLUZaUHFlSUxuVDZ1c1hNRnZJQ3YzNUZfaVZuRVZueEotb1ROWkUyOTNGbUk2ZUJBemZXT2k0ZThRZHVTMWo2Z2JUYjJFOGwxQURxMWdYaHZjNFNCNXdkRVpocVlPV3VNSnlsT1g2Vjl2Nk1IOGJ0aWg2T2tMa1YyaVVudFJwc2owVzE4UGlod3RBM2w0UF9aQzdzTzFQUUZKNkRrYmtnei14ZmFXRWczWXV3Y2hGOFd2YUp6Q0dRMTB1aVNBTHNSSTg2aUJKNC0tTFBjSHFiTnRaRHpEdFdRNmlfcXM2clFaVXVXdjQ2TGZlejlKeXdjSEJDV0E3VVB1aGhhMDI2dlBMWXAyT3VXQ0F6Z1FvcHVVMUFhMUdxdl81WUpvbFp4bGNWRXRwdE85TC1yb29hbi1QbUFTN3BPX2NDM1pjdGk3b3d4VlVNMjhYelBjSWhZM3BoRzJhUFNZTzV2dFpZVUpreVpiT2w5c0hRR3VuZXY5enRaWHJRcEV0NEVTbnRpZkNpNU14QlJGWjVaY3ZUc0lkMUZ1MXJNckZzblBrNXl2ejBWWGJHQmJ4QUZLSjFvZExFSW1oaWdCS3FmSzM3dFlLOUk0NndUendvdmxCZWZtOWtPMzA0OEtTTnFxZmphYmRzc2Q5bXJpVlhwV2o4QWZ6OXNZNldMd1ctOW9pYmlnTHZnYklQVW9zV3JmUjdLM3oxVkpoQVJMeTlOaS1KSUFkSWlkc0xQNEFUaHoxNVYxUS1Qa3ZISzVpWjJ2UDB5MUZUc3IxMDE5dTR1YS10S2Q2eUl5R3FMMWhPQkJkSGdvSFJDOW1vbjg2VVJsVWpsckVaUTFnVVBHaXc9%22%7D%7D%7D\n</code></pre></p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/deferred/","title":"Deferred","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs / deferred</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/deferred/#deferred-endpoint","title":"Deferred Endpoint","text":"<p>This endpoint is used to issue a Credential previously requested at the Credential Endpoint or Batch Credential Endpoint in cases where the Credential Issuer was not able to immediately issue this Credential. Support for this endpoint is OPTIONAL.</p> <p>There must be a batch credential request or credential and where its response contains:</p> <ul> <li>c_nonce - Required. String containing a nonce</li> <li>c_nonce_expires_in - Required. Json integer denoting lifetime of c_nonce</li> <li>transaction_id - String identifying a Deferred Issuance transaction</li> </ul> <p>Deferred Endpoint only works if the response contains a transaction_id which is then used to make the request.</p> <p>Endpoint: https://issuer.eudiw.dev/deferred_credential (or https://localhost/deferred_credential if installed locally)</p> <p>Example Request:</p> <p>header:</p> <pre><code>'Content-Type': 'application/json',\n'Authorization': 'Bearer eyJhbGciOiJFUzI1NiIsImtpZCI6Ik1tWkhTQzE0UlhwNVRUQjVkMHR1UTE5a1FYVnJTVlZLUldKelVWSTVlREJ6UWkxd1ZuQXdVMGgyYncifQ.eyJhdWQiOiBbIklEIl0sICJqdGkiOiAiYWY5MmRlMDg3YzI2NGM1OThhOTNmZTExZDAyYmFmNWEiLCAiY2xpZW50X2lkIjogIklEIiwgInN1YiI6ICJiYzM4YWVhNTEwMzMzZDI4NjUyYmIyYWJkM2EwZmJhZDg5M2JiM2JmMjBlNjJlNmZjYzFhODY4ZmQ0NDNmMjgzIiwgInNpZCI6ICJaMEZCUVVGQlFtMWpXWEIwTTJsQldrWlJSR2RNZVdoTmJsRkxjemN4TW1aNWJqVXROVlZPYXpoVk9USlVlRzVUU2xOeWNIZHJVV3d3T0dWSExXa3pXRU5FVlZCMVoxRkpka0V4TFRoRmVuZzJkbXA0V0V4NVIyUlRSMVo0ZG5kb1dHbEVVVTlhUm1wTGVqWkpSbkYwUVhwR1UzRk9TbmhHUmpWQ05FaE5RVlpLWW14UVRXZFdORkZMYzJKdFJteGlYMnBGT1dwaU5rTkdiamRGTFZwSlYwMXVWbDlCWlZKTWRrSkdkRGhET1dzM09FZHdjak4wYjIxWGVVeExSMkpVVms1V2FFTnFTa0pOZHpCMFZVeEpaa0V6TVVnelJGbHJZVFZSYkZOMllUUTJNVlpEVW0xeGJYaDVjblJ3ZDFKMFZrZE9abVJSVDNWbGEzZHFRbTFaUVhWRGIwVjNRamQyWmxCcVZBPT0iLCAidG9rZW5fY2xhc3MiOiAiYWNjZXNzX3Rva2VuIiwgImlzcyI6ICJodHRwczovL2lzc3Vlci5ldWRpdy5kZXYiLCAiaWF0IjogMTcxODcxNzAzOSwgImV4cCI6IDE3MTg3MjA2Mzl9.tQCfMGu_IPv4B5BGzKPWbS_i70gaEbaQ9JpoOgfKBkuAWYrMDmD8YVUEpDO3W-Gu6mkix_ev4IBQOX3gac_Eng'\n</code></pre> <p>payload:   <pre><code>'transaction_id': '3J0VrO3TiQAPHsMe8Nt89g'\n</code></pre></p> <p>Response:</p> <ul> <li>c_nonce - String containing a nonce</li> <li>c_nonce_expires_in - Json integer denoting lifetime of c_nonce</li> <li>credential - Optional. Contains issued Credential</li> <li>credential_responses - Optional. Contains issued Credentials</li> <li>notification_id - Used by the Wallet to notify the Credential Issuer of certain events for issued Credentials. These events enable the Credential Issuer to take subsequent actions after issuance.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/notification/","title":"Notification","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs / notification</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/notification/#notification-request","title":"Notification Request","text":"<p>This is an Optional Endpoint used by the Wallet to notify the Credential Issuer of certain events for issued Credentials. These events enable the Credential Issuer to take subsequent actions after issuance. </p> <p>Endpoint: https://issuer.eudiw.dev/notification (or https://localhost/notification if installed locally)</p> <p>This data must be present in Json so that the request can be made:</p> <p>Header:</p> <ul> <li>Content-Type - application/json</li> <li>Authorization - Bearer token</li> </ul> <p>Payload:</p> <ul> <li>notification_id - Received after a Batch Credential or Credential request</li> <li>event - type of event that occurred</li> </ul> <p></p> <p>If everything goes well, a HTTP/1.1 204 No Content will be received in the Wallet</p> <p>In the event of an error, HTTP/1.1 400 Bad Request, a JSON will be received with:</p> <ul> <li>error - error description</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/pre-authorized/","title":"Pre authorized","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs / pre-authorized</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/pre-authorized/#pre-authorized","title":"Pre-authorized","text":"<p>For the pre-authorized flow, you can test our examples by selecting Pre-Authorization Code Grant in https://issuer.eudiw.dev/credential_offer (or https://localhost/credential_offer if installed locally).</p> <p>After submitting, a QR code and DeepLink is generated:</p> <p></p> <pre><code>openid-credential-offer://?credential_offer=%7B%22credential_issuer%22:%20%22https://issuer.eudiw.dev/%22%2C%20%22credential_configuration_ids%22:%20%5B%22eu.europa.ec.eudi.loyalty_mdoc%22%5D%2C%20%22grants%22:%20%7B%22urn:ietf:params:oauth:grant-type:pre-authorized_code%22:%20%7B%22pre-authorized_code%22:%20%22Z0FBQUFBQm1WMWZTQUwySE5WSklFcTJ5WU5pNXRPZ3pjU0V2UXRJbUpRYnRiM3I0eEthVU5OSzZhMXpPSHE1M2ZFVHFnRG9ReXRwRm95MzBtaTVkQzk3U05lRE4xSExqSkQtNGV3QmhNS0pLaVRBTk9HTmdXa2t1c3liMFBJeE9JVUQwc1o0UjI1ZTdFZTFDRndFeFkwd094NEk5eC1sM2ozb0FUekQxTVdjc1plMGFUdXR0czd4TkVxZUh5LVJ0RGtXWmZLbFJ4LU1KMzNtN01qamIzTFp6cER4SVVnSUtzbk84dUJlbmxEQ3ZPUjk1N3VEZndvOFdweWZhQjJzbTJLZ1hvZ0NoLXNBVHNnU0VFSmJEQ0VPWUF6UHotRzIyQVFTWlFTLTBqSmdadm0tYm1wLTYzMDFwYW4wQnVVNUJjSmpubGdwVTZQMEFzUUxMcHdnSHRBZEhZR0FLVXRaelNCNklGbnhqSTRxS05VXzdXa3VqQUNSOXp6UG13N2VqOFlqYXVXQ2dnTUdybHNUSXZwYlpqSWVMLXhBVFlUTHgwVnZydkNsTUxIWGlvRUlibWtoWGNiY1BMdFZKbG1EX2ttU1EwMmZLZ2J5ekNoOEM2ZVJtanQ5VEZWZ3N2SC03SjB6cklBMGZrckpQYXo5aXY4ODVMcjRMbWcyU3JuV21VRkdRdF9CTC12Z3FfQVlYWk5mY2FtdDNuZEVsZmhkSkFZaF9uVEpoakNuY2ZQMzlTZUxnWUlIU3FiZjQ2a0hJNkM3SVRTbTRFaXJ3eUx5UEtjdzBWNTRZMWFPTllsMkFoczNCd1lqQTg1SzJGTEdfQWlLSjRtQUxIVTk5RU9NaXhSUUtoQVRIekFIMUlOUEdkWEpDTmNIRllPTDhTazdVMUFoMjlOemdlZVROYU1xTi1heFl3TVE9%22%7D%7D%7D\n</code></pre>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/token/","title":"Token","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / api_docs / token</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/token/#token-request-post","title":"Token request (Post)","text":"<p>Endpoint: https://issuer.eudiw.dev/token (or https://localhost/token if installed locally)</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/token/#token-request-with-pkce","title":"Token request with PKCE","text":"<p>The following parameters are supported:</p> <ul> <li>grant_type - Required. Value must be set to \u201cauthorization_code\u201d</li> <li>redirect_uri - Required. Must be identical value to authorization request redirect_uri</li> <li>client_id - Required.</li> <li>state - Recommended. </li> <li>code - Required. The authorization code received from authorization</li> <li>code_verifier - Required. RFC 7636 see section 4.1</li> </ul> <p>Example Request:</p> <p>header: <pre><code>'Content-Type': 'application/x-www-form-urlencoded\n</code></pre></p> <p>payload: <pre><code>grant_type=authorization_code&amp;code=Z0FBQUFBQm1hWG5nb2ZKQlo0cEpuQ1pPZWpERU9iczhPYndETzRuRU5OZmkyX3FnNzAtM3ZYRmNpamZRdUF0d1B6Y0MzVmhlNnl2QWtjT281cW5lQjFSWW9RYVVmcmNQQVdVcjcxUUZ4RDFtYTZ0eWJNT3Y1aGI4VFAxX3hKd2FWeHpBMWZUYVNJcmY1LTNQRUdTbUJ0clZBdmJoeVpIZDdRN29maUdNTUh6OVhncWtpcFQ3d2xKVVRkYTRhU19EZHV5QTRHalgyRmtrVWNvcGdRUmRVMnI5X2NtYTJZZWVhUXl4NkhGRzBMaEN2c0pGQnBIemJfUUtIUlpMY09qQmRRSzI0OHdMNDRFWXpSU1lTRDhRNEZfYTI2a1hXQV80ZF93Z2VQdnAwY1VHcHVBaVZIZTZaS283cW5VeTVPcWlPQldxWm1ObHhIZ08xcHhFTENsajFwTDRmNVhZQ1pzbWlnSVd4TGZDcHYxTXdJV2cwdThzcVFqcWNDQVBiX0U1OUpRZ3RiZG41bTFVSHdoUk1KYlZEc0dIbXN1UmJRZ1Y5RXZrYURwLUMzd3FMLW0tV0Q0VUM3eGtFZER1bjN4ZWttWWxtbDBham9uM01XVy1mdUFqd2I5UTdtSU4xYmJGaEhOdEVHR3pPV2lLQjIwcmhkcjYxSG04R1lHWTdkcEE1Si1GVzRocGpvR1BzS1ZaSEU3WEY1QjJkYjNXY0wxSXE3TnZMb3ZoVkx4T3ZWRkxsUkV6QnNfYWxVNmdzNUh6em1Pb0I1eGhFLWdNSmRtWXVMV1pCZl8xSnhrZ2hmdjJNS3doeUpXWlRLM3FqcThMTU04MmZLT3hjQXNtaGNJMTlXTXdDYXJZbk5kX3lCQlNSRWk1T1pGd2NaYjdGNFVtUk1DRTRUaGw1OElFRVh3SGRPUmtPbnc9&amp;redirect_uri=...&amp;client_id=ID&amp;state=vFs5DfvJqoyHj7_dZs2JbdklePg6pMLsUHHmVIfobRw&amp;code_verifier=FnWCRIhpJtl6IYwVVYB8gZkQsmvBVLfU4HQiABPopYQ6gvIZBwMrXg\n</code></pre></p> <p>Response:</p> <ul> <li>token_type</li> <li>scope - If authorization through scope</li> <li>authorization_details - If authorization through authorization details</li> <li>access_token</li> <li>expires_in</li> <li>refresh_token</li> <li>id_token</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/token/#token-request-without-pkce","title":"Token request without PKCE","text":"<p>The \"code\" need to be saved to make the POST request for the Token.</p> <p>The following parameters are supported:</p> <ul> <li>grant_type - Required. Value must be set to \u201cauthorization_code\u201d</li> <li>redirect_uri - Required. Must be identical value to authorization requrest redirect_uri</li> <li>client_id - Required.</li> <li>state - Recommended. </li> <li>code - Required. The authorization code received from authorization</li> </ul> <p>Example Request:</p> <p>header: <pre><code>'Content-Type': 'application/x-www-form-urlencoded\n</code></pre></p> <p>payload: <pre><code>grant_type=authorization_code&amp;code=Z0FBQUFBQm1hWG5nb2ZKQlo0cEpuQ1pPZWpERU9iczhPYndETzRuRU5OZmkyX3FnNzAtM3ZYRmNpamZRdUF0d1B6Y0MzVmhlNnl2QWtjT281cW5lQjFSWW9RYVVmcmNQQVdVcjcxUUZ4RDFtYTZ0eWJNT3Y1aGI4VFAxX3hKd2FWeHpBMWZUYVNJcmY1LTNQRUdTbUJ0clZBdmJoeVpIZDdRN29maUdNTUh6OVhncWtpcFQ3d2xKVVRkYTRhU19EZHV5QTRHalgyRmtrVWNvcGdRUmRVMnI5X2NtYTJZZWVhUXl4NkhGRzBMaEN2c0pGQnBIemJfUUtIUlpMY09qQmRRSzI0OHdMNDRFWXpSU1lTRDhRNEZfYTI2a1hXQV80ZF93Z2VQdnAwY1VHcHVBaVZIZTZaS283cW5VeTVPcWlPQldxWm1ObHhIZ08xcHhFTENsajFwTDRmNVhZQ1pzbWlnSVd4TGZDcHYxTXdJV2cwdThzcVFqcWNDQVBiX0U1OUpRZ3RiZG41bTFVSHdoUk1KYlZEc0dIbXN1UmJRZ1Y5RXZrYURwLUMzd3FMLW0tV0Q0VUM3eGtFZER1bjN4ZWttWWxtbDBham9uM01XVy1mdUFqd2I5UTdtSU4xYmJGaEhOdEVHR3pPV2lLQjIwcmhkcjYxSG04R1lHWTdkcEE1Si1GVzRocGpvR1BzS1ZaSEU3WEY1QjJkYjNXY0wxSXE3TnZMb3ZoVkx4T3ZWRkxsUkV6QnNfYWxVNmdzNUh6em1Pb0I1eGhFLWdNSmRtWXVMV1pCZl8xSnhrZ2hmdjJNS3doeUpXWlRLM3FqcThMTU04MmZLT3hjQXNtaGNJMTlXTXdDYXJZbk5kX3lCQlNSRWk1T1pGd2NaYjdGNFVtUk1DRTRUaGw1OElFRVh3SGRPUmtPbnc9&amp;redirect_uri=...&amp;client_id=ID&amp;state=vFs5DfvJqoyHj7_dZs2JbdklePg6pMLsUHHmVIfobRw\n</code></pre></p> <p>Response:</p> <ul> <li>token_type</li> <li>scope - If authorization through scope</li> <li>authorization_details - If authorization through authorization details</li> <li>access_token</li> <li>expires_in</li> <li>refresh_token</li> <li>id_token</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/","title":"Suport","text":"<p>Home / eudi-srv-web-issuing-eudiw-py / support / suport</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/#pid-issuer-support","title":"PID issuer support","text":"<p>This section is intended to assist all users on how to use the PID Issuer test GUI to request a PID, aiming to demonstrate it explicitly and as straightforwardly as possible, for all available countries up to version 0.3.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/#1-eidas-node-eidas-cw","title":"1. eIDAS-Node (eIDAS CW)","text":"<p>Requesting a PID using eIDAS-Node (eIDAS node deployed for PID issuing testing purposes) is a simple 3-step process.</p> <p>The first displayed page shows the requested attributes to the eIDAS-node for issuing a PID, which are:</p> <ul> <li>Family Name</li> <li>First Name</li> <li>Date of Birth</li> <li>National Identifier</li> </ul> <p>To proceed, please click the \"Next\" button located in the bottom right corner, indicating that you authorize access to these attributes.</p> <p>On the next page, please click the \"Next\" button to continue, since no additional attributes are requested. You will be redirected to a new page where you can authenticate yourself.</p> <p>On the authentication page, you need to enter your username and password, and change the \"Level of Assurance\" field to \"LoA High\". The test user data is as follows: + Username: xavi + Password: creus</p> <p>To proceed, please click the \"Submit\" button at the bottom of the page.</p> <p>Finally, in the last step, the data corresponding to the attributes requested in the first step is displayed. Please click the \"Submit\" button, and the PID will be issued in mdoc and sd-jwt format.</p> <p>The last page displays the content of the PID issued by the PID Issuer. On this page, there are two options: + Cancel - You will be redirected to the initial country selection page. + Store - This option simulates the storage of the mdoc and sd-jwt in the EUDI Wallet. If you select it, both the mdoc and sd-jwt format of the issued PID will be displayed.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/#2-utopia-form-country","title":"2. Utopia (Form country)","text":"<p>The Country form consists of only one step, and unlike all the others, it does not require authentication and you can enter your own PID information.</p> <p>When you select this option, a page will be displayed, with a form that you need to fill in with the necessary data to make the PID request: + First Name + Family Name + Date of Birth + National Identifier</p> <p>In the end, simply click the \"Submit\" button.</p> <p>The last page displays the content of the PID issued by the PID Issuer. On this page, there are two options: + Cancel - You will be redirected to the initial country selection page. + Store - This option simulates the storage of the mdoc and sd-jwt in the EUDI Wallet. If you select it, both the mdoc and sd-jwt format of the issued PID will be displayed.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/#3-portugal","title":"3. Portugal","text":"<p>In the case of Portugal, it's important to note that there is no test user available. Therefore, you will need to have a Portuguese ID card (\"Cart\u00e3o de Cidad\u00e3o\"),visit the Autentica\u00e7\u00e3o.Gov pre-prod website (https://pprwww.autenticacao.gov.pt/) and make a request in order to use the CMD (\"Chave M\u00f3vel Digital\") in the pre-production environment (or you can use directly your Portuguese ID card).</p> <p>The first page that appears is related to how the user wants to authenticate, with two options available: + Citizen Card (\"Cart\u00e3o de Cidad\u00e3o\") + Mobile Digital Key (\"Chave M\u00f3vel Digital\")</p> <p>After selecting the preferred authentication method - we are assuming that you will select the Mobile Digital Key -, simply click the \"Continue\" button.</p> <p>Next, you will be shown the required attributes to issue the PID, and you'll need to authorize the access to these attributes. In this case, the required attributes are: + Surname + First Name + Date of Birth + Civil Identification number</p> <p>To proceed, please click the \"Autorizar\" button. Please note that by clicking this button, you are granting permission to retrieve the value of the required attributes.</p> <p>Next, you will be asked to fill in two fields: + Mobile Number + PIN (Mobile Digital Key authentication PIN)</p> <p>Once you have correctly filled in these two pieces of information, please click the \"Autenticar\" button.</p> <p>If everything is correct, you will be presented with a new page and asked for a confirmation code. The code will be sent to the mobile number you provided on the previous page (by SMS or \u201cpush notification\u201d). Once you have the code inserted, please click \"Confirmar.\"</p> <p>The last page displays the content of the PID issued by the PID Issuer. On this page, there are two options: + Cancel - You will be redirected to the initial country selection page. + Store - This option simulates the storage of the mdoc and sd-jwt in the EUDI Wallet. If you select it, both the mdoc and sd-jwt format of the issued PID will be displayed.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/#4-estonia","title":"4. Estonia","text":"<p>The PID request for Estonia depends on the chosen type of authentication, and the first page presented is for selecting the desired authentication type.</p> <p>To follow this tutorial, the default language of the website, which was Estonian, has been changed to English. You can do this by selecting the \"English\" option in the upper right corner.</p> <p>There are 4 types of authentications:  + ID-Card + Mobile-ID + Smart-ID + EU eID</p> <p>For this tutorial, we will only mention authentication using \"Mobile-ID\" and \"Smart-ID\" because there are test users available for these methods. For more information on each type of authentication, please refer to the documentation (https://e-gov.github.io/TARA-Doku/Testing#21-quick-reference-of-testing-accounts).</p> <p>Mobile-ID</p> <p>Please select the \"Mobile-ID\" option from the menu and enter your personal code and the corresponding mobile phone number. Then, click the \"Continue\" button. Here's an example, using the test user: + Personal code: 60001017869 + Phone number: 68000769</p> <p>Smart-ID</p> <p>In case you choose authentication with Smart-ID, select the \"Smart-ID\" option from the menu and then enter your personal code. After that, pease click the \"Continue\" button. </p> <p>Here's an example, using the test user: + Personal code: 30303039914</p> <p>Finally, regardless of the chosen authentication method, the page displayed after your authentication will be the same, containing the PID issued by the PID Issuer. On this page, there are two options: + Cancel - You will be redirected to the initial country selection page. + Store - This option simulates the storage of the mdoc and sd-jwt in the EUDI Wallet. If you select it, both the mdoc and sd-jwt format of the issued PID will be displayed.</p> <p>For more detailed information, please read read this text.</p>"},{"location":"eudi-web-verifier/","title":"Index","text":"<p>Home / eudi-web-verifier</p>"},{"location":"eudi-web-verifier/#verifierui","title":"VerifierUi","text":"<p>Important! Before you proceed, please read the EUDI Wallet Reference Implementation project description</p> <p></p>"},{"location":"eudi-web-verifier/#table-of-contents","title":"Table of contents","text":"<ul> <li>Overview</li> <li>Development server</li> <li>Code scaffolding</li> <li>Build</li> <li>How to run for development</li> <li>Running tests</li> <li>License</li> </ul>"},{"location":"eudi-web-verifier/#overview","title":"Overview","text":"<p>This is a WEB UI that provides functionality to interact with the Verifier/RP trusted end-point implemented here. Another way to think of this application is that it represents an arbitrary application that wants to delegate to the trusted end-point the burden of interacting with a wallet using OpenId4VP The project was generated with Angular CLI version 19.1.4.</p>"},{"location":"eudi-web-verifier/#development-server","title":"Development server","text":"<p>Run <code>ng serve</code> for a dev server. Navigate to <code>http://localhost:4200/</code>. The application will automatically reload if you change any of the source files.</p>"},{"location":"eudi-web-verifier/#code-scaffolding","title":"Code scaffolding","text":"<p>Run <code>ng generate component component-name</code> to generate a new component. You can also use <code>ng generate directive|pipe|service|class|guard|interface|enum|module</code>.</p>"},{"location":"eudi-web-verifier/#build","title":"Build","text":"<p>Run <code>ng build</code> to build the project. The build artifacts will be stored in the <code>dist/</code> directory.</p>"},{"location":"eudi-web-verifier/#how-to-run-for-development","title":"How to run for development","text":"<p>You need npm (node version 18.15.0) and Angular CLI installed on your machine.</p> <p>In order to run Verifier UI run the following commands:</p> <p><pre><code>npm install\nng serve --proxy-config src/proxy.conf.json\n</code></pre> The above command utilizes proxy.conf.json that proxies the calls to the expected verifier backend service. Update this file if you want your Verifier UI to point to a locally running verifier backend service.</p> <p>You can access the application at http://localhost:4200 </p>"},{"location":"eudi-web-verifier/#running-tests","title":"Running tests","text":"<p>Run <code>ng test</code> to execute the unit tests via Karma.</p> <p>Run <code>ng e2e</code> to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.</p> <p>To get more help on the Angular CLI use <code>ng help</code> or go check out the Angular CLI Overview and Command Reference page.</p>"},{"location":"eudi-web-verifier/#license","title":"License","text":""},{"location":"eudi-web-verifier/#third-party-component-licenses","title":"Third-party component licenses","text":"<ul> <li>Angular CLI</li> <li>cbor</li> <li>jwt-decode</li> <li>rxjs</li> <li>qrcodejs</li> </ul>"},{"location":"eudi-web-verifier/#license-details","title":"License details","text":"<p>Copyright \u00a9 2023 European Commission</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <pre><code>http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home / eudi-web-verifier / CODE_OF_CONDUCT</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-web-verifier/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home / eudi-web-verifier / CONTRIBUTING</p>"},{"location":"eudi-web-verifier/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-web-verifier/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-web-verifier/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-web-verifier/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-web-verifier/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-web-verifier/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-web-verifier/SECURITY/","title":"SECURITY","text":"<p>Home / eudi-web-verifier / SECURITY</p>"},{"location":"eudi-web-verifier/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-web-verifier/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-web-verifier/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-web-verifier/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-web-verifier/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"}]}